// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_accounthardware.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_accounthardware.steamclient.proto</summary>
public static partial class SteammessagesAccounthardwareSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_accounthardware.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesAccounthardwareSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ci9zdGVhbW1lc3NhZ2VzX2FjY291bnRoYXJkd2FyZS5zdGVhbWNsaWVudC5w",
          "cm90bxoYc3RlYW1tZXNzYWdlc19iYXNlLnByb3RvGixzdGVhbW1lc3NhZ2Vz",
          "X3VuaWZpZWRfYmFzZS5zdGVhbWNsaWVudC5wcm90byJiCjBDQWNjb3VudEhh",
          "cmR3YXJlX1JlZ2lzdGVyU3RlYW1Db250cm9sbGVyX1JlcXVlc3QSFQoNc2Vy",
          "aWFsX251bWJlchgBIAEoCRIXCg9jb250cm9sbGVyX2NvZGUYAiABKAkiMwox",
          "Q0FjY291bnRIYXJkd2FyZV9SZWdpc3RlclN0ZWFtQ29udHJvbGxlcl9SZXNw",
          "b25zZSJuCjxDQWNjb3VudEhhcmR3YXJlX0NvbXBsZXRlU3RlYW1Db250cm9s",
          "bGVyUmVnaXN0cmF0aW9uX1JlcXVlc3QSFQoNc2VyaWFsX251bWJlchgBIAEo",
          "CRIXCg9jb250cm9sbGVyX2NvZGUYAiABKAkiPwo9Q0FjY291bnRIYXJkd2Fy",
          "ZV9Db21wbGV0ZVN0ZWFtQ29udHJvbGxlclJlZ2lzdHJhdGlvbl9SZXNwb25z",
          "ZSJqCjhDQWNjb3VudEhhcmR3YXJlX1F1ZXJ5QWNjb3VudHNSZWdpc3RlcmVk",
          "VG9TZXJpYWxfUmVxdWVzdBIVCg1zZXJpYWxfbnVtYmVyGAEgASgJEhcKD2Nv",
          "bnRyb2xsZXJfY29kZRgCIAEoCSJtCjlDQWNjb3VudEhhcmR3YXJlX1F1ZXJ5",
          "QWNjb3VudHNSZWdpc3RlcmVkVG9TZXJpYWxfQWNjb3VudHMSEQoJYWNjb3Vu",
          "dGlkGAEgASgNEh0KFXJlZ2lzdHJhdGlvbl9jb21wbGV0ZRgCIAEoCCKJAQo5",
          "Q0FjY291bnRIYXJkd2FyZV9RdWVyeUFjY291bnRzUmVnaXN0ZXJlZFRvU2Vy",
          "aWFsX1Jlc3BvbnNlEkwKCGFjY291bnRzGAEgAygLMjouQ0FjY291bnRIYXJk",
          "d2FyZV9RdWVyeUFjY291bnRzUmVnaXN0ZXJlZFRvU2VyaWFsX0FjY291bnRz",
          "IoABCjpDQWNjb3VudEhhcmR3YXJlX1N0ZWFtQ29udHJvbGxlclNldENvbmZp",
          "Z19Db250cm9sbGVyQ29uZmlnEhMKC2FwcGlkb3JuYW1lGAEgASgJEhcKD3B1",
          "Ymxpc2hlZGZpbGVpZBgCIAEoBBIUCgx0ZW1wbGF0ZW5hbWUYAyABKAkijAIK",
          "MUNBY2NvdW50SGFyZHdhcmVfU3RlYW1Db250cm9sbGVyU2V0Q29uZmlnX1Jl",
          "cXVlc3QSFQoNc2VyaWFsX251bWJlchgBIAEoCRIXCg9jb250cm9sbGVyX2Nv",
          "ZGUYAiABKAkSEQoJYWNjb3VudGlkGAMgASgNElMKDmNvbmZpZ3VyYXRpb25z",
          "GAQgAygLMjsuQ0FjY291bnRIYXJkd2FyZV9TdGVhbUNvbnRyb2xsZXJTZXRD",
          "b25maWdfQ29udHJvbGxlckNvbmZpZxIaCg9jb250cm9sbGVyX3R5cGUYBSAB",
          "KAU6ATISIwoUb25seV9mb3JfdGhpc19zZXJpYWwYBiABKAg6BWZhbHNlIjQK",
          "MkNBY2NvdW50SGFyZHdhcmVfU3RlYW1Db250cm9sbGVyU2V0Q29uZmlnX1Jl",
          "c3BvbnNlIswBCjFDQWNjb3VudEhhcmR3YXJlX1N0ZWFtQ29udHJvbGxlckdl",
          "dENvbmZpZ19SZXF1ZXN0EhUKDXNlcmlhbF9udW1iZXIYASABKAkSFwoPY29u",
          "dHJvbGxlcl9jb2RlGAIgASgJEhEKCWFjY291bnRpZBgDIAEoDRITCgthcHBp",
          "ZG9ybmFtZRgEIAEoCRIaCg9jb250cm9sbGVyX3R5cGUYBSABKAU6ATISIwoU",
          "b25seV9mb3JfdGhpc19zZXJpYWwYBiABKAg6BWZhbHNlIrABCjpDQWNjb3Vu",
          "dEhhcmR3YXJlX1N0ZWFtQ29udHJvbGxlckdldENvbmZpZ19Db250cm9sbGVy",
          "Q29uZmlnEhMKC2FwcGlkb3JuYW1lGAEgASgJEhcKD3B1Ymxpc2hlZGZpbGVp",
          "ZBgCIAEoBBIUCgx0ZW1wbGF0ZW5hbWUYAyABKAkSFQoNc2VyaWFsX251bWJl",
          "chgEIAEoCRIXCghhdXRvc2F2ZRgFIAEoCDoFZmFsc2UiiQEKMkNBY2NvdW50",
          "SGFyZHdhcmVfU3RlYW1Db250cm9sbGVyR2V0Q29uZmlnX1Jlc3BvbnNlElMK",
          "DmNvbmZpZ3VyYXRpb25zGAEgAygLMjsuQ0FjY291bnRIYXJkd2FyZV9TdGVh",
          "bUNvbnRyb2xsZXJHZXRDb25maWdfQ29udHJvbGxlckNvbmZpZyJ3CjJDQWNj",
          "b3VudEhhcmR3YXJlX0RlUmVnaXN0ZXJTdGVhbUNvbnRyb2xsZXJfUmVxdWVz",
          "dBIVCg1zZXJpYWxfbnVtYmVyGAEgASgJEhcKD2NvbnRyb2xsZXJfY29kZRgC",
          "IAEoCRIRCglhY2NvdW50aWQYAyABKA0iNQozQ0FjY291bnRIYXJkd2FyZV9E",
          "ZVJlZ2lzdGVyU3RlYW1Db250cm9sbGVyX1Jlc3BvbnNlInQKL0NBY2NvdW50",
          "SGFyZHdhcmVfU2V0UGVyc29uYWxpemF0aW9uRmlsZV9SZXF1ZXN0EhUKDXNl",
          "cmlhbF9udW1iZXIYASABKAkSFwoPcHVibGlzaGVkZmlsZWlkGAIgASgEEhEK",
          "CWFjY291bnRpZBgDIAEoDSIyCjBDQWNjb3VudEhhcmR3YXJlX1NldFBlcnNv",
          "bmFsaXphdGlvbkZpbGVfUmVzcG9uc2UiWwovQ0FjY291bnRIYXJkd2FyZV9H",
          "ZXRQZXJzb25hbGl6YXRpb25GaWxlX1JlcXVlc3QSFQoNc2VyaWFsX251bWJl",
          "chgBIAEoCRIRCglhY2NvdW50aWQYAiABKA0iSwowQ0FjY291bnRIYXJkd2Fy",
          "ZV9HZXRQZXJzb25hbGl6YXRpb25GaWxlX1Jlc3BvbnNlEhcKD3B1Ymxpc2hl",
          "ZGZpbGVpZBgBIAEoBCL3AQotQ0FjY291bnRIYXJkd2FyZV9WUkNvbXBhdGli",
          "aWxpdHlDaGVja19SZXF1ZXN0EjgKDHByb2R1Y3RfbmFtZRgBIAEoCUIigrUY",
          "Hk5hbWUgb2YgcHJvZHVjdCB3ZSdyZSBjaGVja2luZxJoCgZ2YWx1ZXMYAiAD",
          "KAsyMy5DQWNjb3VudEhhcmR3YXJlX1ZSQ29tcGF0aWJpbGl0eUNoZWNrX1Jl",
          "cXVlc3QuUGFpckIjgrUYH1ZhbHVlcyBmcm9tIGNsaWVudCBzeXN0ZW0gcHJv",
          "YmUaIgoEUGFpchILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAki2wMKLkNB",
          "Y2NvdW50SGFyZHdhcmVfVlJDb21wYXRpYmlsaXR5Q2hlY2tfUmVzcG9uc2US",
          "bQoGdmFsdWVzGAEgAygLMjQuQ0FjY291bnRIYXJkd2FyZV9WUkNvbXBhdGli",
          "aWxpdHlDaGVja19SZXNwb25zZS5QYWlyQieCtRgjVG9wLWxldmVsIHZhbHVl",
          "cyByZXBvcnRlZCB0byBjbGllbnQSdAoKY29tcG9uZW50cxgCIAMoCzJALkNB",
          "Y2NvdW50SGFyZHdhcmVfVlJDb21wYXRpYmlsaXR5Q2hlY2tfUmVzcG9uc2Uu",
          "Q29tcG9uZW50RGlzcGxheUIegrUYGlNwZWNpZmljIHZhbHVlcyB0byBkaXNw",
          "bGF5GiIKBFBhaXISCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJGp8BChBD",
          "b21wb25lbnREaXNwbGF5EjgKBG5hbWUYASABKAlCKoK1GCZOYW1lIG9mIGNv",
          "bXBvbmVudCAoT1MsIFJBTSwgR1BVLCBldGMuKRImCgVpbWFnZRgCIAEoCUIX",
          "grUYE05hbWUgb2YgaWNvbiB0byB1c2USKQoFdmFsdWUYAyABKAlCGoK1GBZT",
          "dHJpbmcgdmFsdWUgdG8gcmVwb3J0IvoBCjRDQWNjb3VudEhhcmR3YXJlX1Jl",
          "Z2lzdGVyVmFsdmVJbmRleENvbXBvbmVudF9SZXF1ZXN0EhUKDXNlcmlhbF9u",
          "dW1iZXIYASABKAkSIgoabWFudWZhY3R1cmVyX3NlcmlhbF9udW1iZXIYAiAB",
          "KAkSFgoOY29tcG9uZW50X2NvZGUYAyABKAkSTAoOY29tcG9uZW50X3R5cGUY",
          "BCABKA4yFS5FVmFsdmVJbmRleENvbXBvbmVudDoda19FVmFsdmVJbmRleENv",
          "bXBvbmVudFVua25vd24SIQoZZXN0aW1hdGVkX3RpbWVfcmVnaXN0ZXJlZBgF",
          "IAEoBSI3CjVDQWNjb3VudEhhcmR3YXJlX1JlZ2lzdGVyVmFsdmVJbmRleENv",
          "bXBvbmVudF9SZXNwb25zZSJhCi9DQWNjb3VudEhhcmR3YXJlX0dldFN0ZWFt",
          "RGVja0NvbXBvbmVudHNfUmVxdWVzdBIVCg1zZXJpYWxfbnVtYmVyGAEgASgJ",
          "EhcKD2NvbnRyb2xsZXJfY29kZRgCIAEoCSJLCjBDQWNjb3VudEhhcmR3YXJl",
          "X0dldFN0ZWFtRGVja0NvbXBvbmVudHNfUmVzcG9uc2USFwoPanNvbl9jb21w",
          "b25lbnRzGAEgASgJKqcBChRFVmFsdmVJbmRleENvbXBvbmVudBIhCh1rX0VW",
          "YWx2ZUluZGV4Q29tcG9uZW50VW5rbm93bhAAEh0KGWtfRVZhbHZlSW5kZXhD",
          "b21wb25lbnRITUQQARIlCiFrX0VWYWx2ZUluZGV4Q29tcG9uZW50TGVmdEtu",
          "dWNrbGUQAhImCiJrX0VWYWx2ZUluZGV4Q29tcG9uZW50UmlnaHRLbnVja2xl",
          "EAMyqhEKD0FjY291bnRIYXJkd2FyZRLYAQoXUmVnaXN0ZXJTdGVhbUNvbnRy",
          "b2xsZXISMS5DQWNjb3VudEhhcmR3YXJlX1JlZ2lzdGVyU3RlYW1Db250cm9s",
          "bGVyX1JlcXVlc3QaMi5DQWNjb3VudEhhcmR3YXJlX1JlZ2lzdGVyU3RlYW1D",
          "b250cm9sbGVyX1Jlc3BvbnNlIlaCtRhSUmVjb3JkcyBhIHNlcmlhbCBudW1i",
          "ZXIgYW5kIHRoZSBjYWxsaW5nIHVzZXIncyBhY2NvdW50IGluZm8gZm9yIHdh",
          "cnJhbnR5IHB1cnBvc2VzLhLXAQojQ29tcGxldGVTdGVhbUNvbnRyb2xsZXJS",
          "ZWdpc3RyYXRpb24SPS5DQWNjb3VudEhhcmR3YXJlX0NvbXBsZXRlU3RlYW1D",
          "b250cm9sbGVyUmVnaXN0cmF0aW9uX1JlcXVlc3QaPi5DQWNjb3VudEhhcmR3",
          "YXJlX0NvbXBsZXRlU3RlYW1Db250cm9sbGVyUmVnaXN0cmF0aW9uX1Jlc3Bv",
          "bnNlIjGCtRgtTWFya3MgYSBjb250cm9sbGVyJ3MgcmVnaXN0cmF0aW9uIGFz",
          "IGNvbXBsZXRlEtsBCiNRdWVyeUFjY291bnRzUmVnaXN0ZXJlZFRvQ29udHJv",
          "bGxlchI5LkNBY2NvdW50SGFyZHdhcmVfUXVlcnlBY2NvdW50c1JlZ2lzdGVy",
          "ZWRUb1NlcmlhbF9SZXF1ZXN0GjouQ0FjY291bnRIYXJkd2FyZV9RdWVyeUFj",
          "Y291bnRzUmVnaXN0ZXJlZFRvU2VyaWFsX1Jlc3BvbnNlIj2CtRg5U2VuZHMg",
          "YmFjayBhIGxpc3Qgb2YgYWNjb3VudHMgcmVnaXN0ZXJlZCB0byBhIGNvbnRy",
          "b2xsZXIuErwBCiBTZXREZXNpcmVkQ29udHJvbGxlckNvbmZpZ0ZvckFwcBIy",
          "LkNBY2NvdW50SGFyZHdhcmVfU3RlYW1Db250cm9sbGVyU2V0Q29uZmlnX1Jl",
          "cXVlc3QaMy5DQWNjb3VudEhhcmR3YXJlX1N0ZWFtQ29udHJvbGxlclNldENv",
          "bmZpZ19SZXNwb25zZSIvgrUYK1NldHMgYSBkZXNpcmVkIGNvbnRyb2xsZXIg",
          "Y29uZmlnIGZvciBhbiBhcHASvAEKIEdldERlc2lyZWRDb250cm9sbGVyQ29u",
          "ZmlnRm9yQXBwEjIuQ0FjY291bnRIYXJkd2FyZV9TdGVhbUNvbnRyb2xsZXJH",
          "ZXRDb25maWdfUmVxdWVzdBozLkNBY2NvdW50SGFyZHdhcmVfU3RlYW1Db250",
          "cm9sbGVyR2V0Q29uZmlnX1Jlc3BvbnNlIi+CtRgrR2V0cyBhIGRlc2lyZWQg",
          "Y29udHJvbGxlciBjb25maWcgZm9yIGFuIGFwcBKlAQoZRGVSZWdpc3RlclN0",
          "ZWFtQ29udHJvbGxlchIzLkNBY2NvdW50SGFyZHdhcmVfRGVSZWdpc3RlclN0",
          "ZWFtQ29udHJvbGxlcl9SZXF1ZXN0GjQuQ0FjY291bnRIYXJkd2FyZV9EZVJl",
          "Z2lzdGVyU3RlYW1Db250cm9sbGVyX1Jlc3BvbnNlIh2CtRgZRGUgcmVnaXN0",
          "ZXJzIGEgY29udHJvbGxlchK7AQogU2V0Q29udHJvbGxlclBlcnNvbmFsaXph",
          "dGlvbkZpbGUSMC5DQWNjb3VudEhhcmR3YXJlX1NldFBlcnNvbmFsaXphdGlv",
          "bkZpbGVfUmVxdWVzdBoxLkNBY2NvdW50SGFyZHdhcmVfU2V0UGVyc29uYWxp",
          "emF0aW9uRmlsZV9SZXNwb25zZSIygrUYLlN0b3JlcyB0aGUgZmlsZSBJRCBv",
          "ZiB0aGUgcGVyc29uYWxpemF0aW9uIGZpbGUSuQEKIEdldENvbnRyb2xsZXJQ",
          "ZXJzb25hbGl6YXRpb25GaWxlEjAuQ0FjY291bnRIYXJkd2FyZV9HZXRQZXJz",
          "b25hbGl6YXRpb25GaWxlX1JlcXVlc3QaMS5DQWNjb3VudEhhcmR3YXJlX0dl",
          "dFBlcnNvbmFsaXphdGlvbkZpbGVfUmVzcG9uc2UiMIK1GCxHZXRzIHRoZSBm",
          "aWxlIElEIG9mIHRoZSBwZXJzb25hbGl6YXRpb24gZmlsZRKoAQoUVlJDb21w",
          "YXRpYmlsaXR5Q2hlY2sSLi5DQWNjb3VudEhhcmR3YXJlX1ZSQ29tcGF0aWJp",
          "bGl0eUNoZWNrX1JlcXVlc3QaLy5DQWNjb3VudEhhcmR3YXJlX1ZSQ29tcGF0",
          "aWJpbGl0eUNoZWNrX1Jlc3BvbnNlIi+CtRgrQ2hlY2sgc3lzdGVtIGluZm8g",
          "Zm9yIGNvbXBhdGliaWxpdHkgd2l0aCBWUhLBAQobUmVnaXN0ZXJWYWx2ZUlu",
          "ZGV4Q29tcG9uZW50EjUuQ0FjY291bnRIYXJkd2FyZV9SZWdpc3RlclZhbHZl",
          "SW5kZXhDb21wb25lbnRfUmVxdWVzdBo2LkNBY2NvdW50SGFyZHdhcmVfUmVn",
          "aXN0ZXJWYWx2ZUluZGV4Q29tcG9uZW50X1Jlc3BvbnNlIjOCtRgvUmVnaXN0",
          "ZXJzIGEgdmFsdmUgaW5kZXggY29tcG9uZW50IHRvIGEgY3VzdG9tZXISvQEK",
          "FkdldFN0ZWFtRGVja0NvbXBvbmVudHMSMC5DQWNjb3VudEhhcmR3YXJlX0dl",
          "dFN0ZWFtRGVja0NvbXBvbmVudHNfUmVxdWVzdBoxLkNBY2NvdW50SGFyZHdh",
          "cmVfR2V0U3RlYW1EZWNrQ29tcG9uZW50c19SZXNwb25zZSI+grUYOlJldHVy",
          "bnMgdGhlIGNvbXBvbmVudHMgdGhhdCB3ZW50IGludG8gdGhlIGdpdmVuIFN0",
          "ZWFtIERlY2saNYK1GDFBIHNlcnZpY2UgdG8gdXNlIGFjY291bnQgaGFyZHdh",
          "cmUgcmVsYXRlZCBtZXRob2RzQgOAAQE="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EValveIndexComponent), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_RegisterSteamController_Request), global::CAccountHardware_RegisterSteamController_Request.Parser, new[]{ "SerialNumber", "ControllerCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_RegisterSteamController_Response), global::CAccountHardware_RegisterSteamController_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_CompleteSteamControllerRegistration_Request), global::CAccountHardware_CompleteSteamControllerRegistration_Request.Parser, new[]{ "SerialNumber", "ControllerCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_CompleteSteamControllerRegistration_Response), global::CAccountHardware_CompleteSteamControllerRegistration_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_QueryAccountsRegisteredToSerial_Request), global::CAccountHardware_QueryAccountsRegisteredToSerial_Request.Parser, new[]{ "SerialNumber", "ControllerCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_QueryAccountsRegisteredToSerial_Accounts), global::CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Parser, new[]{ "Accountid", "RegistrationComplete" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_QueryAccountsRegisteredToSerial_Response), global::CAccountHardware_QueryAccountsRegisteredToSerial_Response.Parser, new[]{ "Accounts" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SteamControllerSetConfig_ControllerConfig), global::CAccountHardware_SteamControllerSetConfig_ControllerConfig.Parser, new[]{ "Appidorname", "Publishedfileid", "Templatename" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SteamControllerSetConfig_Request), global::CAccountHardware_SteamControllerSetConfig_Request.Parser, new[]{ "SerialNumber", "ControllerCode", "Accountid", "Configurations", "ControllerType", "OnlyForThisSerial" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SteamControllerSetConfig_Response), global::CAccountHardware_SteamControllerSetConfig_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SteamControllerGetConfig_Request), global::CAccountHardware_SteamControllerGetConfig_Request.Parser, new[]{ "SerialNumber", "ControllerCode", "Accountid", "Appidorname", "ControllerType", "OnlyForThisSerial" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SteamControllerGetConfig_ControllerConfig), global::CAccountHardware_SteamControllerGetConfig_ControllerConfig.Parser, new[]{ "Appidorname", "Publishedfileid", "Templatename", "SerialNumber", "Autosave" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SteamControllerGetConfig_Response), global::CAccountHardware_SteamControllerGetConfig_Response.Parser, new[]{ "Configurations" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_DeRegisterSteamController_Request), global::CAccountHardware_DeRegisterSteamController_Request.Parser, new[]{ "SerialNumber", "ControllerCode", "Accountid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_DeRegisterSteamController_Response), global::CAccountHardware_DeRegisterSteamController_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SetPersonalizationFile_Request), global::CAccountHardware_SetPersonalizationFile_Request.Parser, new[]{ "SerialNumber", "Publishedfileid", "Accountid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_SetPersonalizationFile_Response), global::CAccountHardware_SetPersonalizationFile_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_GetPersonalizationFile_Request), global::CAccountHardware_GetPersonalizationFile_Request.Parser, new[]{ "SerialNumber", "Accountid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_GetPersonalizationFile_Response), global::CAccountHardware_GetPersonalizationFile_Response.Parser, new[]{ "Publishedfileid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_VRCompatibilityCheck_Request), global::CAccountHardware_VRCompatibilityCheck_Request.Parser, new[]{ "ProductName", "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_VRCompatibilityCheck_Request.Types.Pair), global::CAccountHardware_VRCompatibilityCheck_Request.Types.Pair.Parser, new[]{ "Key", "Value" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_VRCompatibilityCheck_Response), global::CAccountHardware_VRCompatibilityCheck_Response.Parser, new[]{ "Values", "Components" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_VRCompatibilityCheck_Response.Types.Pair), global::CAccountHardware_VRCompatibilityCheck_Response.Types.Pair.Parser, new[]{ "Key", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_VRCompatibilityCheck_Response.Types.ComponentDisplay), global::CAccountHardware_VRCompatibilityCheck_Response.Types.ComponentDisplay.Parser, new[]{ "Name", "Image", "Value" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_RegisterValveIndexComponent_Request), global::CAccountHardware_RegisterValveIndexComponent_Request.Parser, new[]{ "SerialNumber", "ManufacturerSerialNumber", "ComponentCode", "ComponentType", "EstimatedTimeRegistered" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_RegisterValveIndexComponent_Response), global::CAccountHardware_RegisterValveIndexComponent_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_GetSteamDeckComponents_Request), global::CAccountHardware_GetSteamDeckComponents_Request.Parser, new[]{ "SerialNumber", "ControllerCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CAccountHardware_GetSteamDeckComponents_Response), global::CAccountHardware_GetSteamDeckComponents_Response.Parser, new[]{ "JsonComponents" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EValveIndexComponent {
  [pbr::OriginalName("k_EValveIndexComponentUnknown")] KEvalveIndexComponentUnknown = 0,
  [pbr::OriginalName("k_EValveIndexComponentHMD")] KEvalveIndexComponentHmd = 1,
  [pbr::OriginalName("k_EValveIndexComponentLeftKnuckle")] KEvalveIndexComponentLeftKnuckle = 2,
  [pbr::OriginalName("k_EValveIndexComponentRightKnuckle")] KEvalveIndexComponentRightKnuckle = 3,
}

#endregion

#region Messages
public sealed partial class CAccountHardware_RegisterSteamController_Request : pb::IMessage<CAccountHardware_RegisterSteamController_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_RegisterSteamController_Request> _parser = new pb::MessageParser<CAccountHardware_RegisterSteamController_Request>(() => new CAccountHardware_RegisterSteamController_Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_RegisterSteamController_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterSteamController_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterSteamController_Request(CAccountHardware_RegisterSteamController_Request other) : this() {
    serialNumber_ = other.serialNumber_;
    controllerCode_ = other.controllerCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterSteamController_Request Clone() {
    return new CAccountHardware_RegisterSteamController_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "controller_code" field.</summary>
  public const int ControllerCodeFieldNumber = 2;
  private readonly static string ControllerCodeDefaultValue = "";

  private string controllerCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ControllerCode {
    get { return controllerCode_ ?? ControllerCodeDefaultValue; }
    set {
      controllerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "controller_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerCode {
    get { return controllerCode_ != null; }
  }
  /// <summary>Clears the value of the "controller_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerCode() {
    controllerCode_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_RegisterSteamController_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_RegisterSteamController_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ControllerCode != other.ControllerCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasControllerCode) hash ^= ControllerCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasControllerCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_RegisterSteamController_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasControllerCode) {
      ControllerCode = other.ControllerCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_RegisterSteamController_Response : pb::IMessage<CAccountHardware_RegisterSteamController_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_RegisterSteamController_Response> _parser = new pb::MessageParser<CAccountHardware_RegisterSteamController_Response>(() => new CAccountHardware_RegisterSteamController_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_RegisterSteamController_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterSteamController_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterSteamController_Response(CAccountHardware_RegisterSteamController_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterSteamController_Response Clone() {
    return new CAccountHardware_RegisterSteamController_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_RegisterSteamController_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_RegisterSteamController_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_RegisterSteamController_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_CompleteSteamControllerRegistration_Request : pb::IMessage<CAccountHardware_CompleteSteamControllerRegistration_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_CompleteSteamControllerRegistration_Request> _parser = new pb::MessageParser<CAccountHardware_CompleteSteamControllerRegistration_Request>(() => new CAccountHardware_CompleteSteamControllerRegistration_Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_CompleteSteamControllerRegistration_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_CompleteSteamControllerRegistration_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_CompleteSteamControllerRegistration_Request(CAccountHardware_CompleteSteamControllerRegistration_Request other) : this() {
    serialNumber_ = other.serialNumber_;
    controllerCode_ = other.controllerCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_CompleteSteamControllerRegistration_Request Clone() {
    return new CAccountHardware_CompleteSteamControllerRegistration_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "controller_code" field.</summary>
  public const int ControllerCodeFieldNumber = 2;
  private readonly static string ControllerCodeDefaultValue = "";

  private string controllerCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ControllerCode {
    get { return controllerCode_ ?? ControllerCodeDefaultValue; }
    set {
      controllerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "controller_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerCode {
    get { return controllerCode_ != null; }
  }
  /// <summary>Clears the value of the "controller_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerCode() {
    controllerCode_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_CompleteSteamControllerRegistration_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_CompleteSteamControllerRegistration_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ControllerCode != other.ControllerCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasControllerCode) hash ^= ControllerCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasControllerCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_CompleteSteamControllerRegistration_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasControllerCode) {
      ControllerCode = other.ControllerCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_CompleteSteamControllerRegistration_Response : pb::IMessage<CAccountHardware_CompleteSteamControllerRegistration_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_CompleteSteamControllerRegistration_Response> _parser = new pb::MessageParser<CAccountHardware_CompleteSteamControllerRegistration_Response>(() => new CAccountHardware_CompleteSteamControllerRegistration_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_CompleteSteamControllerRegistration_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_CompleteSteamControllerRegistration_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_CompleteSteamControllerRegistration_Response(CAccountHardware_CompleteSteamControllerRegistration_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_CompleteSteamControllerRegistration_Response Clone() {
    return new CAccountHardware_CompleteSteamControllerRegistration_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_CompleteSteamControllerRegistration_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_CompleteSteamControllerRegistration_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_CompleteSteamControllerRegistration_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_QueryAccountsRegisteredToSerial_Request : pb::IMessage<CAccountHardware_QueryAccountsRegisteredToSerial_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Request> _parser = new pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Request>(() => new CAccountHardware_QueryAccountsRegisteredToSerial_Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Request(CAccountHardware_QueryAccountsRegisteredToSerial_Request other) : this() {
    serialNumber_ = other.serialNumber_;
    controllerCode_ = other.controllerCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Request Clone() {
    return new CAccountHardware_QueryAccountsRegisteredToSerial_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "controller_code" field.</summary>
  public const int ControllerCodeFieldNumber = 2;
  private readonly static string ControllerCodeDefaultValue = "";

  private string controllerCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ControllerCode {
    get { return controllerCode_ ?? ControllerCodeDefaultValue; }
    set {
      controllerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "controller_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerCode {
    get { return controllerCode_ != null; }
  }
  /// <summary>Clears the value of the "controller_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerCode() {
    controllerCode_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_QueryAccountsRegisteredToSerial_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_QueryAccountsRegisteredToSerial_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ControllerCode != other.ControllerCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasControllerCode) hash ^= ControllerCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasControllerCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_QueryAccountsRegisteredToSerial_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasControllerCode) {
      ControllerCode = other.ControllerCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_QueryAccountsRegisteredToSerial_Accounts : pb::IMessage<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> _parser = new pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>(() => new CAccountHardware_QueryAccountsRegisteredToSerial_Accounts());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Accounts() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Accounts(CAccountHardware_QueryAccountsRegisteredToSerial_Accounts other) : this() {
    _hasBits0 = other._hasBits0;
    accountid_ = other.accountid_;
    registrationComplete_ = other.registrationComplete_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Accounts Clone() {
    return new CAccountHardware_QueryAccountsRegisteredToSerial_Accounts(this);
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 1;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "registration_complete" field.</summary>
  public const int RegistrationCompleteFieldNumber = 2;
  private readonly static bool RegistrationCompleteDefaultValue = false;

  private bool registrationComplete_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool RegistrationComplete {
    get { if ((_hasBits0 & 2) != 0) { return registrationComplete_; } else { return RegistrationCompleteDefaultValue; } }
    set {
      _hasBits0 |= 2;
      registrationComplete_ = value;
    }
  }
  /// <summary>Gets whether the "registration_complete" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRegistrationComplete {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "registration_complete" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRegistrationComplete() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_QueryAccountsRegisteredToSerial_Accounts);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_QueryAccountsRegisteredToSerial_Accounts other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Accountid != other.Accountid) return false;
    if (RegistrationComplete != other.RegistrationComplete) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasRegistrationComplete) hash ^= RegistrationComplete.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasRegistrationComplete) {
      output.WriteRawTag(16);
      output.WriteBool(RegistrationComplete);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Accountid);
    }
    if (HasRegistrationComplete) {
      output.WriteRawTag(16);
      output.WriteBool(RegistrationComplete);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasRegistrationComplete) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_QueryAccountsRegisteredToSerial_Accounts other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasRegistrationComplete) {
      RegistrationComplete = other.RegistrationComplete;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          RegistrationComplete = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 16: {
          RegistrationComplete = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_QueryAccountsRegisteredToSerial_Response : pb::IMessage<CAccountHardware_QueryAccountsRegisteredToSerial_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Response> _parser = new pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Response>(() => new CAccountHardware_QueryAccountsRegisteredToSerial_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_QueryAccountsRegisteredToSerial_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Response(CAccountHardware_QueryAccountsRegisteredToSerial_Response other) : this() {
    accounts_ = other.accounts_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_QueryAccountsRegisteredToSerial_Response Clone() {
    return new CAccountHardware_QueryAccountsRegisteredToSerial_Response(this);
  }

  /// <summary>Field number for the "accounts" field.</summary>
  public const int AccountsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> _repeated_accounts_codec
      = pb::FieldCodec.ForMessage(10, global::CAccountHardware_QueryAccountsRegisteredToSerial_Accounts.Parser);
  private readonly pbc::RepeatedField<global::CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> accounts_ = new pbc::RepeatedField<global::CAccountHardware_QueryAccountsRegisteredToSerial_Accounts>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CAccountHardware_QueryAccountsRegisteredToSerial_Accounts> Accounts {
    get { return accounts_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_QueryAccountsRegisteredToSerial_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_QueryAccountsRegisteredToSerial_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!accounts_.Equals(other.accounts_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= accounts_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    accounts_.WriteTo(output, _repeated_accounts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    accounts_.WriteTo(ref output, _repeated_accounts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += accounts_.CalculateSize(_repeated_accounts_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_QueryAccountsRegisteredToSerial_Response other) {
    if (other == null) {
      return;
    }
    accounts_.Add(other.accounts_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SteamControllerSetConfig_ControllerConfig : pb::IMessage<CAccountHardware_SteamControllerSetConfig_ControllerConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SteamControllerSetConfig_ControllerConfig> _parser = new pb::MessageParser<CAccountHardware_SteamControllerSetConfig_ControllerConfig>(() => new CAccountHardware_SteamControllerSetConfig_ControllerConfig());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SteamControllerSetConfig_ControllerConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_ControllerConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_ControllerConfig(CAccountHardware_SteamControllerSetConfig_ControllerConfig other) : this() {
    _hasBits0 = other._hasBits0;
    appidorname_ = other.appidorname_;
    publishedfileid_ = other.publishedfileid_;
    templatename_ = other.templatename_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_ControllerConfig Clone() {
    return new CAccountHardware_SteamControllerSetConfig_ControllerConfig(this);
  }

  /// <summary>Field number for the "appidorname" field.</summary>
  public const int AppidornameFieldNumber = 1;
  private readonly static string AppidornameDefaultValue = "";

  private string appidorname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Appidorname {
    get { return appidorname_ ?? AppidornameDefaultValue; }
    set {
      appidorname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "appidorname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppidorname {
    get { return appidorname_ != null; }
  }
  /// <summary>Clears the value of the "appidorname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppidorname() {
    appidorname_ = null;
  }

  /// <summary>Field number for the "publishedfileid" field.</summary>
  public const int PublishedfileidFieldNumber = 2;
  private readonly static ulong PublishedfileidDefaultValue = 0UL;

  private ulong publishedfileid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Publishedfileid {
    get { if ((_hasBits0 & 1) != 0) { return publishedfileid_; } else { return PublishedfileidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      publishedfileid_ = value;
    }
  }
  /// <summary>Gets whether the "publishedfileid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPublishedfileid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "publishedfileid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPublishedfileid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "templatename" field.</summary>
  public const int TemplatenameFieldNumber = 3;
  private readonly static string TemplatenameDefaultValue = "";

  private string templatename_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Templatename {
    get { return templatename_ ?? TemplatenameDefaultValue; }
    set {
      templatename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "templatename" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTemplatename {
    get { return templatename_ != null; }
  }
  /// <summary>Clears the value of the "templatename" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTemplatename() {
    templatename_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SteamControllerSetConfig_ControllerConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SteamControllerSetConfig_ControllerConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appidorname != other.Appidorname) return false;
    if (Publishedfileid != other.Publishedfileid) return false;
    if (Templatename != other.Templatename) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppidorname) hash ^= Appidorname.GetHashCode();
    if (HasPublishedfileid) hash ^= Publishedfileid.GetHashCode();
    if (HasTemplatename) hash ^= Templatename.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppidorname) {
      output.WriteRawTag(10);
      output.WriteString(Appidorname);
    }
    if (HasPublishedfileid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Publishedfileid);
    }
    if (HasTemplatename) {
      output.WriteRawTag(26);
      output.WriteString(Templatename);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppidorname) {
      output.WriteRawTag(10);
      output.WriteString(Appidorname);
    }
    if (HasPublishedfileid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Publishedfileid);
    }
    if (HasTemplatename) {
      output.WriteRawTag(26);
      output.WriteString(Templatename);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppidorname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Appidorname);
    }
    if (HasPublishedfileid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Publishedfileid);
    }
    if (HasTemplatename) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Templatename);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SteamControllerSetConfig_ControllerConfig other) {
    if (other == null) {
      return;
    }
    if (other.HasAppidorname) {
      Appidorname = other.Appidorname;
    }
    if (other.HasPublishedfileid) {
      Publishedfileid = other.Publishedfileid;
    }
    if (other.HasTemplatename) {
      Templatename = other.Templatename;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Appidorname = input.ReadString();
          break;
        }
        case 16: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
        case 26: {
          Templatename = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Appidorname = input.ReadString();
          break;
        }
        case 16: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
        case 26: {
          Templatename = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SteamControllerSetConfig_Request : pb::IMessage<CAccountHardware_SteamControllerSetConfig_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SteamControllerSetConfig_Request> _parser = new pb::MessageParser<CAccountHardware_SteamControllerSetConfig_Request>(() => new CAccountHardware_SteamControllerSetConfig_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SteamControllerSetConfig_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_Request(CAccountHardware_SteamControllerSetConfig_Request other) : this() {
    _hasBits0 = other._hasBits0;
    serialNumber_ = other.serialNumber_;
    controllerCode_ = other.controllerCode_;
    accountid_ = other.accountid_;
    configurations_ = other.configurations_.Clone();
    controllerType_ = other.controllerType_;
    onlyForThisSerial_ = other.onlyForThisSerial_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_Request Clone() {
    return new CAccountHardware_SteamControllerSetConfig_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "controller_code" field.</summary>
  public const int ControllerCodeFieldNumber = 2;
  private readonly static string ControllerCodeDefaultValue = "";

  private string controllerCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ControllerCode {
    get { return controllerCode_ ?? ControllerCodeDefaultValue; }
    set {
      controllerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "controller_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerCode {
    get { return controllerCode_ != null; }
  }
  /// <summary>Clears the value of the "controller_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerCode() {
    controllerCode_ = null;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 3;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "configurations" field.</summary>
  public const int ConfigurationsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CAccountHardware_SteamControllerSetConfig_ControllerConfig> _repeated_configurations_codec
      = pb::FieldCodec.ForMessage(34, global::CAccountHardware_SteamControllerSetConfig_ControllerConfig.Parser);
  private readonly pbc::RepeatedField<global::CAccountHardware_SteamControllerSetConfig_ControllerConfig> configurations_ = new pbc::RepeatedField<global::CAccountHardware_SteamControllerSetConfig_ControllerConfig>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CAccountHardware_SteamControllerSetConfig_ControllerConfig> Configurations {
    get { return configurations_; }
  }

  /// <summary>Field number for the "controller_type" field.</summary>
  public const int ControllerTypeFieldNumber = 5;
  private readonly static int ControllerTypeDefaultValue = 2;

  private int controllerType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ControllerType {
    get { if ((_hasBits0 & 2) != 0) { return controllerType_; } else { return ControllerTypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      controllerType_ = value;
    }
  }
  /// <summary>Gets whether the "controller_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "controller_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerType() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "only_for_this_serial" field.</summary>
  public const int OnlyForThisSerialFieldNumber = 6;
  private readonly static bool OnlyForThisSerialDefaultValue = false;

  private bool onlyForThisSerial_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool OnlyForThisSerial {
    get { if ((_hasBits0 & 4) != 0) { return onlyForThisSerial_; } else { return OnlyForThisSerialDefaultValue; } }
    set {
      _hasBits0 |= 4;
      onlyForThisSerial_ = value;
    }
  }
  /// <summary>Gets whether the "only_for_this_serial" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOnlyForThisSerial {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "only_for_this_serial" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOnlyForThisSerial() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SteamControllerSetConfig_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SteamControllerSetConfig_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ControllerCode != other.ControllerCode) return false;
    if (Accountid != other.Accountid) return false;
    if(!configurations_.Equals(other.configurations_)) return false;
    if (ControllerType != other.ControllerType) return false;
    if (OnlyForThisSerial != other.OnlyForThisSerial) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasControllerCode) hash ^= ControllerCode.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    hash ^= configurations_.GetHashCode();
    if (HasControllerType) hash ^= ControllerType.GetHashCode();
    if (HasOnlyForThisSerial) hash ^= OnlyForThisSerial.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    configurations_.WriteTo(output, _repeated_configurations_codec);
    if (HasControllerType) {
      output.WriteRawTag(40);
      output.WriteInt32(ControllerType);
    }
    if (HasOnlyForThisSerial) {
      output.WriteRawTag(48);
      output.WriteBool(OnlyForThisSerial);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    configurations_.WriteTo(ref output, _repeated_configurations_codec);
    if (HasControllerType) {
      output.WriteRawTag(40);
      output.WriteInt32(ControllerType);
    }
    if (HasOnlyForThisSerial) {
      output.WriteRawTag(48);
      output.WriteBool(OnlyForThisSerial);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasControllerCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerCode);
    }
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    size += configurations_.CalculateSize(_repeated_configurations_codec);
    if (HasControllerType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControllerType);
    }
    if (HasOnlyForThisSerial) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SteamControllerSetConfig_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasControllerCode) {
      ControllerCode = other.ControllerCode;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    configurations_.Add(other.configurations_);
    if (other.HasControllerType) {
      ControllerType = other.ControllerType;
    }
    if (other.HasOnlyForThisSerial) {
      OnlyForThisSerial = other.OnlyForThisSerial;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 34: {
          configurations_.AddEntriesFrom(input, _repeated_configurations_codec);
          break;
        }
        case 40: {
          ControllerType = input.ReadInt32();
          break;
        }
        case 48: {
          OnlyForThisSerial = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 34: {
          configurations_.AddEntriesFrom(ref input, _repeated_configurations_codec);
          break;
        }
        case 40: {
          ControllerType = input.ReadInt32();
          break;
        }
        case 48: {
          OnlyForThisSerial = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SteamControllerSetConfig_Response : pb::IMessage<CAccountHardware_SteamControllerSetConfig_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SteamControllerSetConfig_Response> _parser = new pb::MessageParser<CAccountHardware_SteamControllerSetConfig_Response>(() => new CAccountHardware_SteamControllerSetConfig_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SteamControllerSetConfig_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_Response(CAccountHardware_SteamControllerSetConfig_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerSetConfig_Response Clone() {
    return new CAccountHardware_SteamControllerSetConfig_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SteamControllerSetConfig_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SteamControllerSetConfig_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SteamControllerSetConfig_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SteamControllerGetConfig_Request : pb::IMessage<CAccountHardware_SteamControllerGetConfig_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SteamControllerGetConfig_Request> _parser = new pb::MessageParser<CAccountHardware_SteamControllerGetConfig_Request>(() => new CAccountHardware_SteamControllerGetConfig_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SteamControllerGetConfig_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_Request(CAccountHardware_SteamControllerGetConfig_Request other) : this() {
    _hasBits0 = other._hasBits0;
    serialNumber_ = other.serialNumber_;
    controllerCode_ = other.controllerCode_;
    accountid_ = other.accountid_;
    appidorname_ = other.appidorname_;
    controllerType_ = other.controllerType_;
    onlyForThisSerial_ = other.onlyForThisSerial_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_Request Clone() {
    return new CAccountHardware_SteamControllerGetConfig_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "controller_code" field.</summary>
  public const int ControllerCodeFieldNumber = 2;
  private readonly static string ControllerCodeDefaultValue = "";

  private string controllerCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ControllerCode {
    get { return controllerCode_ ?? ControllerCodeDefaultValue; }
    set {
      controllerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "controller_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerCode {
    get { return controllerCode_ != null; }
  }
  /// <summary>Clears the value of the "controller_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerCode() {
    controllerCode_ = null;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 3;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appidorname" field.</summary>
  public const int AppidornameFieldNumber = 4;
  private readonly static string AppidornameDefaultValue = "";

  private string appidorname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Appidorname {
    get { return appidorname_ ?? AppidornameDefaultValue; }
    set {
      appidorname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "appidorname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppidorname {
    get { return appidorname_ != null; }
  }
  /// <summary>Clears the value of the "appidorname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppidorname() {
    appidorname_ = null;
  }

  /// <summary>Field number for the "controller_type" field.</summary>
  public const int ControllerTypeFieldNumber = 5;
  private readonly static int ControllerTypeDefaultValue = 2;

  private int controllerType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ControllerType {
    get { if ((_hasBits0 & 2) != 0) { return controllerType_; } else { return ControllerTypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      controllerType_ = value;
    }
  }
  /// <summary>Gets whether the "controller_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "controller_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerType() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "only_for_this_serial" field.</summary>
  public const int OnlyForThisSerialFieldNumber = 6;
  private readonly static bool OnlyForThisSerialDefaultValue = false;

  private bool onlyForThisSerial_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool OnlyForThisSerial {
    get { if ((_hasBits0 & 4) != 0) { return onlyForThisSerial_; } else { return OnlyForThisSerialDefaultValue; } }
    set {
      _hasBits0 |= 4;
      onlyForThisSerial_ = value;
    }
  }
  /// <summary>Gets whether the "only_for_this_serial" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOnlyForThisSerial {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "only_for_this_serial" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOnlyForThisSerial() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SteamControllerGetConfig_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SteamControllerGetConfig_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ControllerCode != other.ControllerCode) return false;
    if (Accountid != other.Accountid) return false;
    if (Appidorname != other.Appidorname) return false;
    if (ControllerType != other.ControllerType) return false;
    if (OnlyForThisSerial != other.OnlyForThisSerial) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasControllerCode) hash ^= ControllerCode.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasAppidorname) hash ^= Appidorname.GetHashCode();
    if (HasControllerType) hash ^= ControllerType.GetHashCode();
    if (HasOnlyForThisSerial) hash ^= OnlyForThisSerial.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (HasAppidorname) {
      output.WriteRawTag(34);
      output.WriteString(Appidorname);
    }
    if (HasControllerType) {
      output.WriteRawTag(40);
      output.WriteInt32(ControllerType);
    }
    if (HasOnlyForThisSerial) {
      output.WriteRawTag(48);
      output.WriteBool(OnlyForThisSerial);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (HasAppidorname) {
      output.WriteRawTag(34);
      output.WriteString(Appidorname);
    }
    if (HasControllerType) {
      output.WriteRawTag(40);
      output.WriteInt32(ControllerType);
    }
    if (HasOnlyForThisSerial) {
      output.WriteRawTag(48);
      output.WriteBool(OnlyForThisSerial);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasControllerCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerCode);
    }
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasAppidorname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Appidorname);
    }
    if (HasControllerType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControllerType);
    }
    if (HasOnlyForThisSerial) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SteamControllerGetConfig_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasControllerCode) {
      ControllerCode = other.ControllerCode;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasAppidorname) {
      Appidorname = other.Appidorname;
    }
    if (other.HasControllerType) {
      ControllerType = other.ControllerType;
    }
    if (other.HasOnlyForThisSerial) {
      OnlyForThisSerial = other.OnlyForThisSerial;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 34: {
          Appidorname = input.ReadString();
          break;
        }
        case 40: {
          ControllerType = input.ReadInt32();
          break;
        }
        case 48: {
          OnlyForThisSerial = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 34: {
          Appidorname = input.ReadString();
          break;
        }
        case 40: {
          ControllerType = input.ReadInt32();
          break;
        }
        case 48: {
          OnlyForThisSerial = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SteamControllerGetConfig_ControllerConfig : pb::IMessage<CAccountHardware_SteamControllerGetConfig_ControllerConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SteamControllerGetConfig_ControllerConfig> _parser = new pb::MessageParser<CAccountHardware_SteamControllerGetConfig_ControllerConfig>(() => new CAccountHardware_SteamControllerGetConfig_ControllerConfig());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SteamControllerGetConfig_ControllerConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_ControllerConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_ControllerConfig(CAccountHardware_SteamControllerGetConfig_ControllerConfig other) : this() {
    _hasBits0 = other._hasBits0;
    appidorname_ = other.appidorname_;
    publishedfileid_ = other.publishedfileid_;
    templatename_ = other.templatename_;
    serialNumber_ = other.serialNumber_;
    autosave_ = other.autosave_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_ControllerConfig Clone() {
    return new CAccountHardware_SteamControllerGetConfig_ControllerConfig(this);
  }

  /// <summary>Field number for the "appidorname" field.</summary>
  public const int AppidornameFieldNumber = 1;
  private readonly static string AppidornameDefaultValue = "";

  private string appidorname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Appidorname {
    get { return appidorname_ ?? AppidornameDefaultValue; }
    set {
      appidorname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "appidorname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppidorname {
    get { return appidorname_ != null; }
  }
  /// <summary>Clears the value of the "appidorname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppidorname() {
    appidorname_ = null;
  }

  /// <summary>Field number for the "publishedfileid" field.</summary>
  public const int PublishedfileidFieldNumber = 2;
  private readonly static ulong PublishedfileidDefaultValue = 0UL;

  private ulong publishedfileid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Publishedfileid {
    get { if ((_hasBits0 & 1) != 0) { return publishedfileid_; } else { return PublishedfileidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      publishedfileid_ = value;
    }
  }
  /// <summary>Gets whether the "publishedfileid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPublishedfileid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "publishedfileid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPublishedfileid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "templatename" field.</summary>
  public const int TemplatenameFieldNumber = 3;
  private readonly static string TemplatenameDefaultValue = "";

  private string templatename_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Templatename {
    get { return templatename_ ?? TemplatenameDefaultValue; }
    set {
      templatename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "templatename" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTemplatename {
    get { return templatename_ != null; }
  }
  /// <summary>Clears the value of the "templatename" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTemplatename() {
    templatename_ = null;
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 4;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "autosave" field.</summary>
  public const int AutosaveFieldNumber = 5;
  private readonly static bool AutosaveDefaultValue = false;

  private bool autosave_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Autosave {
    get { if ((_hasBits0 & 2) != 0) { return autosave_; } else { return AutosaveDefaultValue; } }
    set {
      _hasBits0 |= 2;
      autosave_ = value;
    }
  }
  /// <summary>Gets whether the "autosave" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAutosave {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "autosave" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAutosave() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SteamControllerGetConfig_ControllerConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SteamControllerGetConfig_ControllerConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appidorname != other.Appidorname) return false;
    if (Publishedfileid != other.Publishedfileid) return false;
    if (Templatename != other.Templatename) return false;
    if (SerialNumber != other.SerialNumber) return false;
    if (Autosave != other.Autosave) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppidorname) hash ^= Appidorname.GetHashCode();
    if (HasPublishedfileid) hash ^= Publishedfileid.GetHashCode();
    if (HasTemplatename) hash ^= Templatename.GetHashCode();
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasAutosave) hash ^= Autosave.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppidorname) {
      output.WriteRawTag(10);
      output.WriteString(Appidorname);
    }
    if (HasPublishedfileid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Publishedfileid);
    }
    if (HasTemplatename) {
      output.WriteRawTag(26);
      output.WriteString(Templatename);
    }
    if (HasSerialNumber) {
      output.WriteRawTag(34);
      output.WriteString(SerialNumber);
    }
    if (HasAutosave) {
      output.WriteRawTag(40);
      output.WriteBool(Autosave);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppidorname) {
      output.WriteRawTag(10);
      output.WriteString(Appidorname);
    }
    if (HasPublishedfileid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Publishedfileid);
    }
    if (HasTemplatename) {
      output.WriteRawTag(26);
      output.WriteString(Templatename);
    }
    if (HasSerialNumber) {
      output.WriteRawTag(34);
      output.WriteString(SerialNumber);
    }
    if (HasAutosave) {
      output.WriteRawTag(40);
      output.WriteBool(Autosave);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppidorname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Appidorname);
    }
    if (HasPublishedfileid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Publishedfileid);
    }
    if (HasTemplatename) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Templatename);
    }
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasAutosave) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SteamControllerGetConfig_ControllerConfig other) {
    if (other == null) {
      return;
    }
    if (other.HasAppidorname) {
      Appidorname = other.Appidorname;
    }
    if (other.HasPublishedfileid) {
      Publishedfileid = other.Publishedfileid;
    }
    if (other.HasTemplatename) {
      Templatename = other.Templatename;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasAutosave) {
      Autosave = other.Autosave;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Appidorname = input.ReadString();
          break;
        }
        case 16: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
        case 26: {
          Templatename = input.ReadString();
          break;
        }
        case 34: {
          SerialNumber = input.ReadString();
          break;
        }
        case 40: {
          Autosave = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Appidorname = input.ReadString();
          break;
        }
        case 16: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
        case 26: {
          Templatename = input.ReadString();
          break;
        }
        case 34: {
          SerialNumber = input.ReadString();
          break;
        }
        case 40: {
          Autosave = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SteamControllerGetConfig_Response : pb::IMessage<CAccountHardware_SteamControllerGetConfig_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SteamControllerGetConfig_Response> _parser = new pb::MessageParser<CAccountHardware_SteamControllerGetConfig_Response>(() => new CAccountHardware_SteamControllerGetConfig_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SteamControllerGetConfig_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_Response(CAccountHardware_SteamControllerGetConfig_Response other) : this() {
    configurations_ = other.configurations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SteamControllerGetConfig_Response Clone() {
    return new CAccountHardware_SteamControllerGetConfig_Response(this);
  }

  /// <summary>Field number for the "configurations" field.</summary>
  public const int ConfigurationsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CAccountHardware_SteamControllerGetConfig_ControllerConfig> _repeated_configurations_codec
      = pb::FieldCodec.ForMessage(10, global::CAccountHardware_SteamControllerGetConfig_ControllerConfig.Parser);
  private readonly pbc::RepeatedField<global::CAccountHardware_SteamControllerGetConfig_ControllerConfig> configurations_ = new pbc::RepeatedField<global::CAccountHardware_SteamControllerGetConfig_ControllerConfig>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CAccountHardware_SteamControllerGetConfig_ControllerConfig> Configurations {
    get { return configurations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SteamControllerGetConfig_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SteamControllerGetConfig_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!configurations_.Equals(other.configurations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= configurations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    configurations_.WriteTo(output, _repeated_configurations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    configurations_.WriteTo(ref output, _repeated_configurations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += configurations_.CalculateSize(_repeated_configurations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SteamControllerGetConfig_Response other) {
    if (other == null) {
      return;
    }
    configurations_.Add(other.configurations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          configurations_.AddEntriesFrom(input, _repeated_configurations_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          configurations_.AddEntriesFrom(ref input, _repeated_configurations_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_DeRegisterSteamController_Request : pb::IMessage<CAccountHardware_DeRegisterSteamController_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_DeRegisterSteamController_Request> _parser = new pb::MessageParser<CAccountHardware_DeRegisterSteamController_Request>(() => new CAccountHardware_DeRegisterSteamController_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_DeRegisterSteamController_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_DeRegisterSteamController_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_DeRegisterSteamController_Request(CAccountHardware_DeRegisterSteamController_Request other) : this() {
    _hasBits0 = other._hasBits0;
    serialNumber_ = other.serialNumber_;
    controllerCode_ = other.controllerCode_;
    accountid_ = other.accountid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_DeRegisterSteamController_Request Clone() {
    return new CAccountHardware_DeRegisterSteamController_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "controller_code" field.</summary>
  public const int ControllerCodeFieldNumber = 2;
  private readonly static string ControllerCodeDefaultValue = "";

  private string controllerCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ControllerCode {
    get { return controllerCode_ ?? ControllerCodeDefaultValue; }
    set {
      controllerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "controller_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerCode {
    get { return controllerCode_ != null; }
  }
  /// <summary>Clears the value of the "controller_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerCode() {
    controllerCode_ = null;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 3;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_DeRegisterSteamController_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_DeRegisterSteamController_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ControllerCode != other.ControllerCode) return false;
    if (Accountid != other.Accountid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasControllerCode) hash ^= ControllerCode.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasControllerCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerCode);
    }
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_DeRegisterSteamController_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasControllerCode) {
      ControllerCode = other.ControllerCode;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_DeRegisterSteamController_Response : pb::IMessage<CAccountHardware_DeRegisterSteamController_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_DeRegisterSteamController_Response> _parser = new pb::MessageParser<CAccountHardware_DeRegisterSteamController_Response>(() => new CAccountHardware_DeRegisterSteamController_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_DeRegisterSteamController_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_DeRegisterSteamController_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_DeRegisterSteamController_Response(CAccountHardware_DeRegisterSteamController_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_DeRegisterSteamController_Response Clone() {
    return new CAccountHardware_DeRegisterSteamController_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_DeRegisterSteamController_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_DeRegisterSteamController_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_DeRegisterSteamController_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SetPersonalizationFile_Request : pb::IMessage<CAccountHardware_SetPersonalizationFile_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SetPersonalizationFile_Request> _parser = new pb::MessageParser<CAccountHardware_SetPersonalizationFile_Request>(() => new CAccountHardware_SetPersonalizationFile_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SetPersonalizationFile_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SetPersonalizationFile_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SetPersonalizationFile_Request(CAccountHardware_SetPersonalizationFile_Request other) : this() {
    _hasBits0 = other._hasBits0;
    serialNumber_ = other.serialNumber_;
    publishedfileid_ = other.publishedfileid_;
    accountid_ = other.accountid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SetPersonalizationFile_Request Clone() {
    return new CAccountHardware_SetPersonalizationFile_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "publishedfileid" field.</summary>
  public const int PublishedfileidFieldNumber = 2;
  private readonly static ulong PublishedfileidDefaultValue = 0UL;

  private ulong publishedfileid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Publishedfileid {
    get { if ((_hasBits0 & 1) != 0) { return publishedfileid_; } else { return PublishedfileidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      publishedfileid_ = value;
    }
  }
  /// <summary>Gets whether the "publishedfileid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPublishedfileid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "publishedfileid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPublishedfileid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 3;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 2) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SetPersonalizationFile_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SetPersonalizationFile_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (Publishedfileid != other.Publishedfileid) return false;
    if (Accountid != other.Accountid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasPublishedfileid) hash ^= Publishedfileid.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasPublishedfileid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Publishedfileid);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasPublishedfileid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Publishedfileid);
    }
    if (HasAccountid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasPublishedfileid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Publishedfileid);
    }
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SetPersonalizationFile_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasPublishedfileid) {
      Publishedfileid = other.Publishedfileid;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 16: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 16: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
        case 24: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_SetPersonalizationFile_Response : pb::IMessage<CAccountHardware_SetPersonalizationFile_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_SetPersonalizationFile_Response> _parser = new pb::MessageParser<CAccountHardware_SetPersonalizationFile_Response>(() => new CAccountHardware_SetPersonalizationFile_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_SetPersonalizationFile_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SetPersonalizationFile_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SetPersonalizationFile_Response(CAccountHardware_SetPersonalizationFile_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_SetPersonalizationFile_Response Clone() {
    return new CAccountHardware_SetPersonalizationFile_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_SetPersonalizationFile_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_SetPersonalizationFile_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_SetPersonalizationFile_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_GetPersonalizationFile_Request : pb::IMessage<CAccountHardware_GetPersonalizationFile_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_GetPersonalizationFile_Request> _parser = new pb::MessageParser<CAccountHardware_GetPersonalizationFile_Request>(() => new CAccountHardware_GetPersonalizationFile_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_GetPersonalizationFile_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetPersonalizationFile_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetPersonalizationFile_Request(CAccountHardware_GetPersonalizationFile_Request other) : this() {
    _hasBits0 = other._hasBits0;
    serialNumber_ = other.serialNumber_;
    accountid_ = other.accountid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetPersonalizationFile_Request Clone() {
    return new CAccountHardware_GetPersonalizationFile_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 2;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_GetPersonalizationFile_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_GetPersonalizationFile_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (Accountid != other.Accountid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasAccountid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasAccountid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Accountid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasAccountid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_GetPersonalizationFile_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 16: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 16: {
          Accountid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_GetPersonalizationFile_Response : pb::IMessage<CAccountHardware_GetPersonalizationFile_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_GetPersonalizationFile_Response> _parser = new pb::MessageParser<CAccountHardware_GetPersonalizationFile_Response>(() => new CAccountHardware_GetPersonalizationFile_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_GetPersonalizationFile_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetPersonalizationFile_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetPersonalizationFile_Response(CAccountHardware_GetPersonalizationFile_Response other) : this() {
    _hasBits0 = other._hasBits0;
    publishedfileid_ = other.publishedfileid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetPersonalizationFile_Response Clone() {
    return new CAccountHardware_GetPersonalizationFile_Response(this);
  }

  /// <summary>Field number for the "publishedfileid" field.</summary>
  public const int PublishedfileidFieldNumber = 1;
  private readonly static ulong PublishedfileidDefaultValue = 0UL;

  private ulong publishedfileid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Publishedfileid {
    get { if ((_hasBits0 & 1) != 0) { return publishedfileid_; } else { return PublishedfileidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      publishedfileid_ = value;
    }
  }
  /// <summary>Gets whether the "publishedfileid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPublishedfileid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "publishedfileid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPublishedfileid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_GetPersonalizationFile_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_GetPersonalizationFile_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Publishedfileid != other.Publishedfileid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPublishedfileid) hash ^= Publishedfileid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPublishedfileid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Publishedfileid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPublishedfileid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Publishedfileid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPublishedfileid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Publishedfileid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_GetPersonalizationFile_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasPublishedfileid) {
      Publishedfileid = other.Publishedfileid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Publishedfileid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_VRCompatibilityCheck_Request : pb::IMessage<CAccountHardware_VRCompatibilityCheck_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_VRCompatibilityCheck_Request> _parser = new pb::MessageParser<CAccountHardware_VRCompatibilityCheck_Request>(() => new CAccountHardware_VRCompatibilityCheck_Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_VRCompatibilityCheck_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_VRCompatibilityCheck_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_VRCompatibilityCheck_Request(CAccountHardware_VRCompatibilityCheck_Request other) : this() {
    productName_ = other.productName_;
    values_ = other.values_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_VRCompatibilityCheck_Request Clone() {
    return new CAccountHardware_VRCompatibilityCheck_Request(this);
  }

  /// <summary>Field number for the "product_name" field.</summary>
  public const int ProductNameFieldNumber = 1;
  private readonly static string ProductNameDefaultValue = "";

  private string productName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ProductName {
    get { return productName_ ?? ProductNameDefaultValue; }
    set {
      productName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "product_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProductName {
    get { return productName_ != null; }
  }
  /// <summary>Clears the value of the "product_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProductName() {
    productName_ = null;
  }

  /// <summary>Field number for the "values" field.</summary>
  public const int ValuesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CAccountHardware_VRCompatibilityCheck_Request.Types.Pair> _repeated_values_codec
      = pb::FieldCodec.ForMessage(18, global::CAccountHardware_VRCompatibilityCheck_Request.Types.Pair.Parser);
  private readonly pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Request.Types.Pair> values_ = new pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Request.Types.Pair>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Request.Types.Pair> Values {
    get { return values_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_VRCompatibilityCheck_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_VRCompatibilityCheck_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProductName != other.ProductName) return false;
    if(!values_.Equals(other.values_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasProductName) hash ^= ProductName.GetHashCode();
    hash ^= values_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasProductName) {
      output.WriteRawTag(10);
      output.WriteString(ProductName);
    }
    values_.WriteTo(output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasProductName) {
      output.WriteRawTag(10);
      output.WriteString(ProductName);
    }
    values_.WriteTo(ref output, _repeated_values_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasProductName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductName);
    }
    size += values_.CalculateSize(_repeated_values_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_VRCompatibilityCheck_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasProductName) {
      ProductName = other.ProductName;
    }
    values_.Add(other.values_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ProductName = input.ReadString();
          break;
        }
        case 18: {
          values_.AddEntriesFrom(input, _repeated_values_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ProductName = input.ReadString();
          break;
        }
        case 18: {
          values_.AddEntriesFrom(ref input, _repeated_values_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CAccountHardware_VRCompatibilityCheck_Request message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Pair : pb::IMessage<Pair>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Pair> _parser = new pb::MessageParser<Pair>(() => new Pair());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Pair> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CAccountHardware_VRCompatibilityCheck_Request.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pair() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pair(Pair other) : this() {
        key_ = other.key_;
        value_ = other.value_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pair Clone() {
        return new Pair(this);
      }

      /// <summary>Field number for the "key" field.</summary>
      public const int KeyFieldNumber = 1;
      private readonly static string KeyDefaultValue = "";

      private string key_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Key {
        get { return key_ ?? KeyDefaultValue; }
        set {
          key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "key" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKey {
        get { return key_ != null; }
      }
      /// <summary>Clears the value of the "key" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKey() {
        key_ = null;
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 2;
      private readonly static string ValueDefaultValue = "";

      private string value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Value {
        get { return value_ ?? ValueDefaultValue; }
        set {
          value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValue {
        get { return value_ != null; }
      }
      /// <summary>Clears the value of the "value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValue() {
        value_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Pair);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Pair other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Key != other.Key) return false;
        if (Value != other.Value) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasKey) hash ^= Key.GetHashCode();
        if (HasValue) hash ^= Value.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasKey) {
          output.WriteRawTag(10);
          output.WriteString(Key);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasKey) {
          output.WriteRawTag(10);
          output.WriteString(Key);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasKey) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
        }
        if (HasValue) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Pair other) {
        if (other == null) {
          return;
        }
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Key = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Key = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CAccountHardware_VRCompatibilityCheck_Response : pb::IMessage<CAccountHardware_VRCompatibilityCheck_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_VRCompatibilityCheck_Response> _parser = new pb::MessageParser<CAccountHardware_VRCompatibilityCheck_Response>(() => new CAccountHardware_VRCompatibilityCheck_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_VRCompatibilityCheck_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_VRCompatibilityCheck_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_VRCompatibilityCheck_Response(CAccountHardware_VRCompatibilityCheck_Response other) : this() {
    values_ = other.values_.Clone();
    components_ = other.components_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_VRCompatibilityCheck_Response Clone() {
    return new CAccountHardware_VRCompatibilityCheck_Response(this);
  }

  /// <summary>Field number for the "values" field.</summary>
  public const int ValuesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CAccountHardware_VRCompatibilityCheck_Response.Types.Pair> _repeated_values_codec
      = pb::FieldCodec.ForMessage(10, global::CAccountHardware_VRCompatibilityCheck_Response.Types.Pair.Parser);
  private readonly pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Response.Types.Pair> values_ = new pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Response.Types.Pair>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Response.Types.Pair> Values {
    get { return values_; }
  }

  /// <summary>Field number for the "components" field.</summary>
  public const int ComponentsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CAccountHardware_VRCompatibilityCheck_Response.Types.ComponentDisplay> _repeated_components_codec
      = pb::FieldCodec.ForMessage(18, global::CAccountHardware_VRCompatibilityCheck_Response.Types.ComponentDisplay.Parser);
  private readonly pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Response.Types.ComponentDisplay> components_ = new pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Response.Types.ComponentDisplay>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CAccountHardware_VRCompatibilityCheck_Response.Types.ComponentDisplay> Components {
    get { return components_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_VRCompatibilityCheck_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_VRCompatibilityCheck_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!values_.Equals(other.values_)) return false;
    if(!components_.Equals(other.components_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= values_.GetHashCode();
    hash ^= components_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    values_.WriteTo(output, _repeated_values_codec);
    components_.WriteTo(output, _repeated_components_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    values_.WriteTo(ref output, _repeated_values_codec);
    components_.WriteTo(ref output, _repeated_components_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += values_.CalculateSize(_repeated_values_codec);
    size += components_.CalculateSize(_repeated_components_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_VRCompatibilityCheck_Response other) {
    if (other == null) {
      return;
    }
    values_.Add(other.values_);
    components_.Add(other.components_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          values_.AddEntriesFrom(input, _repeated_values_codec);
          break;
        }
        case 18: {
          components_.AddEntriesFrom(input, _repeated_components_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          values_.AddEntriesFrom(ref input, _repeated_values_codec);
          break;
        }
        case 18: {
          components_.AddEntriesFrom(ref input, _repeated_components_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CAccountHardware_VRCompatibilityCheck_Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Pair : pb::IMessage<Pair>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Pair> _parser = new pb::MessageParser<Pair>(() => new Pair());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Pair> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CAccountHardware_VRCompatibilityCheck_Response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pair() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pair(Pair other) : this() {
        key_ = other.key_;
        value_ = other.value_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pair Clone() {
        return new Pair(this);
      }

      /// <summary>Field number for the "key" field.</summary>
      public const int KeyFieldNumber = 1;
      private readonly static string KeyDefaultValue = "";

      private string key_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Key {
        get { return key_ ?? KeyDefaultValue; }
        set {
          key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "key" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKey {
        get { return key_ != null; }
      }
      /// <summary>Clears the value of the "key" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKey() {
        key_ = null;
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 2;
      private readonly static string ValueDefaultValue = "";

      private string value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Value {
        get { return value_ ?? ValueDefaultValue; }
        set {
          value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValue {
        get { return value_ != null; }
      }
      /// <summary>Clears the value of the "value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValue() {
        value_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Pair);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Pair other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Key != other.Key) return false;
        if (Value != other.Value) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasKey) hash ^= Key.GetHashCode();
        if (HasValue) hash ^= Value.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasKey) {
          output.WriteRawTag(10);
          output.WriteString(Key);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasKey) {
          output.WriteRawTag(10);
          output.WriteString(Key);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasKey) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
        }
        if (HasValue) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Pair other) {
        if (other == null) {
          return;
        }
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Key = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Key = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ComponentDisplay : pb::IMessage<ComponentDisplay>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ComponentDisplay> _parser = new pb::MessageParser<ComponentDisplay>(() => new ComponentDisplay());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ComponentDisplay> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CAccountHardware_VRCompatibilityCheck_Response.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ComponentDisplay() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ComponentDisplay(ComponentDisplay other) : this() {
        name_ = other.name_;
        image_ = other.image_;
        value_ = other.value_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ComponentDisplay Clone() {
        return new ComponentDisplay(this);
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 1;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "image" field.</summary>
      public const int ImageFieldNumber = 2;
      private readonly static string ImageDefaultValue = "";

      private string image_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Image {
        get { return image_ ?? ImageDefaultValue; }
        set {
          image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "image" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasImage {
        get { return image_ != null; }
      }
      /// <summary>Clears the value of the "image" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearImage() {
        image_ = null;
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 3;
      private readonly static string ValueDefaultValue = "";

      private string value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Value {
        get { return value_ ?? ValueDefaultValue; }
        set {
          value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValue {
        get { return value_ != null; }
      }
      /// <summary>Clears the value of the "value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValue() {
        value_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ComponentDisplay);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ComponentDisplay other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Name != other.Name) return false;
        if (Image != other.Image) return false;
        if (Value != other.Value) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasName) hash ^= Name.GetHashCode();
        if (HasImage) hash ^= Image.GetHashCode();
        if (HasValue) hash ^= Value.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasImage) {
          output.WriteRawTag(18);
          output.WriteString(Image);
        }
        if (HasValue) {
          output.WriteRawTag(26);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasImage) {
          output.WriteRawTag(18);
          output.WriteString(Image);
        }
        if (HasValue) {
          output.WriteRawTag(26);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (HasImage) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
        }
        if (HasValue) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ComponentDisplay other) {
        if (other == null) {
          return;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasImage) {
          Image = other.Image;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Image = input.ReadString();
              break;
            }
            case 26: {
              Value = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Image = input.ReadString();
              break;
            }
            case 26: {
              Value = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CAccountHardware_RegisterValveIndexComponent_Request : pb::IMessage<CAccountHardware_RegisterValveIndexComponent_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_RegisterValveIndexComponent_Request> _parser = new pb::MessageParser<CAccountHardware_RegisterValveIndexComponent_Request>(() => new CAccountHardware_RegisterValveIndexComponent_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_RegisterValveIndexComponent_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterValveIndexComponent_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterValveIndexComponent_Request(CAccountHardware_RegisterValveIndexComponent_Request other) : this() {
    _hasBits0 = other._hasBits0;
    serialNumber_ = other.serialNumber_;
    manufacturerSerialNumber_ = other.manufacturerSerialNumber_;
    componentCode_ = other.componentCode_;
    componentType_ = other.componentType_;
    estimatedTimeRegistered_ = other.estimatedTimeRegistered_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterValveIndexComponent_Request Clone() {
    return new CAccountHardware_RegisterValveIndexComponent_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "manufacturer_serial_number" field.</summary>
  public const int ManufacturerSerialNumberFieldNumber = 2;
  private readonly static string ManufacturerSerialNumberDefaultValue = "";

  private string manufacturerSerialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ManufacturerSerialNumber {
    get { return manufacturerSerialNumber_ ?? ManufacturerSerialNumberDefaultValue; }
    set {
      manufacturerSerialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "manufacturer_serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManufacturerSerialNumber {
    get { return manufacturerSerialNumber_ != null; }
  }
  /// <summary>Clears the value of the "manufacturer_serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManufacturerSerialNumber() {
    manufacturerSerialNumber_ = null;
  }

  /// <summary>Field number for the "component_code" field.</summary>
  public const int ComponentCodeFieldNumber = 3;
  private readonly static string ComponentCodeDefaultValue = "";

  private string componentCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ComponentCode {
    get { return componentCode_ ?? ComponentCodeDefaultValue; }
    set {
      componentCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "component_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasComponentCode {
    get { return componentCode_ != null; }
  }
  /// <summary>Clears the value of the "component_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearComponentCode() {
    componentCode_ = null;
  }

  /// <summary>Field number for the "component_type" field.</summary>
  public const int ComponentTypeFieldNumber = 4;
  private readonly static global::EValveIndexComponent ComponentTypeDefaultValue = global::EValveIndexComponent.KEvalveIndexComponentUnknown;

  private global::EValveIndexComponent componentType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EValveIndexComponent ComponentType {
    get { if ((_hasBits0 & 1) != 0) { return componentType_; } else { return ComponentTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      componentType_ = value;
    }
  }
  /// <summary>Gets whether the "component_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasComponentType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "component_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearComponentType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "estimated_time_registered" field.</summary>
  public const int EstimatedTimeRegisteredFieldNumber = 5;
  private readonly static int EstimatedTimeRegisteredDefaultValue = 0;

  private int estimatedTimeRegistered_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EstimatedTimeRegistered {
    get { if ((_hasBits0 & 2) != 0) { return estimatedTimeRegistered_; } else { return EstimatedTimeRegisteredDefaultValue; } }
    set {
      _hasBits0 |= 2;
      estimatedTimeRegistered_ = value;
    }
  }
  /// <summary>Gets whether the "estimated_time_registered" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEstimatedTimeRegistered {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "estimated_time_registered" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEstimatedTimeRegistered() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_RegisterValveIndexComponent_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_RegisterValveIndexComponent_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ManufacturerSerialNumber != other.ManufacturerSerialNumber) return false;
    if (ComponentCode != other.ComponentCode) return false;
    if (ComponentType != other.ComponentType) return false;
    if (EstimatedTimeRegistered != other.EstimatedTimeRegistered) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasManufacturerSerialNumber) hash ^= ManufacturerSerialNumber.GetHashCode();
    if (HasComponentCode) hash ^= ComponentCode.GetHashCode();
    if (HasComponentType) hash ^= ComponentType.GetHashCode();
    if (HasEstimatedTimeRegistered) hash ^= EstimatedTimeRegistered.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasManufacturerSerialNumber) {
      output.WriteRawTag(18);
      output.WriteString(ManufacturerSerialNumber);
    }
    if (HasComponentCode) {
      output.WriteRawTag(26);
      output.WriteString(ComponentCode);
    }
    if (HasComponentType) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ComponentType);
    }
    if (HasEstimatedTimeRegistered) {
      output.WriteRawTag(40);
      output.WriteInt32(EstimatedTimeRegistered);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasManufacturerSerialNumber) {
      output.WriteRawTag(18);
      output.WriteString(ManufacturerSerialNumber);
    }
    if (HasComponentCode) {
      output.WriteRawTag(26);
      output.WriteString(ComponentCode);
    }
    if (HasComponentType) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ComponentType);
    }
    if (HasEstimatedTimeRegistered) {
      output.WriteRawTag(40);
      output.WriteInt32(EstimatedTimeRegistered);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasManufacturerSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ManufacturerSerialNumber);
    }
    if (HasComponentCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentCode);
    }
    if (HasComponentType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ComponentType);
    }
    if (HasEstimatedTimeRegistered) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EstimatedTimeRegistered);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_RegisterValveIndexComponent_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasManufacturerSerialNumber) {
      ManufacturerSerialNumber = other.ManufacturerSerialNumber;
    }
    if (other.HasComponentCode) {
      ComponentCode = other.ComponentCode;
    }
    if (other.HasComponentType) {
      ComponentType = other.ComponentType;
    }
    if (other.HasEstimatedTimeRegistered) {
      EstimatedTimeRegistered = other.EstimatedTimeRegistered;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ManufacturerSerialNumber = input.ReadString();
          break;
        }
        case 26: {
          ComponentCode = input.ReadString();
          break;
        }
        case 32: {
          ComponentType = (global::EValveIndexComponent) input.ReadEnum();
          break;
        }
        case 40: {
          EstimatedTimeRegistered = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ManufacturerSerialNumber = input.ReadString();
          break;
        }
        case 26: {
          ComponentCode = input.ReadString();
          break;
        }
        case 32: {
          ComponentType = (global::EValveIndexComponent) input.ReadEnum();
          break;
        }
        case 40: {
          EstimatedTimeRegistered = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_RegisterValveIndexComponent_Response : pb::IMessage<CAccountHardware_RegisterValveIndexComponent_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_RegisterValveIndexComponent_Response> _parser = new pb::MessageParser<CAccountHardware_RegisterValveIndexComponent_Response>(() => new CAccountHardware_RegisterValveIndexComponent_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_RegisterValveIndexComponent_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterValveIndexComponent_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterValveIndexComponent_Response(CAccountHardware_RegisterValveIndexComponent_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_RegisterValveIndexComponent_Response Clone() {
    return new CAccountHardware_RegisterValveIndexComponent_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_RegisterValveIndexComponent_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_RegisterValveIndexComponent_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_RegisterValveIndexComponent_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_GetSteamDeckComponents_Request : pb::IMessage<CAccountHardware_GetSteamDeckComponents_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_GetSteamDeckComponents_Request> _parser = new pb::MessageParser<CAccountHardware_GetSteamDeckComponents_Request>(() => new CAccountHardware_GetSteamDeckComponents_Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_GetSteamDeckComponents_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetSteamDeckComponents_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetSteamDeckComponents_Request(CAccountHardware_GetSteamDeckComponents_Request other) : this() {
    serialNumber_ = other.serialNumber_;
    controllerCode_ = other.controllerCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetSteamDeckComponents_Request Clone() {
    return new CAccountHardware_GetSteamDeckComponents_Request(this);
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 1;
  private readonly static string SerialNumberDefaultValue = "";

  private string serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SerialNumber {
    get { return serialNumber_ ?? SerialNumberDefaultValue; }
    set {
      serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return serialNumber_ != null; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    serialNumber_ = null;
  }

  /// <summary>Field number for the "controller_code" field.</summary>
  public const int ControllerCodeFieldNumber = 2;
  private readonly static string ControllerCodeDefaultValue = "";

  private string controllerCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ControllerCode {
    get { return controllerCode_ ?? ControllerCodeDefaultValue; }
    set {
      controllerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "controller_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasControllerCode {
    get { return controllerCode_ != null; }
  }
  /// <summary>Clears the value of the "controller_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearControllerCode() {
    controllerCode_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_GetSteamDeckComponents_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_GetSteamDeckComponents_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerialNumber != other.SerialNumber) return false;
    if (ControllerCode != other.ControllerCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasControllerCode) hash ^= ControllerCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerialNumber) {
      output.WriteRawTag(10);
      output.WriteString(SerialNumber);
    }
    if (HasControllerCode) {
      output.WriteRawTag(18);
      output.WriteString(ControllerCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
    }
    if (HasControllerCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ControllerCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_GetSteamDeckComponents_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasControllerCode) {
      ControllerCode = other.ControllerCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SerialNumber = input.ReadString();
          break;
        }
        case 18: {
          ControllerCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CAccountHardware_GetSteamDeckComponents_Response : pb::IMessage<CAccountHardware_GetSteamDeckComponents_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CAccountHardware_GetSteamDeckComponents_Response> _parser = new pb::MessageParser<CAccountHardware_GetSteamDeckComponents_Response>(() => new CAccountHardware_GetSteamDeckComponents_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CAccountHardware_GetSteamDeckComponents_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesAccounthardwareSteamclientReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetSteamDeckComponents_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetSteamDeckComponents_Response(CAccountHardware_GetSteamDeckComponents_Response other) : this() {
    jsonComponents_ = other.jsonComponents_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CAccountHardware_GetSteamDeckComponents_Response Clone() {
    return new CAccountHardware_GetSteamDeckComponents_Response(this);
  }

  /// <summary>Field number for the "json_components" field.</summary>
  public const int JsonComponentsFieldNumber = 1;
  private readonly static string JsonComponentsDefaultValue = "";

  private string jsonComponents_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string JsonComponents {
    get { return jsonComponents_ ?? JsonComponentsDefaultValue; }
    set {
      jsonComponents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "json_components" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJsonComponents {
    get { return jsonComponents_ != null; }
  }
  /// <summary>Clears the value of the "json_components" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJsonComponents() {
    jsonComponents_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CAccountHardware_GetSteamDeckComponents_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CAccountHardware_GetSteamDeckComponents_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (JsonComponents != other.JsonComponents) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasJsonComponents) hash ^= JsonComponents.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasJsonComponents) {
      output.WriteRawTag(10);
      output.WriteString(JsonComponents);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasJsonComponents) {
      output.WriteRawTag(10);
      output.WriteString(JsonComponents);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasJsonComponents) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonComponents);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CAccountHardware_GetSteamDeckComponents_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasJsonComponents) {
      JsonComponents = other.JsonComponents;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          JsonComponents = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          JsonComponents = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

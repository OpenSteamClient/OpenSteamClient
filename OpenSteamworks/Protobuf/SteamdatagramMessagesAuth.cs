// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steamdatagram_messages_auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steamdatagram_messages_auth.proto</summary>
public static partial class SteamdatagramMessagesAuthReflection {

  #region Descriptor
  /// <summary>File descriptor for steamdatagram_messages_auth.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteamdatagramMessagesAuthReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiFzdGVhbWRhdGFncmFtX21lc3NhZ2VzX2F1dGgucHJvdG8aK3N0ZWFtbmV0",
          "d29ya2luZ3NvY2tldHNfbWVzc2FnZXNfY2VydHMucHJvdG8izwQKIENNc2dT",
          "dGVhbURhdGFncmFtUmVsYXlBdXRoVGlja2V0EhMKC3RpbWVfZXhwaXJ5GAEg",
          "ASgHEikKIWF1dGhvcml6ZWRfY2xpZW50X2lkZW50aXR5X3N0cmluZxgOIAEo",
          "CRIiChpnYW1lc2VydmVyX2lkZW50aXR5X3N0cmluZxgPIAEoCRIcChRhdXRo",
          "b3JpemVkX3B1YmxpY19pcBgDIAEoBxIaChJnYW1lc2VydmVyX2FkZHJlc3MY",
          "CyABKAwSDgoGYXBwX2lkGAcgASgNEhQKDHZpcnR1YWxfcG9ydBgKIAEoDRJC",
          "CgxleHRyYV9maWVsZHMYCCADKAsyLC5DTXNnU3RlYW1EYXRhZ3JhbVJlbGF5",
          "QXV0aFRpY2tldC5FeHRyYUZpZWxkEiIKGmxlZ2FjeV9hdXRob3JpemVkX3N0",
          "ZWFtX2lkGAIgASgGEiIKGmxlZ2FjeV9nYW1lc2VydmVyX3N0ZWFtX2lkGAQg",
          "ASgGEiAKGGxlZ2FjeV9nYW1lc2VydmVyX3BvcF9pZBgJIAEoBxIwCihsZWdh",
          "Y3lfYXV0aG9yaXplZF9jbGllbnRfaWRlbnRpdHlfYmluYXJ5GAwgASgMEikK",
          "IWxlZ2FjeV9nYW1lc2VydmVyX2lkZW50aXR5X2JpbmFyeRgNIAEoDBpcCgpF",
          "eHRyYUZpZWxkEgwKBG5hbWUYASABKAkSFAoMc3RyaW5nX3ZhbHVlGAIgASgJ",
          "EhMKC2ludDY0X3ZhbHVlGAMgASgSEhUKDWZpeGVkNjRfdmFsdWUYBSABKAYi",
          "rAEKJkNNc2dTdGVhbURhdGFncmFtU2lnbmVkUmVsYXlBdXRoVGlja2V0EhsK",
          "E3Jlc2VydmVkX2RvX25vdF91c2UYASABKAYSDgoGdGlja2V0GAMgASgMEhEK",
          "CXNpZ25hdHVyZRgEIAEoDBIOCgZrZXlfaWQYAiABKAYSMgoFY2VydHMYBSAD",
          "KAsyIy5DTXNnU3RlYW1EYXRhZ3JhbUNlcnRpZmljYXRlU2lnbmVkImQKKENN",
          "c2dTdGVhbURhdGFncmFtQ2FjaGVkQ3JlZGVudGlhbHNGb3JBcHASEwoLcHJp",
          "dmF0ZV9rZXkYASABKAwSDAoEY2VydBgCIAEoDBIVCg1yZWxheV90aWNrZXRz",
          "GAMgAygMIscBCitDTXNnU3RlYW1EYXRhZ3JhbUdhbWVDb29yZGluYXRvclNl",
          "cnZlckxvZ2luEhYKDnRpbWVfZ2VuZXJhdGVkGAEgASgNEg0KBWFwcGlkGAIg",
          "ASgNEg8KB3JvdXRpbmcYAyABKAwSDwoHYXBwZGF0YRgEIAEoDBIeChZsZWdh",
          "Y3lfaWRlbnRpdHlfYmluYXJ5GAUgASgMEhcKD2lkZW50aXR5X3N0cmluZxgG",
          "IAEoCRIWCg5kdW1teV9zdGVhbV9pZBhjIAEoBiKIAQoxQ01zZ1N0ZWFtRGF0",
          "YWdyYW1TaWduZWRHYW1lQ29vcmRpbmF0b3JTZXJ2ZXJMb2dpbhIxCgRjZXJ0",
          "GAEgASgLMiMuQ01zZ1N0ZWFtRGF0YWdyYW1DZXJ0aWZpY2F0ZVNpZ25lZBIN",
          "CgVsb2dpbhgCIAEoDBIRCglzaWduYXR1cmUYAyABKAwiiwEKLUNNc2dTdGVh",
          "bURhdGFncmFtSG9zdGVkU2VydmVyQWRkcmVzc1BsYWludGV4dBIMCgRpcHY0",
          "GAEgASgHEgwKBGlwdjYYAiABKAwSDAoEcG9ydBgDIAEoDRIWCg5yb3V0aW5n",
          "X3NlY3JldBgEIAEoBhIYChBwcm90b2NvbF92ZXJzaW9uGAUgASgNQgVIAYAB",
          "AA=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteamnetworkingsocketsMessagesCertsReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramRelayAuthTicket), global::CMsgSteamDatagramRelayAuthTicket.Parser, new[]{ "TimeExpiry", "AuthorizedClientIdentityString", "GameserverIdentityString", "AuthorizedPublicIp", "GameserverAddress", "AppId", "VirtualPort", "ExtraFields", "LegacyAuthorizedSteamId", "LegacyGameserverSteamId", "LegacyGameserverPopId", "LegacyAuthorizedClientIdentityBinary", "LegacyGameserverIdentityBinary" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramRelayAuthTicket.Types.ExtraField), global::CMsgSteamDatagramRelayAuthTicket.Types.ExtraField.Parser, new[]{ "Name", "StringValue", "Int64Value", "Fixed64Value" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramSignedRelayAuthTicket), global::CMsgSteamDatagramSignedRelayAuthTicket.Parser, new[]{ "ReservedDoNotUse", "Ticket", "Signature", "KeyId", "Certs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramCachedCredentialsForApp), global::CMsgSteamDatagramCachedCredentialsForApp.Parser, new[]{ "PrivateKey", "Cert", "RelayTickets" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramGameCoordinatorServerLogin), global::CMsgSteamDatagramGameCoordinatorServerLogin.Parser, new[]{ "TimeGenerated", "Appid", "Routing", "Appdata", "LegacyIdentityBinary", "IdentityString", "DummySteamId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramSignedGameCoordinatorServerLogin), global::CMsgSteamDatagramSignedGameCoordinatorServerLogin.Parser, new[]{ "Cert", "Login", "Signature" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramHostedServerAddressPlaintext), global::CMsgSteamDatagramHostedServerAddressPlaintext.Parser, new[]{ "Ipv4", "Ipv6", "Port", "RoutingSecret", "ProtocolVersion" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CMsgSteamDatagramRelayAuthTicket : pb::IMessage<CMsgSteamDatagramRelayAuthTicket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramRelayAuthTicket> _parser = new pb::MessageParser<CMsgSteamDatagramRelayAuthTicket>(() => new CMsgSteamDatagramRelayAuthTicket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramRelayAuthTicket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamdatagramMessagesAuthReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramRelayAuthTicket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramRelayAuthTicket(CMsgSteamDatagramRelayAuthTicket other) : this() {
    _hasBits0 = other._hasBits0;
    timeExpiry_ = other.timeExpiry_;
    authorizedClientIdentityString_ = other.authorizedClientIdentityString_;
    gameserverIdentityString_ = other.gameserverIdentityString_;
    authorizedPublicIp_ = other.authorizedPublicIp_;
    gameserverAddress_ = other.gameserverAddress_;
    appId_ = other.appId_;
    virtualPort_ = other.virtualPort_;
    extraFields_ = other.extraFields_.Clone();
    legacyAuthorizedSteamId_ = other.legacyAuthorizedSteamId_;
    legacyGameserverSteamId_ = other.legacyGameserverSteamId_;
    legacyGameserverPopId_ = other.legacyGameserverPopId_;
    legacyAuthorizedClientIdentityBinary_ = other.legacyAuthorizedClientIdentityBinary_;
    legacyGameserverIdentityBinary_ = other.legacyGameserverIdentityBinary_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramRelayAuthTicket Clone() {
    return new CMsgSteamDatagramRelayAuthTicket(this);
  }

  /// <summary>Field number for the "time_expiry" field.</summary>
  public const int TimeExpiryFieldNumber = 1;
  private readonly static uint TimeExpiryDefaultValue = 0;

  private uint timeExpiry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeExpiry {
    get { if ((_hasBits0 & 1) != 0) { return timeExpiry_; } else { return TimeExpiryDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timeExpiry_ = value;
    }
  }
  /// <summary>Gets whether the "time_expiry" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeExpiry {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "time_expiry" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeExpiry() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "authorized_client_identity_string" field.</summary>
  public const int AuthorizedClientIdentityStringFieldNumber = 14;
  private readonly static string AuthorizedClientIdentityStringDefaultValue = "";

  private string authorizedClientIdentityString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AuthorizedClientIdentityString {
    get { return authorizedClientIdentityString_ ?? AuthorizedClientIdentityStringDefaultValue; }
    set {
      authorizedClientIdentityString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "authorized_client_identity_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthorizedClientIdentityString {
    get { return authorizedClientIdentityString_ != null; }
  }
  /// <summary>Clears the value of the "authorized_client_identity_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthorizedClientIdentityString() {
    authorizedClientIdentityString_ = null;
  }

  /// <summary>Field number for the "gameserver_identity_string" field.</summary>
  public const int GameserverIdentityStringFieldNumber = 15;
  private readonly static string GameserverIdentityStringDefaultValue = "";

  private string gameserverIdentityString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameserverIdentityString {
    get { return gameserverIdentityString_ ?? GameserverIdentityStringDefaultValue; }
    set {
      gameserverIdentityString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "gameserver_identity_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameserverIdentityString {
    get { return gameserverIdentityString_ != null; }
  }
  /// <summary>Clears the value of the "gameserver_identity_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameserverIdentityString() {
    gameserverIdentityString_ = null;
  }

  /// <summary>Field number for the "authorized_public_ip" field.</summary>
  public const int AuthorizedPublicIpFieldNumber = 3;
  private readonly static uint AuthorizedPublicIpDefaultValue = 0;

  private uint authorizedPublicIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AuthorizedPublicIp {
    get { if ((_hasBits0 & 4) != 0) { return authorizedPublicIp_; } else { return AuthorizedPublicIpDefaultValue; } }
    set {
      _hasBits0 |= 4;
      authorizedPublicIp_ = value;
    }
  }
  /// <summary>Gets whether the "authorized_public_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthorizedPublicIp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "authorized_public_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthorizedPublicIp() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "gameserver_address" field.</summary>
  public const int GameserverAddressFieldNumber = 11;
  private readonly static pb::ByteString GameserverAddressDefaultValue = pb::ByteString.Empty;

  private pb::ByteString gameserverAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString GameserverAddress {
    get { return gameserverAddress_ ?? GameserverAddressDefaultValue; }
    set {
      gameserverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "gameserver_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameserverAddress {
    get { return gameserverAddress_ != null; }
  }
  /// <summary>Clears the value of the "gameserver_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameserverAddress() {
    gameserverAddress_ = null;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 7;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 16) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 16;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "virtual_port" field.</summary>
  public const int VirtualPortFieldNumber = 10;
  private readonly static uint VirtualPortDefaultValue = 0;

  private uint virtualPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint VirtualPort {
    get { if ((_hasBits0 & 64) != 0) { return virtualPort_; } else { return VirtualPortDefaultValue; } }
    set {
      _hasBits0 |= 64;
      virtualPort_ = value;
    }
  }
  /// <summary>Gets whether the "virtual_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVirtualPort {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "virtual_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVirtualPort() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "extra_fields" field.</summary>
  public const int ExtraFieldsFieldNumber = 8;
  private static readonly pb::FieldCodec<global::CMsgSteamDatagramRelayAuthTicket.Types.ExtraField> _repeated_extraFields_codec
      = pb::FieldCodec.ForMessage(66, global::CMsgSteamDatagramRelayAuthTicket.Types.ExtraField.Parser);
  private readonly pbc::RepeatedField<global::CMsgSteamDatagramRelayAuthTicket.Types.ExtraField> extraFields_ = new pbc::RepeatedField<global::CMsgSteamDatagramRelayAuthTicket.Types.ExtraField>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgSteamDatagramRelayAuthTicket.Types.ExtraField> ExtraFields {
    get { return extraFields_; }
  }

  /// <summary>Field number for the "legacy_authorized_steam_id" field.</summary>
  public const int LegacyAuthorizedSteamIdFieldNumber = 2;
  private readonly static ulong LegacyAuthorizedSteamIdDefaultValue = 0UL;

  private ulong legacyAuthorizedSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LegacyAuthorizedSteamId {
    get { if ((_hasBits0 & 2) != 0) { return legacyAuthorizedSteamId_; } else { return LegacyAuthorizedSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      legacyAuthorizedSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_authorized_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyAuthorizedSteamId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "legacy_authorized_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyAuthorizedSteamId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "legacy_gameserver_steam_id" field.</summary>
  public const int LegacyGameserverSteamIdFieldNumber = 4;
  private readonly static ulong LegacyGameserverSteamIdDefaultValue = 0UL;

  private ulong legacyGameserverSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LegacyGameserverSteamId {
    get { if ((_hasBits0 & 8) != 0) { return legacyGameserverSteamId_; } else { return LegacyGameserverSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      legacyGameserverSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_gameserver_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyGameserverSteamId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "legacy_gameserver_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyGameserverSteamId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "legacy_gameserver_pop_id" field.</summary>
  public const int LegacyGameserverPopIdFieldNumber = 9;
  private readonly static uint LegacyGameserverPopIdDefaultValue = 0;

  private uint legacyGameserverPopId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LegacyGameserverPopId {
    get { if ((_hasBits0 & 32) != 0) { return legacyGameserverPopId_; } else { return LegacyGameserverPopIdDefaultValue; } }
    set {
      _hasBits0 |= 32;
      legacyGameserverPopId_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_gameserver_pop_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyGameserverPopId {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "legacy_gameserver_pop_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyGameserverPopId() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "legacy_authorized_client_identity_binary" field.</summary>
  public const int LegacyAuthorizedClientIdentityBinaryFieldNumber = 12;
  private readonly static pb::ByteString LegacyAuthorizedClientIdentityBinaryDefaultValue = pb::ByteString.Empty;

  private pb::ByteString legacyAuthorizedClientIdentityBinary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString LegacyAuthorizedClientIdentityBinary {
    get { return legacyAuthorizedClientIdentityBinary_ ?? LegacyAuthorizedClientIdentityBinaryDefaultValue; }
    set {
      legacyAuthorizedClientIdentityBinary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "legacy_authorized_client_identity_binary" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyAuthorizedClientIdentityBinary {
    get { return legacyAuthorizedClientIdentityBinary_ != null; }
  }
  /// <summary>Clears the value of the "legacy_authorized_client_identity_binary" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyAuthorizedClientIdentityBinary() {
    legacyAuthorizedClientIdentityBinary_ = null;
  }

  /// <summary>Field number for the "legacy_gameserver_identity_binary" field.</summary>
  public const int LegacyGameserverIdentityBinaryFieldNumber = 13;
  private readonly static pb::ByteString LegacyGameserverIdentityBinaryDefaultValue = pb::ByteString.Empty;

  private pb::ByteString legacyGameserverIdentityBinary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString LegacyGameserverIdentityBinary {
    get { return legacyGameserverIdentityBinary_ ?? LegacyGameserverIdentityBinaryDefaultValue; }
    set {
      legacyGameserverIdentityBinary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "legacy_gameserver_identity_binary" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyGameserverIdentityBinary {
    get { return legacyGameserverIdentityBinary_ != null; }
  }
  /// <summary>Clears the value of the "legacy_gameserver_identity_binary" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyGameserverIdentityBinary() {
    legacyGameserverIdentityBinary_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramRelayAuthTicket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramRelayAuthTicket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TimeExpiry != other.TimeExpiry) return false;
    if (AuthorizedClientIdentityString != other.AuthorizedClientIdentityString) return false;
    if (GameserverIdentityString != other.GameserverIdentityString) return false;
    if (AuthorizedPublicIp != other.AuthorizedPublicIp) return false;
    if (GameserverAddress != other.GameserverAddress) return false;
    if (AppId != other.AppId) return false;
    if (VirtualPort != other.VirtualPort) return false;
    if(!extraFields_.Equals(other.extraFields_)) return false;
    if (LegacyAuthorizedSteamId != other.LegacyAuthorizedSteamId) return false;
    if (LegacyGameserverSteamId != other.LegacyGameserverSteamId) return false;
    if (LegacyGameserverPopId != other.LegacyGameserverPopId) return false;
    if (LegacyAuthorizedClientIdentityBinary != other.LegacyAuthorizedClientIdentityBinary) return false;
    if (LegacyGameserverIdentityBinary != other.LegacyGameserverIdentityBinary) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimeExpiry) hash ^= TimeExpiry.GetHashCode();
    if (HasAuthorizedClientIdentityString) hash ^= AuthorizedClientIdentityString.GetHashCode();
    if (HasGameserverIdentityString) hash ^= GameserverIdentityString.GetHashCode();
    if (HasAuthorizedPublicIp) hash ^= AuthorizedPublicIp.GetHashCode();
    if (HasGameserverAddress) hash ^= GameserverAddress.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasVirtualPort) hash ^= VirtualPort.GetHashCode();
    hash ^= extraFields_.GetHashCode();
    if (HasLegacyAuthorizedSteamId) hash ^= LegacyAuthorizedSteamId.GetHashCode();
    if (HasLegacyGameserverSteamId) hash ^= LegacyGameserverSteamId.GetHashCode();
    if (HasLegacyGameserverPopId) hash ^= LegacyGameserverPopId.GetHashCode();
    if (HasLegacyAuthorizedClientIdentityBinary) hash ^= LegacyAuthorizedClientIdentityBinary.GetHashCode();
    if (HasLegacyGameserverIdentityBinary) hash ^= LegacyGameserverIdentityBinary.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimeExpiry) {
      output.WriteRawTag(13);
      output.WriteFixed32(TimeExpiry);
    }
    if (HasLegacyAuthorizedSteamId) {
      output.WriteRawTag(17);
      output.WriteFixed64(LegacyAuthorizedSteamId);
    }
    if (HasAuthorizedPublicIp) {
      output.WriteRawTag(29);
      output.WriteFixed32(AuthorizedPublicIp);
    }
    if (HasLegacyGameserverSteamId) {
      output.WriteRawTag(33);
      output.WriteFixed64(LegacyGameserverSteamId);
    }
    if (HasAppId) {
      output.WriteRawTag(56);
      output.WriteUInt32(AppId);
    }
    extraFields_.WriteTo(output, _repeated_extraFields_codec);
    if (HasLegacyGameserverPopId) {
      output.WriteRawTag(77);
      output.WriteFixed32(LegacyGameserverPopId);
    }
    if (HasVirtualPort) {
      output.WriteRawTag(80);
      output.WriteUInt32(VirtualPort);
    }
    if (HasGameserverAddress) {
      output.WriteRawTag(90);
      output.WriteBytes(GameserverAddress);
    }
    if (HasLegacyAuthorizedClientIdentityBinary) {
      output.WriteRawTag(98);
      output.WriteBytes(LegacyAuthorizedClientIdentityBinary);
    }
    if (HasLegacyGameserverIdentityBinary) {
      output.WriteRawTag(106);
      output.WriteBytes(LegacyGameserverIdentityBinary);
    }
    if (HasAuthorizedClientIdentityString) {
      output.WriteRawTag(114);
      output.WriteString(AuthorizedClientIdentityString);
    }
    if (HasGameserverIdentityString) {
      output.WriteRawTag(122);
      output.WriteString(GameserverIdentityString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimeExpiry) {
      output.WriteRawTag(13);
      output.WriteFixed32(TimeExpiry);
    }
    if (HasLegacyAuthorizedSteamId) {
      output.WriteRawTag(17);
      output.WriteFixed64(LegacyAuthorizedSteamId);
    }
    if (HasAuthorizedPublicIp) {
      output.WriteRawTag(29);
      output.WriteFixed32(AuthorizedPublicIp);
    }
    if (HasLegacyGameserverSteamId) {
      output.WriteRawTag(33);
      output.WriteFixed64(LegacyGameserverSteamId);
    }
    if (HasAppId) {
      output.WriteRawTag(56);
      output.WriteUInt32(AppId);
    }
    extraFields_.WriteTo(ref output, _repeated_extraFields_codec);
    if (HasLegacyGameserverPopId) {
      output.WriteRawTag(77);
      output.WriteFixed32(LegacyGameserverPopId);
    }
    if (HasVirtualPort) {
      output.WriteRawTag(80);
      output.WriteUInt32(VirtualPort);
    }
    if (HasGameserverAddress) {
      output.WriteRawTag(90);
      output.WriteBytes(GameserverAddress);
    }
    if (HasLegacyAuthorizedClientIdentityBinary) {
      output.WriteRawTag(98);
      output.WriteBytes(LegacyAuthorizedClientIdentityBinary);
    }
    if (HasLegacyGameserverIdentityBinary) {
      output.WriteRawTag(106);
      output.WriteBytes(LegacyGameserverIdentityBinary);
    }
    if (HasAuthorizedClientIdentityString) {
      output.WriteRawTag(114);
      output.WriteString(AuthorizedClientIdentityString);
    }
    if (HasGameserverIdentityString) {
      output.WriteRawTag(122);
      output.WriteString(GameserverIdentityString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTimeExpiry) {
      size += 1 + 4;
    }
    if (HasAuthorizedClientIdentityString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorizedClientIdentityString);
    }
    if (HasGameserverIdentityString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameserverIdentityString);
    }
    if (HasAuthorizedPublicIp) {
      size += 1 + 4;
    }
    if (HasGameserverAddress) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(GameserverAddress);
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasVirtualPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VirtualPort);
    }
    size += extraFields_.CalculateSize(_repeated_extraFields_codec);
    if (HasLegacyAuthorizedSteamId) {
      size += 1 + 8;
    }
    if (HasLegacyGameserverSteamId) {
      size += 1 + 8;
    }
    if (HasLegacyGameserverPopId) {
      size += 1 + 4;
    }
    if (HasLegacyAuthorizedClientIdentityBinary) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(LegacyAuthorizedClientIdentityBinary);
    }
    if (HasLegacyGameserverIdentityBinary) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(LegacyGameserverIdentityBinary);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramRelayAuthTicket other) {
    if (other == null) {
      return;
    }
    if (other.HasTimeExpiry) {
      TimeExpiry = other.TimeExpiry;
    }
    if (other.HasAuthorizedClientIdentityString) {
      AuthorizedClientIdentityString = other.AuthorizedClientIdentityString;
    }
    if (other.HasGameserverIdentityString) {
      GameserverIdentityString = other.GameserverIdentityString;
    }
    if (other.HasAuthorizedPublicIp) {
      AuthorizedPublicIp = other.AuthorizedPublicIp;
    }
    if (other.HasGameserverAddress) {
      GameserverAddress = other.GameserverAddress;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasVirtualPort) {
      VirtualPort = other.VirtualPort;
    }
    extraFields_.Add(other.extraFields_);
    if (other.HasLegacyAuthorizedSteamId) {
      LegacyAuthorizedSteamId = other.LegacyAuthorizedSteamId;
    }
    if (other.HasLegacyGameserverSteamId) {
      LegacyGameserverSteamId = other.LegacyGameserverSteamId;
    }
    if (other.HasLegacyGameserverPopId) {
      LegacyGameserverPopId = other.LegacyGameserverPopId;
    }
    if (other.HasLegacyAuthorizedClientIdentityBinary) {
      LegacyAuthorizedClientIdentityBinary = other.LegacyAuthorizedClientIdentityBinary;
    }
    if (other.HasLegacyGameserverIdentityBinary) {
      LegacyGameserverIdentityBinary = other.LegacyGameserverIdentityBinary;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          TimeExpiry = input.ReadFixed32();
          break;
        }
        case 17: {
          LegacyAuthorizedSteamId = input.ReadFixed64();
          break;
        }
        case 29: {
          AuthorizedPublicIp = input.ReadFixed32();
          break;
        }
        case 33: {
          LegacyGameserverSteamId = input.ReadFixed64();
          break;
        }
        case 56: {
          AppId = input.ReadUInt32();
          break;
        }
        case 66: {
          extraFields_.AddEntriesFrom(input, _repeated_extraFields_codec);
          break;
        }
        case 77: {
          LegacyGameserverPopId = input.ReadFixed32();
          break;
        }
        case 80: {
          VirtualPort = input.ReadUInt32();
          break;
        }
        case 90: {
          GameserverAddress = input.ReadBytes();
          break;
        }
        case 98: {
          LegacyAuthorizedClientIdentityBinary = input.ReadBytes();
          break;
        }
        case 106: {
          LegacyGameserverIdentityBinary = input.ReadBytes();
          break;
        }
        case 114: {
          AuthorizedClientIdentityString = input.ReadString();
          break;
        }
        case 122: {
          GameserverIdentityString = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          TimeExpiry = input.ReadFixed32();
          break;
        }
        case 17: {
          LegacyAuthorizedSteamId = input.ReadFixed64();
          break;
        }
        case 29: {
          AuthorizedPublicIp = input.ReadFixed32();
          break;
        }
        case 33: {
          LegacyGameserverSteamId = input.ReadFixed64();
          break;
        }
        case 56: {
          AppId = input.ReadUInt32();
          break;
        }
        case 66: {
          extraFields_.AddEntriesFrom(ref input, _repeated_extraFields_codec);
          break;
        }
        case 77: {
          LegacyGameserverPopId = input.ReadFixed32();
          break;
        }
        case 80: {
          VirtualPort = input.ReadUInt32();
          break;
        }
        case 90: {
          GameserverAddress = input.ReadBytes();
          break;
        }
        case 98: {
          LegacyAuthorizedClientIdentityBinary = input.ReadBytes();
          break;
        }
        case 106: {
          LegacyGameserverIdentityBinary = input.ReadBytes();
          break;
        }
        case 114: {
          AuthorizedClientIdentityString = input.ReadString();
          break;
        }
        case 122: {
          GameserverIdentityString = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgSteamDatagramRelayAuthTicket message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class ExtraField : pb::IMessage<ExtraField>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ExtraField> _parser = new pb::MessageParser<ExtraField>(() => new ExtraField());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ExtraField> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgSteamDatagramRelayAuthTicket.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ExtraField() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ExtraField(ExtraField other) : this() {
        _hasBits0 = other._hasBits0;
        name_ = other.name_;
        stringValue_ = other.stringValue_;
        int64Value_ = other.int64Value_;
        fixed64Value_ = other.fixed64Value_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ExtraField Clone() {
        return new ExtraField(this);
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 1;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "string_value" field.</summary>
      public const int StringValueFieldNumber = 2;
      private readonly static string StringValueDefaultValue = "";

      private string stringValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string StringValue {
        get { return stringValue_ ?? StringValueDefaultValue; }
        set {
          stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "string_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasStringValue {
        get { return stringValue_ != null; }
      }
      /// <summary>Clears the value of the "string_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearStringValue() {
        stringValue_ = null;
      }

      /// <summary>Field number for the "int64_value" field.</summary>
      public const int Int64ValueFieldNumber = 3;
      private readonly static long Int64ValueDefaultValue = 0L;

      private long int64Value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public long Int64Value {
        get { if ((_hasBits0 & 1) != 0) { return int64Value_; } else { return Int64ValueDefaultValue; } }
        set {
          _hasBits0 |= 1;
          int64Value_ = value;
        }
      }
      /// <summary>Gets whether the "int64_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInt64Value {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "int64_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInt64Value() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "fixed64_value" field.</summary>
      public const int Fixed64ValueFieldNumber = 5;
      private readonly static ulong Fixed64ValueDefaultValue = 0UL;

      private ulong fixed64Value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Fixed64Value {
        get { if ((_hasBits0 & 2) != 0) { return fixed64Value_; } else { return Fixed64ValueDefaultValue; } }
        set {
          _hasBits0 |= 2;
          fixed64Value_ = value;
        }
      }
      /// <summary>Gets whether the "fixed64_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFixed64Value {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "fixed64_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFixed64Value() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ExtraField);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ExtraField other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Name != other.Name) return false;
        if (StringValue != other.StringValue) return false;
        if (Int64Value != other.Int64Value) return false;
        if (Fixed64Value != other.Fixed64Value) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasName) hash ^= Name.GetHashCode();
        if (HasStringValue) hash ^= StringValue.GetHashCode();
        if (HasInt64Value) hash ^= Int64Value.GetHashCode();
        if (HasFixed64Value) hash ^= Fixed64Value.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasStringValue) {
          output.WriteRawTag(18);
          output.WriteString(StringValue);
        }
        if (HasInt64Value) {
          output.WriteRawTag(24);
          output.WriteSInt64(Int64Value);
        }
        if (HasFixed64Value) {
          output.WriteRawTag(41);
          output.WriteFixed64(Fixed64Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasStringValue) {
          output.WriteRawTag(18);
          output.WriteString(StringValue);
        }
        if (HasInt64Value) {
          output.WriteRawTag(24);
          output.WriteSInt64(Int64Value);
        }
        if (HasFixed64Value) {
          output.WriteRawTag(41);
          output.WriteFixed64(Fixed64Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (HasStringValue) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
        }
        if (HasInt64Value) {
          size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Int64Value);
        }
        if (HasFixed64Value) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ExtraField other) {
        if (other == null) {
          return;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasStringValue) {
          StringValue = other.StringValue;
        }
        if (other.HasInt64Value) {
          Int64Value = other.Int64Value;
        }
        if (other.HasFixed64Value) {
          Fixed64Value = other.Fixed64Value;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              StringValue = input.ReadString();
              break;
            }
            case 24: {
              Int64Value = input.ReadSInt64();
              break;
            }
            case 41: {
              Fixed64Value = input.ReadFixed64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              StringValue = input.ReadString();
              break;
            }
            case 24: {
              Int64Value = input.ReadSInt64();
              break;
            }
            case 41: {
              Fixed64Value = input.ReadFixed64();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgSteamDatagramSignedRelayAuthTicket : pb::IMessage<CMsgSteamDatagramSignedRelayAuthTicket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramSignedRelayAuthTicket> _parser = new pb::MessageParser<CMsgSteamDatagramSignedRelayAuthTicket>(() => new CMsgSteamDatagramSignedRelayAuthTicket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramSignedRelayAuthTicket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamdatagramMessagesAuthReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSignedRelayAuthTicket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSignedRelayAuthTicket(CMsgSteamDatagramSignedRelayAuthTicket other) : this() {
    _hasBits0 = other._hasBits0;
    reservedDoNotUse_ = other.reservedDoNotUse_;
    ticket_ = other.ticket_;
    signature_ = other.signature_;
    keyId_ = other.keyId_;
    certs_ = other.certs_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSignedRelayAuthTicket Clone() {
    return new CMsgSteamDatagramSignedRelayAuthTicket(this);
  }

  /// <summary>Field number for the "reserved_do_not_use" field.</summary>
  public const int ReservedDoNotUseFieldNumber = 1;
  private readonly static ulong ReservedDoNotUseDefaultValue = 0UL;

  private ulong reservedDoNotUse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ReservedDoNotUse {
    get { if ((_hasBits0 & 1) != 0) { return reservedDoNotUse_; } else { return ReservedDoNotUseDefaultValue; } }
    set {
      _hasBits0 |= 1;
      reservedDoNotUse_ = value;
    }
  }
  /// <summary>Gets whether the "reserved_do_not_use" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservedDoNotUse {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "reserved_do_not_use" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservedDoNotUse() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 3;
  private readonly static pb::ByteString TicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Ticket {
    get { return ticket_ ?? TicketDefaultValue; }
    set {
      ticket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicket {
    get { return ticket_ != null; }
  }
  /// <summary>Clears the value of the "ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicket() {
    ticket_ = null;
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 4;
  private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString signature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Signature {
    get { return signature_ ?? SignatureDefaultValue; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignature {
    get { return signature_ != null; }
  }
  /// <summary>Clears the value of the "signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignature() {
    signature_ = null;
  }

  /// <summary>Field number for the "key_id" field.</summary>
  public const int KeyIdFieldNumber = 2;
  private readonly static ulong KeyIdDefaultValue = 0UL;

  private ulong keyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong KeyId {
    get { if ((_hasBits0 & 2) != 0) { return keyId_; } else { return KeyIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      keyId_ = value;
    }
  }
  /// <summary>Gets whether the "key_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "key_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "certs" field.</summary>
  public const int CertsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CMsgSteamDatagramCertificateSigned> _repeated_certs_codec
      = pb::FieldCodec.ForMessage(42, global::CMsgSteamDatagramCertificateSigned.Parser);
  private readonly pbc::RepeatedField<global::CMsgSteamDatagramCertificateSigned> certs_ = new pbc::RepeatedField<global::CMsgSteamDatagramCertificateSigned>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgSteamDatagramCertificateSigned> Certs {
    get { return certs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramSignedRelayAuthTicket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramSignedRelayAuthTicket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReservedDoNotUse != other.ReservedDoNotUse) return false;
    if (Ticket != other.Ticket) return false;
    if (Signature != other.Signature) return false;
    if (KeyId != other.KeyId) return false;
    if(!certs_.Equals(other.certs_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasReservedDoNotUse) hash ^= ReservedDoNotUse.GetHashCode();
    if (HasTicket) hash ^= Ticket.GetHashCode();
    if (HasSignature) hash ^= Signature.GetHashCode();
    if (HasKeyId) hash ^= KeyId.GetHashCode();
    hash ^= certs_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasReservedDoNotUse) {
      output.WriteRawTag(9);
      output.WriteFixed64(ReservedDoNotUse);
    }
    if (HasKeyId) {
      output.WriteRawTag(17);
      output.WriteFixed64(KeyId);
    }
    if (HasTicket) {
      output.WriteRawTag(26);
      output.WriteBytes(Ticket);
    }
    if (HasSignature) {
      output.WriteRawTag(34);
      output.WriteBytes(Signature);
    }
    certs_.WriteTo(output, _repeated_certs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasReservedDoNotUse) {
      output.WriteRawTag(9);
      output.WriteFixed64(ReservedDoNotUse);
    }
    if (HasKeyId) {
      output.WriteRawTag(17);
      output.WriteFixed64(KeyId);
    }
    if (HasTicket) {
      output.WriteRawTag(26);
      output.WriteBytes(Ticket);
    }
    if (HasSignature) {
      output.WriteRawTag(34);
      output.WriteBytes(Signature);
    }
    certs_.WriteTo(ref output, _repeated_certs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasReservedDoNotUse) {
      size += 1 + 8;
    }
    if (HasTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ticket);
    }
    if (HasSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
    }
    if (HasKeyId) {
      size += 1 + 8;
    }
    size += certs_.CalculateSize(_repeated_certs_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramSignedRelayAuthTicket other) {
    if (other == null) {
      return;
    }
    if (other.HasReservedDoNotUse) {
      ReservedDoNotUse = other.ReservedDoNotUse;
    }
    if (other.HasTicket) {
      Ticket = other.Ticket;
    }
    if (other.HasSignature) {
      Signature = other.Signature;
    }
    if (other.HasKeyId) {
      KeyId = other.KeyId;
    }
    certs_.Add(other.certs_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          ReservedDoNotUse = input.ReadFixed64();
          break;
        }
        case 17: {
          KeyId = input.ReadFixed64();
          break;
        }
        case 26: {
          Ticket = input.ReadBytes();
          break;
        }
        case 34: {
          Signature = input.ReadBytes();
          break;
        }
        case 42: {
          certs_.AddEntriesFrom(input, _repeated_certs_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          ReservedDoNotUse = input.ReadFixed64();
          break;
        }
        case 17: {
          KeyId = input.ReadFixed64();
          break;
        }
        case 26: {
          Ticket = input.ReadBytes();
          break;
        }
        case 34: {
          Signature = input.ReadBytes();
          break;
        }
        case 42: {
          certs_.AddEntriesFrom(ref input, _repeated_certs_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramCachedCredentialsForApp : pb::IMessage<CMsgSteamDatagramCachedCredentialsForApp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramCachedCredentialsForApp> _parser = new pb::MessageParser<CMsgSteamDatagramCachedCredentialsForApp>(() => new CMsgSteamDatagramCachedCredentialsForApp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramCachedCredentialsForApp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamdatagramMessagesAuthReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCachedCredentialsForApp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCachedCredentialsForApp(CMsgSteamDatagramCachedCredentialsForApp other) : this() {
    privateKey_ = other.privateKey_;
    cert_ = other.cert_;
    relayTickets_ = other.relayTickets_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCachedCredentialsForApp Clone() {
    return new CMsgSteamDatagramCachedCredentialsForApp(this);
  }

  /// <summary>Field number for the "private_key" field.</summary>
  public const int PrivateKeyFieldNumber = 1;
  private readonly static pb::ByteString PrivateKeyDefaultValue = pb::ByteString.Empty;

  private pb::ByteString privateKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString PrivateKey {
    get { return privateKey_ ?? PrivateKeyDefaultValue; }
    set {
      privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "private_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrivateKey {
    get { return privateKey_ != null; }
  }
  /// <summary>Clears the value of the "private_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrivateKey() {
    privateKey_ = null;
  }

  /// <summary>Field number for the "cert" field.</summary>
  public const int CertFieldNumber = 2;
  private readonly static pb::ByteString CertDefaultValue = pb::ByteString.Empty;

  private pb::ByteString cert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Cert {
    get { return cert_ ?? CertDefaultValue; }
    set {
      cert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cert" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCert {
    get { return cert_ != null; }
  }
  /// <summary>Clears the value of the "cert" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCert() {
    cert_ = null;
  }

  /// <summary>Field number for the "relay_tickets" field.</summary>
  public const int RelayTicketsFieldNumber = 3;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_relayTickets_codec
      = pb::FieldCodec.ForBytes(26);
  private readonly pbc::RepeatedField<pb::ByteString> relayTickets_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<pb::ByteString> RelayTickets {
    get { return relayTickets_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramCachedCredentialsForApp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramCachedCredentialsForApp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PrivateKey != other.PrivateKey) return false;
    if (Cert != other.Cert) return false;
    if(!relayTickets_.Equals(other.relayTickets_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPrivateKey) hash ^= PrivateKey.GetHashCode();
    if (HasCert) hash ^= Cert.GetHashCode();
    hash ^= relayTickets_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPrivateKey) {
      output.WriteRawTag(10);
      output.WriteBytes(PrivateKey);
    }
    if (HasCert) {
      output.WriteRawTag(18);
      output.WriteBytes(Cert);
    }
    relayTickets_.WriteTo(output, _repeated_relayTickets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPrivateKey) {
      output.WriteRawTag(10);
      output.WriteBytes(PrivateKey);
    }
    if (HasCert) {
      output.WriteRawTag(18);
      output.WriteBytes(Cert);
    }
    relayTickets_.WriteTo(ref output, _repeated_relayTickets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPrivateKey) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
    }
    if (HasCert) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Cert);
    }
    size += relayTickets_.CalculateSize(_repeated_relayTickets_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramCachedCredentialsForApp other) {
    if (other == null) {
      return;
    }
    if (other.HasPrivateKey) {
      PrivateKey = other.PrivateKey;
    }
    if (other.HasCert) {
      Cert = other.Cert;
    }
    relayTickets_.Add(other.relayTickets_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PrivateKey = input.ReadBytes();
          break;
        }
        case 18: {
          Cert = input.ReadBytes();
          break;
        }
        case 26: {
          relayTickets_.AddEntriesFrom(input, _repeated_relayTickets_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          PrivateKey = input.ReadBytes();
          break;
        }
        case 18: {
          Cert = input.ReadBytes();
          break;
        }
        case 26: {
          relayTickets_.AddEntriesFrom(ref input, _repeated_relayTickets_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramGameCoordinatorServerLogin : pb::IMessage<CMsgSteamDatagramGameCoordinatorServerLogin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramGameCoordinatorServerLogin> _parser = new pb::MessageParser<CMsgSteamDatagramGameCoordinatorServerLogin>(() => new CMsgSteamDatagramGameCoordinatorServerLogin());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramGameCoordinatorServerLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamdatagramMessagesAuthReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramGameCoordinatorServerLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramGameCoordinatorServerLogin(CMsgSteamDatagramGameCoordinatorServerLogin other) : this() {
    _hasBits0 = other._hasBits0;
    timeGenerated_ = other.timeGenerated_;
    appid_ = other.appid_;
    routing_ = other.routing_;
    appdata_ = other.appdata_;
    legacyIdentityBinary_ = other.legacyIdentityBinary_;
    identityString_ = other.identityString_;
    dummySteamId_ = other.dummySteamId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramGameCoordinatorServerLogin Clone() {
    return new CMsgSteamDatagramGameCoordinatorServerLogin(this);
  }

  /// <summary>Field number for the "time_generated" field.</summary>
  public const int TimeGeneratedFieldNumber = 1;
  private readonly static uint TimeGeneratedDefaultValue = 0;

  private uint timeGenerated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeGenerated {
    get { if ((_hasBits0 & 1) != 0) { return timeGenerated_; } else { return TimeGeneratedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      timeGenerated_ = value;
    }
  }
  /// <summary>Gets whether the "time_generated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeGenerated {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "time_generated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeGenerated() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "routing" field.</summary>
  public const int RoutingFieldNumber = 3;
  private readonly static pb::ByteString RoutingDefaultValue = pb::ByteString.Empty;

  private pb::ByteString routing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Routing {
    get { return routing_ ?? RoutingDefaultValue; }
    set {
      routing_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "routing" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRouting {
    get { return routing_ != null; }
  }
  /// <summary>Clears the value of the "routing" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRouting() {
    routing_ = null;
  }

  /// <summary>Field number for the "appdata" field.</summary>
  public const int AppdataFieldNumber = 4;
  private readonly static pb::ByteString AppdataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString appdata_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Appdata {
    get { return appdata_ ?? AppdataDefaultValue; }
    set {
      appdata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "appdata" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppdata {
    get { return appdata_ != null; }
  }
  /// <summary>Clears the value of the "appdata" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppdata() {
    appdata_ = null;
  }

  /// <summary>Field number for the "legacy_identity_binary" field.</summary>
  public const int LegacyIdentityBinaryFieldNumber = 5;
  private readonly static pb::ByteString LegacyIdentityBinaryDefaultValue = pb::ByteString.Empty;

  private pb::ByteString legacyIdentityBinary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString LegacyIdentityBinary {
    get { return legacyIdentityBinary_ ?? LegacyIdentityBinaryDefaultValue; }
    set {
      legacyIdentityBinary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "legacy_identity_binary" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyIdentityBinary {
    get { return legacyIdentityBinary_ != null; }
  }
  /// <summary>Clears the value of the "legacy_identity_binary" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyIdentityBinary() {
    legacyIdentityBinary_ = null;
  }

  /// <summary>Field number for the "identity_string" field.</summary>
  public const int IdentityStringFieldNumber = 6;
  private readonly static string IdentityStringDefaultValue = "";

  private string identityString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IdentityString {
    get { return identityString_ ?? IdentityStringDefaultValue; }
    set {
      identityString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "identity_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdentityString {
    get { return identityString_ != null; }
  }
  /// <summary>Clears the value of the "identity_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdentityString() {
    identityString_ = null;
  }

  /// <summary>Field number for the "dummy_steam_id" field.</summary>
  public const int DummySteamIdFieldNumber = 99;
  private readonly static ulong DummySteamIdDefaultValue = 0UL;

  private ulong dummySteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong DummySteamId {
    get { if ((_hasBits0 & 4) != 0) { return dummySteamId_; } else { return DummySteamIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      dummySteamId_ = value;
    }
  }
  /// <summary>Gets whether the "dummy_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDummySteamId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "dummy_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDummySteamId() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramGameCoordinatorServerLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramGameCoordinatorServerLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TimeGenerated != other.TimeGenerated) return false;
    if (Appid != other.Appid) return false;
    if (Routing != other.Routing) return false;
    if (Appdata != other.Appdata) return false;
    if (LegacyIdentityBinary != other.LegacyIdentityBinary) return false;
    if (IdentityString != other.IdentityString) return false;
    if (DummySteamId != other.DummySteamId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTimeGenerated) hash ^= TimeGenerated.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasRouting) hash ^= Routing.GetHashCode();
    if (HasAppdata) hash ^= Appdata.GetHashCode();
    if (HasLegacyIdentityBinary) hash ^= LegacyIdentityBinary.GetHashCode();
    if (HasIdentityString) hash ^= IdentityString.GetHashCode();
    if (HasDummySteamId) hash ^= DummySteamId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTimeGenerated) {
      output.WriteRawTag(8);
      output.WriteUInt32(TimeGenerated);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasRouting) {
      output.WriteRawTag(26);
      output.WriteBytes(Routing);
    }
    if (HasAppdata) {
      output.WriteRawTag(34);
      output.WriteBytes(Appdata);
    }
    if (HasLegacyIdentityBinary) {
      output.WriteRawTag(42);
      output.WriteBytes(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(50);
      output.WriteString(IdentityString);
    }
    if (HasDummySteamId) {
      output.WriteRawTag(153, 6);
      output.WriteFixed64(DummySteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTimeGenerated) {
      output.WriteRawTag(8);
      output.WriteUInt32(TimeGenerated);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasRouting) {
      output.WriteRawTag(26);
      output.WriteBytes(Routing);
    }
    if (HasAppdata) {
      output.WriteRawTag(34);
      output.WriteBytes(Appdata);
    }
    if (HasLegacyIdentityBinary) {
      output.WriteRawTag(42);
      output.WriteBytes(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(50);
      output.WriteString(IdentityString);
    }
    if (HasDummySteamId) {
      output.WriteRawTag(153, 6);
      output.WriteFixed64(DummySteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTimeGenerated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeGenerated);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasRouting) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Routing);
    }
    if (HasAppdata) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Appdata);
    }
    if (HasLegacyIdentityBinary) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IdentityString);
    }
    if (HasDummySteamId) {
      size += 2 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramGameCoordinatorServerLogin other) {
    if (other == null) {
      return;
    }
    if (other.HasTimeGenerated) {
      TimeGenerated = other.TimeGenerated;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasRouting) {
      Routing = other.Routing;
    }
    if (other.HasAppdata) {
      Appdata = other.Appdata;
    }
    if (other.HasLegacyIdentityBinary) {
      LegacyIdentityBinary = other.LegacyIdentityBinary;
    }
    if (other.HasIdentityString) {
      IdentityString = other.IdentityString;
    }
    if (other.HasDummySteamId) {
      DummySteamId = other.DummySteamId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TimeGenerated = input.ReadUInt32();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 26: {
          Routing = input.ReadBytes();
          break;
        }
        case 34: {
          Appdata = input.ReadBytes();
          break;
        }
        case 42: {
          LegacyIdentityBinary = input.ReadBytes();
          break;
        }
        case 50: {
          IdentityString = input.ReadString();
          break;
        }
        case 793: {
          DummySteamId = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TimeGenerated = input.ReadUInt32();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 26: {
          Routing = input.ReadBytes();
          break;
        }
        case 34: {
          Appdata = input.ReadBytes();
          break;
        }
        case 42: {
          LegacyIdentityBinary = input.ReadBytes();
          break;
        }
        case 50: {
          IdentityString = input.ReadString();
          break;
        }
        case 793: {
          DummySteamId = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramSignedGameCoordinatorServerLogin : pb::IMessage<CMsgSteamDatagramSignedGameCoordinatorServerLogin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramSignedGameCoordinatorServerLogin> _parser = new pb::MessageParser<CMsgSteamDatagramSignedGameCoordinatorServerLogin>(() => new CMsgSteamDatagramSignedGameCoordinatorServerLogin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramSignedGameCoordinatorServerLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamdatagramMessagesAuthReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSignedGameCoordinatorServerLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSignedGameCoordinatorServerLogin(CMsgSteamDatagramSignedGameCoordinatorServerLogin other) : this() {
    cert_ = other.cert_ != null ? other.cert_.Clone() : null;
    login_ = other.login_;
    signature_ = other.signature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSignedGameCoordinatorServerLogin Clone() {
    return new CMsgSteamDatagramSignedGameCoordinatorServerLogin(this);
  }

  /// <summary>Field number for the "cert" field.</summary>
  public const int CertFieldNumber = 1;
  private global::CMsgSteamDatagramCertificateSigned cert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramCertificateSigned Cert {
    get { return cert_; }
    set {
      cert_ = value;
    }
  }

  /// <summary>Field number for the "login" field.</summary>
  public const int LoginFieldNumber = 2;
  private readonly static pb::ByteString LoginDefaultValue = pb::ByteString.Empty;

  private pb::ByteString login_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Login {
    get { return login_ ?? LoginDefaultValue; }
    set {
      login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "login" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLogin {
    get { return login_ != null; }
  }
  /// <summary>Clears the value of the "login" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLogin() {
    login_ = null;
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 3;
  private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString signature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Signature {
    get { return signature_ ?? SignatureDefaultValue; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignature {
    get { return signature_ != null; }
  }
  /// <summary>Clears the value of the "signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignature() {
    signature_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramSignedGameCoordinatorServerLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramSignedGameCoordinatorServerLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Cert, other.Cert)) return false;
    if (Login != other.Login) return false;
    if (Signature != other.Signature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (cert_ != null) hash ^= Cert.GetHashCode();
    if (HasLogin) hash ^= Login.GetHashCode();
    if (HasSignature) hash ^= Signature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (cert_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Cert);
    }
    if (HasLogin) {
      output.WriteRawTag(18);
      output.WriteBytes(Login);
    }
    if (HasSignature) {
      output.WriteRawTag(26);
      output.WriteBytes(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (cert_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Cert);
    }
    if (HasLogin) {
      output.WriteRawTag(18);
      output.WriteBytes(Login);
    }
    if (HasSignature) {
      output.WriteRawTag(26);
      output.WriteBytes(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (cert_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cert);
    }
    if (HasLogin) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Login);
    }
    if (HasSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramSignedGameCoordinatorServerLogin other) {
    if (other == null) {
      return;
    }
    if (other.cert_ != null) {
      if (cert_ == null) {
        Cert = new global::CMsgSteamDatagramCertificateSigned();
      }
      Cert.MergeFrom(other.Cert);
    }
    if (other.HasLogin) {
      Login = other.Login;
    }
    if (other.HasSignature) {
      Signature = other.Signature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          input.ReadMessage(Cert);
          break;
        }
        case 18: {
          Login = input.ReadBytes();
          break;
        }
        case 26: {
          Signature = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          input.ReadMessage(Cert);
          break;
        }
        case 18: {
          Login = input.ReadBytes();
          break;
        }
        case 26: {
          Signature = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramHostedServerAddressPlaintext : pb::IMessage<CMsgSteamDatagramHostedServerAddressPlaintext>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramHostedServerAddressPlaintext> _parser = new pb::MessageParser<CMsgSteamDatagramHostedServerAddressPlaintext>(() => new CMsgSteamDatagramHostedServerAddressPlaintext());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramHostedServerAddressPlaintext> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamdatagramMessagesAuthReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramHostedServerAddressPlaintext() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramHostedServerAddressPlaintext(CMsgSteamDatagramHostedServerAddressPlaintext other) : this() {
    _hasBits0 = other._hasBits0;
    ipv4_ = other.ipv4_;
    ipv6_ = other.ipv6_;
    port_ = other.port_;
    routingSecret_ = other.routingSecret_;
    protocolVersion_ = other.protocolVersion_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramHostedServerAddressPlaintext Clone() {
    return new CMsgSteamDatagramHostedServerAddressPlaintext(this);
  }

  /// <summary>Field number for the "ipv4" field.</summary>
  public const int Ipv4FieldNumber = 1;
  private readonly static uint Ipv4DefaultValue = 0;

  private uint ipv4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ipv4 {
    get { if ((_hasBits0 & 1) != 0) { return ipv4_; } else { return Ipv4DefaultValue; } }
    set {
      _hasBits0 |= 1;
      ipv4_ = value;
    }
  }
  /// <summary>Gets whether the "ipv4" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpv4 {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ipv4" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpv4() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ipv6" field.</summary>
  public const int Ipv6FieldNumber = 2;
  private readonly static pb::ByteString Ipv6DefaultValue = pb::ByteString.Empty;

  private pb::ByteString ipv6_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Ipv6 {
    get { return ipv6_ ?? Ipv6DefaultValue; }
    set {
      ipv6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ipv6" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpv6 {
    get { return ipv6_ != null; }
  }
  /// <summary>Clears the value of the "ipv6" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpv6() {
    ipv6_ = null;
  }

  /// <summary>Field number for the "port" field.</summary>
  public const int PortFieldNumber = 3;
  private readonly static uint PortDefaultValue = 0;

  private uint port_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Port {
    get { if ((_hasBits0 & 2) != 0) { return port_; } else { return PortDefaultValue; } }
    set {
      _hasBits0 |= 2;
      port_ = value;
    }
  }
  /// <summary>Gets whether the "port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPort {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPort() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "routing_secret" field.</summary>
  public const int RoutingSecretFieldNumber = 4;
  private readonly static ulong RoutingSecretDefaultValue = 0UL;

  private ulong routingSecret_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong RoutingSecret {
    get { if ((_hasBits0 & 4) != 0) { return routingSecret_; } else { return RoutingSecretDefaultValue; } }
    set {
      _hasBits0 |= 4;
      routingSecret_ = value;
    }
  }
  /// <summary>Gets whether the "routing_secret" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRoutingSecret {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "routing_secret" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRoutingSecret() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 5;
  private readonly static uint ProtocolVersionDefaultValue = 0;

  private uint protocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProtocolVersion {
    get { if ((_hasBits0 & 8) != 0) { return protocolVersion_; } else { return ProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 8;
      protocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocolVersion {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocolVersion() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramHostedServerAddressPlaintext);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramHostedServerAddressPlaintext other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ipv4 != other.Ipv4) return false;
    if (Ipv6 != other.Ipv6) return false;
    if (Port != other.Port) return false;
    if (RoutingSecret != other.RoutingSecret) return false;
    if (ProtocolVersion != other.ProtocolVersion) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasIpv4) hash ^= Ipv4.GetHashCode();
    if (HasIpv6) hash ^= Ipv6.GetHashCode();
    if (HasPort) hash ^= Port.GetHashCode();
    if (HasRoutingSecret) hash ^= RoutingSecret.GetHashCode();
    if (HasProtocolVersion) hash ^= ProtocolVersion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasIpv4) {
      output.WriteRawTag(13);
      output.WriteFixed32(Ipv4);
    }
    if (HasIpv6) {
      output.WriteRawTag(18);
      output.WriteBytes(Ipv6);
    }
    if (HasPort) {
      output.WriteRawTag(24);
      output.WriteUInt32(Port);
    }
    if (HasRoutingSecret) {
      output.WriteRawTag(33);
      output.WriteFixed64(RoutingSecret);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasIpv4) {
      output.WriteRawTag(13);
      output.WriteFixed32(Ipv4);
    }
    if (HasIpv6) {
      output.WriteRawTag(18);
      output.WriteBytes(Ipv6);
    }
    if (HasPort) {
      output.WriteRawTag(24);
      output.WriteUInt32(Port);
    }
    if (HasRoutingSecret) {
      output.WriteRawTag(33);
      output.WriteFixed64(RoutingSecret);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasIpv4) {
      size += 1 + 4;
    }
    if (HasIpv6) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ipv6);
    }
    if (HasPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
    }
    if (HasRoutingSecret) {
      size += 1 + 8;
    }
    if (HasProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramHostedServerAddressPlaintext other) {
    if (other == null) {
      return;
    }
    if (other.HasIpv4) {
      Ipv4 = other.Ipv4;
    }
    if (other.HasIpv6) {
      Ipv6 = other.Ipv6;
    }
    if (other.HasPort) {
      Port = other.Port;
    }
    if (other.HasRoutingSecret) {
      RoutingSecret = other.RoutingSecret;
    }
    if (other.HasProtocolVersion) {
      ProtocolVersion = other.ProtocolVersion;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Ipv4 = input.ReadFixed32();
          break;
        }
        case 18: {
          Ipv6 = input.ReadBytes();
          break;
        }
        case 24: {
          Port = input.ReadUInt32();
          break;
        }
        case 33: {
          RoutingSecret = input.ReadFixed64();
          break;
        }
        case 40: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Ipv4 = input.ReadFixed32();
          break;
        }
        case 18: {
          Ipv6 = input.ReadBytes();
          break;
        }
        case 24: {
          Port = input.ReadUInt32();
          break;
        }
        case 33: {
          RoutingSecret = input.ReadFixed64();
          break;
        }
        case 40: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

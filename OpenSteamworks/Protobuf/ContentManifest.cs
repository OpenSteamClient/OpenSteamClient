// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: content_manifest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from content_manifest.proto</summary>
public static partial class ContentManifestReflection {

  #region Descriptor
  /// <summary>File descriptor for content_manifest.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ContentManifestReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZjb250ZW50X21hbmlmZXN0LnByb3RvIu8CChZDb250ZW50TWFuaWZlc3RQ",
          "YXlsb2FkEjUKCG1hcHBpbmdzGAEgAygLMiMuQ29udGVudE1hbmlmZXN0UGF5",
          "bG9hZC5GaWxlTWFwcGluZxqdAgoLRmlsZU1hcHBpbmcSEAoIZmlsZW5hbWUY",
          "ASABKAkSDAoEc2l6ZRgCIAEoBBINCgVmbGFncxgDIAEoDRIUCgxzaGFfZmls",
          "ZW5hbWUYBCABKAwSEwoLc2hhX2NvbnRlbnQYBSABKAwSPQoGY2h1bmtzGAYg",
          "AygLMi0uQ29udGVudE1hbmlmZXN0UGF5bG9hZC5GaWxlTWFwcGluZy5DaHVu",
          "a0RhdGESEgoKbGlua3RhcmdldBgHIAEoCRphCglDaHVua0RhdGESCwoDc2hh",
          "GAEgASgMEgsKA2NyYxgCIAEoBxIOCgZvZmZzZXQYAyABKAQSEwoLY2Jfb3Jp",
          "Z2luYWwYBCABKA0SFQoNY2JfY29tcHJlc3NlZBgFIAEoDSLsAQoXQ29udGVu",
          "dE1hbmlmZXN0TWV0YWRhdGESEAoIZGVwb3RfaWQYASABKA0SFAoMZ2lkX21h",
          "bmlmZXN0GAIgASgEEhUKDWNyZWF0aW9uX3RpbWUYAyABKA0SGwoTZmlsZW5h",
          "bWVzX2VuY3J5cHRlZBgEIAEoCBIYChBjYl9kaXNrX29yaWdpbmFsGAUgASgE",
          "EhoKEmNiX2Rpc2tfY29tcHJlc3NlZBgGIAEoBBIVCg11bmlxdWVfY2h1bmtz",
          "GAcgASgNEhUKDWNyY19lbmNyeXB0ZWQYCCABKA0SEQoJY3JjX2NsZWFyGAkg",
          "ASgNIi0KGENvbnRlbnRNYW5pZmVzdFNpZ25hdHVyZRIRCglzaWduYXR1cmUY",
          "ASABKAwihAMKEkNvbnRlbnREZWx0YUNodW5rcxIQCghkZXBvdF9pZBgBIAEo",
          "DRIaChJtYW5pZmVzdF9pZF9zb3VyY2UYAiABKAQSGgoSbWFuaWZlc3RfaWRf",
          "dGFyZ2V0GAMgASgEEjMKC2RlbHRhQ2h1bmtzGAQgAygLMh4uQ29udGVudERl",
          "bHRhQ2h1bmtzLkRlbHRhQ2h1bmsSaAoTY2h1bmtfZGF0YV9sb2NhdGlvbhgF",
          "IAEoDjIfLkVDb250ZW50RGVsdGFDaHVua0RhdGFMb2NhdGlvbjoqa19FQ29u",
          "dGVudERlbHRhQ2h1bmtEYXRhTG9jYXRpb25JblByb3RvYnVmGoQBCgpEZWx0",
          "YUNodW5rEhIKCnNoYV9zb3VyY2UYASABKAwSEgoKc2hhX3RhcmdldBgCIAEo",
          "DBIVCg1zaXplX29yaWdpbmFsGAMgASgNEhQKDHBhdGNoX21ldGhvZBgEIAEo",
          "DRINCgVjaHVuaxgFIAEoDBISCgpzaXplX2RlbHRhGAYgASgNKoMBCh5FQ29u",
          "dGVudERlbHRhQ2h1bmtEYXRhTG9jYXRpb24SLgoqa19FQ29udGVudERlbHRh",
          "Q2h1bmtEYXRhTG9jYXRpb25JblByb3RvYnVmEAASMQota19FQ29udGVudERl",
          "bHRhQ2h1bmtEYXRhTG9jYXRpb25BZnRlclByb3RvYnVmEAFCBUgBgAEA"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EContentDeltaChunkDataLocation), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ContentManifestPayload), global::ContentManifestPayload.Parser, new[]{ "Mappings" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ContentManifestPayload.Types.FileMapping), global::ContentManifestPayload.Types.FileMapping.Parser, new[]{ "Filename", "Size", "Flags", "ShaFilename", "ShaContent", "Chunks", "Linktarget" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ContentManifestPayload.Types.FileMapping.Types.ChunkData), global::ContentManifestPayload.Types.FileMapping.Types.ChunkData.Parser, new[]{ "Sha", "Crc", "Offset", "CbOriginal", "CbCompressed" }, null, null, null, null)})}),
          new pbr::GeneratedClrTypeInfo(typeof(global::ContentManifestMetadata), global::ContentManifestMetadata.Parser, new[]{ "DepotId", "GidManifest", "CreationTime", "FilenamesEncrypted", "CbDiskOriginal", "CbDiskCompressed", "UniqueChunks", "CrcEncrypted", "CrcClear" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ContentManifestSignature), global::ContentManifestSignature.Parser, new[]{ "Signature" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ContentDeltaChunks), global::ContentDeltaChunks.Parser, new[]{ "DepotId", "ManifestIdSource", "ManifestIdTarget", "DeltaChunks", "ChunkDataLocation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ContentDeltaChunks.Types.DeltaChunk), global::ContentDeltaChunks.Types.DeltaChunk.Parser, new[]{ "ShaSource", "ShaTarget", "SizeOriginal", "PatchMethod", "Chunk", "SizeDelta" }, null, null, null, null)})
        }));
  }
  #endregion

}
#region Enums
public enum EContentDeltaChunkDataLocation {
  [pbr::OriginalName("k_EContentDeltaChunkDataLocationInProtobuf")] KEcontentDeltaChunkDataLocationInProtobuf = 0,
  [pbr::OriginalName("k_EContentDeltaChunkDataLocationAfterProtobuf")] KEcontentDeltaChunkDataLocationAfterProtobuf = 1,
}

#endregion

#region Messages
public sealed partial class ContentManifestPayload : pb::IMessage<ContentManifestPayload>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ContentManifestPayload> _parser = new pb::MessageParser<ContentManifestPayload>(() => new ContentManifestPayload());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ContentManifestPayload> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ContentManifestReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestPayload() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestPayload(ContentManifestPayload other) : this() {
    mappings_ = other.mappings_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestPayload Clone() {
    return new ContentManifestPayload(this);
  }

  /// <summary>Field number for the "mappings" field.</summary>
  public const int MappingsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ContentManifestPayload.Types.FileMapping> _repeated_mappings_codec
      = pb::FieldCodec.ForMessage(10, global::ContentManifestPayload.Types.FileMapping.Parser);
  private readonly pbc::RepeatedField<global::ContentManifestPayload.Types.FileMapping> mappings_ = new pbc::RepeatedField<global::ContentManifestPayload.Types.FileMapping>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ContentManifestPayload.Types.FileMapping> Mappings {
    get { return mappings_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ContentManifestPayload);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ContentManifestPayload other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!mappings_.Equals(other.mappings_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= mappings_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    mappings_.WriteTo(output, _repeated_mappings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    mappings_.WriteTo(ref output, _repeated_mappings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += mappings_.CalculateSize(_repeated_mappings_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ContentManifestPayload other) {
    if (other == null) {
      return;
    }
    mappings_.Add(other.mappings_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          mappings_.AddEntriesFrom(input, _repeated_mappings_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          mappings_.AddEntriesFrom(ref input, _repeated_mappings_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the ContentManifestPayload message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class FileMapping : pb::IMessage<FileMapping>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<FileMapping> _parser = new pb::MessageParser<FileMapping>(() => new FileMapping());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<FileMapping> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ContentManifestPayload.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FileMapping() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FileMapping(FileMapping other) : this() {
        _hasBits0 = other._hasBits0;
        filename_ = other.filename_;
        size_ = other.size_;
        flags_ = other.flags_;
        shaFilename_ = other.shaFilename_;
        shaContent_ = other.shaContent_;
        chunks_ = other.chunks_.Clone();
        linktarget_ = other.linktarget_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public FileMapping Clone() {
        return new FileMapping(this);
      }

      /// <summary>Field number for the "filename" field.</summary>
      public const int FilenameFieldNumber = 1;
      private readonly static string FilenameDefaultValue = "";

      private string filename_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Filename {
        get { return filename_ ?? FilenameDefaultValue; }
        set {
          filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "filename" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFilename {
        get { return filename_ != null; }
      }
      /// <summary>Clears the value of the "filename" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFilename() {
        filename_ = null;
      }

      /// <summary>Field number for the "size" field.</summary>
      public const int SizeFieldNumber = 2;
      private readonly static ulong SizeDefaultValue = 0UL;

      private ulong size_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Size {
        get { if ((_hasBits0 & 1) != 0) { return size_; } else { return SizeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          size_ = value;
        }
      }
      /// <summary>Gets whether the "size" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSize {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "size" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSize() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "flags" field.</summary>
      public const int FlagsFieldNumber = 3;
      private readonly static uint FlagsDefaultValue = 0;

      private uint flags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Flags {
        get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          flags_ = value;
        }
      }
      /// <summary>Gets whether the "flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFlags {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFlags() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "sha_filename" field.</summary>
      public const int ShaFilenameFieldNumber = 4;
      private readonly static pb::ByteString ShaFilenameDefaultValue = pb::ByteString.Empty;

      private pb::ByteString shaFilename_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString ShaFilename {
        get { return shaFilename_ ?? ShaFilenameDefaultValue; }
        set {
          shaFilename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "sha_filename" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShaFilename {
        get { return shaFilename_ != null; }
      }
      /// <summary>Clears the value of the "sha_filename" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShaFilename() {
        shaFilename_ = null;
      }

      /// <summary>Field number for the "sha_content" field.</summary>
      public const int ShaContentFieldNumber = 5;
      private readonly static pb::ByteString ShaContentDefaultValue = pb::ByteString.Empty;

      private pb::ByteString shaContent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString ShaContent {
        get { return shaContent_ ?? ShaContentDefaultValue; }
        set {
          shaContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "sha_content" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShaContent {
        get { return shaContent_ != null; }
      }
      /// <summary>Clears the value of the "sha_content" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShaContent() {
        shaContent_ = null;
      }

      /// <summary>Field number for the "chunks" field.</summary>
      public const int ChunksFieldNumber = 6;
      private static readonly pb::FieldCodec<global::ContentManifestPayload.Types.FileMapping.Types.ChunkData> _repeated_chunks_codec
          = pb::FieldCodec.ForMessage(50, global::ContentManifestPayload.Types.FileMapping.Types.ChunkData.Parser);
      private readonly pbc::RepeatedField<global::ContentManifestPayload.Types.FileMapping.Types.ChunkData> chunks_ = new pbc::RepeatedField<global::ContentManifestPayload.Types.FileMapping.Types.ChunkData>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::ContentManifestPayload.Types.FileMapping.Types.ChunkData> Chunks {
        get { return chunks_; }
      }

      /// <summary>Field number for the "linktarget" field.</summary>
      public const int LinktargetFieldNumber = 7;
      private readonly static string LinktargetDefaultValue = "";

      private string linktarget_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Linktarget {
        get { return linktarget_ ?? LinktargetDefaultValue; }
        set {
          linktarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "linktarget" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLinktarget {
        get { return linktarget_ != null; }
      }
      /// <summary>Clears the value of the "linktarget" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLinktarget() {
        linktarget_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as FileMapping);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(FileMapping other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Filename != other.Filename) return false;
        if (Size != other.Size) return false;
        if (Flags != other.Flags) return false;
        if (ShaFilename != other.ShaFilename) return false;
        if (ShaContent != other.ShaContent) return false;
        if(!chunks_.Equals(other.chunks_)) return false;
        if (Linktarget != other.Linktarget) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasFilename) hash ^= Filename.GetHashCode();
        if (HasSize) hash ^= Size.GetHashCode();
        if (HasFlags) hash ^= Flags.GetHashCode();
        if (HasShaFilename) hash ^= ShaFilename.GetHashCode();
        if (HasShaContent) hash ^= ShaContent.GetHashCode();
        hash ^= chunks_.GetHashCode();
        if (HasLinktarget) hash ^= Linktarget.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasFilename) {
          output.WriteRawTag(10);
          output.WriteString(Filename);
        }
        if (HasSize) {
          output.WriteRawTag(16);
          output.WriteUInt64(Size);
        }
        if (HasFlags) {
          output.WriteRawTag(24);
          output.WriteUInt32(Flags);
        }
        if (HasShaFilename) {
          output.WriteRawTag(34);
          output.WriteBytes(ShaFilename);
        }
        if (HasShaContent) {
          output.WriteRawTag(42);
          output.WriteBytes(ShaContent);
        }
        chunks_.WriteTo(output, _repeated_chunks_codec);
        if (HasLinktarget) {
          output.WriteRawTag(58);
          output.WriteString(Linktarget);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasFilename) {
          output.WriteRawTag(10);
          output.WriteString(Filename);
        }
        if (HasSize) {
          output.WriteRawTag(16);
          output.WriteUInt64(Size);
        }
        if (HasFlags) {
          output.WriteRawTag(24);
          output.WriteUInt32(Flags);
        }
        if (HasShaFilename) {
          output.WriteRawTag(34);
          output.WriteBytes(ShaFilename);
        }
        if (HasShaContent) {
          output.WriteRawTag(42);
          output.WriteBytes(ShaContent);
        }
        chunks_.WriteTo(ref output, _repeated_chunks_codec);
        if (HasLinktarget) {
          output.WriteRawTag(58);
          output.WriteString(Linktarget);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasFilename) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
        }
        if (HasSize) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
        }
        if (HasFlags) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
        }
        if (HasShaFilename) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaFilename);
        }
        if (HasShaContent) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaContent);
        }
        size += chunks_.CalculateSize(_repeated_chunks_codec);
        if (HasLinktarget) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Linktarget);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(FileMapping other) {
        if (other == null) {
          return;
        }
        if (other.HasFilename) {
          Filename = other.Filename;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasFlags) {
          Flags = other.Flags;
        }
        if (other.HasShaFilename) {
          ShaFilename = other.ShaFilename;
        }
        if (other.HasShaContent) {
          ShaContent = other.ShaContent;
        }
        chunks_.Add(other.chunks_);
        if (other.HasLinktarget) {
          Linktarget = other.Linktarget;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Filename = input.ReadString();
              break;
            }
            case 16: {
              Size = input.ReadUInt64();
              break;
            }
            case 24: {
              Flags = input.ReadUInt32();
              break;
            }
            case 34: {
              ShaFilename = input.ReadBytes();
              break;
            }
            case 42: {
              ShaContent = input.ReadBytes();
              break;
            }
            case 50: {
              chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
              break;
            }
            case 58: {
              Linktarget = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Filename = input.ReadString();
              break;
            }
            case 16: {
              Size = input.ReadUInt64();
              break;
            }
            case 24: {
              Flags = input.ReadUInt32();
              break;
            }
            case 34: {
              ShaFilename = input.ReadBytes();
              break;
            }
            case 42: {
              ShaContent = input.ReadBytes();
              break;
            }
            case 50: {
              chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
              break;
            }
            case 58: {
              Linktarget = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

      #region Nested types
      /// <summary>Container for nested types declared in the FileMapping message type.</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static partial class Types {
        public sealed partial class ChunkData : pb::IMessage<ChunkData>
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            , pb::IBufferMessage
        #endif
        {
          private static readonly pb::MessageParser<ChunkData> _parser = new pb::MessageParser<ChunkData>(() => new ChunkData());
          private pb::UnknownFieldSet _unknownFields;
          private int _hasBits0;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public static pb::MessageParser<ChunkData> Parser { get { return _parser; } }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public static pbr::MessageDescriptor Descriptor {
            get { return global::ContentManifestPayload.Types.FileMapping.Descriptor.NestedTypes[0]; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public ChunkData() {
            OnConstruction();
          }

          partial void OnConstruction();

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public ChunkData(ChunkData other) : this() {
            _hasBits0 = other._hasBits0;
            sha_ = other.sha_;
            crc_ = other.crc_;
            offset_ = other.offset_;
            cbOriginal_ = other.cbOriginal_;
            cbCompressed_ = other.cbCompressed_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public ChunkData Clone() {
            return new ChunkData(this);
          }

          /// <summary>Field number for the "sha" field.</summary>
          public const int ShaFieldNumber = 1;
          private readonly static pb::ByteString ShaDefaultValue = pb::ByteString.Empty;

          private pb::ByteString sha_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public pb::ByteString Sha {
            get { return sha_ ?? ShaDefaultValue; }
            set {
              sha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
          }
          /// <summary>Gets whether the "sha" field is set</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool HasSha {
            get { return sha_ != null; }
          }
          /// <summary>Clears the value of the "sha" field</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void ClearSha() {
            sha_ = null;
          }

          /// <summary>Field number for the "crc" field.</summary>
          public const int CrcFieldNumber = 2;
          private readonly static uint CrcDefaultValue = 0;

          private uint crc_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public uint Crc {
            get { if ((_hasBits0 & 1) != 0) { return crc_; } else { return CrcDefaultValue; } }
            set {
              _hasBits0 |= 1;
              crc_ = value;
            }
          }
          /// <summary>Gets whether the "crc" field is set</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool HasCrc {
            get { return (_hasBits0 & 1) != 0; }
          }
          /// <summary>Clears the value of the "crc" field</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void ClearCrc() {
            _hasBits0 &= ~1;
          }

          /// <summary>Field number for the "offset" field.</summary>
          public const int OffsetFieldNumber = 3;
          private readonly static ulong OffsetDefaultValue = 0UL;

          private ulong offset_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public ulong Offset {
            get { if ((_hasBits0 & 2) != 0) { return offset_; } else { return OffsetDefaultValue; } }
            set {
              _hasBits0 |= 2;
              offset_ = value;
            }
          }
          /// <summary>Gets whether the "offset" field is set</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool HasOffset {
            get { return (_hasBits0 & 2) != 0; }
          }
          /// <summary>Clears the value of the "offset" field</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void ClearOffset() {
            _hasBits0 &= ~2;
          }

          /// <summary>Field number for the "cb_original" field.</summary>
          public const int CbOriginalFieldNumber = 4;
          private readonly static uint CbOriginalDefaultValue = 0;

          private uint cbOriginal_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public uint CbOriginal {
            get { if ((_hasBits0 & 4) != 0) { return cbOriginal_; } else { return CbOriginalDefaultValue; } }
            set {
              _hasBits0 |= 4;
              cbOriginal_ = value;
            }
          }
          /// <summary>Gets whether the "cb_original" field is set</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool HasCbOriginal {
            get { return (_hasBits0 & 4) != 0; }
          }
          /// <summary>Clears the value of the "cb_original" field</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void ClearCbOriginal() {
            _hasBits0 &= ~4;
          }

          /// <summary>Field number for the "cb_compressed" field.</summary>
          public const int CbCompressedFieldNumber = 5;
          private readonly static uint CbCompressedDefaultValue = 0;

          private uint cbCompressed_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public uint CbCompressed {
            get { if ((_hasBits0 & 8) != 0) { return cbCompressed_; } else { return CbCompressedDefaultValue; } }
            set {
              _hasBits0 |= 8;
              cbCompressed_ = value;
            }
          }
          /// <summary>Gets whether the "cb_compressed" field is set</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool HasCbCompressed {
            get { return (_hasBits0 & 8) != 0; }
          }
          /// <summary>Clears the value of the "cb_compressed" field</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void ClearCbCompressed() {
            _hasBits0 &= ~8;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public override bool Equals(object other) {
            return Equals(other as ChunkData);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool Equals(ChunkData other) {
            if (ReferenceEquals(other, null)) {
              return false;
            }
            if (ReferenceEquals(other, this)) {
              return true;
            }
            if (Sha != other.Sha) return false;
            if (Crc != other.Crc) return false;
            if (Offset != other.Offset) return false;
            if (CbOriginal != other.CbOriginal) return false;
            if (CbCompressed != other.CbCompressed) return false;
            return Equals(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public override int GetHashCode() {
            int hash = 1;
            if (HasSha) hash ^= Sha.GetHashCode();
            if (HasCrc) hash ^= Crc.GetHashCode();
            if (HasOffset) hash ^= Offset.GetHashCode();
            if (HasCbOriginal) hash ^= CbOriginal.GetHashCode();
            if (HasCbCompressed) hash ^= CbCompressed.GetHashCode();
            if (_unknownFields != null) {
              hash ^= _unknownFields.GetHashCode();
            }
            return hash;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void WriteTo(pb::CodedOutputStream output) {
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
          #else
            if (HasSha) {
              output.WriteRawTag(10);
              output.WriteBytes(Sha);
            }
            if (HasCrc) {
              output.WriteRawTag(21);
              output.WriteFixed32(Crc);
            }
            if (HasOffset) {
              output.WriteRawTag(24);
              output.WriteUInt64(Offset);
            }
            if (HasCbOriginal) {
              output.WriteRawTag(32);
              output.WriteUInt32(CbOriginal);
            }
            if (HasCbCompressed) {
              output.WriteRawTag(40);
              output.WriteUInt32(CbCompressed);
            }
            if (_unknownFields != null) {
              _unknownFields.WriteTo(output);
            }
          #endif
          }

          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
            if (HasSha) {
              output.WriteRawTag(10);
              output.WriteBytes(Sha);
            }
            if (HasCrc) {
              output.WriteRawTag(21);
              output.WriteFixed32(Crc);
            }
            if (HasOffset) {
              output.WriteRawTag(24);
              output.WriteUInt64(Offset);
            }
            if (HasCbOriginal) {
              output.WriteRawTag(32);
              output.WriteUInt32(CbOriginal);
            }
            if (HasCbCompressed) {
              output.WriteRawTag(40);
              output.WriteUInt32(CbCompressed);
            }
            if (_unknownFields != null) {
              _unknownFields.WriteTo(ref output);
            }
          }
          #endif

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public int CalculateSize() {
            int size = 0;
            if (HasSha) {
              size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sha);
            }
            if (HasCrc) {
              size += 1 + 4;
            }
            if (HasOffset) {
              size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
            }
            if (HasCbOriginal) {
              size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CbOriginal);
            }
            if (HasCbCompressed) {
              size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CbCompressed);
            }
            if (_unknownFields != null) {
              size += _unknownFields.CalculateSize();
            }
            return size;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void MergeFrom(ChunkData other) {
            if (other == null) {
              return;
            }
            if (other.HasSha) {
              Sha = other.Sha;
            }
            if (other.HasCrc) {
              Crc = other.Crc;
            }
            if (other.HasOffset) {
              Offset = other.Offset;
            }
            if (other.HasCbOriginal) {
              CbOriginal = other.CbOriginal;
            }
            if (other.HasCbCompressed) {
              CbCompressed = other.CbCompressed;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void MergeFrom(pb::CodedInputStream input) {
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
          #else
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
              switch(tag) {
                default:
                  _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                  break;
                case 10: {
                  Sha = input.ReadBytes();
                  break;
                }
                case 21: {
                  Crc = input.ReadFixed32();
                  break;
                }
                case 24: {
                  Offset = input.ReadUInt64();
                  break;
                }
                case 32: {
                  CbOriginal = input.ReadUInt32();
                  break;
                }
                case 40: {
                  CbCompressed = input.ReadUInt32();
                  break;
                }
              }
            }
          #endif
          }

          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
              switch(tag) {
                default:
                  _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                  break;
                case 10: {
                  Sha = input.ReadBytes();
                  break;
                }
                case 21: {
                  Crc = input.ReadFixed32();
                  break;
                }
                case 24: {
                  Offset = input.ReadUInt64();
                  break;
                }
                case 32: {
                  CbOriginal = input.ReadUInt32();
                  break;
                }
                case 40: {
                  CbCompressed = input.ReadUInt32();
                  break;
                }
              }
            }
          }
          #endif

        }

      }
      #endregion

    }

  }
  #endregion

}

public sealed partial class ContentManifestMetadata : pb::IMessage<ContentManifestMetadata>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ContentManifestMetadata> _parser = new pb::MessageParser<ContentManifestMetadata>(() => new ContentManifestMetadata());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ContentManifestMetadata> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ContentManifestReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestMetadata() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestMetadata(ContentManifestMetadata other) : this() {
    _hasBits0 = other._hasBits0;
    depotId_ = other.depotId_;
    gidManifest_ = other.gidManifest_;
    creationTime_ = other.creationTime_;
    filenamesEncrypted_ = other.filenamesEncrypted_;
    cbDiskOriginal_ = other.cbDiskOriginal_;
    cbDiskCompressed_ = other.cbDiskCompressed_;
    uniqueChunks_ = other.uniqueChunks_;
    crcEncrypted_ = other.crcEncrypted_;
    crcClear_ = other.crcClear_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestMetadata Clone() {
    return new ContentManifestMetadata(this);
  }

  /// <summary>Field number for the "depot_id" field.</summary>
  public const int DepotIdFieldNumber = 1;
  private readonly static uint DepotIdDefaultValue = 0;

  private uint depotId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DepotId {
    get { if ((_hasBits0 & 1) != 0) { return depotId_; } else { return DepotIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      depotId_ = value;
    }
  }
  /// <summary>Gets whether the "depot_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDepotId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "depot_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDepotId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "gid_manifest" field.</summary>
  public const int GidManifestFieldNumber = 2;
  private readonly static ulong GidManifestDefaultValue = 0UL;

  private ulong gidManifest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong GidManifest {
    get { if ((_hasBits0 & 2) != 0) { return gidManifest_; } else { return GidManifestDefaultValue; } }
    set {
      _hasBits0 |= 2;
      gidManifest_ = value;
    }
  }
  /// <summary>Gets whether the "gid_manifest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGidManifest {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "gid_manifest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGidManifest() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "creation_time" field.</summary>
  public const int CreationTimeFieldNumber = 3;
  private readonly static uint CreationTimeDefaultValue = 0;

  private uint creationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CreationTime {
    get { if ((_hasBits0 & 4) != 0) { return creationTime_; } else { return CreationTimeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      creationTime_ = value;
    }
  }
  /// <summary>Gets whether the "creation_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreationTime {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "creation_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreationTime() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "filenames_encrypted" field.</summary>
  public const int FilenamesEncryptedFieldNumber = 4;
  private readonly static bool FilenamesEncryptedDefaultValue = false;

  private bool filenamesEncrypted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FilenamesEncrypted {
    get { if ((_hasBits0 & 8) != 0) { return filenamesEncrypted_; } else { return FilenamesEncryptedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      filenamesEncrypted_ = value;
    }
  }
  /// <summary>Gets whether the "filenames_encrypted" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFilenamesEncrypted {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "filenames_encrypted" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFilenamesEncrypted() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "cb_disk_original" field.</summary>
  public const int CbDiskOriginalFieldNumber = 5;
  private readonly static ulong CbDiskOriginalDefaultValue = 0UL;

  private ulong cbDiskOriginal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong CbDiskOriginal {
    get { if ((_hasBits0 & 16) != 0) { return cbDiskOriginal_; } else { return CbDiskOriginalDefaultValue; } }
    set {
      _hasBits0 |= 16;
      cbDiskOriginal_ = value;
    }
  }
  /// <summary>Gets whether the "cb_disk_original" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCbDiskOriginal {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "cb_disk_original" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCbDiskOriginal() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "cb_disk_compressed" field.</summary>
  public const int CbDiskCompressedFieldNumber = 6;
  private readonly static ulong CbDiskCompressedDefaultValue = 0UL;

  private ulong cbDiskCompressed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong CbDiskCompressed {
    get { if ((_hasBits0 & 32) != 0) { return cbDiskCompressed_; } else { return CbDiskCompressedDefaultValue; } }
    set {
      _hasBits0 |= 32;
      cbDiskCompressed_ = value;
    }
  }
  /// <summary>Gets whether the "cb_disk_compressed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCbDiskCompressed {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "cb_disk_compressed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCbDiskCompressed() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "unique_chunks" field.</summary>
  public const int UniqueChunksFieldNumber = 7;
  private readonly static uint UniqueChunksDefaultValue = 0;

  private uint uniqueChunks_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UniqueChunks {
    get { if ((_hasBits0 & 64) != 0) { return uniqueChunks_; } else { return UniqueChunksDefaultValue; } }
    set {
      _hasBits0 |= 64;
      uniqueChunks_ = value;
    }
  }
  /// <summary>Gets whether the "unique_chunks" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUniqueChunks {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "unique_chunks" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUniqueChunks() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "crc_encrypted" field.</summary>
  public const int CrcEncryptedFieldNumber = 8;
  private readonly static uint CrcEncryptedDefaultValue = 0;

  private uint crcEncrypted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CrcEncrypted {
    get { if ((_hasBits0 & 128) != 0) { return crcEncrypted_; } else { return CrcEncryptedDefaultValue; } }
    set {
      _hasBits0 |= 128;
      crcEncrypted_ = value;
    }
  }
  /// <summary>Gets whether the "crc_encrypted" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCrcEncrypted {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "crc_encrypted" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCrcEncrypted() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "crc_clear" field.</summary>
  public const int CrcClearFieldNumber = 9;
  private readonly static uint CrcClearDefaultValue = 0;

  private uint crcClear_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CrcClear {
    get { if ((_hasBits0 & 256) != 0) { return crcClear_; } else { return CrcClearDefaultValue; } }
    set {
      _hasBits0 |= 256;
      crcClear_ = value;
    }
  }
  /// <summary>Gets whether the "crc_clear" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCrcClear {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "crc_clear" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCrcClear() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ContentManifestMetadata);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ContentManifestMetadata other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DepotId != other.DepotId) return false;
    if (GidManifest != other.GidManifest) return false;
    if (CreationTime != other.CreationTime) return false;
    if (FilenamesEncrypted != other.FilenamesEncrypted) return false;
    if (CbDiskOriginal != other.CbDiskOriginal) return false;
    if (CbDiskCompressed != other.CbDiskCompressed) return false;
    if (UniqueChunks != other.UniqueChunks) return false;
    if (CrcEncrypted != other.CrcEncrypted) return false;
    if (CrcClear != other.CrcClear) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDepotId) hash ^= DepotId.GetHashCode();
    if (HasGidManifest) hash ^= GidManifest.GetHashCode();
    if (HasCreationTime) hash ^= CreationTime.GetHashCode();
    if (HasFilenamesEncrypted) hash ^= FilenamesEncrypted.GetHashCode();
    if (HasCbDiskOriginal) hash ^= CbDiskOriginal.GetHashCode();
    if (HasCbDiskCompressed) hash ^= CbDiskCompressed.GetHashCode();
    if (HasUniqueChunks) hash ^= UniqueChunks.GetHashCode();
    if (HasCrcEncrypted) hash ^= CrcEncrypted.GetHashCode();
    if (HasCrcClear) hash ^= CrcClear.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDepotId) {
      output.WriteRawTag(8);
      output.WriteUInt32(DepotId);
    }
    if (HasGidManifest) {
      output.WriteRawTag(16);
      output.WriteUInt64(GidManifest);
    }
    if (HasCreationTime) {
      output.WriteRawTag(24);
      output.WriteUInt32(CreationTime);
    }
    if (HasFilenamesEncrypted) {
      output.WriteRawTag(32);
      output.WriteBool(FilenamesEncrypted);
    }
    if (HasCbDiskOriginal) {
      output.WriteRawTag(40);
      output.WriteUInt64(CbDiskOriginal);
    }
    if (HasCbDiskCompressed) {
      output.WriteRawTag(48);
      output.WriteUInt64(CbDiskCompressed);
    }
    if (HasUniqueChunks) {
      output.WriteRawTag(56);
      output.WriteUInt32(UniqueChunks);
    }
    if (HasCrcEncrypted) {
      output.WriteRawTag(64);
      output.WriteUInt32(CrcEncrypted);
    }
    if (HasCrcClear) {
      output.WriteRawTag(72);
      output.WriteUInt32(CrcClear);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDepotId) {
      output.WriteRawTag(8);
      output.WriteUInt32(DepotId);
    }
    if (HasGidManifest) {
      output.WriteRawTag(16);
      output.WriteUInt64(GidManifest);
    }
    if (HasCreationTime) {
      output.WriteRawTag(24);
      output.WriteUInt32(CreationTime);
    }
    if (HasFilenamesEncrypted) {
      output.WriteRawTag(32);
      output.WriteBool(FilenamesEncrypted);
    }
    if (HasCbDiskOriginal) {
      output.WriteRawTag(40);
      output.WriteUInt64(CbDiskOriginal);
    }
    if (HasCbDiskCompressed) {
      output.WriteRawTag(48);
      output.WriteUInt64(CbDiskCompressed);
    }
    if (HasUniqueChunks) {
      output.WriteRawTag(56);
      output.WriteUInt32(UniqueChunks);
    }
    if (HasCrcEncrypted) {
      output.WriteRawTag(64);
      output.WriteUInt32(CrcEncrypted);
    }
    if (HasCrcClear) {
      output.WriteRawTag(72);
      output.WriteUInt32(CrcClear);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDepotId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DepotId);
    }
    if (HasGidManifest) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GidManifest);
    }
    if (HasCreationTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreationTime);
    }
    if (HasFilenamesEncrypted) {
      size += 1 + 1;
    }
    if (HasCbDiskOriginal) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CbDiskOriginal);
    }
    if (HasCbDiskCompressed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CbDiskCompressed);
    }
    if (HasUniqueChunks) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UniqueChunks);
    }
    if (HasCrcEncrypted) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CrcEncrypted);
    }
    if (HasCrcClear) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CrcClear);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ContentManifestMetadata other) {
    if (other == null) {
      return;
    }
    if (other.HasDepotId) {
      DepotId = other.DepotId;
    }
    if (other.HasGidManifest) {
      GidManifest = other.GidManifest;
    }
    if (other.HasCreationTime) {
      CreationTime = other.CreationTime;
    }
    if (other.HasFilenamesEncrypted) {
      FilenamesEncrypted = other.FilenamesEncrypted;
    }
    if (other.HasCbDiskOriginal) {
      CbDiskOriginal = other.CbDiskOriginal;
    }
    if (other.HasCbDiskCompressed) {
      CbDiskCompressed = other.CbDiskCompressed;
    }
    if (other.HasUniqueChunks) {
      UniqueChunks = other.UniqueChunks;
    }
    if (other.HasCrcEncrypted) {
      CrcEncrypted = other.CrcEncrypted;
    }
    if (other.HasCrcClear) {
      CrcClear = other.CrcClear;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 16: {
          GidManifest = input.ReadUInt64();
          break;
        }
        case 24: {
          CreationTime = input.ReadUInt32();
          break;
        }
        case 32: {
          FilenamesEncrypted = input.ReadBool();
          break;
        }
        case 40: {
          CbDiskOriginal = input.ReadUInt64();
          break;
        }
        case 48: {
          CbDiskCompressed = input.ReadUInt64();
          break;
        }
        case 56: {
          UniqueChunks = input.ReadUInt32();
          break;
        }
        case 64: {
          CrcEncrypted = input.ReadUInt32();
          break;
        }
        case 72: {
          CrcClear = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 16: {
          GidManifest = input.ReadUInt64();
          break;
        }
        case 24: {
          CreationTime = input.ReadUInt32();
          break;
        }
        case 32: {
          FilenamesEncrypted = input.ReadBool();
          break;
        }
        case 40: {
          CbDiskOriginal = input.ReadUInt64();
          break;
        }
        case 48: {
          CbDiskCompressed = input.ReadUInt64();
          break;
        }
        case 56: {
          UniqueChunks = input.ReadUInt32();
          break;
        }
        case 64: {
          CrcEncrypted = input.ReadUInt32();
          break;
        }
        case 72: {
          CrcClear = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ContentManifestSignature : pb::IMessage<ContentManifestSignature>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ContentManifestSignature> _parser = new pb::MessageParser<ContentManifestSignature>(() => new ContentManifestSignature());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ContentManifestSignature> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ContentManifestReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestSignature() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestSignature(ContentManifestSignature other) : this() {
    signature_ = other.signature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentManifestSignature Clone() {
    return new ContentManifestSignature(this);
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 1;
  private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString signature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Signature {
    get { return signature_ ?? SignatureDefaultValue; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignature {
    get { return signature_ != null; }
  }
  /// <summary>Clears the value of the "signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignature() {
    signature_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ContentManifestSignature);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ContentManifestSignature other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Signature != other.Signature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSignature) hash ^= Signature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSignature) {
      output.WriteRawTag(10);
      output.WriteBytes(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSignature) {
      output.WriteRawTag(10);
      output.WriteBytes(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ContentManifestSignature other) {
    if (other == null) {
      return;
    }
    if (other.HasSignature) {
      Signature = other.Signature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Signature = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Signature = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ContentDeltaChunks : pb::IMessage<ContentDeltaChunks>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ContentDeltaChunks> _parser = new pb::MessageParser<ContentDeltaChunks>(() => new ContentDeltaChunks());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ContentDeltaChunks> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ContentManifestReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentDeltaChunks() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentDeltaChunks(ContentDeltaChunks other) : this() {
    _hasBits0 = other._hasBits0;
    depotId_ = other.depotId_;
    manifestIdSource_ = other.manifestIdSource_;
    manifestIdTarget_ = other.manifestIdTarget_;
    deltaChunks_ = other.deltaChunks_.Clone();
    chunkDataLocation_ = other.chunkDataLocation_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ContentDeltaChunks Clone() {
    return new ContentDeltaChunks(this);
  }

  /// <summary>Field number for the "depot_id" field.</summary>
  public const int DepotIdFieldNumber = 1;
  private readonly static uint DepotIdDefaultValue = 0;

  private uint depotId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DepotId {
    get { if ((_hasBits0 & 1) != 0) { return depotId_; } else { return DepotIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      depotId_ = value;
    }
  }
  /// <summary>Gets whether the "depot_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDepotId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "depot_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDepotId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "manifest_id_source" field.</summary>
  public const int ManifestIdSourceFieldNumber = 2;
  private readonly static ulong ManifestIdSourceDefaultValue = 0UL;

  private ulong manifestIdSource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ManifestIdSource {
    get { if ((_hasBits0 & 2) != 0) { return manifestIdSource_; } else { return ManifestIdSourceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      manifestIdSource_ = value;
    }
  }
  /// <summary>Gets whether the "manifest_id_source" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifestIdSource {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "manifest_id_source" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifestIdSource() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "manifest_id_target" field.</summary>
  public const int ManifestIdTargetFieldNumber = 3;
  private readonly static ulong ManifestIdTargetDefaultValue = 0UL;

  private ulong manifestIdTarget_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ManifestIdTarget {
    get { if ((_hasBits0 & 4) != 0) { return manifestIdTarget_; } else { return ManifestIdTargetDefaultValue; } }
    set {
      _hasBits0 |= 4;
      manifestIdTarget_ = value;
    }
  }
  /// <summary>Gets whether the "manifest_id_target" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifestIdTarget {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "manifest_id_target" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifestIdTarget() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "deltaChunks" field.</summary>
  public const int DeltaChunksFieldNumber = 4;
  private static readonly pb::FieldCodec<global::ContentDeltaChunks.Types.DeltaChunk> _repeated_deltaChunks_codec
      = pb::FieldCodec.ForMessage(34, global::ContentDeltaChunks.Types.DeltaChunk.Parser);
  private readonly pbc::RepeatedField<global::ContentDeltaChunks.Types.DeltaChunk> deltaChunks_ = new pbc::RepeatedField<global::ContentDeltaChunks.Types.DeltaChunk>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ContentDeltaChunks.Types.DeltaChunk> DeltaChunks {
    get { return deltaChunks_; }
  }

  /// <summary>Field number for the "chunk_data_location" field.</summary>
  public const int ChunkDataLocationFieldNumber = 5;
  private readonly static global::EContentDeltaChunkDataLocation ChunkDataLocationDefaultValue = global::EContentDeltaChunkDataLocation.KEcontentDeltaChunkDataLocationInProtobuf;

  private global::EContentDeltaChunkDataLocation chunkDataLocation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EContentDeltaChunkDataLocation ChunkDataLocation {
    get { if ((_hasBits0 & 8) != 0) { return chunkDataLocation_; } else { return ChunkDataLocationDefaultValue; } }
    set {
      _hasBits0 |= 8;
      chunkDataLocation_ = value;
    }
  }
  /// <summary>Gets whether the "chunk_data_location" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChunkDataLocation {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "chunk_data_location" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChunkDataLocation() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ContentDeltaChunks);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ContentDeltaChunks other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DepotId != other.DepotId) return false;
    if (ManifestIdSource != other.ManifestIdSource) return false;
    if (ManifestIdTarget != other.ManifestIdTarget) return false;
    if(!deltaChunks_.Equals(other.deltaChunks_)) return false;
    if (ChunkDataLocation != other.ChunkDataLocation) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDepotId) hash ^= DepotId.GetHashCode();
    if (HasManifestIdSource) hash ^= ManifestIdSource.GetHashCode();
    if (HasManifestIdTarget) hash ^= ManifestIdTarget.GetHashCode();
    hash ^= deltaChunks_.GetHashCode();
    if (HasChunkDataLocation) hash ^= ChunkDataLocation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDepotId) {
      output.WriteRawTag(8);
      output.WriteUInt32(DepotId);
    }
    if (HasManifestIdSource) {
      output.WriteRawTag(16);
      output.WriteUInt64(ManifestIdSource);
    }
    if (HasManifestIdTarget) {
      output.WriteRawTag(24);
      output.WriteUInt64(ManifestIdTarget);
    }
    deltaChunks_.WriteTo(output, _repeated_deltaChunks_codec);
    if (HasChunkDataLocation) {
      output.WriteRawTag(40);
      output.WriteEnum((int) ChunkDataLocation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDepotId) {
      output.WriteRawTag(8);
      output.WriteUInt32(DepotId);
    }
    if (HasManifestIdSource) {
      output.WriteRawTag(16);
      output.WriteUInt64(ManifestIdSource);
    }
    if (HasManifestIdTarget) {
      output.WriteRawTag(24);
      output.WriteUInt64(ManifestIdTarget);
    }
    deltaChunks_.WriteTo(ref output, _repeated_deltaChunks_codec);
    if (HasChunkDataLocation) {
      output.WriteRawTag(40);
      output.WriteEnum((int) ChunkDataLocation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDepotId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DepotId);
    }
    if (HasManifestIdSource) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ManifestIdSource);
    }
    if (HasManifestIdTarget) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ManifestIdTarget);
    }
    size += deltaChunks_.CalculateSize(_repeated_deltaChunks_codec);
    if (HasChunkDataLocation) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChunkDataLocation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ContentDeltaChunks other) {
    if (other == null) {
      return;
    }
    if (other.HasDepotId) {
      DepotId = other.DepotId;
    }
    if (other.HasManifestIdSource) {
      ManifestIdSource = other.ManifestIdSource;
    }
    if (other.HasManifestIdTarget) {
      ManifestIdTarget = other.ManifestIdTarget;
    }
    deltaChunks_.Add(other.deltaChunks_);
    if (other.HasChunkDataLocation) {
      ChunkDataLocation = other.ChunkDataLocation;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 16: {
          ManifestIdSource = input.ReadUInt64();
          break;
        }
        case 24: {
          ManifestIdTarget = input.ReadUInt64();
          break;
        }
        case 34: {
          deltaChunks_.AddEntriesFrom(input, _repeated_deltaChunks_codec);
          break;
        }
        case 40: {
          ChunkDataLocation = (global::EContentDeltaChunkDataLocation) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 16: {
          ManifestIdSource = input.ReadUInt64();
          break;
        }
        case 24: {
          ManifestIdTarget = input.ReadUInt64();
          break;
        }
        case 34: {
          deltaChunks_.AddEntriesFrom(ref input, _repeated_deltaChunks_codec);
          break;
        }
        case 40: {
          ChunkDataLocation = (global::EContentDeltaChunkDataLocation) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the ContentDeltaChunks message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class DeltaChunk : pb::IMessage<DeltaChunk>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DeltaChunk> _parser = new pb::MessageParser<DeltaChunk>(() => new DeltaChunk());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DeltaChunk> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ContentDeltaChunks.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeltaChunk() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeltaChunk(DeltaChunk other) : this() {
        _hasBits0 = other._hasBits0;
        shaSource_ = other.shaSource_;
        shaTarget_ = other.shaTarget_;
        sizeOriginal_ = other.sizeOriginal_;
        patchMethod_ = other.patchMethod_;
        chunk_ = other.chunk_;
        sizeDelta_ = other.sizeDelta_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DeltaChunk Clone() {
        return new DeltaChunk(this);
      }

      /// <summary>Field number for the "sha_source" field.</summary>
      public const int ShaSourceFieldNumber = 1;
      private readonly static pb::ByteString ShaSourceDefaultValue = pb::ByteString.Empty;

      private pb::ByteString shaSource_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString ShaSource {
        get { return shaSource_ ?? ShaSourceDefaultValue; }
        set {
          shaSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "sha_source" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShaSource {
        get { return shaSource_ != null; }
      }
      /// <summary>Clears the value of the "sha_source" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShaSource() {
        shaSource_ = null;
      }

      /// <summary>Field number for the "sha_target" field.</summary>
      public const int ShaTargetFieldNumber = 2;
      private readonly static pb::ByteString ShaTargetDefaultValue = pb::ByteString.Empty;

      private pb::ByteString shaTarget_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString ShaTarget {
        get { return shaTarget_ ?? ShaTargetDefaultValue; }
        set {
          shaTarget_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "sha_target" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShaTarget {
        get { return shaTarget_ != null; }
      }
      /// <summary>Clears the value of the "sha_target" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShaTarget() {
        shaTarget_ = null;
      }

      /// <summary>Field number for the "size_original" field.</summary>
      public const int SizeOriginalFieldNumber = 3;
      private readonly static uint SizeOriginalDefaultValue = 0;

      private uint sizeOriginal_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SizeOriginal {
        get { if ((_hasBits0 & 1) != 0) { return sizeOriginal_; } else { return SizeOriginalDefaultValue; } }
        set {
          _hasBits0 |= 1;
          sizeOriginal_ = value;
        }
      }
      /// <summary>Gets whether the "size_original" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSizeOriginal {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "size_original" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSizeOriginal() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "patch_method" field.</summary>
      public const int PatchMethodFieldNumber = 4;
      private readonly static uint PatchMethodDefaultValue = 0;

      private uint patchMethod_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PatchMethod {
        get { if ((_hasBits0 & 2) != 0) { return patchMethod_; } else { return PatchMethodDefaultValue; } }
        set {
          _hasBits0 |= 2;
          patchMethod_ = value;
        }
      }
      /// <summary>Gets whether the "patch_method" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPatchMethod {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "patch_method" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPatchMethod() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "chunk" field.</summary>
      public const int ChunkFieldNumber = 5;
      private readonly static pb::ByteString ChunkDefaultValue = pb::ByteString.Empty;

      private pb::ByteString chunk_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString Chunk {
        get { return chunk_ ?? ChunkDefaultValue; }
        set {
          chunk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "chunk" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasChunk {
        get { return chunk_ != null; }
      }
      /// <summary>Clears the value of the "chunk" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearChunk() {
        chunk_ = null;
      }

      /// <summary>Field number for the "size_delta" field.</summary>
      public const int SizeDeltaFieldNumber = 6;
      private readonly static uint SizeDeltaDefaultValue = 0;

      private uint sizeDelta_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SizeDelta {
        get { if ((_hasBits0 & 4) != 0) { return sizeDelta_; } else { return SizeDeltaDefaultValue; } }
        set {
          _hasBits0 |= 4;
          sizeDelta_ = value;
        }
      }
      /// <summary>Gets whether the "size_delta" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSizeDelta {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "size_delta" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSizeDelta() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DeltaChunk);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DeltaChunk other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ShaSource != other.ShaSource) return false;
        if (ShaTarget != other.ShaTarget) return false;
        if (SizeOriginal != other.SizeOriginal) return false;
        if (PatchMethod != other.PatchMethod) return false;
        if (Chunk != other.Chunk) return false;
        if (SizeDelta != other.SizeDelta) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasShaSource) hash ^= ShaSource.GetHashCode();
        if (HasShaTarget) hash ^= ShaTarget.GetHashCode();
        if (HasSizeOriginal) hash ^= SizeOriginal.GetHashCode();
        if (HasPatchMethod) hash ^= PatchMethod.GetHashCode();
        if (HasChunk) hash ^= Chunk.GetHashCode();
        if (HasSizeDelta) hash ^= SizeDelta.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasShaSource) {
          output.WriteRawTag(10);
          output.WriteBytes(ShaSource);
        }
        if (HasShaTarget) {
          output.WriteRawTag(18);
          output.WriteBytes(ShaTarget);
        }
        if (HasSizeOriginal) {
          output.WriteRawTag(24);
          output.WriteUInt32(SizeOriginal);
        }
        if (HasPatchMethod) {
          output.WriteRawTag(32);
          output.WriteUInt32(PatchMethod);
        }
        if (HasChunk) {
          output.WriteRawTag(42);
          output.WriteBytes(Chunk);
        }
        if (HasSizeDelta) {
          output.WriteRawTag(48);
          output.WriteUInt32(SizeDelta);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasShaSource) {
          output.WriteRawTag(10);
          output.WriteBytes(ShaSource);
        }
        if (HasShaTarget) {
          output.WriteRawTag(18);
          output.WriteBytes(ShaTarget);
        }
        if (HasSizeOriginal) {
          output.WriteRawTag(24);
          output.WriteUInt32(SizeOriginal);
        }
        if (HasPatchMethod) {
          output.WriteRawTag(32);
          output.WriteUInt32(PatchMethod);
        }
        if (HasChunk) {
          output.WriteRawTag(42);
          output.WriteBytes(Chunk);
        }
        if (HasSizeDelta) {
          output.WriteRawTag(48);
          output.WriteUInt32(SizeDelta);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasShaSource) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaSource);
        }
        if (HasShaTarget) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaTarget);
        }
        if (HasSizeOriginal) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SizeOriginal);
        }
        if (HasPatchMethod) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PatchMethod);
        }
        if (HasChunk) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Chunk);
        }
        if (HasSizeDelta) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SizeDelta);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DeltaChunk other) {
        if (other == null) {
          return;
        }
        if (other.HasShaSource) {
          ShaSource = other.ShaSource;
        }
        if (other.HasShaTarget) {
          ShaTarget = other.ShaTarget;
        }
        if (other.HasSizeOriginal) {
          SizeOriginal = other.SizeOriginal;
        }
        if (other.HasPatchMethod) {
          PatchMethod = other.PatchMethod;
        }
        if (other.HasChunk) {
          Chunk = other.Chunk;
        }
        if (other.HasSizeDelta) {
          SizeDelta = other.SizeDelta;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              ShaSource = input.ReadBytes();
              break;
            }
            case 18: {
              ShaTarget = input.ReadBytes();
              break;
            }
            case 24: {
              SizeOriginal = input.ReadUInt32();
              break;
            }
            case 32: {
              PatchMethod = input.ReadUInt32();
              break;
            }
            case 42: {
              Chunk = input.ReadBytes();
              break;
            }
            case 48: {
              SizeDelta = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              ShaSource = input.ReadBytes();
              break;
            }
            case 18: {
              ShaTarget = input.ReadBytes();
              break;
            }
            case 24: {
              SizeOriginal = input.ReadUInt32();
              break;
            }
            case 32: {
              PatchMethod = input.ReadUInt32();
              break;
            }
            case 42: {
              Chunk = input.ReadBytes();
              break;
            }
            case 48: {
              SizeDelta = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code

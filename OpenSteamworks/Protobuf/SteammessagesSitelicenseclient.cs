// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_sitelicenseclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_sitelicenseclient.proto</summary>
public static partial class SteammessagesSitelicenseclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_sitelicenseclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesSitelicenseclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiVzdGVhbW1lc3NhZ2VzX3NpdGVsaWNlbnNlY2xpZW50LnByb3RvGhhzdGVh",
          "bW1lc3NhZ2VzX2Jhc2UucHJvdG8iWgoSQ01zZ0NsaWVudFNpdGVJbmZvEg8K",
          "B3NpdGVfaWQYASABKAQSEQoJc2l0ZV9uYW1lGAIgASgJEiAKGGFsbG93X2Nh",
          "Y2hlZF9jcmVkZW50aWFscxgDIAEoCCIuCh1DTXNnQ2xpZW50U2l0ZUxpY2Vu",
          "c2VDaGVja291dBINCgVhcHBpZBgBIAEoDSI7CiVDTXNnQ2xpZW50U2l0ZUxp",
          "Y2Vuc2VDaGVja291dFJlc3BvbnNlEhIKB2VyZXN1bHQYASABKAU6ATIiNwom",
          "Q01zZ0NsaWVudFNpdGVMaWNlbnNlR2V0QXZhaWxhYmxlU2VhdHMSDQoFYXBw",
          "aWQYASABKA0iUwouQ01zZ0NsaWVudFNpdGVMaWNlbnNlR2V0QXZhaWxhYmxl",
          "U2VhdHNSZXNwb25zZRISCgdlcmVzdWx0GAEgASgFOgEyEg0KBXNlYXRzGAIg",
          "ASgNIioKKENNc2dDbGllbnRTaXRlTGljZW5zZUdldENvbnRlbnRDYWNoZUlu",
          "Zm8ilwEKMENNc2dDbGllbnRTaXRlTGljZW5zZUdldENvbnRlbnRDYWNoZUlu",
          "Zm9SZXNwb25zZRIRCgl1c2VfY2FjaGUYASABKAgSFAoMaXB2NF9hZGRyZXNz",
          "GAIgASgNEhMKC3BvcnRfbnVtYmVyGAMgASgNEhEKCXAycF9ncm91cBgEIAEo",
          "DRISCgppcF9hZGRyZXNzGAUgASgJQgVIAYABAA=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSiteInfo), global::CMsgClientSiteInfo.Parser, new[]{ "SiteId", "SiteName", "AllowCachedCredentials" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSiteLicenseCheckout), global::CMsgClientSiteLicenseCheckout.Parser, new[]{ "Appid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSiteLicenseCheckoutResponse), global::CMsgClientSiteLicenseCheckoutResponse.Parser, new[]{ "Eresult" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSiteLicenseGetAvailableSeats), global::CMsgClientSiteLicenseGetAvailableSeats.Parser, new[]{ "Appid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSiteLicenseGetAvailableSeatsResponse), global::CMsgClientSiteLicenseGetAvailableSeatsResponse.Parser, new[]{ "Eresult", "Seats" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSiteLicenseGetContentCacheInfo), global::CMsgClientSiteLicenseGetContentCacheInfo.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSiteLicenseGetContentCacheInfoResponse), global::CMsgClientSiteLicenseGetContentCacheInfoResponse.Parser, new[]{ "UseCache", "Ipv4Address", "PortNumber", "P2PGroup", "IpAddress" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CMsgClientSiteInfo : pb::IMessage<CMsgClientSiteInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSiteInfo> _parser = new pb::MessageParser<CMsgClientSiteInfo>(() => new CMsgClientSiteInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSiteInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSitelicenseclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteInfo(CMsgClientSiteInfo other) : this() {
    _hasBits0 = other._hasBits0;
    siteId_ = other.siteId_;
    siteName_ = other.siteName_;
    allowCachedCredentials_ = other.allowCachedCredentials_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteInfo Clone() {
    return new CMsgClientSiteInfo(this);
  }

  /// <summary>Field number for the "site_id" field.</summary>
  public const int SiteIdFieldNumber = 1;
  private readonly static ulong SiteIdDefaultValue = 0UL;

  private ulong siteId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SiteId {
    get { if ((_hasBits0 & 1) != 0) { return siteId_; } else { return SiteIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      siteId_ = value;
    }
  }
  /// <summary>Gets whether the "site_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "site_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "site_name" field.</summary>
  public const int SiteNameFieldNumber = 2;
  private readonly static string SiteNameDefaultValue = "";

  private string siteName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SiteName {
    get { return siteName_ ?? SiteNameDefaultValue; }
    set {
      siteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "site_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteName {
    get { return siteName_ != null; }
  }
  /// <summary>Clears the value of the "site_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteName() {
    siteName_ = null;
  }

  /// <summary>Field number for the "allow_cached_credentials" field.</summary>
  public const int AllowCachedCredentialsFieldNumber = 3;
  private readonly static bool AllowCachedCredentialsDefaultValue = false;

  private bool allowCachedCredentials_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AllowCachedCredentials {
    get { if ((_hasBits0 & 2) != 0) { return allowCachedCredentials_; } else { return AllowCachedCredentialsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      allowCachedCredentials_ = value;
    }
  }
  /// <summary>Gets whether the "allow_cached_credentials" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAllowCachedCredentials {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "allow_cached_credentials" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAllowCachedCredentials() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSiteInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSiteInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SiteId != other.SiteId) return false;
    if (SiteName != other.SiteName) return false;
    if (AllowCachedCredentials != other.AllowCachedCredentials) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSiteId) hash ^= SiteId.GetHashCode();
    if (HasSiteName) hash ^= SiteName.GetHashCode();
    if (HasAllowCachedCredentials) hash ^= AllowCachedCredentials.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSiteId) {
      output.WriteRawTag(8);
      output.WriteUInt64(SiteId);
    }
    if (HasSiteName) {
      output.WriteRawTag(18);
      output.WriteString(SiteName);
    }
    if (HasAllowCachedCredentials) {
      output.WriteRawTag(24);
      output.WriteBool(AllowCachedCredentials);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSiteId) {
      output.WriteRawTag(8);
      output.WriteUInt64(SiteId);
    }
    if (HasSiteName) {
      output.WriteRawTag(18);
      output.WriteString(SiteName);
    }
    if (HasAllowCachedCredentials) {
      output.WriteRawTag(24);
      output.WriteBool(AllowCachedCredentials);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSiteId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SiteId);
    }
    if (HasSiteName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SiteName);
    }
    if (HasAllowCachedCredentials) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSiteInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasSiteId) {
      SiteId = other.SiteId;
    }
    if (other.HasSiteName) {
      SiteName = other.SiteName;
    }
    if (other.HasAllowCachedCredentials) {
      AllowCachedCredentials = other.AllowCachedCredentials;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SiteId = input.ReadUInt64();
          break;
        }
        case 18: {
          SiteName = input.ReadString();
          break;
        }
        case 24: {
          AllowCachedCredentials = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SiteId = input.ReadUInt64();
          break;
        }
        case 18: {
          SiteName = input.ReadString();
          break;
        }
        case 24: {
          AllowCachedCredentials = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSiteLicenseCheckout : pb::IMessage<CMsgClientSiteLicenseCheckout>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSiteLicenseCheckout> _parser = new pb::MessageParser<CMsgClientSiteLicenseCheckout>(() => new CMsgClientSiteLicenseCheckout());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSiteLicenseCheckout> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSitelicenseclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseCheckout() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseCheckout(CMsgClientSiteLicenseCheckout other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseCheckout Clone() {
    return new CMsgClientSiteLicenseCheckout(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSiteLicenseCheckout);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSiteLicenseCheckout other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSiteLicenseCheckout other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSiteLicenseCheckoutResponse : pb::IMessage<CMsgClientSiteLicenseCheckoutResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSiteLicenseCheckoutResponse> _parser = new pb::MessageParser<CMsgClientSiteLicenseCheckoutResponse>(() => new CMsgClientSiteLicenseCheckoutResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSiteLicenseCheckoutResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSitelicenseclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseCheckoutResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseCheckoutResponse(CMsgClientSiteLicenseCheckoutResponse other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseCheckoutResponse Clone() {
    return new CMsgClientSiteLicenseCheckoutResponse(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSiteLicenseCheckoutResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSiteLicenseCheckoutResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSiteLicenseCheckoutResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSiteLicenseGetAvailableSeats : pb::IMessage<CMsgClientSiteLicenseGetAvailableSeats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSiteLicenseGetAvailableSeats> _parser = new pb::MessageParser<CMsgClientSiteLicenseGetAvailableSeats>(() => new CMsgClientSiteLicenseGetAvailableSeats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSiteLicenseGetAvailableSeats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSitelicenseclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetAvailableSeats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetAvailableSeats(CMsgClientSiteLicenseGetAvailableSeats other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetAvailableSeats Clone() {
    return new CMsgClientSiteLicenseGetAvailableSeats(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSiteLicenseGetAvailableSeats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSiteLicenseGetAvailableSeats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSiteLicenseGetAvailableSeats other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSiteLicenseGetAvailableSeatsResponse : pb::IMessage<CMsgClientSiteLicenseGetAvailableSeatsResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSiteLicenseGetAvailableSeatsResponse> _parser = new pb::MessageParser<CMsgClientSiteLicenseGetAvailableSeatsResponse>(() => new CMsgClientSiteLicenseGetAvailableSeatsResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSiteLicenseGetAvailableSeatsResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSitelicenseclientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetAvailableSeatsResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetAvailableSeatsResponse(CMsgClientSiteLicenseGetAvailableSeatsResponse other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    seats_ = other.seats_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetAvailableSeatsResponse Clone() {
    return new CMsgClientSiteLicenseGetAvailableSeatsResponse(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "seats" field.</summary>
  public const int SeatsFieldNumber = 2;
  private readonly static uint SeatsDefaultValue = 0;

  private uint seats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Seats {
    get { if ((_hasBits0 & 2) != 0) { return seats_; } else { return SeatsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      seats_ = value;
    }
  }
  /// <summary>Gets whether the "seats" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeats {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "seats" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeats() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSiteLicenseGetAvailableSeatsResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSiteLicenseGetAvailableSeatsResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    if (Seats != other.Seats) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasSeats) hash ^= Seats.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasSeats) {
      output.WriteRawTag(16);
      output.WriteUInt32(Seats);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasSeats) {
      output.WriteRawTag(16);
      output.WriteUInt32(Seats);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (HasSeats) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seats);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSiteLicenseGetAvailableSeatsResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasSeats) {
      Seats = other.Seats;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 16: {
          Seats = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 16: {
          Seats = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSiteLicenseGetContentCacheInfo : pb::IMessage<CMsgClientSiteLicenseGetContentCacheInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSiteLicenseGetContentCacheInfo> _parser = new pb::MessageParser<CMsgClientSiteLicenseGetContentCacheInfo>(() => new CMsgClientSiteLicenseGetContentCacheInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSiteLicenseGetContentCacheInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSitelicenseclientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetContentCacheInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetContentCacheInfo(CMsgClientSiteLicenseGetContentCacheInfo other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetContentCacheInfo Clone() {
    return new CMsgClientSiteLicenseGetContentCacheInfo(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSiteLicenseGetContentCacheInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSiteLicenseGetContentCacheInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSiteLicenseGetContentCacheInfo other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSiteLicenseGetContentCacheInfoResponse : pb::IMessage<CMsgClientSiteLicenseGetContentCacheInfoResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSiteLicenseGetContentCacheInfoResponse> _parser = new pb::MessageParser<CMsgClientSiteLicenseGetContentCacheInfoResponse>(() => new CMsgClientSiteLicenseGetContentCacheInfoResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSiteLicenseGetContentCacheInfoResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSitelicenseclientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetContentCacheInfoResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetContentCacheInfoResponse(CMsgClientSiteLicenseGetContentCacheInfoResponse other) : this() {
    _hasBits0 = other._hasBits0;
    useCache_ = other.useCache_;
    ipv4Address_ = other.ipv4Address_;
    portNumber_ = other.portNumber_;
    p2PGroup_ = other.p2PGroup_;
    ipAddress_ = other.ipAddress_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSiteLicenseGetContentCacheInfoResponse Clone() {
    return new CMsgClientSiteLicenseGetContentCacheInfoResponse(this);
  }

  /// <summary>Field number for the "use_cache" field.</summary>
  public const int UseCacheFieldNumber = 1;
  private readonly static bool UseCacheDefaultValue = false;

  private bool useCache_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool UseCache {
    get { if ((_hasBits0 & 1) != 0) { return useCache_; } else { return UseCacheDefaultValue; } }
    set {
      _hasBits0 |= 1;
      useCache_ = value;
    }
  }
  /// <summary>Gets whether the "use_cache" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUseCache {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "use_cache" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUseCache() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ipv4_address" field.</summary>
  public const int Ipv4AddressFieldNumber = 2;
  private readonly static uint Ipv4AddressDefaultValue = 0;

  private uint ipv4Address_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ipv4Address {
    get { if ((_hasBits0 & 2) != 0) { return ipv4Address_; } else { return Ipv4AddressDefaultValue; } }
    set {
      _hasBits0 |= 2;
      ipv4Address_ = value;
    }
  }
  /// <summary>Gets whether the "ipv4_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpv4Address {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ipv4_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpv4Address() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "port_number" field.</summary>
  public const int PortNumberFieldNumber = 3;
  private readonly static uint PortNumberDefaultValue = 0;

  private uint portNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PortNumber {
    get { if ((_hasBits0 & 4) != 0) { return portNumber_; } else { return PortNumberDefaultValue; } }
    set {
      _hasBits0 |= 4;
      portNumber_ = value;
    }
  }
  /// <summary>Gets whether the "port_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPortNumber {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "port_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPortNumber() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "p2p_group" field.</summary>
  public const int P2PGroupFieldNumber = 4;
  private readonly static uint P2PGroupDefaultValue = 0;

  private uint p2PGroup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint P2PGroup {
    get { if ((_hasBits0 & 8) != 0) { return p2PGroup_; } else { return P2PGroupDefaultValue; } }
    set {
      _hasBits0 |= 8;
      p2PGroup_ = value;
    }
  }
  /// <summary>Gets whether the "p2p_group" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasP2PGroup {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "p2p_group" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearP2PGroup() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "ip_address" field.</summary>
  public const int IpAddressFieldNumber = 5;
  private readonly static string IpAddressDefaultValue = "";

  private string ipAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IpAddress {
    get { return ipAddress_ ?? IpAddressDefaultValue; }
    set {
      ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ip_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpAddress {
    get { return ipAddress_ != null; }
  }
  /// <summary>Clears the value of the "ip_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpAddress() {
    ipAddress_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSiteLicenseGetContentCacheInfoResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSiteLicenseGetContentCacheInfoResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UseCache != other.UseCache) return false;
    if (Ipv4Address != other.Ipv4Address) return false;
    if (PortNumber != other.PortNumber) return false;
    if (P2PGroup != other.P2PGroup) return false;
    if (IpAddress != other.IpAddress) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasUseCache) hash ^= UseCache.GetHashCode();
    if (HasIpv4Address) hash ^= Ipv4Address.GetHashCode();
    if (HasPortNumber) hash ^= PortNumber.GetHashCode();
    if (HasP2PGroup) hash ^= P2PGroup.GetHashCode();
    if (HasIpAddress) hash ^= IpAddress.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasUseCache) {
      output.WriteRawTag(8);
      output.WriteBool(UseCache);
    }
    if (HasIpv4Address) {
      output.WriteRawTag(16);
      output.WriteUInt32(Ipv4Address);
    }
    if (HasPortNumber) {
      output.WriteRawTag(24);
      output.WriteUInt32(PortNumber);
    }
    if (HasP2PGroup) {
      output.WriteRawTag(32);
      output.WriteUInt32(P2PGroup);
    }
    if (HasIpAddress) {
      output.WriteRawTag(42);
      output.WriteString(IpAddress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasUseCache) {
      output.WriteRawTag(8);
      output.WriteBool(UseCache);
    }
    if (HasIpv4Address) {
      output.WriteRawTag(16);
      output.WriteUInt32(Ipv4Address);
    }
    if (HasPortNumber) {
      output.WriteRawTag(24);
      output.WriteUInt32(PortNumber);
    }
    if (HasP2PGroup) {
      output.WriteRawTag(32);
      output.WriteUInt32(P2PGroup);
    }
    if (HasIpAddress) {
      output.WriteRawTag(42);
      output.WriteString(IpAddress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasUseCache) {
      size += 1 + 1;
    }
    if (HasIpv4Address) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ipv4Address);
    }
    if (HasPortNumber) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PortNumber);
    }
    if (HasP2PGroup) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(P2PGroup);
    }
    if (HasIpAddress) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSiteLicenseGetContentCacheInfoResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasUseCache) {
      UseCache = other.UseCache;
    }
    if (other.HasIpv4Address) {
      Ipv4Address = other.Ipv4Address;
    }
    if (other.HasPortNumber) {
      PortNumber = other.PortNumber;
    }
    if (other.HasP2PGroup) {
      P2PGroup = other.P2PGroup;
    }
    if (other.HasIpAddress) {
      IpAddress = other.IpAddress;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UseCache = input.ReadBool();
          break;
        }
        case 16: {
          Ipv4Address = input.ReadUInt32();
          break;
        }
        case 24: {
          PortNumber = input.ReadUInt32();
          break;
        }
        case 32: {
          P2PGroup = input.ReadUInt32();
          break;
        }
        case 42: {
          IpAddress = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UseCache = input.ReadBool();
          break;
        }
        case 16: {
          Ipv4Address = input.ReadUInt32();
          break;
        }
        case 24: {
          PortNumber = input.ReadUInt32();
          break;
        }
        case 32: {
          P2PGroup = input.ReadUInt32();
          break;
        }
        case 42: {
          IpAddress = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

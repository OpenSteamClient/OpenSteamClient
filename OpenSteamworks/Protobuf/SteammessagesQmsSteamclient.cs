// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_qms.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_qms.steamclient.proto</summary>
public static partial class SteammessagesQmsSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_qms.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesQmsSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiNzdGVhbW1lc3NhZ2VzX3Ftcy5zdGVhbWNsaWVudC5wcm90bxoYc3RlYW1t",
          "ZXNzYWdlc19iYXNlLnByb3RvGixzdGVhbW1lc3NhZ2VzX3VuaWZpZWRfYmFz",
          "ZS5zdGVhbWNsaWVudC5wcm90byIyCg9HYW1lU2VhcmNoUGFyYW0SEAoIa2V5",
          "X25hbWUYASABKAkSDQoFdmFsdWUYAiADKAki6QEKKENRdWV1ZWRNYXRjaG1h",
          "a2luZ19TZWFyY2hGb3JHYW1lX1JlcXVlc3QSDQoFYXBwaWQYASABKA0SPAoG",
          "YWN0aW9uGAIgASgOMhIuRUdhbWVTZWFyY2hBY3Rpb246GGtfRUdhbWVTZWFy",
          "Y2hBY3Rpb25fTm9uZRIgCgZwYXJhbXMYAyADKAsyEC5HYW1lU2VhcmNoUGFy",
          "YW0SEgoKcGxheWVyX21pbhgEIAEoDRISCgpwbGF5ZXJfbWF4GAUgASgNEhQK",
          "DHN0ZWFtaWRsb2JieRgGIAEoBhIQCghzZWFyY2hpZBgHIAEoBCKHAwopQ1F1",
          "ZXVlZE1hdGNobWFraW5nX1NlYXJjaEZvckdhbWVfUmVzcG9uc2USSQoQZ2Ft",
          "ZXNlYXJjaHJlc3VsdBgBIAEoDjISLkVHYW1lU2VhcmNoUmVzdWx0OhtrX0VH",
          "YW1lU2VhcmNoUmVzdWx0X0ludmFsaWQSEAoIc2VhcmNoaWQYAiABKAQSHQoV",
          "c2Vjb25kc190aW1lX2VzdGltYXRlGAMgASgNEhYKDnBvbGxfZnJlcXVlbmN5",
          "GAQgASgNEhcKD2NvdW50X3NlYXJjaGluZxgFIAEoDRIYChBwbGF5ZXJzX2lu",
          "X21hdGNoGAYgASgNEhgKEHBsYXllcnNfYWNjZXB0ZWQYByABKA0SFgoOY29u",
          "bmVjdF9zdHJpbmcYCSABKAkSEwoLc3RlYW1pZGhvc3QYCiABKAYSGAoQcnRp",
          "bWVfbWF0Y2hfbWFkZRgLIAEoDRIRCglydGltZV9ub3cYDCABKA0SHwoXc3Rl",
          "YW1pZF9jYW5jZWxlZF9zZWFyY2gYDSABKAYilwIKM0NRdWV1ZWRNYXRjaG1h",
          "a2luZ0dhbWVIb3N0X1NlYXJjaEZvclBsYXllcnNfUmVxdWVzdBINCgVhcHBp",
          "ZBgBIAEoDRI8CgZhY3Rpb24YAiABKA4yEi5FR2FtZVNlYXJjaEFjdGlvbjoY",
          "a19FR2FtZVNlYXJjaEFjdGlvbl9Ob25lEiAKBnBhcmFtcxgDIAMoCzIQLkdh",
          "bWVTZWFyY2hQYXJhbRISCgpwbGF5ZXJfbWluGAQgASgNEhIKCnBsYXllcl9t",
          "YXgYBSABKA0SHAoUcGxheWVyX21heF90ZWFtX3NpemUYBiABKA0SGQoRY29u",
          "bmVjdGlvbl9zdHJpbmcYByABKAkSEAoIc2VhcmNoaWQYCCABKAQikwEKC1Bs",
          "YXllckZvdW5kEg8KB3N0ZWFtaWQYASABKAYSPAoGYWN0aW9uGAIgASgOMhIu",
          "RUdhbWVTZWFyY2hBY3Rpb246GGtfRUdhbWVTZWFyY2hBY3Rpb25fTm9uZRIg",
          "CgZwYXJhbXMYAyADKAsyEC5HYW1lU2VhcmNoUGFyYW0SEwoLdGVhbV9udW1i",
          "ZXIYBCABKA0iiAIKNENRdWV1ZWRNYXRjaG1ha2luZ0dhbWVIb3N0X1NlYXJj",
          "aEZvclBsYXllcnNfUmVzcG9uc2USSQoQZ2FtZXNlYXJjaHJlc3VsdBgBIAEo",
          "DjISLkVHYW1lU2VhcmNoUmVzdWx0OhtrX0VHYW1lU2VhcmNoUmVzdWx0X0lu",
          "dmFsaWQSEAoIc2VhcmNoaWQYAiABKAQSFgoOcG9sbF9mcmVxdWVuY3kYAyAB",
          "KA0SDwoHbWF0Y2hpZBgEIAEoBBIdCgdwbGF5ZXJzGAUgAygLMgwuUGxheWVy",
          "Rm91bmQSGAoQcnRpbWVfbWF0Y2hfbWFkZRgGIAEoDRIRCglydGltZV9ub3cY",
          "ByABKA0iLgoMUGxheWVyUmVzdWx0Eg8KB3N0ZWFtaWQYASABKAYSDQoFdmFs",
          "dWUYAiABKA0ifgo1Q1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfU3VibWl0",
          "UGxheWVyUmVzdWx0X1JlcXVlc3QSDQoFYXBwaWQYASABKA0SDwoHbWF0Y2hp",
          "ZBgCIAEoBBIlCg5wbGF5ZXJfcmVzdWx0cxgDIAMoCzINLlBsYXllclJlc3Vs",
          "dCI4CjZDUXVldWVkTWF0Y2htYWtpbmdHYW1lSG9zdF9TdWJtaXRQbGF5ZXJS",
          "ZXN1bHRfUmVzcG9uc2UiTAoqQ1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3Rf",
          "RW5kR2FtZV9SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNEg8KB21hdGNoaWQYAiAB",
          "KAQiLQorQ1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfRW5kR2FtZV9SZXNw",
          "b25zZSqSAQoRRUdhbWVTZWFyY2hBY3Rpb24SHAoYa19FR2FtZVNlYXJjaEFj",
          "dGlvbl9Ob25lEAASHgoaa19FR2FtZVNlYXJjaEFjdGlvbl9BY2NlcHQQARIf",
          "ChtrX0VHYW1lU2VhcmNoQWN0aW9uX0RlY2xpbmUQAhIeChprX0VHYW1lU2Vh",
          "cmNoQWN0aW9uX0NhbmNlbBADKrwCChFFR2FtZVNlYXJjaFJlc3VsdBIfChtr",
          "X0VHYW1lU2VhcmNoUmVzdWx0X0ludmFsaWQQABIoCiRrX0VHYW1lU2VhcmNo",
          "UmVzdWx0X1NlYXJjaEluUHJvZ3Jlc3MQARIrCidrX0VHYW1lU2VhcmNoUmVz",
          "dWx0X1NlYXJjaEZhaWxlZE5vSG9zdHMQAhInCiNrX0VHYW1lU2VhcmNoUmVz",
          "dWx0X1NlYXJjaEdhbWVGb3VuZBADEi4KKmtfRUdhbWVTZWFyY2hSZXN1bHRf",
          "U2VhcmNoQ29tcGxldGVBY2NlcHRlZBAEEi4KKmtfRUdhbWVTZWFyY2hSZXN1",
          "bHRfU2VhcmNoQ29tcGxldGVEZWNsaW5lZBAFEiYKImtfRUdhbWVTZWFyY2hS",
          "ZXN1bHRfU2VhcmNoQ2FuY2VsZWQQBjKyAQoRUXVldWVkTWF0Y2htYWtpbmcS",
          "fQoNU2VhcmNoRm9yR2FtZRIpLkNRdWV1ZWRNYXRjaG1ha2luZ19TZWFyY2hG",
          "b3JHYW1lX1JlcXVlc3QaKi5DUXVldWVkTWF0Y2htYWtpbmdfU2VhcmNoRm9y",
          "R2FtZV9SZXNwb25zZSIVgrUYEVNlYXJjaCBmb3IgYSBnYW1lGh6CtRgaUXVl",
          "dWVkIG1hdGNobWFraW5nIHNlcnZpY2Uy6wMKGVF1ZXVlZE1hdGNobWFraW5n",
          "R2FtZUhvc3QSlQEKEFNlYXJjaEZvclBsYXllcnMSNC5DUXVldWVkTWF0Y2ht",
          "YWtpbmdHYW1lSG9zdF9TZWFyY2hGb3JQbGF5ZXJzX1JlcXVlc3QaNS5DUXVl",
          "dWVkTWF0Y2htYWtpbmdHYW1lSG9zdF9TZWFyY2hGb3JQbGF5ZXJzX1Jlc3Bv",
          "bnNlIhSCtRgQU2VhcmNoRm9yUGxheWVycxKdAQoSU3VibWl0UGxheWVyUmVz",
          "dWx0EjYuQ1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfU3VibWl0UGxheWVy",
          "UmVzdWx0X1JlcXVlc3QaNy5DUXVldWVkTWF0Y2htYWtpbmdHYW1lSG9zdF9T",
          "dWJtaXRQbGF5ZXJSZXN1bHRfUmVzcG9uc2UiFoK1GBJTdWJtaXRQbGF5ZXJS",
          "ZXN1bHQScQoHRW5kR2FtZRIrLkNRdWV1ZWRNYXRjaG1ha2luZ0dhbWVIb3N0",
          "X0VuZEdhbWVfUmVxdWVzdBosLkNRdWV1ZWRNYXRjaG1ha2luZ0dhbWVIb3N0",
          "X0VuZEdhbWVfUmVzcG9uc2UiC4K1GAdFbmRHYW1lGiOCtRgfUXVldWVkIG1h",
          "dGNobWFraW5nIGhvc3Qgc2VydmljZUIDgAEB"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EGameSearchAction), typeof(global::EGameSearchResult), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GameSearchParam), global::GameSearchParam.Parser, new[]{ "KeyName", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmaking_SearchForGame_Request), global::CQueuedMatchmaking_SearchForGame_Request.Parser, new[]{ "Appid", "Action", "Params", "PlayerMin", "PlayerMax", "Steamidlobby", "Searchid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmaking_SearchForGame_Response), global::CQueuedMatchmaking_SearchForGame_Response.Parser, new[]{ "Gamesearchresult", "Searchid", "SecondsTimeEstimate", "PollFrequency", "CountSearching", "PlayersInMatch", "PlayersAccepted", "ConnectString", "Steamidhost", "RtimeMatchMade", "RtimeNow", "SteamidCanceledSearch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmakingGameHost_SearchForPlayers_Request), global::CQueuedMatchmakingGameHost_SearchForPlayers_Request.Parser, new[]{ "Appid", "Action", "Params", "PlayerMin", "PlayerMax", "PlayerMaxTeamSize", "ConnectionString", "Searchid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerFound), global::PlayerFound.Parser, new[]{ "Steamid", "Action", "Params", "TeamNumber" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmakingGameHost_SearchForPlayers_Response), global::CQueuedMatchmakingGameHost_SearchForPlayers_Response.Parser, new[]{ "Gamesearchresult", "Searchid", "PollFrequency", "Matchid", "Players", "RtimeMatchMade", "RtimeNow" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerResult), global::PlayerResult.Parser, new[]{ "Steamid", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmakingGameHost_SubmitPlayerResult_Request), global::CQueuedMatchmakingGameHost_SubmitPlayerResult_Request.Parser, new[]{ "Appid", "Matchid", "PlayerResults" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmakingGameHost_SubmitPlayerResult_Response), global::CQueuedMatchmakingGameHost_SubmitPlayerResult_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmakingGameHost_EndGame_Request), global::CQueuedMatchmakingGameHost_EndGame_Request.Parser, new[]{ "Appid", "Matchid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CQueuedMatchmakingGameHost_EndGame_Response), global::CQueuedMatchmakingGameHost_EndGame_Response.Parser, null, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EGameSearchAction {
  [pbr::OriginalName("k_EGameSearchAction_None")] KEgameSearchActionNone = 0,
  [pbr::OriginalName("k_EGameSearchAction_Accept")] KEgameSearchActionAccept = 1,
  [pbr::OriginalName("k_EGameSearchAction_Decline")] KEgameSearchActionDecline = 2,
  [pbr::OriginalName("k_EGameSearchAction_Cancel")] KEgameSearchActionCancel = 3,
}

public enum EGameSearchResult {
  [pbr::OriginalName("k_EGameSearchResult_Invalid")] KEgameSearchResultInvalid = 0,
  [pbr::OriginalName("k_EGameSearchResult_SearchInProgress")] KEgameSearchResultSearchInProgress = 1,
  [pbr::OriginalName("k_EGameSearchResult_SearchFailedNoHosts")] KEgameSearchResultSearchFailedNoHosts = 2,
  [pbr::OriginalName("k_EGameSearchResult_SearchGameFound")] KEgameSearchResultSearchGameFound = 3,
  [pbr::OriginalName("k_EGameSearchResult_SearchCompleteAccepted")] KEgameSearchResultSearchCompleteAccepted = 4,
  [pbr::OriginalName("k_EGameSearchResult_SearchCompleteDeclined")] KEgameSearchResultSearchCompleteDeclined = 5,
  [pbr::OriginalName("k_EGameSearchResult_SearchCanceled")] KEgameSearchResultSearchCanceled = 6,
}

#endregion

#region Messages
public sealed partial class GameSearchParam : pb::IMessage<GameSearchParam>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameSearchParam> _parser = new pb::MessageParser<GameSearchParam>(() => new GameSearchParam());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameSearchParam> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameSearchParam() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameSearchParam(GameSearchParam other) : this() {
    keyName_ = other.keyName_;
    value_ = other.value_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameSearchParam Clone() {
    return new GameSearchParam(this);
  }

  /// <summary>Field number for the "key_name" field.</summary>
  public const int KeyNameFieldNumber = 1;
  private readonly static string KeyNameDefaultValue = "";

  private string keyName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string KeyName {
    get { return keyName_ ?? KeyNameDefaultValue; }
    set {
      keyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "key_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyName {
    get { return keyName_ != null; }
  }
  /// <summary>Clears the value of the "key_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyName() {
    keyName_ = null;
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_value_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> value_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> Value {
    get { return value_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameSearchParam);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameSearchParam other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KeyName != other.KeyName) return false;
    if(!value_.Equals(other.value_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasKeyName) hash ^= KeyName.GetHashCode();
    hash ^= value_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasKeyName) {
      output.WriteRawTag(10);
      output.WriteString(KeyName);
    }
    value_.WriteTo(output, _repeated_value_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasKeyName) {
      output.WriteRawTag(10);
      output.WriteString(KeyName);
    }
    value_.WriteTo(ref output, _repeated_value_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasKeyName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyName);
    }
    size += value_.CalculateSize(_repeated_value_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameSearchParam other) {
    if (other == null) {
      return;
    }
    if (other.HasKeyName) {
      KeyName = other.KeyName;
    }
    value_.Add(other.value_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          KeyName = input.ReadString();
          break;
        }
        case 18: {
          value_.AddEntriesFrom(input, _repeated_value_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          KeyName = input.ReadString();
          break;
        }
        case 18: {
          value_.AddEntriesFrom(ref input, _repeated_value_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmaking_SearchForGame_Request : pb::IMessage<CQueuedMatchmaking_SearchForGame_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmaking_SearchForGame_Request> _parser = new pb::MessageParser<CQueuedMatchmaking_SearchForGame_Request>(() => new CQueuedMatchmaking_SearchForGame_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmaking_SearchForGame_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmaking_SearchForGame_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmaking_SearchForGame_Request(CQueuedMatchmaking_SearchForGame_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    action_ = other.action_;
    params_ = other.params_.Clone();
    playerMin_ = other.playerMin_;
    playerMax_ = other.playerMax_;
    steamidlobby_ = other.steamidlobby_;
    searchid_ = other.searchid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmaking_SearchForGame_Request Clone() {
    return new CQueuedMatchmaking_SearchForGame_Request(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "action" field.</summary>
  public const int ActionFieldNumber = 2;
  private readonly static global::EGameSearchAction ActionDefaultValue = global::EGameSearchAction.KEgameSearchActionNone;

  private global::EGameSearchAction action_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EGameSearchAction Action {
    get { if ((_hasBits0 & 2) != 0) { return action_; } else { return ActionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      action_ = value;
    }
  }
  /// <summary>Gets whether the "action" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAction {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "action" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAction() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "params" field.</summary>
  public const int ParamsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::GameSearchParam> _repeated_params_codec
      = pb::FieldCodec.ForMessage(26, global::GameSearchParam.Parser);
  private readonly pbc::RepeatedField<global::GameSearchParam> params_ = new pbc::RepeatedField<global::GameSearchParam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::GameSearchParam> Params {
    get { return params_; }
  }

  /// <summary>Field number for the "player_min" field.</summary>
  public const int PlayerMinFieldNumber = 4;
  private readonly static uint PlayerMinDefaultValue = 0;

  private uint playerMin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerMin {
    get { if ((_hasBits0 & 4) != 0) { return playerMin_; } else { return PlayerMinDefaultValue; } }
    set {
      _hasBits0 |= 4;
      playerMin_ = value;
    }
  }
  /// <summary>Gets whether the "player_min" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerMin {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "player_min" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerMin() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "player_max" field.</summary>
  public const int PlayerMaxFieldNumber = 5;
  private readonly static uint PlayerMaxDefaultValue = 0;

  private uint playerMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerMax {
    get { if ((_hasBits0 & 8) != 0) { return playerMax_; } else { return PlayerMaxDefaultValue; } }
    set {
      _hasBits0 |= 8;
      playerMax_ = value;
    }
  }
  /// <summary>Gets whether the "player_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerMax {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "player_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerMax() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "steamidlobby" field.</summary>
  public const int SteamidlobbyFieldNumber = 6;
  private readonly static ulong SteamidlobbyDefaultValue = 0UL;

  private ulong steamidlobby_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamidlobby {
    get { if ((_hasBits0 & 16) != 0) { return steamidlobby_; } else { return SteamidlobbyDefaultValue; } }
    set {
      _hasBits0 |= 16;
      steamidlobby_ = value;
    }
  }
  /// <summary>Gets whether the "steamidlobby" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamidlobby {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "steamidlobby" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamidlobby() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "searchid" field.</summary>
  public const int SearchidFieldNumber = 7;
  private readonly static ulong SearchidDefaultValue = 0UL;

  private ulong searchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Searchid {
    get { if ((_hasBits0 & 32) != 0) { return searchid_; } else { return SearchidDefaultValue; } }
    set {
      _hasBits0 |= 32;
      searchid_ = value;
    }
  }
  /// <summary>Gets whether the "searchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSearchid {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "searchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSearchid() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmaking_SearchForGame_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmaking_SearchForGame_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Action != other.Action) return false;
    if(!params_.Equals(other.params_)) return false;
    if (PlayerMin != other.PlayerMin) return false;
    if (PlayerMax != other.PlayerMax) return false;
    if (Steamidlobby != other.Steamidlobby) return false;
    if (Searchid != other.Searchid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasAction) hash ^= Action.GetHashCode();
    hash ^= params_.GetHashCode();
    if (HasPlayerMin) hash ^= PlayerMin.GetHashCode();
    if (HasPlayerMax) hash ^= PlayerMax.GetHashCode();
    if (HasSteamidlobby) hash ^= Steamidlobby.GetHashCode();
    if (HasSearchid) hash ^= Searchid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasAction) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Action);
    }
    params_.WriteTo(output, _repeated_params_codec);
    if (HasPlayerMin) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayerMin);
    }
    if (HasPlayerMax) {
      output.WriteRawTag(40);
      output.WriteUInt32(PlayerMax);
    }
    if (HasSteamidlobby) {
      output.WriteRawTag(49);
      output.WriteFixed64(Steamidlobby);
    }
    if (HasSearchid) {
      output.WriteRawTag(56);
      output.WriteUInt64(Searchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasAction) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Action);
    }
    params_.WriteTo(ref output, _repeated_params_codec);
    if (HasPlayerMin) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayerMin);
    }
    if (HasPlayerMax) {
      output.WriteRawTag(40);
      output.WriteUInt32(PlayerMax);
    }
    if (HasSteamidlobby) {
      output.WriteRawTag(49);
      output.WriteFixed64(Steamidlobby);
    }
    if (HasSearchid) {
      output.WriteRawTag(56);
      output.WriteUInt64(Searchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasAction) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
    }
    size += params_.CalculateSize(_repeated_params_codec);
    if (HasPlayerMin) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerMin);
    }
    if (HasPlayerMax) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerMax);
    }
    if (HasSteamidlobby) {
      size += 1 + 8;
    }
    if (HasSearchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Searchid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmaking_SearchForGame_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasAction) {
      Action = other.Action;
    }
    params_.Add(other.params_);
    if (other.HasPlayerMin) {
      PlayerMin = other.PlayerMin;
    }
    if (other.HasPlayerMax) {
      PlayerMax = other.PlayerMax;
    }
    if (other.HasSteamidlobby) {
      Steamidlobby = other.Steamidlobby;
    }
    if (other.HasSearchid) {
      Searchid = other.Searchid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Action = (global::EGameSearchAction) input.ReadEnum();
          break;
        }
        case 26: {
          params_.AddEntriesFrom(input, _repeated_params_codec);
          break;
        }
        case 32: {
          PlayerMin = input.ReadUInt32();
          break;
        }
        case 40: {
          PlayerMax = input.ReadUInt32();
          break;
        }
        case 49: {
          Steamidlobby = input.ReadFixed64();
          break;
        }
        case 56: {
          Searchid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Action = (global::EGameSearchAction) input.ReadEnum();
          break;
        }
        case 26: {
          params_.AddEntriesFrom(ref input, _repeated_params_codec);
          break;
        }
        case 32: {
          PlayerMin = input.ReadUInt32();
          break;
        }
        case 40: {
          PlayerMax = input.ReadUInt32();
          break;
        }
        case 49: {
          Steamidlobby = input.ReadFixed64();
          break;
        }
        case 56: {
          Searchid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmaking_SearchForGame_Response : pb::IMessage<CQueuedMatchmaking_SearchForGame_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmaking_SearchForGame_Response> _parser = new pb::MessageParser<CQueuedMatchmaking_SearchForGame_Response>(() => new CQueuedMatchmaking_SearchForGame_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmaking_SearchForGame_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmaking_SearchForGame_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmaking_SearchForGame_Response(CQueuedMatchmaking_SearchForGame_Response other) : this() {
    _hasBits0 = other._hasBits0;
    gamesearchresult_ = other.gamesearchresult_;
    searchid_ = other.searchid_;
    secondsTimeEstimate_ = other.secondsTimeEstimate_;
    pollFrequency_ = other.pollFrequency_;
    countSearching_ = other.countSearching_;
    playersInMatch_ = other.playersInMatch_;
    playersAccepted_ = other.playersAccepted_;
    connectString_ = other.connectString_;
    steamidhost_ = other.steamidhost_;
    rtimeMatchMade_ = other.rtimeMatchMade_;
    rtimeNow_ = other.rtimeNow_;
    steamidCanceledSearch_ = other.steamidCanceledSearch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmaking_SearchForGame_Response Clone() {
    return new CQueuedMatchmaking_SearchForGame_Response(this);
  }

  /// <summary>Field number for the "gamesearchresult" field.</summary>
  public const int GamesearchresultFieldNumber = 1;
  private readonly static global::EGameSearchResult GamesearchresultDefaultValue = global::EGameSearchResult.KEgameSearchResultInvalid;

  private global::EGameSearchResult gamesearchresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EGameSearchResult Gamesearchresult {
    get { if ((_hasBits0 & 1) != 0) { return gamesearchresult_; } else { return GamesearchresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gamesearchresult_ = value;
    }
  }
  /// <summary>Gets whether the "gamesearchresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGamesearchresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "gamesearchresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGamesearchresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "searchid" field.</summary>
  public const int SearchidFieldNumber = 2;
  private readonly static ulong SearchidDefaultValue = 0UL;

  private ulong searchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Searchid {
    get { if ((_hasBits0 & 2) != 0) { return searchid_; } else { return SearchidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      searchid_ = value;
    }
  }
  /// <summary>Gets whether the "searchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSearchid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "searchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSearchid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "seconds_time_estimate" field.</summary>
  public const int SecondsTimeEstimateFieldNumber = 3;
  private readonly static uint SecondsTimeEstimateDefaultValue = 0;

  private uint secondsTimeEstimate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SecondsTimeEstimate {
    get { if ((_hasBits0 & 4) != 0) { return secondsTimeEstimate_; } else { return SecondsTimeEstimateDefaultValue; } }
    set {
      _hasBits0 |= 4;
      secondsTimeEstimate_ = value;
    }
  }
  /// <summary>Gets whether the "seconds_time_estimate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSecondsTimeEstimate {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "seconds_time_estimate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSecondsTimeEstimate() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "poll_frequency" field.</summary>
  public const int PollFrequencyFieldNumber = 4;
  private readonly static uint PollFrequencyDefaultValue = 0;

  private uint pollFrequency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PollFrequency {
    get { if ((_hasBits0 & 8) != 0) { return pollFrequency_; } else { return PollFrequencyDefaultValue; } }
    set {
      _hasBits0 |= 8;
      pollFrequency_ = value;
    }
  }
  /// <summary>Gets whether the "poll_frequency" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPollFrequency {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "poll_frequency" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPollFrequency() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "count_searching" field.</summary>
  public const int CountSearchingFieldNumber = 5;
  private readonly static uint CountSearchingDefaultValue = 0;

  private uint countSearching_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CountSearching {
    get { if ((_hasBits0 & 16) != 0) { return countSearching_; } else { return CountSearchingDefaultValue; } }
    set {
      _hasBits0 |= 16;
      countSearching_ = value;
    }
  }
  /// <summary>Gets whether the "count_searching" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountSearching {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "count_searching" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountSearching() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "players_in_match" field.</summary>
  public const int PlayersInMatchFieldNumber = 6;
  private readonly static uint PlayersInMatchDefaultValue = 0;

  private uint playersInMatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayersInMatch {
    get { if ((_hasBits0 & 32) != 0) { return playersInMatch_; } else { return PlayersInMatchDefaultValue; } }
    set {
      _hasBits0 |= 32;
      playersInMatch_ = value;
    }
  }
  /// <summary>Gets whether the "players_in_match" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayersInMatch {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "players_in_match" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayersInMatch() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "players_accepted" field.</summary>
  public const int PlayersAcceptedFieldNumber = 7;
  private readonly static uint PlayersAcceptedDefaultValue = 0;

  private uint playersAccepted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayersAccepted {
    get { if ((_hasBits0 & 64) != 0) { return playersAccepted_; } else { return PlayersAcceptedDefaultValue; } }
    set {
      _hasBits0 |= 64;
      playersAccepted_ = value;
    }
  }
  /// <summary>Gets whether the "players_accepted" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayersAccepted {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "players_accepted" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayersAccepted() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "connect_string" field.</summary>
  public const int ConnectStringFieldNumber = 9;
  private readonly static string ConnectStringDefaultValue = "";

  private string connectString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ConnectString {
    get { return connectString_ ?? ConnectStringDefaultValue; }
    set {
      connectString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "connect_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectString {
    get { return connectString_ != null; }
  }
  /// <summary>Clears the value of the "connect_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectString() {
    connectString_ = null;
  }

  /// <summary>Field number for the "steamidhost" field.</summary>
  public const int SteamidhostFieldNumber = 10;
  private readonly static ulong SteamidhostDefaultValue = 0UL;

  private ulong steamidhost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamidhost {
    get { if ((_hasBits0 & 128) != 0) { return steamidhost_; } else { return SteamidhostDefaultValue; } }
    set {
      _hasBits0 |= 128;
      steamidhost_ = value;
    }
  }
  /// <summary>Gets whether the "steamidhost" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamidhost {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "steamidhost" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamidhost() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "rtime_match_made" field.</summary>
  public const int RtimeMatchMadeFieldNumber = 11;
  private readonly static uint RtimeMatchMadeDefaultValue = 0;

  private uint rtimeMatchMade_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeMatchMade {
    get { if ((_hasBits0 & 256) != 0) { return rtimeMatchMade_; } else { return RtimeMatchMadeDefaultValue; } }
    set {
      _hasBits0 |= 256;
      rtimeMatchMade_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_match_made" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeMatchMade {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "rtime_match_made" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeMatchMade() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "rtime_now" field.</summary>
  public const int RtimeNowFieldNumber = 12;
  private readonly static uint RtimeNowDefaultValue = 0;

  private uint rtimeNow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeNow {
    get { if ((_hasBits0 & 512) != 0) { return rtimeNow_; } else { return RtimeNowDefaultValue; } }
    set {
      _hasBits0 |= 512;
      rtimeNow_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_now" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeNow {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "rtime_now" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeNow() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "steamid_canceled_search" field.</summary>
  public const int SteamidCanceledSearchFieldNumber = 13;
  private readonly static ulong SteamidCanceledSearchDefaultValue = 0UL;

  private ulong steamidCanceledSearch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamidCanceledSearch {
    get { if ((_hasBits0 & 1024) != 0) { return steamidCanceledSearch_; } else { return SteamidCanceledSearchDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      steamidCanceledSearch_ = value;
    }
  }
  /// <summary>Gets whether the "steamid_canceled_search" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamidCanceledSearch {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "steamid_canceled_search" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamidCanceledSearch() {
    _hasBits0 &= ~1024;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmaking_SearchForGame_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmaking_SearchForGame_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gamesearchresult != other.Gamesearchresult) return false;
    if (Searchid != other.Searchid) return false;
    if (SecondsTimeEstimate != other.SecondsTimeEstimate) return false;
    if (PollFrequency != other.PollFrequency) return false;
    if (CountSearching != other.CountSearching) return false;
    if (PlayersInMatch != other.PlayersInMatch) return false;
    if (PlayersAccepted != other.PlayersAccepted) return false;
    if (ConnectString != other.ConnectString) return false;
    if (Steamidhost != other.Steamidhost) return false;
    if (RtimeMatchMade != other.RtimeMatchMade) return false;
    if (RtimeNow != other.RtimeNow) return false;
    if (SteamidCanceledSearch != other.SteamidCanceledSearch) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGamesearchresult) hash ^= Gamesearchresult.GetHashCode();
    if (HasSearchid) hash ^= Searchid.GetHashCode();
    if (HasSecondsTimeEstimate) hash ^= SecondsTimeEstimate.GetHashCode();
    if (HasPollFrequency) hash ^= PollFrequency.GetHashCode();
    if (HasCountSearching) hash ^= CountSearching.GetHashCode();
    if (HasPlayersInMatch) hash ^= PlayersInMatch.GetHashCode();
    if (HasPlayersAccepted) hash ^= PlayersAccepted.GetHashCode();
    if (HasConnectString) hash ^= ConnectString.GetHashCode();
    if (HasSteamidhost) hash ^= Steamidhost.GetHashCode();
    if (HasRtimeMatchMade) hash ^= RtimeMatchMade.GetHashCode();
    if (HasRtimeNow) hash ^= RtimeNow.GetHashCode();
    if (HasSteamidCanceledSearch) hash ^= SteamidCanceledSearch.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGamesearchresult) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Gamesearchresult);
    }
    if (HasSearchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Searchid);
    }
    if (HasSecondsTimeEstimate) {
      output.WriteRawTag(24);
      output.WriteUInt32(SecondsTimeEstimate);
    }
    if (HasPollFrequency) {
      output.WriteRawTag(32);
      output.WriteUInt32(PollFrequency);
    }
    if (HasCountSearching) {
      output.WriteRawTag(40);
      output.WriteUInt32(CountSearching);
    }
    if (HasPlayersInMatch) {
      output.WriteRawTag(48);
      output.WriteUInt32(PlayersInMatch);
    }
    if (HasPlayersAccepted) {
      output.WriteRawTag(56);
      output.WriteUInt32(PlayersAccepted);
    }
    if (HasConnectString) {
      output.WriteRawTag(74);
      output.WriteString(ConnectString);
    }
    if (HasSteamidhost) {
      output.WriteRawTag(81);
      output.WriteFixed64(Steamidhost);
    }
    if (HasRtimeMatchMade) {
      output.WriteRawTag(88);
      output.WriteUInt32(RtimeMatchMade);
    }
    if (HasRtimeNow) {
      output.WriteRawTag(96);
      output.WriteUInt32(RtimeNow);
    }
    if (HasSteamidCanceledSearch) {
      output.WriteRawTag(105);
      output.WriteFixed64(SteamidCanceledSearch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGamesearchresult) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Gamesearchresult);
    }
    if (HasSearchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Searchid);
    }
    if (HasSecondsTimeEstimate) {
      output.WriteRawTag(24);
      output.WriteUInt32(SecondsTimeEstimate);
    }
    if (HasPollFrequency) {
      output.WriteRawTag(32);
      output.WriteUInt32(PollFrequency);
    }
    if (HasCountSearching) {
      output.WriteRawTag(40);
      output.WriteUInt32(CountSearching);
    }
    if (HasPlayersInMatch) {
      output.WriteRawTag(48);
      output.WriteUInt32(PlayersInMatch);
    }
    if (HasPlayersAccepted) {
      output.WriteRawTag(56);
      output.WriteUInt32(PlayersAccepted);
    }
    if (HasConnectString) {
      output.WriteRawTag(74);
      output.WriteString(ConnectString);
    }
    if (HasSteamidhost) {
      output.WriteRawTag(81);
      output.WriteFixed64(Steamidhost);
    }
    if (HasRtimeMatchMade) {
      output.WriteRawTag(88);
      output.WriteUInt32(RtimeMatchMade);
    }
    if (HasRtimeNow) {
      output.WriteRawTag(96);
      output.WriteUInt32(RtimeNow);
    }
    if (HasSteamidCanceledSearch) {
      output.WriteRawTag(105);
      output.WriteFixed64(SteamidCanceledSearch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGamesearchresult) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gamesearchresult);
    }
    if (HasSearchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Searchid);
    }
    if (HasSecondsTimeEstimate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SecondsTimeEstimate);
    }
    if (HasPollFrequency) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PollFrequency);
    }
    if (HasCountSearching) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CountSearching);
    }
    if (HasPlayersInMatch) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayersInMatch);
    }
    if (HasPlayersAccepted) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayersAccepted);
    }
    if (HasConnectString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectString);
    }
    if (HasSteamidhost) {
      size += 1 + 8;
    }
    if (HasRtimeMatchMade) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeMatchMade);
    }
    if (HasRtimeNow) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeNow);
    }
    if (HasSteamidCanceledSearch) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmaking_SearchForGame_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasGamesearchresult) {
      Gamesearchresult = other.Gamesearchresult;
    }
    if (other.HasSearchid) {
      Searchid = other.Searchid;
    }
    if (other.HasSecondsTimeEstimate) {
      SecondsTimeEstimate = other.SecondsTimeEstimate;
    }
    if (other.HasPollFrequency) {
      PollFrequency = other.PollFrequency;
    }
    if (other.HasCountSearching) {
      CountSearching = other.CountSearching;
    }
    if (other.HasPlayersInMatch) {
      PlayersInMatch = other.PlayersInMatch;
    }
    if (other.HasPlayersAccepted) {
      PlayersAccepted = other.PlayersAccepted;
    }
    if (other.HasConnectString) {
      ConnectString = other.ConnectString;
    }
    if (other.HasSteamidhost) {
      Steamidhost = other.Steamidhost;
    }
    if (other.HasRtimeMatchMade) {
      RtimeMatchMade = other.RtimeMatchMade;
    }
    if (other.HasRtimeNow) {
      RtimeNow = other.RtimeNow;
    }
    if (other.HasSteamidCanceledSearch) {
      SteamidCanceledSearch = other.SteamidCanceledSearch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gamesearchresult = (global::EGameSearchResult) input.ReadEnum();
          break;
        }
        case 16: {
          Searchid = input.ReadUInt64();
          break;
        }
        case 24: {
          SecondsTimeEstimate = input.ReadUInt32();
          break;
        }
        case 32: {
          PollFrequency = input.ReadUInt32();
          break;
        }
        case 40: {
          CountSearching = input.ReadUInt32();
          break;
        }
        case 48: {
          PlayersInMatch = input.ReadUInt32();
          break;
        }
        case 56: {
          PlayersAccepted = input.ReadUInt32();
          break;
        }
        case 74: {
          ConnectString = input.ReadString();
          break;
        }
        case 81: {
          Steamidhost = input.ReadFixed64();
          break;
        }
        case 88: {
          RtimeMatchMade = input.ReadUInt32();
          break;
        }
        case 96: {
          RtimeNow = input.ReadUInt32();
          break;
        }
        case 105: {
          SteamidCanceledSearch = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gamesearchresult = (global::EGameSearchResult) input.ReadEnum();
          break;
        }
        case 16: {
          Searchid = input.ReadUInt64();
          break;
        }
        case 24: {
          SecondsTimeEstimate = input.ReadUInt32();
          break;
        }
        case 32: {
          PollFrequency = input.ReadUInt32();
          break;
        }
        case 40: {
          CountSearching = input.ReadUInt32();
          break;
        }
        case 48: {
          PlayersInMatch = input.ReadUInt32();
          break;
        }
        case 56: {
          PlayersAccepted = input.ReadUInt32();
          break;
        }
        case 74: {
          ConnectString = input.ReadString();
          break;
        }
        case 81: {
          Steamidhost = input.ReadFixed64();
          break;
        }
        case 88: {
          RtimeMatchMade = input.ReadUInt32();
          break;
        }
        case 96: {
          RtimeNow = input.ReadUInt32();
          break;
        }
        case 105: {
          SteamidCanceledSearch = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmakingGameHost_SearchForPlayers_Request : pb::IMessage<CQueuedMatchmakingGameHost_SearchForPlayers_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmakingGameHost_SearchForPlayers_Request> _parser = new pb::MessageParser<CQueuedMatchmakingGameHost_SearchForPlayers_Request>(() => new CQueuedMatchmakingGameHost_SearchForPlayers_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmakingGameHost_SearchForPlayers_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SearchForPlayers_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SearchForPlayers_Request(CQueuedMatchmakingGameHost_SearchForPlayers_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    action_ = other.action_;
    params_ = other.params_.Clone();
    playerMin_ = other.playerMin_;
    playerMax_ = other.playerMax_;
    playerMaxTeamSize_ = other.playerMaxTeamSize_;
    connectionString_ = other.connectionString_;
    searchid_ = other.searchid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SearchForPlayers_Request Clone() {
    return new CQueuedMatchmakingGameHost_SearchForPlayers_Request(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "action" field.</summary>
  public const int ActionFieldNumber = 2;
  private readonly static global::EGameSearchAction ActionDefaultValue = global::EGameSearchAction.KEgameSearchActionNone;

  private global::EGameSearchAction action_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EGameSearchAction Action {
    get { if ((_hasBits0 & 2) != 0) { return action_; } else { return ActionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      action_ = value;
    }
  }
  /// <summary>Gets whether the "action" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAction {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "action" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAction() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "params" field.</summary>
  public const int ParamsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::GameSearchParam> _repeated_params_codec
      = pb::FieldCodec.ForMessage(26, global::GameSearchParam.Parser);
  private readonly pbc::RepeatedField<global::GameSearchParam> params_ = new pbc::RepeatedField<global::GameSearchParam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::GameSearchParam> Params {
    get { return params_; }
  }

  /// <summary>Field number for the "player_min" field.</summary>
  public const int PlayerMinFieldNumber = 4;
  private readonly static uint PlayerMinDefaultValue = 0;

  private uint playerMin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerMin {
    get { if ((_hasBits0 & 4) != 0) { return playerMin_; } else { return PlayerMinDefaultValue; } }
    set {
      _hasBits0 |= 4;
      playerMin_ = value;
    }
  }
  /// <summary>Gets whether the "player_min" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerMin {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "player_min" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerMin() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "player_max" field.</summary>
  public const int PlayerMaxFieldNumber = 5;
  private readonly static uint PlayerMaxDefaultValue = 0;

  private uint playerMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerMax {
    get { if ((_hasBits0 & 8) != 0) { return playerMax_; } else { return PlayerMaxDefaultValue; } }
    set {
      _hasBits0 |= 8;
      playerMax_ = value;
    }
  }
  /// <summary>Gets whether the "player_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerMax {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "player_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerMax() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "player_max_team_size" field.</summary>
  public const int PlayerMaxTeamSizeFieldNumber = 6;
  private readonly static uint PlayerMaxTeamSizeDefaultValue = 0;

  private uint playerMaxTeamSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerMaxTeamSize {
    get { if ((_hasBits0 & 16) != 0) { return playerMaxTeamSize_; } else { return PlayerMaxTeamSizeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      playerMaxTeamSize_ = value;
    }
  }
  /// <summary>Gets whether the "player_max_team_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerMaxTeamSize {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "player_max_team_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerMaxTeamSize() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "connection_string" field.</summary>
  public const int ConnectionStringFieldNumber = 7;
  private readonly static string ConnectionStringDefaultValue = "";

  private string connectionString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ConnectionString {
    get { return connectionString_ ?? ConnectionStringDefaultValue; }
    set {
      connectionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "connection_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionString {
    get { return connectionString_ != null; }
  }
  /// <summary>Clears the value of the "connection_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionString() {
    connectionString_ = null;
  }

  /// <summary>Field number for the "searchid" field.</summary>
  public const int SearchidFieldNumber = 8;
  private readonly static ulong SearchidDefaultValue = 0UL;

  private ulong searchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Searchid {
    get { if ((_hasBits0 & 32) != 0) { return searchid_; } else { return SearchidDefaultValue; } }
    set {
      _hasBits0 |= 32;
      searchid_ = value;
    }
  }
  /// <summary>Gets whether the "searchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSearchid {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "searchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSearchid() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmakingGameHost_SearchForPlayers_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmakingGameHost_SearchForPlayers_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Action != other.Action) return false;
    if(!params_.Equals(other.params_)) return false;
    if (PlayerMin != other.PlayerMin) return false;
    if (PlayerMax != other.PlayerMax) return false;
    if (PlayerMaxTeamSize != other.PlayerMaxTeamSize) return false;
    if (ConnectionString != other.ConnectionString) return false;
    if (Searchid != other.Searchid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasAction) hash ^= Action.GetHashCode();
    hash ^= params_.GetHashCode();
    if (HasPlayerMin) hash ^= PlayerMin.GetHashCode();
    if (HasPlayerMax) hash ^= PlayerMax.GetHashCode();
    if (HasPlayerMaxTeamSize) hash ^= PlayerMaxTeamSize.GetHashCode();
    if (HasConnectionString) hash ^= ConnectionString.GetHashCode();
    if (HasSearchid) hash ^= Searchid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasAction) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Action);
    }
    params_.WriteTo(output, _repeated_params_codec);
    if (HasPlayerMin) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayerMin);
    }
    if (HasPlayerMax) {
      output.WriteRawTag(40);
      output.WriteUInt32(PlayerMax);
    }
    if (HasPlayerMaxTeamSize) {
      output.WriteRawTag(48);
      output.WriteUInt32(PlayerMaxTeamSize);
    }
    if (HasConnectionString) {
      output.WriteRawTag(58);
      output.WriteString(ConnectionString);
    }
    if (HasSearchid) {
      output.WriteRawTag(64);
      output.WriteUInt64(Searchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasAction) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Action);
    }
    params_.WriteTo(ref output, _repeated_params_codec);
    if (HasPlayerMin) {
      output.WriteRawTag(32);
      output.WriteUInt32(PlayerMin);
    }
    if (HasPlayerMax) {
      output.WriteRawTag(40);
      output.WriteUInt32(PlayerMax);
    }
    if (HasPlayerMaxTeamSize) {
      output.WriteRawTag(48);
      output.WriteUInt32(PlayerMaxTeamSize);
    }
    if (HasConnectionString) {
      output.WriteRawTag(58);
      output.WriteString(ConnectionString);
    }
    if (HasSearchid) {
      output.WriteRawTag(64);
      output.WriteUInt64(Searchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasAction) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
    }
    size += params_.CalculateSize(_repeated_params_codec);
    if (HasPlayerMin) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerMin);
    }
    if (HasPlayerMax) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerMax);
    }
    if (HasPlayerMaxTeamSize) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerMaxTeamSize);
    }
    if (HasConnectionString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionString);
    }
    if (HasSearchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Searchid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmakingGameHost_SearchForPlayers_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasAction) {
      Action = other.Action;
    }
    params_.Add(other.params_);
    if (other.HasPlayerMin) {
      PlayerMin = other.PlayerMin;
    }
    if (other.HasPlayerMax) {
      PlayerMax = other.PlayerMax;
    }
    if (other.HasPlayerMaxTeamSize) {
      PlayerMaxTeamSize = other.PlayerMaxTeamSize;
    }
    if (other.HasConnectionString) {
      ConnectionString = other.ConnectionString;
    }
    if (other.HasSearchid) {
      Searchid = other.Searchid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Action = (global::EGameSearchAction) input.ReadEnum();
          break;
        }
        case 26: {
          params_.AddEntriesFrom(input, _repeated_params_codec);
          break;
        }
        case 32: {
          PlayerMin = input.ReadUInt32();
          break;
        }
        case 40: {
          PlayerMax = input.ReadUInt32();
          break;
        }
        case 48: {
          PlayerMaxTeamSize = input.ReadUInt32();
          break;
        }
        case 58: {
          ConnectionString = input.ReadString();
          break;
        }
        case 64: {
          Searchid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Action = (global::EGameSearchAction) input.ReadEnum();
          break;
        }
        case 26: {
          params_.AddEntriesFrom(ref input, _repeated_params_codec);
          break;
        }
        case 32: {
          PlayerMin = input.ReadUInt32();
          break;
        }
        case 40: {
          PlayerMax = input.ReadUInt32();
          break;
        }
        case 48: {
          PlayerMaxTeamSize = input.ReadUInt32();
          break;
        }
        case 58: {
          ConnectionString = input.ReadString();
          break;
        }
        case 64: {
          Searchid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerFound : pb::IMessage<PlayerFound>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerFound> _parser = new pb::MessageParser<PlayerFound>(() => new PlayerFound());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerFound> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerFound() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerFound(PlayerFound other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    action_ = other.action_;
    params_ = other.params_.Clone();
    teamNumber_ = other.teamNumber_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerFound Clone() {
    return new PlayerFound(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "action" field.</summary>
  public const int ActionFieldNumber = 2;
  private readonly static global::EGameSearchAction ActionDefaultValue = global::EGameSearchAction.KEgameSearchActionNone;

  private global::EGameSearchAction action_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EGameSearchAction Action {
    get { if ((_hasBits0 & 2) != 0) { return action_; } else { return ActionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      action_ = value;
    }
  }
  /// <summary>Gets whether the "action" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAction {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "action" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAction() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "params" field.</summary>
  public const int ParamsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::GameSearchParam> _repeated_params_codec
      = pb::FieldCodec.ForMessage(26, global::GameSearchParam.Parser);
  private readonly pbc::RepeatedField<global::GameSearchParam> params_ = new pbc::RepeatedField<global::GameSearchParam>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::GameSearchParam> Params {
    get { return params_; }
  }

  /// <summary>Field number for the "team_number" field.</summary>
  public const int TeamNumberFieldNumber = 4;
  private readonly static uint TeamNumberDefaultValue = 0;

  private uint teamNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TeamNumber {
    get { if ((_hasBits0 & 4) != 0) { return teamNumber_; } else { return TeamNumberDefaultValue; } }
    set {
      _hasBits0 |= 4;
      teamNumber_ = value;
    }
  }
  /// <summary>Gets whether the "team_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTeamNumber {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "team_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTeamNumber() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerFound);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerFound other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Action != other.Action) return false;
    if(!params_.Equals(other.params_)) return false;
    if (TeamNumber != other.TeamNumber) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAction) hash ^= Action.GetHashCode();
    hash ^= params_.GetHashCode();
    if (HasTeamNumber) hash ^= TeamNumber.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAction) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Action);
    }
    params_.WriteTo(output, _repeated_params_codec);
    if (HasTeamNumber) {
      output.WriteRawTag(32);
      output.WriteUInt32(TeamNumber);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAction) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Action);
    }
    params_.WriteTo(ref output, _repeated_params_codec);
    if (HasTeamNumber) {
      output.WriteRawTag(32);
      output.WriteUInt32(TeamNumber);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAction) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
    }
    size += params_.CalculateSize(_repeated_params_codec);
    if (HasTeamNumber) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamNumber);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerFound other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAction) {
      Action = other.Action;
    }
    params_.Add(other.params_);
    if (other.HasTeamNumber) {
      TeamNumber = other.TeamNumber;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Action = (global::EGameSearchAction) input.ReadEnum();
          break;
        }
        case 26: {
          params_.AddEntriesFrom(input, _repeated_params_codec);
          break;
        }
        case 32: {
          TeamNumber = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Action = (global::EGameSearchAction) input.ReadEnum();
          break;
        }
        case 26: {
          params_.AddEntriesFrom(ref input, _repeated_params_codec);
          break;
        }
        case 32: {
          TeamNumber = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmakingGameHost_SearchForPlayers_Response : pb::IMessage<CQueuedMatchmakingGameHost_SearchForPlayers_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmakingGameHost_SearchForPlayers_Response> _parser = new pb::MessageParser<CQueuedMatchmakingGameHost_SearchForPlayers_Response>(() => new CQueuedMatchmakingGameHost_SearchForPlayers_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmakingGameHost_SearchForPlayers_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SearchForPlayers_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SearchForPlayers_Response(CQueuedMatchmakingGameHost_SearchForPlayers_Response other) : this() {
    _hasBits0 = other._hasBits0;
    gamesearchresult_ = other.gamesearchresult_;
    searchid_ = other.searchid_;
    pollFrequency_ = other.pollFrequency_;
    matchid_ = other.matchid_;
    players_ = other.players_.Clone();
    rtimeMatchMade_ = other.rtimeMatchMade_;
    rtimeNow_ = other.rtimeNow_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SearchForPlayers_Response Clone() {
    return new CQueuedMatchmakingGameHost_SearchForPlayers_Response(this);
  }

  /// <summary>Field number for the "gamesearchresult" field.</summary>
  public const int GamesearchresultFieldNumber = 1;
  private readonly static global::EGameSearchResult GamesearchresultDefaultValue = global::EGameSearchResult.KEgameSearchResultInvalid;

  private global::EGameSearchResult gamesearchresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EGameSearchResult Gamesearchresult {
    get { if ((_hasBits0 & 1) != 0) { return gamesearchresult_; } else { return GamesearchresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gamesearchresult_ = value;
    }
  }
  /// <summary>Gets whether the "gamesearchresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGamesearchresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "gamesearchresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGamesearchresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "searchid" field.</summary>
  public const int SearchidFieldNumber = 2;
  private readonly static ulong SearchidDefaultValue = 0UL;

  private ulong searchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Searchid {
    get { if ((_hasBits0 & 2) != 0) { return searchid_; } else { return SearchidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      searchid_ = value;
    }
  }
  /// <summary>Gets whether the "searchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSearchid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "searchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSearchid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "poll_frequency" field.</summary>
  public const int PollFrequencyFieldNumber = 3;
  private readonly static uint PollFrequencyDefaultValue = 0;

  private uint pollFrequency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PollFrequency {
    get { if ((_hasBits0 & 4) != 0) { return pollFrequency_; } else { return PollFrequencyDefaultValue; } }
    set {
      _hasBits0 |= 4;
      pollFrequency_ = value;
    }
  }
  /// <summary>Gets whether the "poll_frequency" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPollFrequency {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "poll_frequency" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPollFrequency() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 4;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 8) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 5;
  private static readonly pb::FieldCodec<global::PlayerFound> _repeated_players_codec
      = pb::FieldCodec.ForMessage(42, global::PlayerFound.Parser);
  private readonly pbc::RepeatedField<global::PlayerFound> players_ = new pbc::RepeatedField<global::PlayerFound>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerFound> Players {
    get { return players_; }
  }

  /// <summary>Field number for the "rtime_match_made" field.</summary>
  public const int RtimeMatchMadeFieldNumber = 6;
  private readonly static uint RtimeMatchMadeDefaultValue = 0;

  private uint rtimeMatchMade_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeMatchMade {
    get { if ((_hasBits0 & 16) != 0) { return rtimeMatchMade_; } else { return RtimeMatchMadeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rtimeMatchMade_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_match_made" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeMatchMade {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rtime_match_made" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeMatchMade() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "rtime_now" field.</summary>
  public const int RtimeNowFieldNumber = 7;
  private readonly static uint RtimeNowDefaultValue = 0;

  private uint rtimeNow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeNow {
    get { if ((_hasBits0 & 32) != 0) { return rtimeNow_; } else { return RtimeNowDefaultValue; } }
    set {
      _hasBits0 |= 32;
      rtimeNow_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_now" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeNow {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "rtime_now" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeNow() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmakingGameHost_SearchForPlayers_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmakingGameHost_SearchForPlayers_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gamesearchresult != other.Gamesearchresult) return false;
    if (Searchid != other.Searchid) return false;
    if (PollFrequency != other.PollFrequency) return false;
    if (Matchid != other.Matchid) return false;
    if(!players_.Equals(other.players_)) return false;
    if (RtimeMatchMade != other.RtimeMatchMade) return false;
    if (RtimeNow != other.RtimeNow) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGamesearchresult) hash ^= Gamesearchresult.GetHashCode();
    if (HasSearchid) hash ^= Searchid.GetHashCode();
    if (HasPollFrequency) hash ^= PollFrequency.GetHashCode();
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    hash ^= players_.GetHashCode();
    if (HasRtimeMatchMade) hash ^= RtimeMatchMade.GetHashCode();
    if (HasRtimeNow) hash ^= RtimeNow.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGamesearchresult) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Gamesearchresult);
    }
    if (HasSearchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Searchid);
    }
    if (HasPollFrequency) {
      output.WriteRawTag(24);
      output.WriteUInt32(PollFrequency);
    }
    if (HasMatchid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Matchid);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (HasRtimeMatchMade) {
      output.WriteRawTag(48);
      output.WriteUInt32(RtimeMatchMade);
    }
    if (HasRtimeNow) {
      output.WriteRawTag(56);
      output.WriteUInt32(RtimeNow);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGamesearchresult) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Gamesearchresult);
    }
    if (HasSearchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Searchid);
    }
    if (HasPollFrequency) {
      output.WriteRawTag(24);
      output.WriteUInt32(PollFrequency);
    }
    if (HasMatchid) {
      output.WriteRawTag(32);
      output.WriteUInt64(Matchid);
    }
    players_.WriteTo(ref output, _repeated_players_codec);
    if (HasRtimeMatchMade) {
      output.WriteRawTag(48);
      output.WriteUInt32(RtimeMatchMade);
    }
    if (HasRtimeNow) {
      output.WriteRawTag(56);
      output.WriteUInt32(RtimeNow);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGamesearchresult) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gamesearchresult);
    }
    if (HasSearchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Searchid);
    }
    if (HasPollFrequency) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PollFrequency);
    }
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (HasRtimeMatchMade) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeMatchMade);
    }
    if (HasRtimeNow) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeNow);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmakingGameHost_SearchForPlayers_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasGamesearchresult) {
      Gamesearchresult = other.Gamesearchresult;
    }
    if (other.HasSearchid) {
      Searchid = other.Searchid;
    }
    if (other.HasPollFrequency) {
      PollFrequency = other.PollFrequency;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    players_.Add(other.players_);
    if (other.HasRtimeMatchMade) {
      RtimeMatchMade = other.RtimeMatchMade;
    }
    if (other.HasRtimeNow) {
      RtimeNow = other.RtimeNow;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gamesearchresult = (global::EGameSearchResult) input.ReadEnum();
          break;
        }
        case 16: {
          Searchid = input.ReadUInt64();
          break;
        }
        case 24: {
          PollFrequency = input.ReadUInt32();
          break;
        }
        case 32: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 42: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
        case 48: {
          RtimeMatchMade = input.ReadUInt32();
          break;
        }
        case 56: {
          RtimeNow = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gamesearchresult = (global::EGameSearchResult) input.ReadEnum();
          break;
        }
        case 16: {
          Searchid = input.ReadUInt64();
          break;
        }
        case 24: {
          PollFrequency = input.ReadUInt32();
          break;
        }
        case 32: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 42: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
        case 48: {
          RtimeMatchMade = input.ReadUInt32();
          break;
        }
        case 56: {
          RtimeNow = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerResult : pb::IMessage<PlayerResult>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerResult> _parser = new pb::MessageParser<PlayerResult>(() => new PlayerResult());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PlayerResult> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerResult() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerResult(PlayerResult other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PlayerResult Clone() {
    return new PlayerResult(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private readonly static uint ValueDefaultValue = 0;

  private uint value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Value {
    get { if ((_hasBits0 & 2) != 0) { return value_; } else { return ValueDefaultValue; } }
    set {
      _hasBits0 |= 2;
      value_ = value;
    }
  }
  /// <summary>Gets whether the "value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValue {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValue() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PlayerResult);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PlayerResult other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasValue) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasValue) {
      output.WriteRawTag(16);
      output.WriteUInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasValue) {
      output.WriteRawTag(16);
      output.WriteUInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PlayerResult other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasValue) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Value = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Value = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmakingGameHost_SubmitPlayerResult_Request : pb::IMessage<CQueuedMatchmakingGameHost_SubmitPlayerResult_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmakingGameHost_SubmitPlayerResult_Request> _parser = new pb::MessageParser<CQueuedMatchmakingGameHost_SubmitPlayerResult_Request>(() => new CQueuedMatchmakingGameHost_SubmitPlayerResult_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmakingGameHost_SubmitPlayerResult_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SubmitPlayerResult_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SubmitPlayerResult_Request(CQueuedMatchmakingGameHost_SubmitPlayerResult_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    matchid_ = other.matchid_;
    playerResults_ = other.playerResults_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SubmitPlayerResult_Request Clone() {
    return new CQueuedMatchmakingGameHost_SubmitPlayerResult_Request(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 2;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 2) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "player_results" field.</summary>
  public const int PlayerResultsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::PlayerResult> _repeated_playerResults_codec
      = pb::FieldCodec.ForMessage(26, global::PlayerResult.Parser);
  private readonly pbc::RepeatedField<global::PlayerResult> playerResults_ = new pbc::RepeatedField<global::PlayerResult>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PlayerResult> PlayerResults {
    get { return playerResults_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmakingGameHost_SubmitPlayerResult_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmakingGameHost_SubmitPlayerResult_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Matchid != other.Matchid) return false;
    if(!playerResults_.Equals(other.playerResults_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    hash ^= playerResults_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasMatchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Matchid);
    }
    playerResults_.WriteTo(output, _repeated_playerResults_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasMatchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Matchid);
    }
    playerResults_.WriteTo(ref output, _repeated_playerResults_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    size += playerResults_.CalculateSize(_repeated_playerResults_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmakingGameHost_SubmitPlayerResult_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    playerResults_.Add(other.playerResults_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 26: {
          playerResults_.AddEntriesFrom(input, _repeated_playerResults_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Matchid = input.ReadUInt64();
          break;
        }
        case 26: {
          playerResults_.AddEntriesFrom(ref input, _repeated_playerResults_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmakingGameHost_SubmitPlayerResult_Response : pb::IMessage<CQueuedMatchmakingGameHost_SubmitPlayerResult_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmakingGameHost_SubmitPlayerResult_Response> _parser = new pb::MessageParser<CQueuedMatchmakingGameHost_SubmitPlayerResult_Response>(() => new CQueuedMatchmakingGameHost_SubmitPlayerResult_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmakingGameHost_SubmitPlayerResult_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SubmitPlayerResult_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SubmitPlayerResult_Response(CQueuedMatchmakingGameHost_SubmitPlayerResult_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_SubmitPlayerResult_Response Clone() {
    return new CQueuedMatchmakingGameHost_SubmitPlayerResult_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmakingGameHost_SubmitPlayerResult_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmakingGameHost_SubmitPlayerResult_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmakingGameHost_SubmitPlayerResult_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmakingGameHost_EndGame_Request : pb::IMessage<CQueuedMatchmakingGameHost_EndGame_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmakingGameHost_EndGame_Request> _parser = new pb::MessageParser<CQueuedMatchmakingGameHost_EndGame_Request>(() => new CQueuedMatchmakingGameHost_EndGame_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmakingGameHost_EndGame_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_EndGame_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_EndGame_Request(CQueuedMatchmakingGameHost_EndGame_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    matchid_ = other.matchid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_EndGame_Request Clone() {
    return new CQueuedMatchmakingGameHost_EndGame_Request(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "matchid" field.</summary>
  public const int MatchidFieldNumber = 2;
  private readonly static ulong MatchidDefaultValue = 0UL;

  private ulong matchid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Matchid {
    get { if ((_hasBits0 & 2) != 0) { return matchid_; } else { return MatchidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchid_ = value;
    }
  }
  /// <summary>Gets whether the "matchid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "matchid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmakingGameHost_EndGame_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmakingGameHost_EndGame_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Matchid != other.Matchid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasMatchid) hash ^= Matchid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasMatchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Matchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasMatchid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Matchid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasMatchid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Matchid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmakingGameHost_EndGame_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasMatchid) {
      Matchid = other.Matchid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Matchid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Matchid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CQueuedMatchmakingGameHost_EndGame_Response : pb::IMessage<CQueuedMatchmakingGameHost_EndGame_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CQueuedMatchmakingGameHost_EndGame_Response> _parser = new pb::MessageParser<CQueuedMatchmakingGameHost_EndGame_Response>(() => new CQueuedMatchmakingGameHost_EndGame_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CQueuedMatchmakingGameHost_EndGame_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesQmsSteamclientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_EndGame_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_EndGame_Response(CQueuedMatchmakingGameHost_EndGame_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CQueuedMatchmakingGameHost_EndGame_Response Clone() {
    return new CQueuedMatchmakingGameHost_EndGame_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CQueuedMatchmakingGameHost_EndGame_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CQueuedMatchmakingGameHost_EndGame_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CQueuedMatchmakingGameHost_EndGame_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

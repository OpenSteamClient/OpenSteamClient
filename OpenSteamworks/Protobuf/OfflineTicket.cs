// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: offline_ticket.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from offline_ticket.proto</summary>
public static partial class OfflineTicketReflection {

  #region Descriptor
  /// <summary>File descriptor for offline_ticket.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static OfflineTicketReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRvZmZsaW5lX3RpY2tldC5wcm90byJ3Cg5PZmZsaW5lX1RpY2tldBIYChBl",
          "bmNyeXB0ZWRfdGlja2V0GAEgASgMEhEKCXNpZ25hdHVyZRgCIAEoDBIMCgRr",
          "ZGYxGAMgASgFEg0KBXNhbHQxGAQgASgMEgwKBGtkZjIYBSABKAUSDQoFc2Fs",
          "dDIYBiABKAw="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Offline_Ticket), global::Offline_Ticket.Parser, new[]{ "EncryptedTicket", "Signature", "Kdf1", "Salt1", "Kdf2", "Salt2" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Offline_Ticket : pb::IMessage<Offline_Ticket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Offline_Ticket> _parser = new pb::MessageParser<Offline_Ticket>(() => new Offline_Ticket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Offline_Ticket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::OfflineTicketReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Offline_Ticket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Offline_Ticket(Offline_Ticket other) : this() {
    _hasBits0 = other._hasBits0;
    encryptedTicket_ = other.encryptedTicket_;
    signature_ = other.signature_;
    kdf1_ = other.kdf1_;
    salt1_ = other.salt1_;
    kdf2_ = other.kdf2_;
    salt2_ = other.salt2_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Offline_Ticket Clone() {
    return new Offline_Ticket(this);
  }

  /// <summary>Field number for the "encrypted_ticket" field.</summary>
  public const int EncryptedTicketFieldNumber = 1;
  private readonly static pb::ByteString EncryptedTicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString encryptedTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString EncryptedTicket {
    get { return encryptedTicket_ ?? EncryptedTicketDefaultValue; }
    set {
      encryptedTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "encrypted_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEncryptedTicket {
    get { return encryptedTicket_ != null; }
  }
  /// <summary>Clears the value of the "encrypted_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEncryptedTicket() {
    encryptedTicket_ = null;
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 2;
  private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString signature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Signature {
    get { return signature_ ?? SignatureDefaultValue; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignature {
    get { return signature_ != null; }
  }
  /// <summary>Clears the value of the "signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignature() {
    signature_ = null;
  }

  /// <summary>Field number for the "kdf1" field.</summary>
  public const int Kdf1FieldNumber = 3;
  private readonly static int Kdf1DefaultValue = 0;

  private int kdf1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Kdf1 {
    get { if ((_hasBits0 & 1) != 0) { return kdf1_; } else { return Kdf1DefaultValue; } }
    set {
      _hasBits0 |= 1;
      kdf1_ = value;
    }
  }
  /// <summary>Gets whether the "kdf1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKdf1 {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "kdf1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKdf1() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "salt1" field.</summary>
  public const int Salt1FieldNumber = 4;
  private readonly static pb::ByteString Salt1DefaultValue = pb::ByteString.Empty;

  private pb::ByteString salt1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Salt1 {
    get { return salt1_ ?? Salt1DefaultValue; }
    set {
      salt1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "salt1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSalt1 {
    get { return salt1_ != null; }
  }
  /// <summary>Clears the value of the "salt1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSalt1() {
    salt1_ = null;
  }

  /// <summary>Field number for the "kdf2" field.</summary>
  public const int Kdf2FieldNumber = 5;
  private readonly static int Kdf2DefaultValue = 0;

  private int kdf2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Kdf2 {
    get { if ((_hasBits0 & 2) != 0) { return kdf2_; } else { return Kdf2DefaultValue; } }
    set {
      _hasBits0 |= 2;
      kdf2_ = value;
    }
  }
  /// <summary>Gets whether the "kdf2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKdf2 {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "kdf2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKdf2() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "salt2" field.</summary>
  public const int Salt2FieldNumber = 6;
  private readonly static pb::ByteString Salt2DefaultValue = pb::ByteString.Empty;

  private pb::ByteString salt2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Salt2 {
    get { return salt2_ ?? Salt2DefaultValue; }
    set {
      salt2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "salt2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSalt2 {
    get { return salt2_ != null; }
  }
  /// <summary>Clears the value of the "salt2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSalt2() {
    salt2_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Offline_Ticket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Offline_Ticket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EncryptedTicket != other.EncryptedTicket) return false;
    if (Signature != other.Signature) return false;
    if (Kdf1 != other.Kdf1) return false;
    if (Salt1 != other.Salt1) return false;
    if (Kdf2 != other.Kdf2) return false;
    if (Salt2 != other.Salt2) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEncryptedTicket) hash ^= EncryptedTicket.GetHashCode();
    if (HasSignature) hash ^= Signature.GetHashCode();
    if (HasKdf1) hash ^= Kdf1.GetHashCode();
    if (HasSalt1) hash ^= Salt1.GetHashCode();
    if (HasKdf2) hash ^= Kdf2.GetHashCode();
    if (HasSalt2) hash ^= Salt2.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEncryptedTicket) {
      output.WriteRawTag(10);
      output.WriteBytes(EncryptedTicket);
    }
    if (HasSignature) {
      output.WriteRawTag(18);
      output.WriteBytes(Signature);
    }
    if (HasKdf1) {
      output.WriteRawTag(24);
      output.WriteInt32(Kdf1);
    }
    if (HasSalt1) {
      output.WriteRawTag(34);
      output.WriteBytes(Salt1);
    }
    if (HasKdf2) {
      output.WriteRawTag(40);
      output.WriteInt32(Kdf2);
    }
    if (HasSalt2) {
      output.WriteRawTag(50);
      output.WriteBytes(Salt2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEncryptedTicket) {
      output.WriteRawTag(10);
      output.WriteBytes(EncryptedTicket);
    }
    if (HasSignature) {
      output.WriteRawTag(18);
      output.WriteBytes(Signature);
    }
    if (HasKdf1) {
      output.WriteRawTag(24);
      output.WriteInt32(Kdf1);
    }
    if (HasSalt1) {
      output.WriteRawTag(34);
      output.WriteBytes(Salt1);
    }
    if (HasKdf2) {
      output.WriteRawTag(40);
      output.WriteInt32(Kdf2);
    }
    if (HasSalt2) {
      output.WriteRawTag(50);
      output.WriteBytes(Salt2);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEncryptedTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncryptedTicket);
    }
    if (HasSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
    }
    if (HasKdf1) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kdf1);
    }
    if (HasSalt1) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Salt1);
    }
    if (HasKdf2) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kdf2);
    }
    if (HasSalt2) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Salt2);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Offline_Ticket other) {
    if (other == null) {
      return;
    }
    if (other.HasEncryptedTicket) {
      EncryptedTicket = other.EncryptedTicket;
    }
    if (other.HasSignature) {
      Signature = other.Signature;
    }
    if (other.HasKdf1) {
      Kdf1 = other.Kdf1;
    }
    if (other.HasSalt1) {
      Salt1 = other.Salt1;
    }
    if (other.HasKdf2) {
      Kdf2 = other.Kdf2;
    }
    if (other.HasSalt2) {
      Salt2 = other.Salt2;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EncryptedTicket = input.ReadBytes();
          break;
        }
        case 18: {
          Signature = input.ReadBytes();
          break;
        }
        case 24: {
          Kdf1 = input.ReadInt32();
          break;
        }
        case 34: {
          Salt1 = input.ReadBytes();
          break;
        }
        case 40: {
          Kdf2 = input.ReadInt32();
          break;
        }
        case 50: {
          Salt2 = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          EncryptedTicket = input.ReadBytes();
          break;
        }
        case 18: {
          Signature = input.ReadBytes();
          break;
        }
        case 24: {
          Kdf1 = input.ReadInt32();
          break;
        }
        case 34: {
          Salt1 = input.ReadBytes();
          break;
        }
        case 40: {
          Kdf2 = input.ReadInt32();
          break;
        }
        case 50: {
          Salt2 = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

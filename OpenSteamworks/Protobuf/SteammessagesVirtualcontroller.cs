// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_virtualcontroller.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_virtualcontroller.proto</summary>
public static partial class SteammessagesVirtualcontrollerReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_virtualcontroller.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesVirtualcontrollerReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiVzdGVhbW1lc3NhZ2VzX3ZpcnR1YWxjb250cm9sbGVyLnByb3RvIsEBChlD",
          "VmlydHVhbENvbnRyb2xsZXJFbGVtZW50EkMKBHR5cGUYASABKA4yFy5FQ29u",
          "dHJvbGxlckVsZW1lbnRUeXBlOhxrX0VDb250cm9sbGVyRWxlbWVudFR5cGVO",
          "b25lEg8KB3Zpc2libGUYAiABKAgSEgoKeF9wb3NpdGlvbhgDIAEoAhISCgp5",
          "X3Bvc2l0aW9uGAQgASgCEhIKB3hfc2NhbGUYBSABKAI6ATESEgoHeV9zY2Fs",
          "ZRgGIAEoAjoBMSJRChdDVmlydHVhbENvbnRyb2xsZXJDb2xvchIMCgFyGAEg",
          "ASgCOgExEgwKAWcYAiABKAI6ATESDAoBYhgDIAEoAjoBMRIMCgFhGAQgASgC",
          "OgExIp8BChhDVmlydHVhbENvbnRyb2xsZXJMYXlvdXQSFgoObGF5b3V0X3Zl",
          "cnNpb24YASABKAUSFAoMYWN0aW9uc2V0X2lkGAIgASgFEiwKCGVsZW1lbnRz",
          "GAQgAygLMhouQ1ZpcnR1YWxDb250cm9sbGVyRWxlbWVudBInCgVjb2xvchgF",
          "IAEoCzIYLkNWaXJ0dWFsQ29udHJvbGxlckNvbG9yIvICChlDVmlydHVhbENv",
          "bnRyb2xsZXJMYXlvdXRzEioKB2xheW91dHMYASADKAsyGS5DVmlydHVhbENv",
          "bnRyb2xsZXJMYXlvdXQSNwoKaW5wdXRfbW9kZRgCIAEoDjILLkVJbnB1dE1v",
          "ZGU6FmtfRUlucHV0TW9kZUNvbnRyb2xsZXISNAoKbW91c2VfbW9kZRgDIAEo",
          "DjILLkVNb3VzZU1vZGU6E2tfRU1vdXNlTW9kZVVua25vd24SHwoUdHJhY2tw",
          "YWRfc2Vuc2l0aXZpdHkYBCABKAI6ATESIQoScGluY2hfem9vbV9lbmFibGVk",
          "GAUgASgIOgVmYWxzZRIXCgxwaW5jaF96b29tX3gYBiABKAI6ATASFwoMcGlu",
          "Y2hfem9vbV95GAcgASgCOgEwEhsKEHBpbmNoX3pvb21fc2NhbGUYCCABKAI6",
          "ATESDgoGc2hha2VuGAkgASgIEhcKD21vdXNlX29mZnNjcmVlbhgKIAEoCCKA",
          "BQoYQ1ZpcnR1YWxDb250cm9sbGVyQ29uZmlnEgwKBG5hbWUYASABKAkSNwoK",
          "YWN0aW9uc2V0cxgCIAMoCzIjLkNWaXJ0dWFsQ29udHJvbGxlckNvbmZpZy5B",
          "Y3Rpb25TZXQSQwoSZGVmYXVsdF9tb3VzZV9tb2RlGAMgASgOMgsuRU1vdXNl",
          "TW9kZToaa19FTW91c2VNb2RlQWJzb2x1dGVDdXJzb3Ia6AIKB0NvbnRyb2wS",
          "DAoEbmFtZRgBIAEoCRIMCgRpY29uGAIgASgJEhQKDGlucHV0X3NvdXJjZRgD",
          "IAEoBRISCgppbnB1dF9tb2RlGAQgASgFEhUKDWlucHV0X2VsZW1lbnQYBSAB",
          "KAUSFgoOb3V0cHV0X2dhbWVwYWQYBiABKAUSFwoPb3V0cHV0X2tleWJvYXJk",
          "GAcgASgFEhQKDG91dHB1dF9tb3VzZRgIIAEoBRIXCg9pY29uX2ZvcmVncm91",
          "bmQYCSABKAkSFwoPaWNvbl9iYWNrZ3JvdW5kGAogASgJEhQKDGlucHV0X3Rv",
          "Z2dsZRgLIAEoCBIoCiBpbnB1dF9hY3RpdmF0ZV9zdGlja19vcl90cmFja3Bh",
          "ZBgMIAEoBRIXCg9hY3RpdmF0aW9uX3R5cGUYDSABKAUSFQoNbG9uZ19wcmVz",
          "c19tcxgOIAEoBRIXCg9kb3VibGVfcHJlc3NfbXMYDyABKAUabQoJQWN0aW9u",
          "U2V0EgoKAmlkGAEgASgFEhEKCXBhcmVudF9pZBgCIAEoBRIMCgRuYW1lGAMg",
          "ASgJEjMKCGNvbnRyb2xzGAQgAygLMiEuQ1ZpcnR1YWxDb250cm9sbGVyQ29u",
          "ZmlnLkNvbnRyb2wiywEKH0NWaXJ0dWFsQ29udHJvbGxlckxheW91dFBhY2th",
          "Z2USDQoFYXBwaWQYASABKA0SDwoHY3JlYXRvchgCIAEoBBIYChBpbml0aWFs",
          "X3JldmlzaW9uGAMgASgNEhYKDnNhdmVkX3JldmlzaW9uGAQgASgNEikKBmNv",
          "bmZpZxgFIAEoCzIZLkNWaXJ0dWFsQ29udHJvbGxlckNvbmZpZxIrCgdsYXlv",
          "dXRzGAYgASgLMhouQ1ZpcnR1YWxDb250cm9sbGVyTGF5b3V0cyK2AQoeQ1Zp",
          "cnR1YWxDb250cm9sbGVyR2xvYmFsQ29uZmlnEhgKEGZlZWRiYWNrX2VuYWJs",
          "ZWQYASABKAgSHwoRZ3lyb3Njb3BlX2VuYWJsZWQYAiABKAg6BHRydWUSHwoR",
          "YXV0b19mYWRlX2VuYWJsZWQYAyABKAg6BHRydWUSHAoOcnVtYmxlX2VuYWJs",
          "ZWQYBCABKAg6BHRydWUSGgoSc2hha2VfZmFkZV9lbmFibGVkGAUgASgIKnwK",
          "CkVJbnB1dE1vZGUSFwoTa19FSW5wdXRNb2RlVW5rbm93bhAAEhUKEWtfRUlu",
          "cHV0TW9kZU1vdXNlEAESGgoWa19FSW5wdXRNb2RlQ29udHJvbGxlchACEiIK",
          "HmtfRUlucHV0TW9kZU1vdXNlQW5kQ29udHJvbGxlchADKpYBCgpFTW91c2VN",
          "b2RlEhcKE2tfRU1vdXNlTW9kZVVua25vd24QABIeChprX0VNb3VzZU1vZGVS",
          "ZWxhdGl2ZUN1cnNvchABEh4KGmtfRU1vdXNlTW9kZUFic29sdXRlQ3Vyc29y",
          "EAISFQoRa19FTW91c2VNb2RlVG91Y2gQAxIYChRrX0VNb3VzZU1vZGVSZWxh",
          "dGl2ZRAEKqYMChZFQ29udHJvbGxlckVsZW1lbnRUeXBlEikKHGtfRUNvbnRy",
          "b2xsZXJFbGVtZW50VHlwZU5vbmUQ////////////ARIhCh1rX0VDb250cm9s",
          "bGVyRWxlbWVudFR5cGVUaHVtYhAAEicKI2tfRUNvbnRyb2xsZXJFbGVtZW50",
          "VHlwZUJ1dHRvblN0ZWFtEAESKAoka19FQ29udHJvbGxlckVsZW1lbnRUeXBl",
          "Sm95c3RpY2tMZWZ0EAISLgoqa19FQ29udHJvbGxlckVsZW1lbnRUeXBlQnV0",
          "dG9uSm95c3RpY2tMZWZ0EAMSKQola19FQ29udHJvbGxlckVsZW1lbnRUeXBl",
          "Sm95c3RpY2tSaWdodBAEEi8KK2tfRUNvbnRyb2xsZXJFbGVtZW50VHlwZUJ1",
          "dHRvbkpveXN0aWNrUmlnaHQQBRIgChxrX0VDb250cm9sbGVyRWxlbWVudFR5",
          "cGVEUGFkEAYSIwofa19FQ29udHJvbGxlckVsZW1lbnRUeXBlQnV0dG9uQRAH",
          "EiMKH2tfRUNvbnRyb2xsZXJFbGVtZW50VHlwZUJ1dHRvbkIQCBIjCh9rX0VD",
          "b250cm9sbGVyRWxlbWVudFR5cGVCdXR0b25YEAkSIwofa19FQ29udHJvbGxl",
          "ckVsZW1lbnRUeXBlQnV0dG9uWRAKEigKJGtfRUNvbnRyb2xsZXJFbGVtZW50",
          "VHlwZUJ1dHRvblNlbGVjdBALEicKI2tfRUNvbnRyb2xsZXJFbGVtZW50VHlw",
          "ZUJ1dHRvblN0YXJ0EAwSLQopa19FQ29udHJvbGxlckVsZW1lbnRUeXBlQnV0",
          "dG9uVHJpZ2dlckxlZnQQDRIuCiprX0VDb250cm9sbGVyRWxlbWVudFR5cGVC",
          "dXR0b25UcmlnZ2VyUmlnaHQQDhIsCihrX0VDb250cm9sbGVyRWxlbWVudFR5",
          "cGVCdXR0b25CdW1wZXJMZWZ0EA8SLQopa19FQ29udHJvbGxlckVsZW1lbnRU",
          "eXBlQnV0dG9uQnVtcGVyUmlnaHQQEBIoCiRrX0VDb250cm9sbGVyRWxlbWVu",
          "dFR5cGVCdXR0b25NYWNybzAQERIoCiRrX0VDb250cm9sbGVyRWxlbWVudFR5",
          "cGVCdXR0b25NYWNybzEQEhIoCiRrX0VDb250cm9sbGVyRWxlbWVudFR5cGVC",
          "dXR0b25NYWNybzIQExIoCiRrX0VDb250cm9sbGVyRWxlbWVudFR5cGVCdXR0",
          "b25NYWNybzMQFBIoCiRrX0VDb250cm9sbGVyRWxlbWVudFR5cGVCdXR0b25N",
          "YWNybzQQFRIoCiRrX0VDb250cm9sbGVyRWxlbWVudFR5cGVCdXR0b25NYWNy",
          "bzUQFhIoCiRrX0VDb250cm9sbGVyRWxlbWVudFR5cGVCdXR0b25NYWNybzYQ",
          "FxIoCiRrX0VDb250cm9sbGVyRWxlbWVudFR5cGVCdXR0b25NYWNybzcQGBIq",
          "CiZrX0VDb250cm9sbGVyRWxlbWVudFR5cGVUcmFja3BhZENlbnRlchAZEigK",
          "JGtfRUNvbnRyb2xsZXJFbGVtZW50VHlwZVRyYWNrcGFkTGVmdBAaEikKJWtf",
          "RUNvbnRyb2xsZXJFbGVtZW50VHlwZVRyYWNrcGFkUmlnaHQQGxIkCiBrX0VD",
          "b250cm9sbGVyRWxlbWVudFR5cGVLZXlib2FyZBAcEisKJ2tfRUNvbnRyb2xs",
          "ZXJFbGVtZW50VHlwZU1hZ25pZnlpbmdHbGFzcxAdEi4KKmtfRUNvbnRyb2xs",
          "ZXJFbGVtZW50VHlwZUJ1dHRvbk1hY3JvMUZpbmdlchAeEi4KKmtfRUNvbnRy",
          "b2xsZXJFbGVtZW50VHlwZUJ1dHRvbk1hY3JvMkZpbmdlchAfEicKI2tfRUNv",
          "bnRyb2xsZXJFbGVtZW50VHlwZVJlY29yZElucHV0ECASKQola19FQ29udHJv",
          "bGxlckVsZW1lbnRUeXBlUGxheWJhY2tJbnB1dBAhEiEKHWtfRUNvbnRyb2xs",
          "ZXJFbGVtZW50VHlwZVBhc3RlECISHwoba19FQ29udHJvbGxlckVsZW1lbnRU",
          "eXBlTWF4ECM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EInputMode), typeof(global::EMouseMode), typeof(global::EControllerElementType), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerElement), global::CVirtualControllerElement.Parser, new[]{ "Type", "Visible", "XPosition", "YPosition", "XScale", "YScale" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerColor), global::CVirtualControllerColor.Parser, new[]{ "R", "G", "B", "A" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerLayout), global::CVirtualControllerLayout.Parser, new[]{ "LayoutVersion", "ActionsetId", "Elements", "Color" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerLayouts), global::CVirtualControllerLayouts.Parser, new[]{ "Layouts", "InputMode", "MouseMode", "TrackpadSensitivity", "PinchZoomEnabled", "PinchZoomX", "PinchZoomY", "PinchZoomScale", "Shaken", "MouseOffscreen" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerConfig), global::CVirtualControllerConfig.Parser, new[]{ "Name", "Actionsets", "DefaultMouseMode" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerConfig.Types.Control), global::CVirtualControllerConfig.Types.Control.Parser, new[]{ "Name", "Icon", "InputSource", "InputMode", "InputElement", "OutputGamepad", "OutputKeyboard", "OutputMouse", "IconForeground", "IconBackground", "InputToggle", "InputActivateStickOrTrackpad", "ActivationType", "LongPressMs", "DoublePressMs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerConfig.Types.ActionSet), global::CVirtualControllerConfig.Types.ActionSet.Parser, new[]{ "Id", "ParentId", "Name", "Controls" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerLayoutPackage), global::CVirtualControllerLayoutPackage.Parser, new[]{ "Appid", "Creator", "InitialRevision", "SavedRevision", "Config", "Layouts" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CVirtualControllerGlobalConfig), global::CVirtualControllerGlobalConfig.Parser, new[]{ "FeedbackEnabled", "GyroscopeEnabled", "AutoFadeEnabled", "RumbleEnabled", "ShakeFadeEnabled" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EInputMode {
  [pbr::OriginalName("k_EInputModeUnknown")] KEinputModeUnknown = 0,
  [pbr::OriginalName("k_EInputModeMouse")] KEinputModeMouse = 1,
  [pbr::OriginalName("k_EInputModeController")] KEinputModeController = 2,
  [pbr::OriginalName("k_EInputModeMouseAndController")] KEinputModeMouseAndController = 3,
}

public enum EMouseMode {
  [pbr::OriginalName("k_EMouseModeUnknown")] KEmouseModeUnknown = 0,
  [pbr::OriginalName("k_EMouseModeRelativeCursor")] KEmouseModeRelativeCursor = 1,
  [pbr::OriginalName("k_EMouseModeAbsoluteCursor")] KEmouseModeAbsoluteCursor = 2,
  [pbr::OriginalName("k_EMouseModeTouch")] KEmouseModeTouch = 3,
  [pbr::OriginalName("k_EMouseModeRelative")] KEmouseModeRelative = 4,
}

public enum EControllerElementType {
  [pbr::OriginalName("k_EControllerElementTypeNone")] KEcontrollerElementTypeNone = -1,
  [pbr::OriginalName("k_EControllerElementTypeThumb")] KEcontrollerElementTypeThumb = 0,
  [pbr::OriginalName("k_EControllerElementTypeButtonSteam")] KEcontrollerElementTypeButtonSteam = 1,
  [pbr::OriginalName("k_EControllerElementTypeJoystickLeft")] KEcontrollerElementTypeJoystickLeft = 2,
  [pbr::OriginalName("k_EControllerElementTypeButtonJoystickLeft")] KEcontrollerElementTypeButtonJoystickLeft = 3,
  [pbr::OriginalName("k_EControllerElementTypeJoystickRight")] KEcontrollerElementTypeJoystickRight = 4,
  [pbr::OriginalName("k_EControllerElementTypeButtonJoystickRight")] KEcontrollerElementTypeButtonJoystickRight = 5,
  [pbr::OriginalName("k_EControllerElementTypeDPad")] KEcontrollerElementTypeDpad = 6,
  [pbr::OriginalName("k_EControllerElementTypeButtonA")] KEcontrollerElementTypeButtonA = 7,
  [pbr::OriginalName("k_EControllerElementTypeButtonB")] KEcontrollerElementTypeButtonB = 8,
  [pbr::OriginalName("k_EControllerElementTypeButtonX")] KEcontrollerElementTypeButtonX = 9,
  [pbr::OriginalName("k_EControllerElementTypeButtonY")] KEcontrollerElementTypeButtonY = 10,
  [pbr::OriginalName("k_EControllerElementTypeButtonSelect")] KEcontrollerElementTypeButtonSelect = 11,
  [pbr::OriginalName("k_EControllerElementTypeButtonStart")] KEcontrollerElementTypeButtonStart = 12,
  [pbr::OriginalName("k_EControllerElementTypeButtonTriggerLeft")] KEcontrollerElementTypeButtonTriggerLeft = 13,
  [pbr::OriginalName("k_EControllerElementTypeButtonTriggerRight")] KEcontrollerElementTypeButtonTriggerRight = 14,
  [pbr::OriginalName("k_EControllerElementTypeButtonBumperLeft")] KEcontrollerElementTypeButtonBumperLeft = 15,
  [pbr::OriginalName("k_EControllerElementTypeButtonBumperRight")] KEcontrollerElementTypeButtonBumperRight = 16,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro0")] KEcontrollerElementTypeButtonMacro0 = 17,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro1")] KEcontrollerElementTypeButtonMacro1 = 18,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro2")] KEcontrollerElementTypeButtonMacro2 = 19,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro3")] KEcontrollerElementTypeButtonMacro3 = 20,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro4")] KEcontrollerElementTypeButtonMacro4 = 21,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro5")] KEcontrollerElementTypeButtonMacro5 = 22,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro6")] KEcontrollerElementTypeButtonMacro6 = 23,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro7")] KEcontrollerElementTypeButtonMacro7 = 24,
  [pbr::OriginalName("k_EControllerElementTypeTrackpadCenter")] KEcontrollerElementTypeTrackpadCenter = 25,
  [pbr::OriginalName("k_EControllerElementTypeTrackpadLeft")] KEcontrollerElementTypeTrackpadLeft = 26,
  [pbr::OriginalName("k_EControllerElementTypeTrackpadRight")] KEcontrollerElementTypeTrackpadRight = 27,
  [pbr::OriginalName("k_EControllerElementTypeKeyboard")] KEcontrollerElementTypeKeyboard = 28,
  [pbr::OriginalName("k_EControllerElementTypeMagnifyingGlass")] KEcontrollerElementTypeMagnifyingGlass = 29,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro1Finger")] KEcontrollerElementTypeButtonMacro1Finger = 30,
  [pbr::OriginalName("k_EControllerElementTypeButtonMacro2Finger")] KEcontrollerElementTypeButtonMacro2Finger = 31,
  [pbr::OriginalName("k_EControllerElementTypeRecordInput")] KEcontrollerElementTypeRecordInput = 32,
  [pbr::OriginalName("k_EControllerElementTypePlaybackInput")] KEcontrollerElementTypePlaybackInput = 33,
  [pbr::OriginalName("k_EControllerElementTypePaste")] KEcontrollerElementTypePaste = 34,
  [pbr::OriginalName("k_EControllerElementTypeMax")] KEcontrollerElementTypeMax = 35,
}

#endregion

#region Messages
public sealed partial class CVirtualControllerElement : pb::IMessage<CVirtualControllerElement>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVirtualControllerElement> _parser = new pb::MessageParser<CVirtualControllerElement>(() => new CVirtualControllerElement());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVirtualControllerElement> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVirtualcontrollerReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerElement() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerElement(CVirtualControllerElement other) : this() {
    _hasBits0 = other._hasBits0;
    type_ = other.type_;
    visible_ = other.visible_;
    xPosition_ = other.xPosition_;
    yPosition_ = other.yPosition_;
    xScale_ = other.xScale_;
    yScale_ = other.yScale_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerElement Clone() {
    return new CVirtualControllerElement(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private readonly static global::EControllerElementType TypeDefaultValue = global::EControllerElementType.KEcontrollerElementTypeNone;

  private global::EControllerElementType type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EControllerElementType Type {
    get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "visible" field.</summary>
  public const int VisibleFieldNumber = 2;
  private readonly static bool VisibleDefaultValue = false;

  private bool visible_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Visible {
    get { if ((_hasBits0 & 2) != 0) { return visible_; } else { return VisibleDefaultValue; } }
    set {
      _hasBits0 |= 2;
      visible_ = value;
    }
  }
  /// <summary>Gets whether the "visible" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVisible {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "visible" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVisible() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "x_position" field.</summary>
  public const int XPositionFieldNumber = 3;
  private readonly static float XPositionDefaultValue = 0F;

  private float xPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float XPosition {
    get { if ((_hasBits0 & 4) != 0) { return xPosition_; } else { return XPositionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      xPosition_ = value;
    }
  }
  /// <summary>Gets whether the "x_position" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXPosition {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "x_position" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXPosition() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "y_position" field.</summary>
  public const int YPositionFieldNumber = 4;
  private readonly static float YPositionDefaultValue = 0F;

  private float yPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float YPosition {
    get { if ((_hasBits0 & 8) != 0) { return yPosition_; } else { return YPositionDefaultValue; } }
    set {
      _hasBits0 |= 8;
      yPosition_ = value;
    }
  }
  /// <summary>Gets whether the "y_position" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasYPosition {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "y_position" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearYPosition() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "x_scale" field.</summary>
  public const int XScaleFieldNumber = 5;
  private readonly static float XScaleDefaultValue = 1F;

  private float xScale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float XScale {
    get { if ((_hasBits0 & 16) != 0) { return xScale_; } else { return XScaleDefaultValue; } }
    set {
      _hasBits0 |= 16;
      xScale_ = value;
    }
  }
  /// <summary>Gets whether the "x_scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXScale {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "x_scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXScale() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "y_scale" field.</summary>
  public const int YScaleFieldNumber = 6;
  private readonly static float YScaleDefaultValue = 1F;

  private float yScale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float YScale {
    get { if ((_hasBits0 & 32) != 0) { return yScale_; } else { return YScaleDefaultValue; } }
    set {
      _hasBits0 |= 32;
      yScale_ = value;
    }
  }
  /// <summary>Gets whether the "y_scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasYScale {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "y_scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearYScale() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVirtualControllerElement);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVirtualControllerElement other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Visible != other.Visible) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XPosition, other.XPosition)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YPosition, other.YPosition)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XScale, other.XScale)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YScale, other.YScale)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    if (HasVisible) hash ^= Visible.GetHashCode();
    if (HasXPosition) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XPosition);
    if (HasYPosition) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YPosition);
    if (HasXScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XScale);
    if (HasYScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YScale);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (HasVisible) {
      output.WriteRawTag(16);
      output.WriteBool(Visible);
    }
    if (HasXPosition) {
      output.WriteRawTag(29);
      output.WriteFloat(XPosition);
    }
    if (HasYPosition) {
      output.WriteRawTag(37);
      output.WriteFloat(YPosition);
    }
    if (HasXScale) {
      output.WriteRawTag(45);
      output.WriteFloat(XScale);
    }
    if (HasYScale) {
      output.WriteRawTag(53);
      output.WriteFloat(YScale);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (HasVisible) {
      output.WriteRawTag(16);
      output.WriteBool(Visible);
    }
    if (HasXPosition) {
      output.WriteRawTag(29);
      output.WriteFloat(XPosition);
    }
    if (HasYPosition) {
      output.WriteRawTag(37);
      output.WriteFloat(YPosition);
    }
    if (HasXScale) {
      output.WriteRawTag(45);
      output.WriteFloat(XScale);
    }
    if (HasYScale) {
      output.WriteRawTag(53);
      output.WriteFloat(YScale);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (HasVisible) {
      size += 1 + 1;
    }
    if (HasXPosition) {
      size += 1 + 4;
    }
    if (HasYPosition) {
      size += 1 + 4;
    }
    if (HasXScale) {
      size += 1 + 4;
    }
    if (HasYScale) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVirtualControllerElement other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasVisible) {
      Visible = other.Visible;
    }
    if (other.HasXPosition) {
      XPosition = other.XPosition;
    }
    if (other.HasYPosition) {
      YPosition = other.YPosition;
    }
    if (other.HasXScale) {
      XScale = other.XScale;
    }
    if (other.HasYScale) {
      YScale = other.YScale;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::EControllerElementType) input.ReadEnum();
          break;
        }
        case 16: {
          Visible = input.ReadBool();
          break;
        }
        case 29: {
          XPosition = input.ReadFloat();
          break;
        }
        case 37: {
          YPosition = input.ReadFloat();
          break;
        }
        case 45: {
          XScale = input.ReadFloat();
          break;
        }
        case 53: {
          YScale = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = (global::EControllerElementType) input.ReadEnum();
          break;
        }
        case 16: {
          Visible = input.ReadBool();
          break;
        }
        case 29: {
          XPosition = input.ReadFloat();
          break;
        }
        case 37: {
          YPosition = input.ReadFloat();
          break;
        }
        case 45: {
          XScale = input.ReadFloat();
          break;
        }
        case 53: {
          YScale = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CVirtualControllerColor : pb::IMessage<CVirtualControllerColor>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVirtualControllerColor> _parser = new pb::MessageParser<CVirtualControllerColor>(() => new CVirtualControllerColor());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVirtualControllerColor> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVirtualcontrollerReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerColor() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerColor(CVirtualControllerColor other) : this() {
    _hasBits0 = other._hasBits0;
    r_ = other.r_;
    g_ = other.g_;
    b_ = other.b_;
    a_ = other.a_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerColor Clone() {
    return new CVirtualControllerColor(this);
  }

  /// <summary>Field number for the "r" field.</summary>
  public const int RFieldNumber = 1;
  private readonly static float RDefaultValue = 1F;

  private float r_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float R {
    get { if ((_hasBits0 & 1) != 0) { return r_; } else { return RDefaultValue; } }
    set {
      _hasBits0 |= 1;
      r_ = value;
    }
  }
  /// <summary>Gets whether the "r" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasR {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "r" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearR() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "g" field.</summary>
  public const int GFieldNumber = 2;
  private readonly static float GDefaultValue = 1F;

  private float g_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float G {
    get { if ((_hasBits0 & 2) != 0) { return g_; } else { return GDefaultValue; } }
    set {
      _hasBits0 |= 2;
      g_ = value;
    }
  }
  /// <summary>Gets whether the "g" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasG {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "g" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearG() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "b" field.</summary>
  public const int BFieldNumber = 3;
  private readonly static float BDefaultValue = 1F;

  private float b_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float B {
    get { if ((_hasBits0 & 4) != 0) { return b_; } else { return BDefaultValue; } }
    set {
      _hasBits0 |= 4;
      b_ = value;
    }
  }
  /// <summary>Gets whether the "b" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasB {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "b" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearB() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "a" field.</summary>
  public const int AFieldNumber = 4;
  private readonly static float ADefaultValue = 1F;

  private float a_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float A {
    get { if ((_hasBits0 & 8) != 0) { return a_; } else { return ADefaultValue; } }
    set {
      _hasBits0 |= 8;
      a_ = value;
    }
  }
  /// <summary>Gets whether the "a" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasA {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "a" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearA() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVirtualControllerColor);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVirtualControllerColor other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(R, other.R)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G, other.G)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(B, other.B)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(A, other.A)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasR) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(R);
    if (HasG) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G);
    if (HasB) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(B);
    if (HasA) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(A);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasR) {
      output.WriteRawTag(13);
      output.WriteFloat(R);
    }
    if (HasG) {
      output.WriteRawTag(21);
      output.WriteFloat(G);
    }
    if (HasB) {
      output.WriteRawTag(29);
      output.WriteFloat(B);
    }
    if (HasA) {
      output.WriteRawTag(37);
      output.WriteFloat(A);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasR) {
      output.WriteRawTag(13);
      output.WriteFloat(R);
    }
    if (HasG) {
      output.WriteRawTag(21);
      output.WriteFloat(G);
    }
    if (HasB) {
      output.WriteRawTag(29);
      output.WriteFloat(B);
    }
    if (HasA) {
      output.WriteRawTag(37);
      output.WriteFloat(A);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasR) {
      size += 1 + 4;
    }
    if (HasG) {
      size += 1 + 4;
    }
    if (HasB) {
      size += 1 + 4;
    }
    if (HasA) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVirtualControllerColor other) {
    if (other == null) {
      return;
    }
    if (other.HasR) {
      R = other.R;
    }
    if (other.HasG) {
      G = other.G;
    }
    if (other.HasB) {
      B = other.B;
    }
    if (other.HasA) {
      A = other.A;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          R = input.ReadFloat();
          break;
        }
        case 21: {
          G = input.ReadFloat();
          break;
        }
        case 29: {
          B = input.ReadFloat();
          break;
        }
        case 37: {
          A = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          R = input.ReadFloat();
          break;
        }
        case 21: {
          G = input.ReadFloat();
          break;
        }
        case 29: {
          B = input.ReadFloat();
          break;
        }
        case 37: {
          A = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CVirtualControllerLayout : pb::IMessage<CVirtualControllerLayout>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVirtualControllerLayout> _parser = new pb::MessageParser<CVirtualControllerLayout>(() => new CVirtualControllerLayout());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVirtualControllerLayout> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVirtualcontrollerReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayout() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayout(CVirtualControllerLayout other) : this() {
    _hasBits0 = other._hasBits0;
    layoutVersion_ = other.layoutVersion_;
    actionsetId_ = other.actionsetId_;
    elements_ = other.elements_.Clone();
    color_ = other.color_ != null ? other.color_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayout Clone() {
    return new CVirtualControllerLayout(this);
  }

  /// <summary>Field number for the "layout_version" field.</summary>
  public const int LayoutVersionFieldNumber = 1;
  private readonly static int LayoutVersionDefaultValue = 0;

  private int layoutVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int LayoutVersion {
    get { if ((_hasBits0 & 1) != 0) { return layoutVersion_; } else { return LayoutVersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      layoutVersion_ = value;
    }
  }
  /// <summary>Gets whether the "layout_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLayoutVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "layout_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLayoutVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "actionset_id" field.</summary>
  public const int ActionsetIdFieldNumber = 2;
  private readonly static int ActionsetIdDefaultValue = 0;

  private int actionsetId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ActionsetId {
    get { if ((_hasBits0 & 2) != 0) { return actionsetId_; } else { return ActionsetIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      actionsetId_ = value;
    }
  }
  /// <summary>Gets whether the "actionset_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActionsetId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "actionset_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActionsetId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "elements" field.</summary>
  public const int ElementsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CVirtualControllerElement> _repeated_elements_codec
      = pb::FieldCodec.ForMessage(34, global::CVirtualControllerElement.Parser);
  private readonly pbc::RepeatedField<global::CVirtualControllerElement> elements_ = new pbc::RepeatedField<global::CVirtualControllerElement>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CVirtualControllerElement> Elements {
    get { return elements_; }
  }

  /// <summary>Field number for the "color" field.</summary>
  public const int ColorFieldNumber = 5;
  private global::CVirtualControllerColor color_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CVirtualControllerColor Color {
    get { return color_; }
    set {
      color_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVirtualControllerLayout);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVirtualControllerLayout other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LayoutVersion != other.LayoutVersion) return false;
    if (ActionsetId != other.ActionsetId) return false;
    if(!elements_.Equals(other.elements_)) return false;
    if (!object.Equals(Color, other.Color)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasLayoutVersion) hash ^= LayoutVersion.GetHashCode();
    if (HasActionsetId) hash ^= ActionsetId.GetHashCode();
    hash ^= elements_.GetHashCode();
    if (color_ != null) hash ^= Color.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasLayoutVersion) {
      output.WriteRawTag(8);
      output.WriteInt32(LayoutVersion);
    }
    if (HasActionsetId) {
      output.WriteRawTag(16);
      output.WriteInt32(ActionsetId);
    }
    elements_.WriteTo(output, _repeated_elements_codec);
    if (color_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Color);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasLayoutVersion) {
      output.WriteRawTag(8);
      output.WriteInt32(LayoutVersion);
    }
    if (HasActionsetId) {
      output.WriteRawTag(16);
      output.WriteInt32(ActionsetId);
    }
    elements_.WriteTo(ref output, _repeated_elements_codec);
    if (color_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Color);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasLayoutVersion) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LayoutVersion);
    }
    if (HasActionsetId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionsetId);
    }
    size += elements_.CalculateSize(_repeated_elements_codec);
    if (color_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVirtualControllerLayout other) {
    if (other == null) {
      return;
    }
    if (other.HasLayoutVersion) {
      LayoutVersion = other.LayoutVersion;
    }
    if (other.HasActionsetId) {
      ActionsetId = other.ActionsetId;
    }
    elements_.Add(other.elements_);
    if (other.color_ != null) {
      if (color_ == null) {
        Color = new global::CVirtualControllerColor();
      }
      Color.MergeFrom(other.Color);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          LayoutVersion = input.ReadInt32();
          break;
        }
        case 16: {
          ActionsetId = input.ReadInt32();
          break;
        }
        case 34: {
          elements_.AddEntriesFrom(input, _repeated_elements_codec);
          break;
        }
        case 42: {
          if (color_ == null) {
            Color = new global::CVirtualControllerColor();
          }
          input.ReadMessage(Color);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          LayoutVersion = input.ReadInt32();
          break;
        }
        case 16: {
          ActionsetId = input.ReadInt32();
          break;
        }
        case 34: {
          elements_.AddEntriesFrom(ref input, _repeated_elements_codec);
          break;
        }
        case 42: {
          if (color_ == null) {
            Color = new global::CVirtualControllerColor();
          }
          input.ReadMessage(Color);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CVirtualControllerLayouts : pb::IMessage<CVirtualControllerLayouts>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVirtualControllerLayouts> _parser = new pb::MessageParser<CVirtualControllerLayouts>(() => new CVirtualControllerLayouts());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVirtualControllerLayouts> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVirtualcontrollerReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayouts() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayouts(CVirtualControllerLayouts other) : this() {
    _hasBits0 = other._hasBits0;
    layouts_ = other.layouts_.Clone();
    inputMode_ = other.inputMode_;
    mouseMode_ = other.mouseMode_;
    trackpadSensitivity_ = other.trackpadSensitivity_;
    pinchZoomEnabled_ = other.pinchZoomEnabled_;
    pinchZoomX_ = other.pinchZoomX_;
    pinchZoomY_ = other.pinchZoomY_;
    pinchZoomScale_ = other.pinchZoomScale_;
    shaken_ = other.shaken_;
    mouseOffscreen_ = other.mouseOffscreen_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayouts Clone() {
    return new CVirtualControllerLayouts(this);
  }

  /// <summary>Field number for the "layouts" field.</summary>
  public const int LayoutsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CVirtualControllerLayout> _repeated_layouts_codec
      = pb::FieldCodec.ForMessage(10, global::CVirtualControllerLayout.Parser);
  private readonly pbc::RepeatedField<global::CVirtualControllerLayout> layouts_ = new pbc::RepeatedField<global::CVirtualControllerLayout>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CVirtualControllerLayout> Layouts {
    get { return layouts_; }
  }

  /// <summary>Field number for the "input_mode" field.</summary>
  public const int InputModeFieldNumber = 2;
  private readonly static global::EInputMode InputModeDefaultValue = global::EInputMode.KEinputModeController;

  private global::EInputMode inputMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EInputMode InputMode {
    get { if ((_hasBits0 & 1) != 0) { return inputMode_; } else { return InputModeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      inputMode_ = value;
    }
  }
  /// <summary>Gets whether the "input_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInputMode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "input_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInputMode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "mouse_mode" field.</summary>
  public const int MouseModeFieldNumber = 3;
  private readonly static global::EMouseMode MouseModeDefaultValue = global::EMouseMode.KEmouseModeUnknown;

  private global::EMouseMode mouseMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EMouseMode MouseMode {
    get { if ((_hasBits0 & 2) != 0) { return mouseMode_; } else { return MouseModeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      mouseMode_ = value;
    }
  }
  /// <summary>Gets whether the "mouse_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMouseMode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "mouse_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMouseMode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "trackpad_sensitivity" field.</summary>
  public const int TrackpadSensitivityFieldNumber = 4;
  private readonly static float TrackpadSensitivityDefaultValue = 1F;

  private float trackpadSensitivity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float TrackpadSensitivity {
    get { if ((_hasBits0 & 4) != 0) { return trackpadSensitivity_; } else { return TrackpadSensitivityDefaultValue; } }
    set {
      _hasBits0 |= 4;
      trackpadSensitivity_ = value;
    }
  }
  /// <summary>Gets whether the "trackpad_sensitivity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTrackpadSensitivity {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "trackpad_sensitivity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTrackpadSensitivity() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "pinch_zoom_enabled" field.</summary>
  public const int PinchZoomEnabledFieldNumber = 5;
  private readonly static bool PinchZoomEnabledDefaultValue = false;

  private bool pinchZoomEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool PinchZoomEnabled {
    get { if ((_hasBits0 & 8) != 0) { return pinchZoomEnabled_; } else { return PinchZoomEnabledDefaultValue; } }
    set {
      _hasBits0 |= 8;
      pinchZoomEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "pinch_zoom_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPinchZoomEnabled {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "pinch_zoom_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPinchZoomEnabled() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "pinch_zoom_x" field.</summary>
  public const int PinchZoomXFieldNumber = 6;
  private readonly static float PinchZoomXDefaultValue = 0F;

  private float pinchZoomX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PinchZoomX {
    get { if ((_hasBits0 & 16) != 0) { return pinchZoomX_; } else { return PinchZoomXDefaultValue; } }
    set {
      _hasBits0 |= 16;
      pinchZoomX_ = value;
    }
  }
  /// <summary>Gets whether the "pinch_zoom_x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPinchZoomX {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "pinch_zoom_x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPinchZoomX() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "pinch_zoom_y" field.</summary>
  public const int PinchZoomYFieldNumber = 7;
  private readonly static float PinchZoomYDefaultValue = 0F;

  private float pinchZoomY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PinchZoomY {
    get { if ((_hasBits0 & 32) != 0) { return pinchZoomY_; } else { return PinchZoomYDefaultValue; } }
    set {
      _hasBits0 |= 32;
      pinchZoomY_ = value;
    }
  }
  /// <summary>Gets whether the "pinch_zoom_y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPinchZoomY {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "pinch_zoom_y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPinchZoomY() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "pinch_zoom_scale" field.</summary>
  public const int PinchZoomScaleFieldNumber = 8;
  private readonly static float PinchZoomScaleDefaultValue = 1F;

  private float pinchZoomScale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PinchZoomScale {
    get { if ((_hasBits0 & 64) != 0) { return pinchZoomScale_; } else { return PinchZoomScaleDefaultValue; } }
    set {
      _hasBits0 |= 64;
      pinchZoomScale_ = value;
    }
  }
  /// <summary>Gets whether the "pinch_zoom_scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPinchZoomScale {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "pinch_zoom_scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPinchZoomScale() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "shaken" field.</summary>
  public const int ShakenFieldNumber = 9;
  private readonly static bool ShakenDefaultValue = false;

  private bool shaken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Shaken {
    get { if ((_hasBits0 & 128) != 0) { return shaken_; } else { return ShakenDefaultValue; } }
    set {
      _hasBits0 |= 128;
      shaken_ = value;
    }
  }
  /// <summary>Gets whether the "shaken" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShaken {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "shaken" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShaken() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "mouse_offscreen" field.</summary>
  public const int MouseOffscreenFieldNumber = 10;
  private readonly static bool MouseOffscreenDefaultValue = false;

  private bool mouseOffscreen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool MouseOffscreen {
    get { if ((_hasBits0 & 256) != 0) { return mouseOffscreen_; } else { return MouseOffscreenDefaultValue; } }
    set {
      _hasBits0 |= 256;
      mouseOffscreen_ = value;
    }
  }
  /// <summary>Gets whether the "mouse_offscreen" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMouseOffscreen {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "mouse_offscreen" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMouseOffscreen() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVirtualControllerLayouts);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVirtualControllerLayouts other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!layouts_.Equals(other.layouts_)) return false;
    if (InputMode != other.InputMode) return false;
    if (MouseMode != other.MouseMode) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TrackpadSensitivity, other.TrackpadSensitivity)) return false;
    if (PinchZoomEnabled != other.PinchZoomEnabled) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PinchZoomX, other.PinchZoomX)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PinchZoomY, other.PinchZoomY)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PinchZoomScale, other.PinchZoomScale)) return false;
    if (Shaken != other.Shaken) return false;
    if (MouseOffscreen != other.MouseOffscreen) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= layouts_.GetHashCode();
    if (HasInputMode) hash ^= InputMode.GetHashCode();
    if (HasMouseMode) hash ^= MouseMode.GetHashCode();
    if (HasTrackpadSensitivity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TrackpadSensitivity);
    if (HasPinchZoomEnabled) hash ^= PinchZoomEnabled.GetHashCode();
    if (HasPinchZoomX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PinchZoomX);
    if (HasPinchZoomY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PinchZoomY);
    if (HasPinchZoomScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PinchZoomScale);
    if (HasShaken) hash ^= Shaken.GetHashCode();
    if (HasMouseOffscreen) hash ^= MouseOffscreen.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    layouts_.WriteTo(output, _repeated_layouts_codec);
    if (HasInputMode) {
      output.WriteRawTag(16);
      output.WriteEnum((int) InputMode);
    }
    if (HasMouseMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) MouseMode);
    }
    if (HasTrackpadSensitivity) {
      output.WriteRawTag(37);
      output.WriteFloat(TrackpadSensitivity);
    }
    if (HasPinchZoomEnabled) {
      output.WriteRawTag(40);
      output.WriteBool(PinchZoomEnabled);
    }
    if (HasPinchZoomX) {
      output.WriteRawTag(53);
      output.WriteFloat(PinchZoomX);
    }
    if (HasPinchZoomY) {
      output.WriteRawTag(61);
      output.WriteFloat(PinchZoomY);
    }
    if (HasPinchZoomScale) {
      output.WriteRawTag(69);
      output.WriteFloat(PinchZoomScale);
    }
    if (HasShaken) {
      output.WriteRawTag(72);
      output.WriteBool(Shaken);
    }
    if (HasMouseOffscreen) {
      output.WriteRawTag(80);
      output.WriteBool(MouseOffscreen);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    layouts_.WriteTo(ref output, _repeated_layouts_codec);
    if (HasInputMode) {
      output.WriteRawTag(16);
      output.WriteEnum((int) InputMode);
    }
    if (HasMouseMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) MouseMode);
    }
    if (HasTrackpadSensitivity) {
      output.WriteRawTag(37);
      output.WriteFloat(TrackpadSensitivity);
    }
    if (HasPinchZoomEnabled) {
      output.WriteRawTag(40);
      output.WriteBool(PinchZoomEnabled);
    }
    if (HasPinchZoomX) {
      output.WriteRawTag(53);
      output.WriteFloat(PinchZoomX);
    }
    if (HasPinchZoomY) {
      output.WriteRawTag(61);
      output.WriteFloat(PinchZoomY);
    }
    if (HasPinchZoomScale) {
      output.WriteRawTag(69);
      output.WriteFloat(PinchZoomScale);
    }
    if (HasShaken) {
      output.WriteRawTag(72);
      output.WriteBool(Shaken);
    }
    if (HasMouseOffscreen) {
      output.WriteRawTag(80);
      output.WriteBool(MouseOffscreen);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += layouts_.CalculateSize(_repeated_layouts_codec);
    if (HasInputMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InputMode);
    }
    if (HasMouseMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MouseMode);
    }
    if (HasTrackpadSensitivity) {
      size += 1 + 4;
    }
    if (HasPinchZoomEnabled) {
      size += 1 + 1;
    }
    if (HasPinchZoomX) {
      size += 1 + 4;
    }
    if (HasPinchZoomY) {
      size += 1 + 4;
    }
    if (HasPinchZoomScale) {
      size += 1 + 4;
    }
    if (HasShaken) {
      size += 1 + 1;
    }
    if (HasMouseOffscreen) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVirtualControllerLayouts other) {
    if (other == null) {
      return;
    }
    layouts_.Add(other.layouts_);
    if (other.HasInputMode) {
      InputMode = other.InputMode;
    }
    if (other.HasMouseMode) {
      MouseMode = other.MouseMode;
    }
    if (other.HasTrackpadSensitivity) {
      TrackpadSensitivity = other.TrackpadSensitivity;
    }
    if (other.HasPinchZoomEnabled) {
      PinchZoomEnabled = other.PinchZoomEnabled;
    }
    if (other.HasPinchZoomX) {
      PinchZoomX = other.PinchZoomX;
    }
    if (other.HasPinchZoomY) {
      PinchZoomY = other.PinchZoomY;
    }
    if (other.HasPinchZoomScale) {
      PinchZoomScale = other.PinchZoomScale;
    }
    if (other.HasShaken) {
      Shaken = other.Shaken;
    }
    if (other.HasMouseOffscreen) {
      MouseOffscreen = other.MouseOffscreen;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          layouts_.AddEntriesFrom(input, _repeated_layouts_codec);
          break;
        }
        case 16: {
          InputMode = (global::EInputMode) input.ReadEnum();
          break;
        }
        case 24: {
          MouseMode = (global::EMouseMode) input.ReadEnum();
          break;
        }
        case 37: {
          TrackpadSensitivity = input.ReadFloat();
          break;
        }
        case 40: {
          PinchZoomEnabled = input.ReadBool();
          break;
        }
        case 53: {
          PinchZoomX = input.ReadFloat();
          break;
        }
        case 61: {
          PinchZoomY = input.ReadFloat();
          break;
        }
        case 69: {
          PinchZoomScale = input.ReadFloat();
          break;
        }
        case 72: {
          Shaken = input.ReadBool();
          break;
        }
        case 80: {
          MouseOffscreen = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          layouts_.AddEntriesFrom(ref input, _repeated_layouts_codec);
          break;
        }
        case 16: {
          InputMode = (global::EInputMode) input.ReadEnum();
          break;
        }
        case 24: {
          MouseMode = (global::EMouseMode) input.ReadEnum();
          break;
        }
        case 37: {
          TrackpadSensitivity = input.ReadFloat();
          break;
        }
        case 40: {
          PinchZoomEnabled = input.ReadBool();
          break;
        }
        case 53: {
          PinchZoomX = input.ReadFloat();
          break;
        }
        case 61: {
          PinchZoomY = input.ReadFloat();
          break;
        }
        case 69: {
          PinchZoomScale = input.ReadFloat();
          break;
        }
        case 72: {
          Shaken = input.ReadBool();
          break;
        }
        case 80: {
          MouseOffscreen = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CVirtualControllerConfig : pb::IMessage<CVirtualControllerConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVirtualControllerConfig> _parser = new pb::MessageParser<CVirtualControllerConfig>(() => new CVirtualControllerConfig());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVirtualControllerConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVirtualcontrollerReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerConfig(CVirtualControllerConfig other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    actionsets_ = other.actionsets_.Clone();
    defaultMouseMode_ = other.defaultMouseMode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerConfig Clone() {
    return new CVirtualControllerConfig(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "actionsets" field.</summary>
  public const int ActionsetsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CVirtualControllerConfig.Types.ActionSet> _repeated_actionsets_codec
      = pb::FieldCodec.ForMessage(18, global::CVirtualControllerConfig.Types.ActionSet.Parser);
  private readonly pbc::RepeatedField<global::CVirtualControllerConfig.Types.ActionSet> actionsets_ = new pbc::RepeatedField<global::CVirtualControllerConfig.Types.ActionSet>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CVirtualControllerConfig.Types.ActionSet> Actionsets {
    get { return actionsets_; }
  }

  /// <summary>Field number for the "default_mouse_mode" field.</summary>
  public const int DefaultMouseModeFieldNumber = 3;
  private readonly static global::EMouseMode DefaultMouseModeDefaultValue = global::EMouseMode.KEmouseModeAbsoluteCursor;

  private global::EMouseMode defaultMouseMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EMouseMode DefaultMouseMode {
    get { if ((_hasBits0 & 1) != 0) { return defaultMouseMode_; } else { return DefaultMouseModeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      defaultMouseMode_ = value;
    }
  }
  /// <summary>Gets whether the "default_mouse_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDefaultMouseMode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "default_mouse_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDefaultMouseMode() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVirtualControllerConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVirtualControllerConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if(!actionsets_.Equals(other.actionsets_)) return false;
    if (DefaultMouseMode != other.DefaultMouseMode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    hash ^= actionsets_.GetHashCode();
    if (HasDefaultMouseMode) hash ^= DefaultMouseMode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    actionsets_.WriteTo(output, _repeated_actionsets_codec);
    if (HasDefaultMouseMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) DefaultMouseMode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    actionsets_.WriteTo(ref output, _repeated_actionsets_codec);
    if (HasDefaultMouseMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) DefaultMouseMode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    size += actionsets_.CalculateSize(_repeated_actionsets_codec);
    if (HasDefaultMouseMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultMouseMode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVirtualControllerConfig other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    actionsets_.Add(other.actionsets_);
    if (other.HasDefaultMouseMode) {
      DefaultMouseMode = other.DefaultMouseMode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          actionsets_.AddEntriesFrom(input, _repeated_actionsets_codec);
          break;
        }
        case 24: {
          DefaultMouseMode = (global::EMouseMode) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          actionsets_.AddEntriesFrom(ref input, _repeated_actionsets_codec);
          break;
        }
        case 24: {
          DefaultMouseMode = (global::EMouseMode) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CVirtualControllerConfig message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Control : pb::IMessage<Control>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Control> _parser = new pb::MessageParser<Control>(() => new Control());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Control> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CVirtualControllerConfig.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Control() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Control(Control other) : this() {
        _hasBits0 = other._hasBits0;
        name_ = other.name_;
        icon_ = other.icon_;
        inputSource_ = other.inputSource_;
        inputMode_ = other.inputMode_;
        inputElement_ = other.inputElement_;
        outputGamepad_ = other.outputGamepad_;
        outputKeyboard_ = other.outputKeyboard_;
        outputMouse_ = other.outputMouse_;
        iconForeground_ = other.iconForeground_;
        iconBackground_ = other.iconBackground_;
        inputToggle_ = other.inputToggle_;
        inputActivateStickOrTrackpad_ = other.inputActivateStickOrTrackpad_;
        activationType_ = other.activationType_;
        longPressMs_ = other.longPressMs_;
        doublePressMs_ = other.doublePressMs_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Control Clone() {
        return new Control(this);
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 1;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "icon" field.</summary>
      public const int IconFieldNumber = 2;
      private readonly static string IconDefaultValue = "";

      private string icon_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Icon {
        get { return icon_ ?? IconDefaultValue; }
        set {
          icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "icon" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIcon {
        get { return icon_ != null; }
      }
      /// <summary>Clears the value of the "icon" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIcon() {
        icon_ = null;
      }

      /// <summary>Field number for the "input_source" field.</summary>
      public const int InputSourceFieldNumber = 3;
      private readonly static int InputSourceDefaultValue = 0;

      private int inputSource_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int InputSource {
        get { if ((_hasBits0 & 1) != 0) { return inputSource_; } else { return InputSourceDefaultValue; } }
        set {
          _hasBits0 |= 1;
          inputSource_ = value;
        }
      }
      /// <summary>Gets whether the "input_source" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInputSource {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "input_source" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInputSource() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "input_mode" field.</summary>
      public const int InputModeFieldNumber = 4;
      private readonly static int InputModeDefaultValue = 0;

      private int inputMode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int InputMode {
        get { if ((_hasBits0 & 2) != 0) { return inputMode_; } else { return InputModeDefaultValue; } }
        set {
          _hasBits0 |= 2;
          inputMode_ = value;
        }
      }
      /// <summary>Gets whether the "input_mode" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInputMode {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "input_mode" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInputMode() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "input_element" field.</summary>
      public const int InputElementFieldNumber = 5;
      private readonly static int InputElementDefaultValue = 0;

      private int inputElement_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int InputElement {
        get { if ((_hasBits0 & 4) != 0) { return inputElement_; } else { return InputElementDefaultValue; } }
        set {
          _hasBits0 |= 4;
          inputElement_ = value;
        }
      }
      /// <summary>Gets whether the "input_element" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInputElement {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "input_element" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInputElement() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "output_gamepad" field.</summary>
      public const int OutputGamepadFieldNumber = 6;
      private readonly static int OutputGamepadDefaultValue = 0;

      private int outputGamepad_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int OutputGamepad {
        get { if ((_hasBits0 & 8) != 0) { return outputGamepad_; } else { return OutputGamepadDefaultValue; } }
        set {
          _hasBits0 |= 8;
          outputGamepad_ = value;
        }
      }
      /// <summary>Gets whether the "output_gamepad" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOutputGamepad {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "output_gamepad" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOutputGamepad() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "output_keyboard" field.</summary>
      public const int OutputKeyboardFieldNumber = 7;
      private readonly static int OutputKeyboardDefaultValue = 0;

      private int outputKeyboard_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int OutputKeyboard {
        get { if ((_hasBits0 & 16) != 0) { return outputKeyboard_; } else { return OutputKeyboardDefaultValue; } }
        set {
          _hasBits0 |= 16;
          outputKeyboard_ = value;
        }
      }
      /// <summary>Gets whether the "output_keyboard" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOutputKeyboard {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "output_keyboard" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOutputKeyboard() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "output_mouse" field.</summary>
      public const int OutputMouseFieldNumber = 8;
      private readonly static int OutputMouseDefaultValue = 0;

      private int outputMouse_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int OutputMouse {
        get { if ((_hasBits0 & 32) != 0) { return outputMouse_; } else { return OutputMouseDefaultValue; } }
        set {
          _hasBits0 |= 32;
          outputMouse_ = value;
        }
      }
      /// <summary>Gets whether the "output_mouse" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOutputMouse {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "output_mouse" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOutputMouse() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "icon_foreground" field.</summary>
      public const int IconForegroundFieldNumber = 9;
      private readonly static string IconForegroundDefaultValue = "";

      private string iconForeground_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string IconForeground {
        get { return iconForeground_ ?? IconForegroundDefaultValue; }
        set {
          iconForeground_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "icon_foreground" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIconForeground {
        get { return iconForeground_ != null; }
      }
      /// <summary>Clears the value of the "icon_foreground" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIconForeground() {
        iconForeground_ = null;
      }

      /// <summary>Field number for the "icon_background" field.</summary>
      public const int IconBackgroundFieldNumber = 10;
      private readonly static string IconBackgroundDefaultValue = "";

      private string iconBackground_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string IconBackground {
        get { return iconBackground_ ?? IconBackgroundDefaultValue; }
        set {
          iconBackground_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "icon_background" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIconBackground {
        get { return iconBackground_ != null; }
      }
      /// <summary>Clears the value of the "icon_background" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIconBackground() {
        iconBackground_ = null;
      }

      /// <summary>Field number for the "input_toggle" field.</summary>
      public const int InputToggleFieldNumber = 11;
      private readonly static bool InputToggleDefaultValue = false;

      private bool inputToggle_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool InputToggle {
        get { if ((_hasBits0 & 64) != 0) { return inputToggle_; } else { return InputToggleDefaultValue; } }
        set {
          _hasBits0 |= 64;
          inputToggle_ = value;
        }
      }
      /// <summary>Gets whether the "input_toggle" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInputToggle {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "input_toggle" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInputToggle() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "input_activate_stick_or_trackpad" field.</summary>
      public const int InputActivateStickOrTrackpadFieldNumber = 12;
      private readonly static int InputActivateStickOrTrackpadDefaultValue = 0;

      private int inputActivateStickOrTrackpad_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int InputActivateStickOrTrackpad {
        get { if ((_hasBits0 & 128) != 0) { return inputActivateStickOrTrackpad_; } else { return InputActivateStickOrTrackpadDefaultValue; } }
        set {
          _hasBits0 |= 128;
          inputActivateStickOrTrackpad_ = value;
        }
      }
      /// <summary>Gets whether the "input_activate_stick_or_trackpad" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInputActivateStickOrTrackpad {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "input_activate_stick_or_trackpad" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInputActivateStickOrTrackpad() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "activation_type" field.</summary>
      public const int ActivationTypeFieldNumber = 13;
      private readonly static int ActivationTypeDefaultValue = 0;

      private int activationType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ActivationType {
        get { if ((_hasBits0 & 256) != 0) { return activationType_; } else { return ActivationTypeDefaultValue; } }
        set {
          _hasBits0 |= 256;
          activationType_ = value;
        }
      }
      /// <summary>Gets whether the "activation_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasActivationType {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "activation_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearActivationType() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "long_press_ms" field.</summary>
      public const int LongPressMsFieldNumber = 14;
      private readonly static int LongPressMsDefaultValue = 0;

      private int longPressMs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int LongPressMs {
        get { if ((_hasBits0 & 512) != 0) { return longPressMs_; } else { return LongPressMsDefaultValue; } }
        set {
          _hasBits0 |= 512;
          longPressMs_ = value;
        }
      }
      /// <summary>Gets whether the "long_press_ms" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLongPressMs {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "long_press_ms" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLongPressMs() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "double_press_ms" field.</summary>
      public const int DoublePressMsFieldNumber = 15;
      private readonly static int DoublePressMsDefaultValue = 0;

      private int doublePressMs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int DoublePressMs {
        get { if ((_hasBits0 & 1024) != 0) { return doublePressMs_; } else { return DoublePressMsDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          doublePressMs_ = value;
        }
      }
      /// <summary>Gets whether the "double_press_ms" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDoublePressMs {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "double_press_ms" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDoublePressMs() {
        _hasBits0 &= ~1024;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Control);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Control other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Name != other.Name) return false;
        if (Icon != other.Icon) return false;
        if (InputSource != other.InputSource) return false;
        if (InputMode != other.InputMode) return false;
        if (InputElement != other.InputElement) return false;
        if (OutputGamepad != other.OutputGamepad) return false;
        if (OutputKeyboard != other.OutputKeyboard) return false;
        if (OutputMouse != other.OutputMouse) return false;
        if (IconForeground != other.IconForeground) return false;
        if (IconBackground != other.IconBackground) return false;
        if (InputToggle != other.InputToggle) return false;
        if (InputActivateStickOrTrackpad != other.InputActivateStickOrTrackpad) return false;
        if (ActivationType != other.ActivationType) return false;
        if (LongPressMs != other.LongPressMs) return false;
        if (DoublePressMs != other.DoublePressMs) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasName) hash ^= Name.GetHashCode();
        if (HasIcon) hash ^= Icon.GetHashCode();
        if (HasInputSource) hash ^= InputSource.GetHashCode();
        if (HasInputMode) hash ^= InputMode.GetHashCode();
        if (HasInputElement) hash ^= InputElement.GetHashCode();
        if (HasOutputGamepad) hash ^= OutputGamepad.GetHashCode();
        if (HasOutputKeyboard) hash ^= OutputKeyboard.GetHashCode();
        if (HasOutputMouse) hash ^= OutputMouse.GetHashCode();
        if (HasIconForeground) hash ^= IconForeground.GetHashCode();
        if (HasIconBackground) hash ^= IconBackground.GetHashCode();
        if (HasInputToggle) hash ^= InputToggle.GetHashCode();
        if (HasInputActivateStickOrTrackpad) hash ^= InputActivateStickOrTrackpad.GetHashCode();
        if (HasActivationType) hash ^= ActivationType.GetHashCode();
        if (HasLongPressMs) hash ^= LongPressMs.GetHashCode();
        if (HasDoublePressMs) hash ^= DoublePressMs.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasIcon) {
          output.WriteRawTag(18);
          output.WriteString(Icon);
        }
        if (HasInputSource) {
          output.WriteRawTag(24);
          output.WriteInt32(InputSource);
        }
        if (HasInputMode) {
          output.WriteRawTag(32);
          output.WriteInt32(InputMode);
        }
        if (HasInputElement) {
          output.WriteRawTag(40);
          output.WriteInt32(InputElement);
        }
        if (HasOutputGamepad) {
          output.WriteRawTag(48);
          output.WriteInt32(OutputGamepad);
        }
        if (HasOutputKeyboard) {
          output.WriteRawTag(56);
          output.WriteInt32(OutputKeyboard);
        }
        if (HasOutputMouse) {
          output.WriteRawTag(64);
          output.WriteInt32(OutputMouse);
        }
        if (HasIconForeground) {
          output.WriteRawTag(74);
          output.WriteString(IconForeground);
        }
        if (HasIconBackground) {
          output.WriteRawTag(82);
          output.WriteString(IconBackground);
        }
        if (HasInputToggle) {
          output.WriteRawTag(88);
          output.WriteBool(InputToggle);
        }
        if (HasInputActivateStickOrTrackpad) {
          output.WriteRawTag(96);
          output.WriteInt32(InputActivateStickOrTrackpad);
        }
        if (HasActivationType) {
          output.WriteRawTag(104);
          output.WriteInt32(ActivationType);
        }
        if (HasLongPressMs) {
          output.WriteRawTag(112);
          output.WriteInt32(LongPressMs);
        }
        if (HasDoublePressMs) {
          output.WriteRawTag(120);
          output.WriteInt32(DoublePressMs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasIcon) {
          output.WriteRawTag(18);
          output.WriteString(Icon);
        }
        if (HasInputSource) {
          output.WriteRawTag(24);
          output.WriteInt32(InputSource);
        }
        if (HasInputMode) {
          output.WriteRawTag(32);
          output.WriteInt32(InputMode);
        }
        if (HasInputElement) {
          output.WriteRawTag(40);
          output.WriteInt32(InputElement);
        }
        if (HasOutputGamepad) {
          output.WriteRawTag(48);
          output.WriteInt32(OutputGamepad);
        }
        if (HasOutputKeyboard) {
          output.WriteRawTag(56);
          output.WriteInt32(OutputKeyboard);
        }
        if (HasOutputMouse) {
          output.WriteRawTag(64);
          output.WriteInt32(OutputMouse);
        }
        if (HasIconForeground) {
          output.WriteRawTag(74);
          output.WriteString(IconForeground);
        }
        if (HasIconBackground) {
          output.WriteRawTag(82);
          output.WriteString(IconBackground);
        }
        if (HasInputToggle) {
          output.WriteRawTag(88);
          output.WriteBool(InputToggle);
        }
        if (HasInputActivateStickOrTrackpad) {
          output.WriteRawTag(96);
          output.WriteInt32(InputActivateStickOrTrackpad);
        }
        if (HasActivationType) {
          output.WriteRawTag(104);
          output.WriteInt32(ActivationType);
        }
        if (HasLongPressMs) {
          output.WriteRawTag(112);
          output.WriteInt32(LongPressMs);
        }
        if (HasDoublePressMs) {
          output.WriteRawTag(120);
          output.WriteInt32(DoublePressMs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (HasIcon) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
        }
        if (HasInputSource) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputSource);
        }
        if (HasInputMode) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputMode);
        }
        if (HasInputElement) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputElement);
        }
        if (HasOutputGamepad) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputGamepad);
        }
        if (HasOutputKeyboard) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputKeyboard);
        }
        if (HasOutputMouse) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputMouse);
        }
        if (HasIconForeground) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(IconForeground);
        }
        if (HasIconBackground) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(IconBackground);
        }
        if (HasInputToggle) {
          size += 1 + 1;
        }
        if (HasInputActivateStickOrTrackpad) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputActivateStickOrTrackpad);
        }
        if (HasActivationType) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivationType);
        }
        if (HasLongPressMs) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(LongPressMs);
        }
        if (HasDoublePressMs) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(DoublePressMs);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Control other) {
        if (other == null) {
          return;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasIcon) {
          Icon = other.Icon;
        }
        if (other.HasInputSource) {
          InputSource = other.InputSource;
        }
        if (other.HasInputMode) {
          InputMode = other.InputMode;
        }
        if (other.HasInputElement) {
          InputElement = other.InputElement;
        }
        if (other.HasOutputGamepad) {
          OutputGamepad = other.OutputGamepad;
        }
        if (other.HasOutputKeyboard) {
          OutputKeyboard = other.OutputKeyboard;
        }
        if (other.HasOutputMouse) {
          OutputMouse = other.OutputMouse;
        }
        if (other.HasIconForeground) {
          IconForeground = other.IconForeground;
        }
        if (other.HasIconBackground) {
          IconBackground = other.IconBackground;
        }
        if (other.HasInputToggle) {
          InputToggle = other.InputToggle;
        }
        if (other.HasInputActivateStickOrTrackpad) {
          InputActivateStickOrTrackpad = other.InputActivateStickOrTrackpad;
        }
        if (other.HasActivationType) {
          ActivationType = other.ActivationType;
        }
        if (other.HasLongPressMs) {
          LongPressMs = other.LongPressMs;
        }
        if (other.HasDoublePressMs) {
          DoublePressMs = other.DoublePressMs;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Icon = input.ReadString();
              break;
            }
            case 24: {
              InputSource = input.ReadInt32();
              break;
            }
            case 32: {
              InputMode = input.ReadInt32();
              break;
            }
            case 40: {
              InputElement = input.ReadInt32();
              break;
            }
            case 48: {
              OutputGamepad = input.ReadInt32();
              break;
            }
            case 56: {
              OutputKeyboard = input.ReadInt32();
              break;
            }
            case 64: {
              OutputMouse = input.ReadInt32();
              break;
            }
            case 74: {
              IconForeground = input.ReadString();
              break;
            }
            case 82: {
              IconBackground = input.ReadString();
              break;
            }
            case 88: {
              InputToggle = input.ReadBool();
              break;
            }
            case 96: {
              InputActivateStickOrTrackpad = input.ReadInt32();
              break;
            }
            case 104: {
              ActivationType = input.ReadInt32();
              break;
            }
            case 112: {
              LongPressMs = input.ReadInt32();
              break;
            }
            case 120: {
              DoublePressMs = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Icon = input.ReadString();
              break;
            }
            case 24: {
              InputSource = input.ReadInt32();
              break;
            }
            case 32: {
              InputMode = input.ReadInt32();
              break;
            }
            case 40: {
              InputElement = input.ReadInt32();
              break;
            }
            case 48: {
              OutputGamepad = input.ReadInt32();
              break;
            }
            case 56: {
              OutputKeyboard = input.ReadInt32();
              break;
            }
            case 64: {
              OutputMouse = input.ReadInt32();
              break;
            }
            case 74: {
              IconForeground = input.ReadString();
              break;
            }
            case 82: {
              IconBackground = input.ReadString();
              break;
            }
            case 88: {
              InputToggle = input.ReadBool();
              break;
            }
            case 96: {
              InputActivateStickOrTrackpad = input.ReadInt32();
              break;
            }
            case 104: {
              ActivationType = input.ReadInt32();
              break;
            }
            case 112: {
              LongPressMs = input.ReadInt32();
              break;
            }
            case 120: {
              DoublePressMs = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ActionSet : pb::IMessage<ActionSet>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ActionSet> _parser = new pb::MessageParser<ActionSet>(() => new ActionSet());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ActionSet> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CVirtualControllerConfig.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ActionSet() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ActionSet(ActionSet other) : this() {
        _hasBits0 = other._hasBits0;
        id_ = other.id_;
        parentId_ = other.parentId_;
        name_ = other.name_;
        controls_ = other.controls_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ActionSet Clone() {
        return new ActionSet(this);
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 1;
      private readonly static int IdDefaultValue = 0;

      private int id_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Id {
        get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          id_ = value;
        }
      }
      /// <summary>Gets whether the "id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "parent_id" field.</summary>
      public const int ParentIdFieldNumber = 2;
      private readonly static int ParentIdDefaultValue = 0;

      private int parentId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ParentId {
        get { if ((_hasBits0 & 2) != 0) { return parentId_; } else { return ParentIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          parentId_ = value;
        }
      }
      /// <summary>Gets whether the "parent_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasParentId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "parent_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearParentId() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 3;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "controls" field.</summary>
      public const int ControlsFieldNumber = 4;
      private static readonly pb::FieldCodec<global::CVirtualControllerConfig.Types.Control> _repeated_controls_codec
          = pb::FieldCodec.ForMessage(34, global::CVirtualControllerConfig.Types.Control.Parser);
      private readonly pbc::RepeatedField<global::CVirtualControllerConfig.Types.Control> controls_ = new pbc::RepeatedField<global::CVirtualControllerConfig.Types.Control>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CVirtualControllerConfig.Types.Control> Controls {
        get { return controls_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ActionSet);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ActionSet other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Id != other.Id) return false;
        if (ParentId != other.ParentId) return false;
        if (Name != other.Name) return false;
        if(!controls_.Equals(other.controls_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasId) hash ^= Id.GetHashCode();
        if (HasParentId) hash ^= ParentId.GetHashCode();
        if (HasName) hash ^= Name.GetHashCode();
        hash ^= controls_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasId) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (HasParentId) {
          output.WriteRawTag(16);
          output.WriteInt32(ParentId);
        }
        if (HasName) {
          output.WriteRawTag(26);
          output.WriteString(Name);
        }
        controls_.WriteTo(output, _repeated_controls_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasId) {
          output.WriteRawTag(8);
          output.WriteInt32(Id);
        }
        if (HasParentId) {
          output.WriteRawTag(16);
          output.WriteInt32(ParentId);
        }
        if (HasName) {
          output.WriteRawTag(26);
          output.WriteString(Name);
        }
        controls_.WriteTo(ref output, _repeated_controls_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasId) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
        }
        if (HasParentId) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentId);
        }
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        size += controls_.CalculateSize(_repeated_controls_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ActionSet other) {
        if (other == null) {
          return;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasParentId) {
          ParentId = other.ParentId;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        controls_.Add(other.controls_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              ParentId = input.ReadInt32();
              break;
            }
            case 26: {
              Name = input.ReadString();
              break;
            }
            case 34: {
              controls_.AddEntriesFrom(input, _repeated_controls_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 16: {
              ParentId = input.ReadInt32();
              break;
            }
            case 26: {
              Name = input.ReadString();
              break;
            }
            case 34: {
              controls_.AddEntriesFrom(ref input, _repeated_controls_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CVirtualControllerLayoutPackage : pb::IMessage<CVirtualControllerLayoutPackage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVirtualControllerLayoutPackage> _parser = new pb::MessageParser<CVirtualControllerLayoutPackage>(() => new CVirtualControllerLayoutPackage());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVirtualControllerLayoutPackage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVirtualcontrollerReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayoutPackage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayoutPackage(CVirtualControllerLayoutPackage other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    creator_ = other.creator_;
    initialRevision_ = other.initialRevision_;
    savedRevision_ = other.savedRevision_;
    config_ = other.config_ != null ? other.config_.Clone() : null;
    layouts_ = other.layouts_ != null ? other.layouts_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerLayoutPackage Clone() {
    return new CVirtualControllerLayoutPackage(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "creator" field.</summary>
  public const int CreatorFieldNumber = 2;
  private readonly static ulong CreatorDefaultValue = 0UL;

  private ulong creator_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Creator {
    get { if ((_hasBits0 & 2) != 0) { return creator_; } else { return CreatorDefaultValue; } }
    set {
      _hasBits0 |= 2;
      creator_ = value;
    }
  }
  /// <summary>Gets whether the "creator" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreator {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "creator" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreator() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "initial_revision" field.</summary>
  public const int InitialRevisionFieldNumber = 3;
  private readonly static uint InitialRevisionDefaultValue = 0;

  private uint initialRevision_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint InitialRevision {
    get { if ((_hasBits0 & 4) != 0) { return initialRevision_; } else { return InitialRevisionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      initialRevision_ = value;
    }
  }
  /// <summary>Gets whether the "initial_revision" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInitialRevision {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "initial_revision" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInitialRevision() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "saved_revision" field.</summary>
  public const int SavedRevisionFieldNumber = 4;
  private readonly static uint SavedRevisionDefaultValue = 0;

  private uint savedRevision_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SavedRevision {
    get { if ((_hasBits0 & 8) != 0) { return savedRevision_; } else { return SavedRevisionDefaultValue; } }
    set {
      _hasBits0 |= 8;
      savedRevision_ = value;
    }
  }
  /// <summary>Gets whether the "saved_revision" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSavedRevision {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "saved_revision" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSavedRevision() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "config" field.</summary>
  public const int ConfigFieldNumber = 5;
  private global::CVirtualControllerConfig config_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CVirtualControllerConfig Config {
    get { return config_; }
    set {
      config_ = value;
    }
  }

  /// <summary>Field number for the "layouts" field.</summary>
  public const int LayoutsFieldNumber = 6;
  private global::CVirtualControllerLayouts layouts_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CVirtualControllerLayouts Layouts {
    get { return layouts_; }
    set {
      layouts_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVirtualControllerLayoutPackage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVirtualControllerLayoutPackage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Creator != other.Creator) return false;
    if (InitialRevision != other.InitialRevision) return false;
    if (SavedRevision != other.SavedRevision) return false;
    if (!object.Equals(Config, other.Config)) return false;
    if (!object.Equals(Layouts, other.Layouts)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasCreator) hash ^= Creator.GetHashCode();
    if (HasInitialRevision) hash ^= InitialRevision.GetHashCode();
    if (HasSavedRevision) hash ^= SavedRevision.GetHashCode();
    if (config_ != null) hash ^= Config.GetHashCode();
    if (layouts_ != null) hash ^= Layouts.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasCreator) {
      output.WriteRawTag(16);
      output.WriteUInt64(Creator);
    }
    if (HasInitialRevision) {
      output.WriteRawTag(24);
      output.WriteUInt32(InitialRevision);
    }
    if (HasSavedRevision) {
      output.WriteRawTag(32);
      output.WriteUInt32(SavedRevision);
    }
    if (config_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Config);
    }
    if (layouts_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Layouts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasCreator) {
      output.WriteRawTag(16);
      output.WriteUInt64(Creator);
    }
    if (HasInitialRevision) {
      output.WriteRawTag(24);
      output.WriteUInt32(InitialRevision);
    }
    if (HasSavedRevision) {
      output.WriteRawTag(32);
      output.WriteUInt32(SavedRevision);
    }
    if (config_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Config);
    }
    if (layouts_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Layouts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasCreator) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Creator);
    }
    if (HasInitialRevision) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialRevision);
    }
    if (HasSavedRevision) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SavedRevision);
    }
    if (config_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
    }
    if (layouts_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layouts);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVirtualControllerLayoutPackage other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasCreator) {
      Creator = other.Creator;
    }
    if (other.HasInitialRevision) {
      InitialRevision = other.InitialRevision;
    }
    if (other.HasSavedRevision) {
      SavedRevision = other.SavedRevision;
    }
    if (other.config_ != null) {
      if (config_ == null) {
        Config = new global::CVirtualControllerConfig();
      }
      Config.MergeFrom(other.Config);
    }
    if (other.layouts_ != null) {
      if (layouts_ == null) {
        Layouts = new global::CVirtualControllerLayouts();
      }
      Layouts.MergeFrom(other.Layouts);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Creator = input.ReadUInt64();
          break;
        }
        case 24: {
          InitialRevision = input.ReadUInt32();
          break;
        }
        case 32: {
          SavedRevision = input.ReadUInt32();
          break;
        }
        case 42: {
          if (config_ == null) {
            Config = new global::CVirtualControllerConfig();
          }
          input.ReadMessage(Config);
          break;
        }
        case 50: {
          if (layouts_ == null) {
            Layouts = new global::CVirtualControllerLayouts();
          }
          input.ReadMessage(Layouts);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Creator = input.ReadUInt64();
          break;
        }
        case 24: {
          InitialRevision = input.ReadUInt32();
          break;
        }
        case 32: {
          SavedRevision = input.ReadUInt32();
          break;
        }
        case 42: {
          if (config_ == null) {
            Config = new global::CVirtualControllerConfig();
          }
          input.ReadMessage(Config);
          break;
        }
        case 50: {
          if (layouts_ == null) {
            Layouts = new global::CVirtualControllerLayouts();
          }
          input.ReadMessage(Layouts);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CVirtualControllerGlobalConfig : pb::IMessage<CVirtualControllerGlobalConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CVirtualControllerGlobalConfig> _parser = new pb::MessageParser<CVirtualControllerGlobalConfig>(() => new CVirtualControllerGlobalConfig());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CVirtualControllerGlobalConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVirtualcontrollerReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerGlobalConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerGlobalConfig(CVirtualControllerGlobalConfig other) : this() {
    _hasBits0 = other._hasBits0;
    feedbackEnabled_ = other.feedbackEnabled_;
    gyroscopeEnabled_ = other.gyroscopeEnabled_;
    autoFadeEnabled_ = other.autoFadeEnabled_;
    rumbleEnabled_ = other.rumbleEnabled_;
    shakeFadeEnabled_ = other.shakeFadeEnabled_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CVirtualControllerGlobalConfig Clone() {
    return new CVirtualControllerGlobalConfig(this);
  }

  /// <summary>Field number for the "feedback_enabled" field.</summary>
  public const int FeedbackEnabledFieldNumber = 1;
  private readonly static bool FeedbackEnabledDefaultValue = false;

  private bool feedbackEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FeedbackEnabled {
    get { if ((_hasBits0 & 1) != 0) { return feedbackEnabled_; } else { return FeedbackEnabledDefaultValue; } }
    set {
      _hasBits0 |= 1;
      feedbackEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "feedback_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFeedbackEnabled {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "feedback_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFeedbackEnabled() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "gyroscope_enabled" field.</summary>
  public const int GyroscopeEnabledFieldNumber = 2;
  private readonly static bool GyroscopeEnabledDefaultValue = true;

  private bool gyroscopeEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool GyroscopeEnabled {
    get { if ((_hasBits0 & 2) != 0) { return gyroscopeEnabled_; } else { return GyroscopeEnabledDefaultValue; } }
    set {
      _hasBits0 |= 2;
      gyroscopeEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "gyroscope_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGyroscopeEnabled {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "gyroscope_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGyroscopeEnabled() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "auto_fade_enabled" field.</summary>
  public const int AutoFadeEnabledFieldNumber = 3;
  private readonly static bool AutoFadeEnabledDefaultValue = true;

  private bool autoFadeEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AutoFadeEnabled {
    get { if ((_hasBits0 & 4) != 0) { return autoFadeEnabled_; } else { return AutoFadeEnabledDefaultValue; } }
    set {
      _hasBits0 |= 4;
      autoFadeEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "auto_fade_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAutoFadeEnabled {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "auto_fade_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAutoFadeEnabled() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "rumble_enabled" field.</summary>
  public const int RumbleEnabledFieldNumber = 4;
  private readonly static bool RumbleEnabledDefaultValue = true;

  private bool rumbleEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool RumbleEnabled {
    get { if ((_hasBits0 & 8) != 0) { return rumbleEnabled_; } else { return RumbleEnabledDefaultValue; } }
    set {
      _hasBits0 |= 8;
      rumbleEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "rumble_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRumbleEnabled {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "rumble_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRumbleEnabled() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "shake_fade_enabled" field.</summary>
  public const int ShakeFadeEnabledFieldNumber = 5;
  private readonly static bool ShakeFadeEnabledDefaultValue = false;

  private bool shakeFadeEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ShakeFadeEnabled {
    get { if ((_hasBits0 & 16) != 0) { return shakeFadeEnabled_; } else { return ShakeFadeEnabledDefaultValue; } }
    set {
      _hasBits0 |= 16;
      shakeFadeEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "shake_fade_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShakeFadeEnabled {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "shake_fade_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShakeFadeEnabled() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CVirtualControllerGlobalConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CVirtualControllerGlobalConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FeedbackEnabled != other.FeedbackEnabled) return false;
    if (GyroscopeEnabled != other.GyroscopeEnabled) return false;
    if (AutoFadeEnabled != other.AutoFadeEnabled) return false;
    if (RumbleEnabled != other.RumbleEnabled) return false;
    if (ShakeFadeEnabled != other.ShakeFadeEnabled) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFeedbackEnabled) hash ^= FeedbackEnabled.GetHashCode();
    if (HasGyroscopeEnabled) hash ^= GyroscopeEnabled.GetHashCode();
    if (HasAutoFadeEnabled) hash ^= AutoFadeEnabled.GetHashCode();
    if (HasRumbleEnabled) hash ^= RumbleEnabled.GetHashCode();
    if (HasShakeFadeEnabled) hash ^= ShakeFadeEnabled.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFeedbackEnabled) {
      output.WriteRawTag(8);
      output.WriteBool(FeedbackEnabled);
    }
    if (HasGyroscopeEnabled) {
      output.WriteRawTag(16);
      output.WriteBool(GyroscopeEnabled);
    }
    if (HasAutoFadeEnabled) {
      output.WriteRawTag(24);
      output.WriteBool(AutoFadeEnabled);
    }
    if (HasRumbleEnabled) {
      output.WriteRawTag(32);
      output.WriteBool(RumbleEnabled);
    }
    if (HasShakeFadeEnabled) {
      output.WriteRawTag(40);
      output.WriteBool(ShakeFadeEnabled);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFeedbackEnabled) {
      output.WriteRawTag(8);
      output.WriteBool(FeedbackEnabled);
    }
    if (HasGyroscopeEnabled) {
      output.WriteRawTag(16);
      output.WriteBool(GyroscopeEnabled);
    }
    if (HasAutoFadeEnabled) {
      output.WriteRawTag(24);
      output.WriteBool(AutoFadeEnabled);
    }
    if (HasRumbleEnabled) {
      output.WriteRawTag(32);
      output.WriteBool(RumbleEnabled);
    }
    if (HasShakeFadeEnabled) {
      output.WriteRawTag(40);
      output.WriteBool(ShakeFadeEnabled);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFeedbackEnabled) {
      size += 1 + 1;
    }
    if (HasGyroscopeEnabled) {
      size += 1 + 1;
    }
    if (HasAutoFadeEnabled) {
      size += 1 + 1;
    }
    if (HasRumbleEnabled) {
      size += 1 + 1;
    }
    if (HasShakeFadeEnabled) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CVirtualControllerGlobalConfig other) {
    if (other == null) {
      return;
    }
    if (other.HasFeedbackEnabled) {
      FeedbackEnabled = other.FeedbackEnabled;
    }
    if (other.HasGyroscopeEnabled) {
      GyroscopeEnabled = other.GyroscopeEnabled;
    }
    if (other.HasAutoFadeEnabled) {
      AutoFadeEnabled = other.AutoFadeEnabled;
    }
    if (other.HasRumbleEnabled) {
      RumbleEnabled = other.RumbleEnabled;
    }
    if (other.HasShakeFadeEnabled) {
      ShakeFadeEnabled = other.ShakeFadeEnabled;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FeedbackEnabled = input.ReadBool();
          break;
        }
        case 16: {
          GyroscopeEnabled = input.ReadBool();
          break;
        }
        case 24: {
          AutoFadeEnabled = input.ReadBool();
          break;
        }
        case 32: {
          RumbleEnabled = input.ReadBool();
          break;
        }
        case 40: {
          ShakeFadeEnabled = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          FeedbackEnabled = input.ReadBool();
          break;
        }
        case 16: {
          GyroscopeEnabled = input.ReadBool();
          break;
        }
        case 24: {
          AutoFadeEnabled = input.ReadBool();
          break;
        }
        case 32: {
          RumbleEnabled = input.ReadBool();
          break;
        }
        case 40: {
          ShakeFadeEnabled = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

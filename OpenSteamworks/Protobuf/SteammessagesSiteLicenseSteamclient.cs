// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_site_license.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_site_license.steamclient.proto</summary>
public static partial class SteammessagesSiteLicenseSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_site_license.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesSiteLicenseSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CixzdGVhbW1lc3NhZ2VzX3NpdGVfbGljZW5zZS5zdGVhbWNsaWVudC5wcm90",
          "bxoYc3RlYW1tZXNzYWdlc19iYXNlLnByb3RvGixzdGVhbW1lc3NhZ2VzX3Vu",
          "aWZpZWRfYmFzZS5zdGVhbWNsaWVudC5wcm90byKNAQopQ1NpdGVNYW5hZ2Vy",
          "Q2xpZW50X0luY29taW5nQ2xpZW50X1JlcXVlc3QSFwoPc2l0ZV9pbnN0YW5j",
          "ZWlkGAEgASgGEhYKDmNsaWVudF9zdGVhbWlkGAIgASgGEhcKD2NsaWVudF9s",
          "b2NhbF9pcBgDIAEoBxIWCg5jb25uZWN0aW9uX2tleRgEIAEoDCIsCipDU2l0",
          "ZU1hbmFnZXJDbGllbnRfSW5jb21pbmdDbGllbnRfUmVzcG9uc2UiTgosQ1Np",
          "dGVMaWNlbnNlX0NsaWVudFNlYXRDaGVja291dF9Ob3RpZmljYXRpb24SDQoF",
          "YXBwaWQYASABKA0SDwoHZXJlc3VsdBgCIAEoDSLjAgovQ1NpdGVNYW5hZ2Vy",
          "Q2xpZW50X1RyYWNrZWRQYXltZW50c19Ob3RpZmljYXRpb24SDwoHc2l0ZV9p",
          "ZBgBIAEoBhJKCghwYXltZW50cxgCIAMoCzI4LkNTaXRlTWFuYWdlckNsaWVu",
          "dF9UcmFja2VkUGF5bWVudHNfTm90aWZpY2F0aW9uLlBheW1lbnQa0gEKB1Bh",
          "eW1lbnQSDwoHdHJhbnNpZBgBIAEoBBIPCgdzdGVhbWlkGAIgASgEEg4KBmFt",
          "b3VudBgDIAEoAxIRCgllY3VycmVuY3kYBCABKA0SFAoMdGltZV9jcmVhdGVk",
          "GAUgASgFEhcKD3B1cmNoYXNlX3N0YXR1cxgGIAEoBRIUCgxtYWNoaW5lX25h",
          "bWUYByABKAkSFAoMcGVyc29uYV9uYW1lGAggASgJEhMKC3Byb2ZpbGVfdXJs",
          "GAkgASgJEhIKCmF2YXRhcl91cmwYCiABKAkicgooQ1NpdGVMaWNlbnNlX0lu",
          "aXRpYXRlQXNzb2NpYXRpb25fUmVxdWVzdBIUCgxzaXRlX3N0ZWFtaWQYASAB",
          "KAYSFwoPc2l0ZV9pbnN0YW5jZWlkGAIgASgGEhcKD2NsaWVudF9sb2NhbF9p",
          "cBgDIAEoByJDCilDU2l0ZUxpY2Vuc2VfSW5pdGlhdGVBc3NvY2lhdGlvbl9S",
          "ZXNwb25zZRIWCg5jb25uZWN0aW9uX2tleRgBIAEoDCI6CiRDU2l0ZUxpY2Vu",
          "c2VfTENTQXV0aGVudGljYXRlX1JlcXVlc3QSEgoKaW5zdGFuY2VpZBgBIAEo",
          "BiJ6CiVDU2l0ZUxpY2Vuc2VfTENTQXV0aGVudGljYXRlX1Jlc3BvbnNlEg8K",
          "B3NpdGVfaWQYASABKAQSEQoJc2l0ZV9uYW1lGAIgASgJEhMKC25ld19zZXNz",
          "aW9uGAMgASgIEhgKEG5vX3NpdGVfbGljZW5zZXMYBCABKAgidAolQ1NpdGVM",
          "aWNlbnNlX0xDU0Fzc29jaWF0ZVVzZXJfUmVxdWVzdBIPCgdzdGVhbWlkGAEg",
          "ASgGEhAKCGxvY2FsX2lwGAIgASgHEhIKCmluc3RhbmNlaWQYAyABKAYSFAoM",
          "bWFjaGluZV9uYW1lGAQgASgJIigKJkNTaXRlTGljZW5zZV9MQ1NBc3NvY2lh",
          "dGVVc2VyX1Jlc3BvbnNlIl0KJ0NTaXRlTGljZW5zZV9DbGllbnRTZWF0Q2hl",
          "Y2tvdXRfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEhIKCmluc3RhbmNlaWQY",
          "AiABKAYSDQoFYXBwaWQYAyABKA0iKgooQ1NpdGVMaWNlbnNlX0NsaWVudFNl",
          "YXRDaGVja291dF9SZXNwb25zZSJiCixDU2l0ZUxpY2Vuc2VfQ2xpZW50R2V0",
          "QXZhaWxhYmxlU2VhdHNfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEhIKCmlu",
          "c3RhbmNlaWQYAiABKAYSDQoFYXBwaWQYAyABKA0iSAotQ1NpdGVMaWNlbnNl",
          "X0NsaWVudEdldEF2YWlsYWJsZVNlYXRzX1Jlc3BvbnNlEhcKD2F2YWlsYWJs",
          "ZV9zZWF0cxgBIAEoDTKjBAoRU2l0ZU1hbmFnZXJDbGllbnQSrwEKDkluY29t",
          "aW5nQ2xpZW50EiouQ1NpdGVNYW5hZ2VyQ2xpZW50X0luY29taW5nQ2xpZW50",
          "X1JlcXVlc3QaKy5DU2l0ZU1hbmFnZXJDbGllbnRfSW5jb21pbmdDbGllbnRf",
          "UmVzcG9uc2UiRIK1GEBSYWNrIGluZm9ybWluZyBzaXRlIG1hbmFnZXIgb2Yg",
          "bmV3IGluYm91bmQgY2xpZW50IFBTSyBjb25uZWN0aW9uEpMBCh5DbGllbnRT",
          "ZWF0Q2hlY2tvdXROb3RpZmljYXRpb24SLS5DU2l0ZUxpY2Vuc2VfQ2xpZW50",
          "U2VhdENoZWNrb3V0X05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2UiNYK1GDFO",
          "b3RpZnkgY2xpZW50IGRpcmVjdGx5IGFib3V0IHNlYXQgY2hlY2tvdXQgcmVz",
          "dWx0EpoBChtUcmFja2VkUGF5bWVudHNOb3RpZmljYXRpb24SMC5DU2l0ZU1h",
          "bmFnZXJDbGllbnRfVHJhY2tlZFBheW1lbnRzX05vdGlmaWNhdGlvbhoLLk5v",
          "UmVzcG9uc2UiPIK1GDhSYWNrIGluZm9ybWluZyBzaXRlIG1hbmFnZXIgb2Yg",
          "ZXhpc3RpbmcgdHJhY2tlZCBwYXltZW50cxopgrUYIUxvY2FsIHNpdGUgbWFu",
          "YWdlciBjbGllbnQgc2VydmljZcC1GAIy1QYKC1NpdGVMaWNlbnNlEqQBChNJ",
          "bml0aWF0ZUFzc29jaWF0aW9uEikuQ1NpdGVMaWNlbnNlX0luaXRpYXRlQXNz",
          "b2NpYXRpb25fUmVxdWVzdBoqLkNTaXRlTGljZW5zZV9Jbml0aWF0ZUFzc29j",
          "aWF0aW9uX1Jlc3BvbnNlIjaCtRgyQ2xpZW50IGlzIHJlcXVlc3RpbmcgY29u",
          "bmV0aW9uIGluZm8gZm9yIGxvY2FsIHNpdGUShgEKD0xDU0F1dGhlbnRpY2F0",
          "ZRIlLkNTaXRlTGljZW5zZV9MQ1NBdXRoZW50aWNhdGVfUmVxdWVzdBomLkNT",
          "aXRlTGljZW5zZV9MQ1NBdXRoZW50aWNhdGVfUmVzcG9uc2UiJIK1GCBMb2Nh",
          "bCBjYWZlIHNlcnZlciBhdXRoZW50aWNhdGlvbhKdAQoQTENTQXNzb2NpYXRl",
          "VXNlchImLkNTaXRlTGljZW5zZV9MQ1NBc3NvY2lhdGVVc2VyX1JlcXVlc3Qa",
          "Jy5DU2l0ZUxpY2Vuc2VfTENTQXNzb2NpYXRlVXNlcl9SZXNwb25zZSI4grUY",
          "NExvY2FsIGNhZmUgc2VydmVyIHdhbnRzIHRvIGdyYW50IHVzZXIgYWNjZXNz",
          "IHRvIHNpdGUSngEKEkNsaWVudFNlYXRDaGVja291dBIoLkNTaXRlTGljZW5z",
          "ZV9DbGllbnRTZWF0Q2hlY2tvdXRfUmVxdWVzdBopLkNTaXRlTGljZW5zZV9D",
          "bGllbnRTZWF0Q2hlY2tvdXRfUmVzcG9uc2UiM4K1GC9DbGllbnQgaXMgcmVx",
          "dWVzdGluZyB1c2Ugb2YgYSBzaXRlIGxpY2Vuc2Ugc2VhdBK6AQoXQ2xpZW50",
          "R2V0QXZhaWxhYmxlU2VhdHMSLS5DU2l0ZUxpY2Vuc2VfQ2xpZW50R2V0QXZh",
          "aWxhYmxlU2VhdHNfUmVxdWVzdBouLkNTaXRlTGljZW5zZV9DbGllbnRHZXRB",
          "dmFpbGFibGVTZWF0c19SZXNwb25zZSJAgrUYPENsaWVudCBpcyByZXF1ZXN0",
          "aW5nIHRoZSBudW1iZXIgb2YgY3VycmVudGx5IGF2YWlsYWJsZSBzZWF0cxoY",
          "grUYFFNpdGUgTGljZW5zZSBzZXJ2aWNlQgOAAQE="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteManagerClient_IncomingClient_Request), global::CSiteManagerClient_IncomingClient_Request.Parser, new[]{ "SiteInstanceid", "ClientSteamid", "ClientLocalIp", "ConnectionKey" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteManagerClient_IncomingClient_Response), global::CSiteManagerClient_IncomingClient_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_ClientSeatCheckout_Notification), global::CSiteLicense_ClientSeatCheckout_Notification.Parser, new[]{ "Appid", "Eresult" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteManagerClient_TrackedPayments_Notification), global::CSiteManagerClient_TrackedPayments_Notification.Parser, new[]{ "SiteId", "Payments" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSiteManagerClient_TrackedPayments_Notification.Types.Payment), global::CSiteManagerClient_TrackedPayments_Notification.Types.Payment.Parser, new[]{ "Transid", "Steamid", "Amount", "Ecurrency", "TimeCreated", "PurchaseStatus", "MachineName", "PersonaName", "ProfileUrl", "AvatarUrl" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_InitiateAssociation_Request), global::CSiteLicense_InitiateAssociation_Request.Parser, new[]{ "SiteSteamid", "SiteInstanceid", "ClientLocalIp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_InitiateAssociation_Response), global::CSiteLicense_InitiateAssociation_Response.Parser, new[]{ "ConnectionKey" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_LCSAuthenticate_Request), global::CSiteLicense_LCSAuthenticate_Request.Parser, new[]{ "Instanceid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_LCSAuthenticate_Response), global::CSiteLicense_LCSAuthenticate_Response.Parser, new[]{ "SiteId", "SiteName", "NewSession", "NoSiteLicenses" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_LCSAssociateUser_Request), global::CSiteLicense_LCSAssociateUser_Request.Parser, new[]{ "Steamid", "LocalIp", "Instanceid", "MachineName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_LCSAssociateUser_Response), global::CSiteLicense_LCSAssociateUser_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_ClientSeatCheckout_Request), global::CSiteLicense_ClientSeatCheckout_Request.Parser, new[]{ "Steamid", "Instanceid", "Appid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_ClientSeatCheckout_Response), global::CSiteLicense_ClientSeatCheckout_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_ClientGetAvailableSeats_Request), global::CSiteLicense_ClientGetAvailableSeats_Request.Parser, new[]{ "Steamid", "Instanceid", "Appid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSiteLicense_ClientGetAvailableSeats_Response), global::CSiteLicense_ClientGetAvailableSeats_Response.Parser, new[]{ "AvailableSeats" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CSiteManagerClient_IncomingClient_Request : pb::IMessage<CSiteManagerClient_IncomingClient_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteManagerClient_IncomingClient_Request> _parser = new pb::MessageParser<CSiteManagerClient_IncomingClient_Request>(() => new CSiteManagerClient_IncomingClient_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteManagerClient_IncomingClient_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_IncomingClient_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_IncomingClient_Request(CSiteManagerClient_IncomingClient_Request other) : this() {
    _hasBits0 = other._hasBits0;
    siteInstanceid_ = other.siteInstanceid_;
    clientSteamid_ = other.clientSteamid_;
    clientLocalIp_ = other.clientLocalIp_;
    connectionKey_ = other.connectionKey_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_IncomingClient_Request Clone() {
    return new CSiteManagerClient_IncomingClient_Request(this);
  }

  /// <summary>Field number for the "site_instanceid" field.</summary>
  public const int SiteInstanceidFieldNumber = 1;
  private readonly static ulong SiteInstanceidDefaultValue = 0UL;

  private ulong siteInstanceid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SiteInstanceid {
    get { if ((_hasBits0 & 1) != 0) { return siteInstanceid_; } else { return SiteInstanceidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      siteInstanceid_ = value;
    }
  }
  /// <summary>Gets whether the "site_instanceid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteInstanceid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "site_instanceid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteInstanceid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "client_steamid" field.</summary>
  public const int ClientSteamidFieldNumber = 2;
  private readonly static ulong ClientSteamidDefaultValue = 0UL;

  private ulong clientSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientSteamid {
    get { if ((_hasBits0 & 2) != 0) { return clientSteamid_; } else { return ClientSteamidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clientSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "client_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientSteamid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "client_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientSteamid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "client_local_ip" field.</summary>
  public const int ClientLocalIpFieldNumber = 3;
  private readonly static uint ClientLocalIpDefaultValue = 0;

  private uint clientLocalIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientLocalIp {
    get { if ((_hasBits0 & 4) != 0) { return clientLocalIp_; } else { return ClientLocalIpDefaultValue; } }
    set {
      _hasBits0 |= 4;
      clientLocalIp_ = value;
    }
  }
  /// <summary>Gets whether the "client_local_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientLocalIp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "client_local_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientLocalIp() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "connection_key" field.</summary>
  public const int ConnectionKeyFieldNumber = 4;
  private readonly static pb::ByteString ConnectionKeyDefaultValue = pb::ByteString.Empty;

  private pb::ByteString connectionKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ConnectionKey {
    get { return connectionKey_ ?? ConnectionKeyDefaultValue; }
    set {
      connectionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "connection_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionKey {
    get { return connectionKey_ != null; }
  }
  /// <summary>Clears the value of the "connection_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionKey() {
    connectionKey_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteManagerClient_IncomingClient_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteManagerClient_IncomingClient_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SiteInstanceid != other.SiteInstanceid) return false;
    if (ClientSteamid != other.ClientSteamid) return false;
    if (ClientLocalIp != other.ClientLocalIp) return false;
    if (ConnectionKey != other.ConnectionKey) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSiteInstanceid) hash ^= SiteInstanceid.GetHashCode();
    if (HasClientSteamid) hash ^= ClientSteamid.GetHashCode();
    if (HasClientLocalIp) hash ^= ClientLocalIp.GetHashCode();
    if (HasConnectionKey) hash ^= ConnectionKey.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSiteInstanceid) {
      output.WriteRawTag(9);
      output.WriteFixed64(SiteInstanceid);
    }
    if (HasClientSteamid) {
      output.WriteRawTag(17);
      output.WriteFixed64(ClientSteamid);
    }
    if (HasClientLocalIp) {
      output.WriteRawTag(29);
      output.WriteFixed32(ClientLocalIp);
    }
    if (HasConnectionKey) {
      output.WriteRawTag(34);
      output.WriteBytes(ConnectionKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSiteInstanceid) {
      output.WriteRawTag(9);
      output.WriteFixed64(SiteInstanceid);
    }
    if (HasClientSteamid) {
      output.WriteRawTag(17);
      output.WriteFixed64(ClientSteamid);
    }
    if (HasClientLocalIp) {
      output.WriteRawTag(29);
      output.WriteFixed32(ClientLocalIp);
    }
    if (HasConnectionKey) {
      output.WriteRawTag(34);
      output.WriteBytes(ConnectionKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSiteInstanceid) {
      size += 1 + 8;
    }
    if (HasClientSteamid) {
      size += 1 + 8;
    }
    if (HasClientLocalIp) {
      size += 1 + 4;
    }
    if (HasConnectionKey) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConnectionKey);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteManagerClient_IncomingClient_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSiteInstanceid) {
      SiteInstanceid = other.SiteInstanceid;
    }
    if (other.HasClientSteamid) {
      ClientSteamid = other.ClientSteamid;
    }
    if (other.HasClientLocalIp) {
      ClientLocalIp = other.ClientLocalIp;
    }
    if (other.HasConnectionKey) {
      ConnectionKey = other.ConnectionKey;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SiteInstanceid = input.ReadFixed64();
          break;
        }
        case 17: {
          ClientSteamid = input.ReadFixed64();
          break;
        }
        case 29: {
          ClientLocalIp = input.ReadFixed32();
          break;
        }
        case 34: {
          ConnectionKey = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SiteInstanceid = input.ReadFixed64();
          break;
        }
        case 17: {
          ClientSteamid = input.ReadFixed64();
          break;
        }
        case 29: {
          ClientLocalIp = input.ReadFixed32();
          break;
        }
        case 34: {
          ConnectionKey = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteManagerClient_IncomingClient_Response : pb::IMessage<CSiteManagerClient_IncomingClient_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteManagerClient_IncomingClient_Response> _parser = new pb::MessageParser<CSiteManagerClient_IncomingClient_Response>(() => new CSiteManagerClient_IncomingClient_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteManagerClient_IncomingClient_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_IncomingClient_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_IncomingClient_Response(CSiteManagerClient_IncomingClient_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_IncomingClient_Response Clone() {
    return new CSiteManagerClient_IncomingClient_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteManagerClient_IncomingClient_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteManagerClient_IncomingClient_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteManagerClient_IncomingClient_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_ClientSeatCheckout_Notification : pb::IMessage<CSiteLicense_ClientSeatCheckout_Notification>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_ClientSeatCheckout_Notification> _parser = new pb::MessageParser<CSiteLicense_ClientSeatCheckout_Notification>(() => new CSiteLicense_ClientSeatCheckout_Notification());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_ClientSeatCheckout_Notification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Notification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Notification(CSiteLicense_ClientSeatCheckout_Notification other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    eresult_ = other.eresult_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Notification Clone() {
    return new CSiteLicense_ClientSeatCheckout_Notification(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 2;
  private readonly static uint EresultDefaultValue = 0;

  private uint eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Eresult {
    get { if ((_hasBits0 & 2) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 2;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_ClientSeatCheckout_Notification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_ClientSeatCheckout_Notification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Eresult != other.Eresult) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasEresult) {
      output.WriteRawTag(16);
      output.WriteUInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasEresult) {
      output.WriteRawTag(16);
      output.WriteUInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eresult);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_ClientSeatCheckout_Notification other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Eresult = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Eresult = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteManagerClient_TrackedPayments_Notification : pb::IMessage<CSiteManagerClient_TrackedPayments_Notification>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteManagerClient_TrackedPayments_Notification> _parser = new pb::MessageParser<CSiteManagerClient_TrackedPayments_Notification>(() => new CSiteManagerClient_TrackedPayments_Notification());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteManagerClient_TrackedPayments_Notification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_TrackedPayments_Notification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_TrackedPayments_Notification(CSiteManagerClient_TrackedPayments_Notification other) : this() {
    _hasBits0 = other._hasBits0;
    siteId_ = other.siteId_;
    payments_ = other.payments_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteManagerClient_TrackedPayments_Notification Clone() {
    return new CSiteManagerClient_TrackedPayments_Notification(this);
  }

  /// <summary>Field number for the "site_id" field.</summary>
  public const int SiteIdFieldNumber = 1;
  private readonly static ulong SiteIdDefaultValue = 0UL;

  private ulong siteId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SiteId {
    get { if ((_hasBits0 & 1) != 0) { return siteId_; } else { return SiteIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      siteId_ = value;
    }
  }
  /// <summary>Gets whether the "site_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "site_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "payments" field.</summary>
  public const int PaymentsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CSiteManagerClient_TrackedPayments_Notification.Types.Payment> _repeated_payments_codec
      = pb::FieldCodec.ForMessage(18, global::CSiteManagerClient_TrackedPayments_Notification.Types.Payment.Parser);
  private readonly pbc::RepeatedField<global::CSiteManagerClient_TrackedPayments_Notification.Types.Payment> payments_ = new pbc::RepeatedField<global::CSiteManagerClient_TrackedPayments_Notification.Types.Payment>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSiteManagerClient_TrackedPayments_Notification.Types.Payment> Payments {
    get { return payments_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteManagerClient_TrackedPayments_Notification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteManagerClient_TrackedPayments_Notification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SiteId != other.SiteId) return false;
    if(!payments_.Equals(other.payments_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSiteId) hash ^= SiteId.GetHashCode();
    hash ^= payments_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSiteId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SiteId);
    }
    payments_.WriteTo(output, _repeated_payments_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSiteId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SiteId);
    }
    payments_.WriteTo(ref output, _repeated_payments_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSiteId) {
      size += 1 + 8;
    }
    size += payments_.CalculateSize(_repeated_payments_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteManagerClient_TrackedPayments_Notification other) {
    if (other == null) {
      return;
    }
    if (other.HasSiteId) {
      SiteId = other.SiteId;
    }
    payments_.Add(other.payments_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SiteId = input.ReadFixed64();
          break;
        }
        case 18: {
          payments_.AddEntriesFrom(input, _repeated_payments_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SiteId = input.ReadFixed64();
          break;
        }
        case 18: {
          payments_.AddEntriesFrom(ref input, _repeated_payments_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSiteManagerClient_TrackedPayments_Notification message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Payment : pb::IMessage<Payment>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Payment> _parser = new pb::MessageParser<Payment>(() => new Payment());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Payment> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSiteManagerClient_TrackedPayments_Notification.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Payment() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Payment(Payment other) : this() {
        _hasBits0 = other._hasBits0;
        transid_ = other.transid_;
        steamid_ = other.steamid_;
        amount_ = other.amount_;
        ecurrency_ = other.ecurrency_;
        timeCreated_ = other.timeCreated_;
        purchaseStatus_ = other.purchaseStatus_;
        machineName_ = other.machineName_;
        personaName_ = other.personaName_;
        profileUrl_ = other.profileUrl_;
        avatarUrl_ = other.avatarUrl_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Payment Clone() {
        return new Payment(this);
      }

      /// <summary>Field number for the "transid" field.</summary>
      public const int TransidFieldNumber = 1;
      private readonly static ulong TransidDefaultValue = 0UL;

      private ulong transid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Transid {
        get { if ((_hasBits0 & 1) != 0) { return transid_; } else { return TransidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          transid_ = value;
        }
      }
      /// <summary>Gets whether the "transid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTransid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "transid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTransid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 2;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 2;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "amount" field.</summary>
      public const int AmountFieldNumber = 3;
      private readonly static long AmountDefaultValue = 0L;

      private long amount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public long Amount {
        get { if ((_hasBits0 & 4) != 0) { return amount_; } else { return AmountDefaultValue; } }
        set {
          _hasBits0 |= 4;
          amount_ = value;
        }
      }
      /// <summary>Gets whether the "amount" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAmount {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "amount" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAmount() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "ecurrency" field.</summary>
      public const int EcurrencyFieldNumber = 4;
      private readonly static uint EcurrencyDefaultValue = 0;

      private uint ecurrency_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Ecurrency {
        get { if ((_hasBits0 & 8) != 0) { return ecurrency_; } else { return EcurrencyDefaultValue; } }
        set {
          _hasBits0 |= 8;
          ecurrency_ = value;
        }
      }
      /// <summary>Gets whether the "ecurrency" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEcurrency {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "ecurrency" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEcurrency() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "time_created" field.</summary>
      public const int TimeCreatedFieldNumber = 5;
      private readonly static int TimeCreatedDefaultValue = 0;

      private int timeCreated_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int TimeCreated {
        get { if ((_hasBits0 & 16) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
        set {
          _hasBits0 |= 16;
          timeCreated_ = value;
        }
      }
      /// <summary>Gets whether the "time_created" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeCreated {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "time_created" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeCreated() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "purchase_status" field.</summary>
      public const int PurchaseStatusFieldNumber = 6;
      private readonly static int PurchaseStatusDefaultValue = 0;

      private int purchaseStatus_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int PurchaseStatus {
        get { if ((_hasBits0 & 32) != 0) { return purchaseStatus_; } else { return PurchaseStatusDefaultValue; } }
        set {
          _hasBits0 |= 32;
          purchaseStatus_ = value;
        }
      }
      /// <summary>Gets whether the "purchase_status" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPurchaseStatus {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "purchase_status" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPurchaseStatus() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "machine_name" field.</summary>
      public const int MachineNameFieldNumber = 7;
      private readonly static string MachineNameDefaultValue = "";

      private string machineName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string MachineName {
        get { return machineName_ ?? MachineNameDefaultValue; }
        set {
          machineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "machine_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMachineName {
        get { return machineName_ != null; }
      }
      /// <summary>Clears the value of the "machine_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMachineName() {
        machineName_ = null;
      }

      /// <summary>Field number for the "persona_name" field.</summary>
      public const int PersonaNameFieldNumber = 8;
      private readonly static string PersonaNameDefaultValue = "";

      private string personaName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string PersonaName {
        get { return personaName_ ?? PersonaNameDefaultValue; }
        set {
          personaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "persona_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPersonaName {
        get { return personaName_ != null; }
      }
      /// <summary>Clears the value of the "persona_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPersonaName() {
        personaName_ = null;
      }

      /// <summary>Field number for the "profile_url" field.</summary>
      public const int ProfileUrlFieldNumber = 9;
      private readonly static string ProfileUrlDefaultValue = "";

      private string profileUrl_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string ProfileUrl {
        get { return profileUrl_ ?? ProfileUrlDefaultValue; }
        set {
          profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "profile_url" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasProfileUrl {
        get { return profileUrl_ != null; }
      }
      /// <summary>Clears the value of the "profile_url" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearProfileUrl() {
        profileUrl_ = null;
      }

      /// <summary>Field number for the "avatar_url" field.</summary>
      public const int AvatarUrlFieldNumber = 10;
      private readonly static string AvatarUrlDefaultValue = "";

      private string avatarUrl_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string AvatarUrl {
        get { return avatarUrl_ ?? AvatarUrlDefaultValue; }
        set {
          avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "avatar_url" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAvatarUrl {
        get { return avatarUrl_ != null; }
      }
      /// <summary>Clears the value of the "avatar_url" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAvatarUrl() {
        avatarUrl_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Payment);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Payment other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Transid != other.Transid) return false;
        if (Steamid != other.Steamid) return false;
        if (Amount != other.Amount) return false;
        if (Ecurrency != other.Ecurrency) return false;
        if (TimeCreated != other.TimeCreated) return false;
        if (PurchaseStatus != other.PurchaseStatus) return false;
        if (MachineName != other.MachineName) return false;
        if (PersonaName != other.PersonaName) return false;
        if (ProfileUrl != other.ProfileUrl) return false;
        if (AvatarUrl != other.AvatarUrl) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTransid) hash ^= Transid.GetHashCode();
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        if (HasAmount) hash ^= Amount.GetHashCode();
        if (HasEcurrency) hash ^= Ecurrency.GetHashCode();
        if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
        if (HasPurchaseStatus) hash ^= PurchaseStatus.GetHashCode();
        if (HasMachineName) hash ^= MachineName.GetHashCode();
        if (HasPersonaName) hash ^= PersonaName.GetHashCode();
        if (HasProfileUrl) hash ^= ProfileUrl.GetHashCode();
        if (HasAvatarUrl) hash ^= AvatarUrl.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTransid) {
          output.WriteRawTag(8);
          output.WriteUInt64(Transid);
        }
        if (HasSteamid) {
          output.WriteRawTag(16);
          output.WriteUInt64(Steamid);
        }
        if (HasAmount) {
          output.WriteRawTag(24);
          output.WriteInt64(Amount);
        }
        if (HasEcurrency) {
          output.WriteRawTag(32);
          output.WriteUInt32(Ecurrency);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(40);
          output.WriteInt32(TimeCreated);
        }
        if (HasPurchaseStatus) {
          output.WriteRawTag(48);
          output.WriteInt32(PurchaseStatus);
        }
        if (HasMachineName) {
          output.WriteRawTag(58);
          output.WriteString(MachineName);
        }
        if (HasPersonaName) {
          output.WriteRawTag(66);
          output.WriteString(PersonaName);
        }
        if (HasProfileUrl) {
          output.WriteRawTag(74);
          output.WriteString(ProfileUrl);
        }
        if (HasAvatarUrl) {
          output.WriteRawTag(82);
          output.WriteString(AvatarUrl);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTransid) {
          output.WriteRawTag(8);
          output.WriteUInt64(Transid);
        }
        if (HasSteamid) {
          output.WriteRawTag(16);
          output.WriteUInt64(Steamid);
        }
        if (HasAmount) {
          output.WriteRawTag(24);
          output.WriteInt64(Amount);
        }
        if (HasEcurrency) {
          output.WriteRawTag(32);
          output.WriteUInt32(Ecurrency);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(40);
          output.WriteInt32(TimeCreated);
        }
        if (HasPurchaseStatus) {
          output.WriteRawTag(48);
          output.WriteInt32(PurchaseStatus);
        }
        if (HasMachineName) {
          output.WriteRawTag(58);
          output.WriteString(MachineName);
        }
        if (HasPersonaName) {
          output.WriteRawTag(66);
          output.WriteString(PersonaName);
        }
        if (HasProfileUrl) {
          output.WriteRawTag(74);
          output.WriteString(ProfileUrl);
        }
        if (HasAvatarUrl) {
          output.WriteRawTag(82);
          output.WriteString(AvatarUrl);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTransid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Transid);
        }
        if (HasSteamid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
        }
        if (HasAmount) {
          size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
        }
        if (HasEcurrency) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ecurrency);
        }
        if (HasTimeCreated) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeCreated);
        }
        if (HasPurchaseStatus) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(PurchaseStatus);
        }
        if (HasMachineName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineName);
        }
        if (HasPersonaName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonaName);
        }
        if (HasProfileUrl) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
        }
        if (HasAvatarUrl) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Payment other) {
        if (other == null) {
          return;
        }
        if (other.HasTransid) {
          Transid = other.Transid;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasEcurrency) {
          Ecurrency = other.Ecurrency;
        }
        if (other.HasTimeCreated) {
          TimeCreated = other.TimeCreated;
        }
        if (other.HasPurchaseStatus) {
          PurchaseStatus = other.PurchaseStatus;
        }
        if (other.HasMachineName) {
          MachineName = other.MachineName;
        }
        if (other.HasPersonaName) {
          PersonaName = other.PersonaName;
        }
        if (other.HasProfileUrl) {
          ProfileUrl = other.ProfileUrl;
        }
        if (other.HasAvatarUrl) {
          AvatarUrl = other.AvatarUrl;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Transid = input.ReadUInt64();
              break;
            }
            case 16: {
              Steamid = input.ReadUInt64();
              break;
            }
            case 24: {
              Amount = input.ReadInt64();
              break;
            }
            case 32: {
              Ecurrency = input.ReadUInt32();
              break;
            }
            case 40: {
              TimeCreated = input.ReadInt32();
              break;
            }
            case 48: {
              PurchaseStatus = input.ReadInt32();
              break;
            }
            case 58: {
              MachineName = input.ReadString();
              break;
            }
            case 66: {
              PersonaName = input.ReadString();
              break;
            }
            case 74: {
              ProfileUrl = input.ReadString();
              break;
            }
            case 82: {
              AvatarUrl = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Transid = input.ReadUInt64();
              break;
            }
            case 16: {
              Steamid = input.ReadUInt64();
              break;
            }
            case 24: {
              Amount = input.ReadInt64();
              break;
            }
            case 32: {
              Ecurrency = input.ReadUInt32();
              break;
            }
            case 40: {
              TimeCreated = input.ReadInt32();
              break;
            }
            case 48: {
              PurchaseStatus = input.ReadInt32();
              break;
            }
            case 58: {
              MachineName = input.ReadString();
              break;
            }
            case 66: {
              PersonaName = input.ReadString();
              break;
            }
            case 74: {
              ProfileUrl = input.ReadString();
              break;
            }
            case 82: {
              AvatarUrl = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CSiteLicense_InitiateAssociation_Request : pb::IMessage<CSiteLicense_InitiateAssociation_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_InitiateAssociation_Request> _parser = new pb::MessageParser<CSiteLicense_InitiateAssociation_Request>(() => new CSiteLicense_InitiateAssociation_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_InitiateAssociation_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_InitiateAssociation_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_InitiateAssociation_Request(CSiteLicense_InitiateAssociation_Request other) : this() {
    _hasBits0 = other._hasBits0;
    siteSteamid_ = other.siteSteamid_;
    siteInstanceid_ = other.siteInstanceid_;
    clientLocalIp_ = other.clientLocalIp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_InitiateAssociation_Request Clone() {
    return new CSiteLicense_InitiateAssociation_Request(this);
  }

  /// <summary>Field number for the "site_steamid" field.</summary>
  public const int SiteSteamidFieldNumber = 1;
  private readonly static ulong SiteSteamidDefaultValue = 0UL;

  private ulong siteSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SiteSteamid {
    get { if ((_hasBits0 & 1) != 0) { return siteSteamid_; } else { return SiteSteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      siteSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "site_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "site_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "site_instanceid" field.</summary>
  public const int SiteInstanceidFieldNumber = 2;
  private readonly static ulong SiteInstanceidDefaultValue = 0UL;

  private ulong siteInstanceid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SiteInstanceid {
    get { if ((_hasBits0 & 2) != 0) { return siteInstanceid_; } else { return SiteInstanceidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      siteInstanceid_ = value;
    }
  }
  /// <summary>Gets whether the "site_instanceid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteInstanceid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "site_instanceid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteInstanceid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "client_local_ip" field.</summary>
  public const int ClientLocalIpFieldNumber = 3;
  private readonly static uint ClientLocalIpDefaultValue = 0;

  private uint clientLocalIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientLocalIp {
    get { if ((_hasBits0 & 4) != 0) { return clientLocalIp_; } else { return ClientLocalIpDefaultValue; } }
    set {
      _hasBits0 |= 4;
      clientLocalIp_ = value;
    }
  }
  /// <summary>Gets whether the "client_local_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientLocalIp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "client_local_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientLocalIp() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_InitiateAssociation_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_InitiateAssociation_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SiteSteamid != other.SiteSteamid) return false;
    if (SiteInstanceid != other.SiteInstanceid) return false;
    if (ClientLocalIp != other.ClientLocalIp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSiteSteamid) hash ^= SiteSteamid.GetHashCode();
    if (HasSiteInstanceid) hash ^= SiteInstanceid.GetHashCode();
    if (HasClientLocalIp) hash ^= ClientLocalIp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSiteSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(SiteSteamid);
    }
    if (HasSiteInstanceid) {
      output.WriteRawTag(17);
      output.WriteFixed64(SiteInstanceid);
    }
    if (HasClientLocalIp) {
      output.WriteRawTag(29);
      output.WriteFixed32(ClientLocalIp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSiteSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(SiteSteamid);
    }
    if (HasSiteInstanceid) {
      output.WriteRawTag(17);
      output.WriteFixed64(SiteInstanceid);
    }
    if (HasClientLocalIp) {
      output.WriteRawTag(29);
      output.WriteFixed32(ClientLocalIp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSiteSteamid) {
      size += 1 + 8;
    }
    if (HasSiteInstanceid) {
      size += 1 + 8;
    }
    if (HasClientLocalIp) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_InitiateAssociation_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSiteSteamid) {
      SiteSteamid = other.SiteSteamid;
    }
    if (other.HasSiteInstanceid) {
      SiteInstanceid = other.SiteInstanceid;
    }
    if (other.HasClientLocalIp) {
      ClientLocalIp = other.ClientLocalIp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SiteSteamid = input.ReadFixed64();
          break;
        }
        case 17: {
          SiteInstanceid = input.ReadFixed64();
          break;
        }
        case 29: {
          ClientLocalIp = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SiteSteamid = input.ReadFixed64();
          break;
        }
        case 17: {
          SiteInstanceid = input.ReadFixed64();
          break;
        }
        case 29: {
          ClientLocalIp = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_InitiateAssociation_Response : pb::IMessage<CSiteLicense_InitiateAssociation_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_InitiateAssociation_Response> _parser = new pb::MessageParser<CSiteLicense_InitiateAssociation_Response>(() => new CSiteLicense_InitiateAssociation_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_InitiateAssociation_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_InitiateAssociation_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_InitiateAssociation_Response(CSiteLicense_InitiateAssociation_Response other) : this() {
    connectionKey_ = other.connectionKey_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_InitiateAssociation_Response Clone() {
    return new CSiteLicense_InitiateAssociation_Response(this);
  }

  /// <summary>Field number for the "connection_key" field.</summary>
  public const int ConnectionKeyFieldNumber = 1;
  private readonly static pb::ByteString ConnectionKeyDefaultValue = pb::ByteString.Empty;

  private pb::ByteString connectionKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ConnectionKey {
    get { return connectionKey_ ?? ConnectionKeyDefaultValue; }
    set {
      connectionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "connection_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionKey {
    get { return connectionKey_ != null; }
  }
  /// <summary>Clears the value of the "connection_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionKey() {
    connectionKey_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_InitiateAssociation_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_InitiateAssociation_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionKey != other.ConnectionKey) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConnectionKey) hash ^= ConnectionKey.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConnectionKey) {
      output.WriteRawTag(10);
      output.WriteBytes(ConnectionKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConnectionKey) {
      output.WriteRawTag(10);
      output.WriteBytes(ConnectionKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConnectionKey) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ConnectionKey);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_InitiateAssociation_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasConnectionKey) {
      ConnectionKey = other.ConnectionKey;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionKey = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionKey = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_LCSAuthenticate_Request : pb::IMessage<CSiteLicense_LCSAuthenticate_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_LCSAuthenticate_Request> _parser = new pb::MessageParser<CSiteLicense_LCSAuthenticate_Request>(() => new CSiteLicense_LCSAuthenticate_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_LCSAuthenticate_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAuthenticate_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAuthenticate_Request(CSiteLicense_LCSAuthenticate_Request other) : this() {
    _hasBits0 = other._hasBits0;
    instanceid_ = other.instanceid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAuthenticate_Request Clone() {
    return new CSiteLicense_LCSAuthenticate_Request(this);
  }

  /// <summary>Field number for the "instanceid" field.</summary>
  public const int InstanceidFieldNumber = 1;
  private readonly static ulong InstanceidDefaultValue = 0UL;

  private ulong instanceid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Instanceid {
    get { if ((_hasBits0 & 1) != 0) { return instanceid_; } else { return InstanceidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      instanceid_ = value;
    }
  }
  /// <summary>Gets whether the "instanceid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInstanceid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "instanceid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInstanceid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_LCSAuthenticate_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_LCSAuthenticate_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Instanceid != other.Instanceid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasInstanceid) hash ^= Instanceid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasInstanceid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Instanceid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasInstanceid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Instanceid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasInstanceid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_LCSAuthenticate_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasInstanceid) {
      Instanceid = other.Instanceid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Instanceid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Instanceid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_LCSAuthenticate_Response : pb::IMessage<CSiteLicense_LCSAuthenticate_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_LCSAuthenticate_Response> _parser = new pb::MessageParser<CSiteLicense_LCSAuthenticate_Response>(() => new CSiteLicense_LCSAuthenticate_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_LCSAuthenticate_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAuthenticate_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAuthenticate_Response(CSiteLicense_LCSAuthenticate_Response other) : this() {
    _hasBits0 = other._hasBits0;
    siteId_ = other.siteId_;
    siteName_ = other.siteName_;
    newSession_ = other.newSession_;
    noSiteLicenses_ = other.noSiteLicenses_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAuthenticate_Response Clone() {
    return new CSiteLicense_LCSAuthenticate_Response(this);
  }

  /// <summary>Field number for the "site_id" field.</summary>
  public const int SiteIdFieldNumber = 1;
  private readonly static ulong SiteIdDefaultValue = 0UL;

  private ulong siteId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SiteId {
    get { if ((_hasBits0 & 1) != 0) { return siteId_; } else { return SiteIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      siteId_ = value;
    }
  }
  /// <summary>Gets whether the "site_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "site_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "site_name" field.</summary>
  public const int SiteNameFieldNumber = 2;
  private readonly static string SiteNameDefaultValue = "";

  private string siteName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SiteName {
    get { return siteName_ ?? SiteNameDefaultValue; }
    set {
      siteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "site_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSiteName {
    get { return siteName_ != null; }
  }
  /// <summary>Clears the value of the "site_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSiteName() {
    siteName_ = null;
  }

  /// <summary>Field number for the "new_session" field.</summary>
  public const int NewSessionFieldNumber = 3;
  private readonly static bool NewSessionDefaultValue = false;

  private bool newSession_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool NewSession {
    get { if ((_hasBits0 & 2) != 0) { return newSession_; } else { return NewSessionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      newSession_ = value;
    }
  }
  /// <summary>Gets whether the "new_session" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNewSession {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "new_session" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNewSession() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "no_site_licenses" field.</summary>
  public const int NoSiteLicensesFieldNumber = 4;
  private readonly static bool NoSiteLicensesDefaultValue = false;

  private bool noSiteLicenses_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool NoSiteLicenses {
    get { if ((_hasBits0 & 4) != 0) { return noSiteLicenses_; } else { return NoSiteLicensesDefaultValue; } }
    set {
      _hasBits0 |= 4;
      noSiteLicenses_ = value;
    }
  }
  /// <summary>Gets whether the "no_site_licenses" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNoSiteLicenses {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "no_site_licenses" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNoSiteLicenses() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_LCSAuthenticate_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_LCSAuthenticate_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SiteId != other.SiteId) return false;
    if (SiteName != other.SiteName) return false;
    if (NewSession != other.NewSession) return false;
    if (NoSiteLicenses != other.NoSiteLicenses) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSiteId) hash ^= SiteId.GetHashCode();
    if (HasSiteName) hash ^= SiteName.GetHashCode();
    if (HasNewSession) hash ^= NewSession.GetHashCode();
    if (HasNoSiteLicenses) hash ^= NoSiteLicenses.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSiteId) {
      output.WriteRawTag(8);
      output.WriteUInt64(SiteId);
    }
    if (HasSiteName) {
      output.WriteRawTag(18);
      output.WriteString(SiteName);
    }
    if (HasNewSession) {
      output.WriteRawTag(24);
      output.WriteBool(NewSession);
    }
    if (HasNoSiteLicenses) {
      output.WriteRawTag(32);
      output.WriteBool(NoSiteLicenses);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSiteId) {
      output.WriteRawTag(8);
      output.WriteUInt64(SiteId);
    }
    if (HasSiteName) {
      output.WriteRawTag(18);
      output.WriteString(SiteName);
    }
    if (HasNewSession) {
      output.WriteRawTag(24);
      output.WriteBool(NewSession);
    }
    if (HasNoSiteLicenses) {
      output.WriteRawTag(32);
      output.WriteBool(NoSiteLicenses);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSiteId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SiteId);
    }
    if (HasSiteName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SiteName);
    }
    if (HasNewSession) {
      size += 1 + 1;
    }
    if (HasNoSiteLicenses) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_LCSAuthenticate_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasSiteId) {
      SiteId = other.SiteId;
    }
    if (other.HasSiteName) {
      SiteName = other.SiteName;
    }
    if (other.HasNewSession) {
      NewSession = other.NewSession;
    }
    if (other.HasNoSiteLicenses) {
      NoSiteLicenses = other.NoSiteLicenses;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SiteId = input.ReadUInt64();
          break;
        }
        case 18: {
          SiteName = input.ReadString();
          break;
        }
        case 24: {
          NewSession = input.ReadBool();
          break;
        }
        case 32: {
          NoSiteLicenses = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SiteId = input.ReadUInt64();
          break;
        }
        case 18: {
          SiteName = input.ReadString();
          break;
        }
        case 24: {
          NewSession = input.ReadBool();
          break;
        }
        case 32: {
          NoSiteLicenses = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_LCSAssociateUser_Request : pb::IMessage<CSiteLicense_LCSAssociateUser_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_LCSAssociateUser_Request> _parser = new pb::MessageParser<CSiteLicense_LCSAssociateUser_Request>(() => new CSiteLicense_LCSAssociateUser_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_LCSAssociateUser_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAssociateUser_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAssociateUser_Request(CSiteLicense_LCSAssociateUser_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    localIp_ = other.localIp_;
    instanceid_ = other.instanceid_;
    machineName_ = other.machineName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAssociateUser_Request Clone() {
    return new CSiteLicense_LCSAssociateUser_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "local_ip" field.</summary>
  public const int LocalIpFieldNumber = 2;
  private readonly static uint LocalIpDefaultValue = 0;

  private uint localIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LocalIp {
    get { if ((_hasBits0 & 2) != 0) { return localIp_; } else { return LocalIpDefaultValue; } }
    set {
      _hasBits0 |= 2;
      localIp_ = value;
    }
  }
  /// <summary>Gets whether the "local_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLocalIp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "local_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLocalIp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "instanceid" field.</summary>
  public const int InstanceidFieldNumber = 3;
  private readonly static ulong InstanceidDefaultValue = 0UL;

  private ulong instanceid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Instanceid {
    get { if ((_hasBits0 & 4) != 0) { return instanceid_; } else { return InstanceidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      instanceid_ = value;
    }
  }
  /// <summary>Gets whether the "instanceid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInstanceid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "instanceid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInstanceid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "machine_name" field.</summary>
  public const int MachineNameFieldNumber = 4;
  private readonly static string MachineNameDefaultValue = "";

  private string machineName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MachineName {
    get { return machineName_ ?? MachineNameDefaultValue; }
    set {
      machineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "machine_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMachineName {
    get { return machineName_ != null; }
  }
  /// <summary>Clears the value of the "machine_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMachineName() {
    machineName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_LCSAssociateUser_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_LCSAssociateUser_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (LocalIp != other.LocalIp) return false;
    if (Instanceid != other.Instanceid) return false;
    if (MachineName != other.MachineName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasLocalIp) hash ^= LocalIp.GetHashCode();
    if (HasInstanceid) hash ^= Instanceid.GetHashCode();
    if (HasMachineName) hash ^= MachineName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasLocalIp) {
      output.WriteRawTag(21);
      output.WriteFixed32(LocalIp);
    }
    if (HasInstanceid) {
      output.WriteRawTag(25);
      output.WriteFixed64(Instanceid);
    }
    if (HasMachineName) {
      output.WriteRawTag(34);
      output.WriteString(MachineName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasLocalIp) {
      output.WriteRawTag(21);
      output.WriteFixed32(LocalIp);
    }
    if (HasInstanceid) {
      output.WriteRawTag(25);
      output.WriteFixed64(Instanceid);
    }
    if (HasMachineName) {
      output.WriteRawTag(34);
      output.WriteString(MachineName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasLocalIp) {
      size += 1 + 4;
    }
    if (HasInstanceid) {
      size += 1 + 8;
    }
    if (HasMachineName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_LCSAssociateUser_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasLocalIp) {
      LocalIp = other.LocalIp;
    }
    if (other.HasInstanceid) {
      Instanceid = other.Instanceid;
    }
    if (other.HasMachineName) {
      MachineName = other.MachineName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 21: {
          LocalIp = input.ReadFixed32();
          break;
        }
        case 25: {
          Instanceid = input.ReadFixed64();
          break;
        }
        case 34: {
          MachineName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 21: {
          LocalIp = input.ReadFixed32();
          break;
        }
        case 25: {
          Instanceid = input.ReadFixed64();
          break;
        }
        case 34: {
          MachineName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_LCSAssociateUser_Response : pb::IMessage<CSiteLicense_LCSAssociateUser_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_LCSAssociateUser_Response> _parser = new pb::MessageParser<CSiteLicense_LCSAssociateUser_Response>(() => new CSiteLicense_LCSAssociateUser_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_LCSAssociateUser_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAssociateUser_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAssociateUser_Response(CSiteLicense_LCSAssociateUser_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_LCSAssociateUser_Response Clone() {
    return new CSiteLicense_LCSAssociateUser_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_LCSAssociateUser_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_LCSAssociateUser_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_LCSAssociateUser_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_ClientSeatCheckout_Request : pb::IMessage<CSiteLicense_ClientSeatCheckout_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_ClientSeatCheckout_Request> _parser = new pb::MessageParser<CSiteLicense_ClientSeatCheckout_Request>(() => new CSiteLicense_ClientSeatCheckout_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_ClientSeatCheckout_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Request(CSiteLicense_ClientSeatCheckout_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    instanceid_ = other.instanceid_;
    appid_ = other.appid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Request Clone() {
    return new CSiteLicense_ClientSeatCheckout_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "instanceid" field.</summary>
  public const int InstanceidFieldNumber = 2;
  private readonly static ulong InstanceidDefaultValue = 0UL;

  private ulong instanceid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Instanceid {
    get { if ((_hasBits0 & 2) != 0) { return instanceid_; } else { return InstanceidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      instanceid_ = value;
    }
  }
  /// <summary>Gets whether the "instanceid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInstanceid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "instanceid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInstanceid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 3;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 4) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_ClientSeatCheckout_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_ClientSeatCheckout_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Instanceid != other.Instanceid) return false;
    if (Appid != other.Appid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasInstanceid) hash ^= Instanceid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasInstanceid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Instanceid);
    }
    if (HasAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasInstanceid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Instanceid);
    }
    if (HasAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasInstanceid) {
      size += 1 + 8;
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_ClientSeatCheckout_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasInstanceid) {
      Instanceid = other.Instanceid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          Instanceid = input.ReadFixed64();
          break;
        }
        case 24: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          Instanceid = input.ReadFixed64();
          break;
        }
        case 24: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_ClientSeatCheckout_Response : pb::IMessage<CSiteLicense_ClientSeatCheckout_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_ClientSeatCheckout_Response> _parser = new pb::MessageParser<CSiteLicense_ClientSeatCheckout_Response>(() => new CSiteLicense_ClientSeatCheckout_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_ClientSeatCheckout_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Response(CSiteLicense_ClientSeatCheckout_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientSeatCheckout_Response Clone() {
    return new CSiteLicense_ClientSeatCheckout_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_ClientSeatCheckout_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_ClientSeatCheckout_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_ClientSeatCheckout_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_ClientGetAvailableSeats_Request : pb::IMessage<CSiteLicense_ClientGetAvailableSeats_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_ClientGetAvailableSeats_Request> _parser = new pb::MessageParser<CSiteLicense_ClientGetAvailableSeats_Request>(() => new CSiteLicense_ClientGetAvailableSeats_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_ClientGetAvailableSeats_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientGetAvailableSeats_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientGetAvailableSeats_Request(CSiteLicense_ClientGetAvailableSeats_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    instanceid_ = other.instanceid_;
    appid_ = other.appid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientGetAvailableSeats_Request Clone() {
    return new CSiteLicense_ClientGetAvailableSeats_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "instanceid" field.</summary>
  public const int InstanceidFieldNumber = 2;
  private readonly static ulong InstanceidDefaultValue = 0UL;

  private ulong instanceid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Instanceid {
    get { if ((_hasBits0 & 2) != 0) { return instanceid_; } else { return InstanceidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      instanceid_ = value;
    }
  }
  /// <summary>Gets whether the "instanceid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInstanceid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "instanceid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInstanceid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 3;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 4) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_ClientGetAvailableSeats_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_ClientGetAvailableSeats_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Instanceid != other.Instanceid) return false;
    if (Appid != other.Appid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasInstanceid) hash ^= Instanceid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasInstanceid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Instanceid);
    }
    if (HasAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasInstanceid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Instanceid);
    }
    if (HasAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasInstanceid) {
      size += 1 + 8;
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_ClientGetAvailableSeats_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasInstanceid) {
      Instanceid = other.Instanceid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          Instanceid = input.ReadFixed64();
          break;
        }
        case 24: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          Instanceid = input.ReadFixed64();
          break;
        }
        case 24: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CSiteLicense_ClientGetAvailableSeats_Response : pb::IMessage<CSiteLicense_ClientGetAvailableSeats_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSiteLicense_ClientGetAvailableSeats_Response> _parser = new pb::MessageParser<CSiteLicense_ClientGetAvailableSeats_Response>(() => new CSiteLicense_ClientGetAvailableSeats_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSiteLicense_ClientGetAvailableSeats_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSiteLicenseSteamclientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientGetAvailableSeats_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientGetAvailableSeats_Response(CSiteLicense_ClientGetAvailableSeats_Response other) : this() {
    _hasBits0 = other._hasBits0;
    availableSeats_ = other.availableSeats_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSiteLicense_ClientGetAvailableSeats_Response Clone() {
    return new CSiteLicense_ClientGetAvailableSeats_Response(this);
  }

  /// <summary>Field number for the "available_seats" field.</summary>
  public const int AvailableSeatsFieldNumber = 1;
  private readonly static uint AvailableSeatsDefaultValue = 0;

  private uint availableSeats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AvailableSeats {
    get { if ((_hasBits0 & 1) != 0) { return availableSeats_; } else { return AvailableSeatsDefaultValue; } }
    set {
      _hasBits0 |= 1;
      availableSeats_ = value;
    }
  }
  /// <summary>Gets whether the "available_seats" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvailableSeats {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "available_seats" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvailableSeats() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSiteLicense_ClientGetAvailableSeats_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSiteLicense_ClientGetAvailableSeats_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvailableSeats != other.AvailableSeats) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAvailableSeats) hash ^= AvailableSeats.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAvailableSeats) {
      output.WriteRawTag(8);
      output.WriteUInt32(AvailableSeats);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAvailableSeats) {
      output.WriteRawTag(8);
      output.WriteUInt32(AvailableSeats);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAvailableSeats) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvailableSeats);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSiteLicense_ClientGetAvailableSeats_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasAvailableSeats) {
      AvailableSeats = other.AvailableSeats;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AvailableSeats = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AvailableSeats = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_secrets.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_secrets.steamclient.proto</summary>
public static partial class SteammessagesSecretsSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_secrets.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesSecretsSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CidzdGVhbW1lc3NhZ2VzX3NlY3JldHMuc3RlYW1jbGllbnQucHJvdG8aGHN0",
          "ZWFtbWVzc2FnZXNfYmFzZS5wcm90bxosc3RlYW1tZXNzYWdlc191bmlmaWVk",
          "X2Jhc2Uuc3RlYW1jbGllbnQucHJvdG8imwEKEkNLZXlFc2Nyb3dfUmVxdWVz",
          "dBIbChNyc2Ffb2FlcF9zaGFfdGlja2V0GAEgASgMEhAKCHBhc3N3b3JkGAIg",
          "ASgMEkEKBXVzYWdlGAMgASgOMhAuRUtleUVzY3Jvd1VzYWdlOiBrX0VLZXlF",
          "c2Nyb3dVc2FnZVN0cmVhbWluZ0RldmljZRITCgtkZXZpY2VfbmFtZRgEIAEo",
          "CSKCAgoRQ0tleUVzY3Jvd19UaWNrZXQSEAoIcGFzc3dvcmQYASABKAwSEgoK",
          "aWRlbnRpZmllchgCIAEoBBIPCgdwYXlsb2FkGAMgASgMEhEKCXRpbWVzdGFt",
          "cBgEIAEoDRJBCgV1c2FnZRgFIAEoDjIQLkVLZXlFc2Nyb3dVc2FnZToga19F",
          "S2V5RXNjcm93VXNhZ2VTdHJlYW1pbmdEZXZpY2USEwoLZGV2aWNlX25hbWUY",
          "BiABKAkSFAoMZGV2aWNlX21vZGVsGAcgASgJEhUKDWRldmljZV9zZXJpYWwY",
          "CCABKAkSHgoWZGV2aWNlX3Byb3Zpc2lvbmluZ19pZBgJIAEoDSI5ChNDS2V5",
          "RXNjcm93X1Jlc3BvbnNlEiIKBnRpY2tldBgBIAEoCzISLkNLZXlFc2Nyb3df",
          "VGlja2V0KjcKD0VLZXlFc2Nyb3dVc2FnZRIkCiBrX0VLZXlFc2Nyb3dVc2Fn",
          "ZVN0cmVhbWluZ0RldmljZRAAMsgBCgdTZWNyZXRzEoABCglLZXlFc2Nyb3cS",
          "Ey5DS2V5RXNjcm93X1JlcXVlc3QaFC5DS2V5RXNjcm93X1Jlc3BvbnNlIkiC",
          "tRhEU2VydmljZSB0byBwZXJmb3JtIGF1dGhlbnRpY2F0ZWQga2V5LWV4Y2hh",
          "bmdlIGludm9sdmluZyBTdGVhbSBDbGllbnQaOoK1GDZTZXJ2aWNlIGZvciBh",
          "Y2Nlc3NpbmcgY3JlZGVudGlhbHMgYW5kIGd1YXJkaW5nIHNlY3JldHNCA4AB",
          "AQ=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EKeyEscrowUsage), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CKeyEscrow_Request), global::CKeyEscrow_Request.Parser, new[]{ "RsaOaepShaTicket", "Password", "Usage", "DeviceName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CKeyEscrow_Ticket), global::CKeyEscrow_Ticket.Parser, new[]{ "Password", "Identifier", "Payload", "Timestamp", "Usage", "DeviceName", "DeviceModel", "DeviceSerial", "DeviceProvisioningId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CKeyEscrow_Response), global::CKeyEscrow_Response.Parser, new[]{ "Ticket" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EKeyEscrowUsage {
  [pbr::OriginalName("k_EKeyEscrowUsageStreamingDevice")] KEkeyEscrowUsageStreamingDevice = 0,
}

#endregion

#region Messages
public sealed partial class CKeyEscrow_Request : pb::IMessage<CKeyEscrow_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CKeyEscrow_Request> _parser = new pb::MessageParser<CKeyEscrow_Request>(() => new CKeyEscrow_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CKeyEscrow_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSecretsSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Request(CKeyEscrow_Request other) : this() {
    _hasBits0 = other._hasBits0;
    rsaOaepShaTicket_ = other.rsaOaepShaTicket_;
    password_ = other.password_;
    usage_ = other.usage_;
    deviceName_ = other.deviceName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Request Clone() {
    return new CKeyEscrow_Request(this);
  }

  /// <summary>Field number for the "rsa_oaep_sha_ticket" field.</summary>
  public const int RsaOaepShaTicketFieldNumber = 1;
  private readonly static pb::ByteString RsaOaepShaTicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString rsaOaepShaTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString RsaOaepShaTicket {
    get { return rsaOaepShaTicket_ ?? RsaOaepShaTicketDefaultValue; }
    set {
      rsaOaepShaTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "rsa_oaep_sha_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRsaOaepShaTicket {
    get { return rsaOaepShaTicket_ != null; }
  }
  /// <summary>Clears the value of the "rsa_oaep_sha_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRsaOaepShaTicket() {
    rsaOaepShaTicket_ = null;
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private readonly static pb::ByteString PasswordDefaultValue = pb::ByteString.Empty;

  private pb::ByteString password_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Password {
    get { return password_ ?? PasswordDefaultValue; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "password" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPassword {
    get { return password_ != null; }
  }
  /// <summary>Clears the value of the "password" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPassword() {
    password_ = null;
  }

  /// <summary>Field number for the "usage" field.</summary>
  public const int UsageFieldNumber = 3;
  private readonly static global::EKeyEscrowUsage UsageDefaultValue = global::EKeyEscrowUsage.KEkeyEscrowUsageStreamingDevice;

  private global::EKeyEscrowUsage usage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EKeyEscrowUsage Usage {
    get { if ((_hasBits0 & 1) != 0) { return usage_; } else { return UsageDefaultValue; } }
    set {
      _hasBits0 |= 1;
      usage_ = value;
    }
  }
  /// <summary>Gets whether the "usage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsage {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "usage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsage() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "device_name" field.</summary>
  public const int DeviceNameFieldNumber = 4;
  private readonly static string DeviceNameDefaultValue = "";

  private string deviceName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DeviceName {
    get { return deviceName_ ?? DeviceNameDefaultValue; }
    set {
      deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "device_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeviceName {
    get { return deviceName_ != null; }
  }
  /// <summary>Clears the value of the "device_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeviceName() {
    deviceName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CKeyEscrow_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CKeyEscrow_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RsaOaepShaTicket != other.RsaOaepShaTicket) return false;
    if (Password != other.Password) return false;
    if (Usage != other.Usage) return false;
    if (DeviceName != other.DeviceName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRsaOaepShaTicket) hash ^= RsaOaepShaTicket.GetHashCode();
    if (HasPassword) hash ^= Password.GetHashCode();
    if (HasUsage) hash ^= Usage.GetHashCode();
    if (HasDeviceName) hash ^= DeviceName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRsaOaepShaTicket) {
      output.WriteRawTag(10);
      output.WriteBytes(RsaOaepShaTicket);
    }
    if (HasPassword) {
      output.WriteRawTag(18);
      output.WriteBytes(Password);
    }
    if (HasUsage) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Usage);
    }
    if (HasDeviceName) {
      output.WriteRawTag(34);
      output.WriteString(DeviceName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRsaOaepShaTicket) {
      output.WriteRawTag(10);
      output.WriteBytes(RsaOaepShaTicket);
    }
    if (HasPassword) {
      output.WriteRawTag(18);
      output.WriteBytes(Password);
    }
    if (HasUsage) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Usage);
    }
    if (HasDeviceName) {
      output.WriteRawTag(34);
      output.WriteString(DeviceName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRsaOaepShaTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(RsaOaepShaTicket);
    }
    if (HasPassword) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Password);
    }
    if (HasUsage) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Usage);
    }
    if (HasDeviceName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CKeyEscrow_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasRsaOaepShaTicket) {
      RsaOaepShaTicket = other.RsaOaepShaTicket;
    }
    if (other.HasPassword) {
      Password = other.Password;
    }
    if (other.HasUsage) {
      Usage = other.Usage;
    }
    if (other.HasDeviceName) {
      DeviceName = other.DeviceName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RsaOaepShaTicket = input.ReadBytes();
          break;
        }
        case 18: {
          Password = input.ReadBytes();
          break;
        }
        case 24: {
          Usage = (global::EKeyEscrowUsage) input.ReadEnum();
          break;
        }
        case 34: {
          DeviceName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          RsaOaepShaTicket = input.ReadBytes();
          break;
        }
        case 18: {
          Password = input.ReadBytes();
          break;
        }
        case 24: {
          Usage = (global::EKeyEscrowUsage) input.ReadEnum();
          break;
        }
        case 34: {
          DeviceName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CKeyEscrow_Ticket : pb::IMessage<CKeyEscrow_Ticket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CKeyEscrow_Ticket> _parser = new pb::MessageParser<CKeyEscrow_Ticket>(() => new CKeyEscrow_Ticket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CKeyEscrow_Ticket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSecretsSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Ticket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Ticket(CKeyEscrow_Ticket other) : this() {
    _hasBits0 = other._hasBits0;
    password_ = other.password_;
    identifier_ = other.identifier_;
    payload_ = other.payload_;
    timestamp_ = other.timestamp_;
    usage_ = other.usage_;
    deviceName_ = other.deviceName_;
    deviceModel_ = other.deviceModel_;
    deviceSerial_ = other.deviceSerial_;
    deviceProvisioningId_ = other.deviceProvisioningId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Ticket Clone() {
    return new CKeyEscrow_Ticket(this);
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 1;
  private readonly static pb::ByteString PasswordDefaultValue = pb::ByteString.Empty;

  private pb::ByteString password_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Password {
    get { return password_ ?? PasswordDefaultValue; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "password" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPassword {
    get { return password_ != null; }
  }
  /// <summary>Clears the value of the "password" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPassword() {
    password_ = null;
  }

  /// <summary>Field number for the "identifier" field.</summary>
  public const int IdentifierFieldNumber = 2;
  private readonly static ulong IdentifierDefaultValue = 0UL;

  private ulong identifier_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Identifier {
    get { if ((_hasBits0 & 1) != 0) { return identifier_; } else { return IdentifierDefaultValue; } }
    set {
      _hasBits0 |= 1;
      identifier_ = value;
    }
  }
  /// <summary>Gets whether the "identifier" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdentifier {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "identifier" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdentifier() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 3;
  private readonly static pb::ByteString PayloadDefaultValue = pb::ByteString.Empty;

  private pb::ByteString payload_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Payload {
    get { return payload_ ?? PayloadDefaultValue; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "payload" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPayload {
    get { return payload_ != null; }
  }
  /// <summary>Clears the value of the "payload" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPayload() {
    payload_ = null;
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 4;
  private readonly static uint TimestampDefaultValue = 0;

  private uint timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Timestamp {
    get { if ((_hasBits0 & 2) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
    set {
      _hasBits0 |= 2;
      timestamp_ = value;
    }
  }
  /// <summary>Gets whether the "timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimestamp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimestamp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "usage" field.</summary>
  public const int UsageFieldNumber = 5;
  private readonly static global::EKeyEscrowUsage UsageDefaultValue = global::EKeyEscrowUsage.KEkeyEscrowUsageStreamingDevice;

  private global::EKeyEscrowUsage usage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EKeyEscrowUsage Usage {
    get { if ((_hasBits0 & 4) != 0) { return usage_; } else { return UsageDefaultValue; } }
    set {
      _hasBits0 |= 4;
      usage_ = value;
    }
  }
  /// <summary>Gets whether the "usage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsage {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "usage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsage() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "device_name" field.</summary>
  public const int DeviceNameFieldNumber = 6;
  private readonly static string DeviceNameDefaultValue = "";

  private string deviceName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DeviceName {
    get { return deviceName_ ?? DeviceNameDefaultValue; }
    set {
      deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "device_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeviceName {
    get { return deviceName_ != null; }
  }
  /// <summary>Clears the value of the "device_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeviceName() {
    deviceName_ = null;
  }

  /// <summary>Field number for the "device_model" field.</summary>
  public const int DeviceModelFieldNumber = 7;
  private readonly static string DeviceModelDefaultValue = "";

  private string deviceModel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DeviceModel {
    get { return deviceModel_ ?? DeviceModelDefaultValue; }
    set {
      deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "device_model" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeviceModel {
    get { return deviceModel_ != null; }
  }
  /// <summary>Clears the value of the "device_model" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeviceModel() {
    deviceModel_ = null;
  }

  /// <summary>Field number for the "device_serial" field.</summary>
  public const int DeviceSerialFieldNumber = 8;
  private readonly static string DeviceSerialDefaultValue = "";

  private string deviceSerial_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DeviceSerial {
    get { return deviceSerial_ ?? DeviceSerialDefaultValue; }
    set {
      deviceSerial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "device_serial" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeviceSerial {
    get { return deviceSerial_ != null; }
  }
  /// <summary>Clears the value of the "device_serial" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeviceSerial() {
    deviceSerial_ = null;
  }

  /// <summary>Field number for the "device_provisioning_id" field.</summary>
  public const int DeviceProvisioningIdFieldNumber = 9;
  private readonly static uint DeviceProvisioningIdDefaultValue = 0;

  private uint deviceProvisioningId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DeviceProvisioningId {
    get { if ((_hasBits0 & 8) != 0) { return deviceProvisioningId_; } else { return DeviceProvisioningIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      deviceProvisioningId_ = value;
    }
  }
  /// <summary>Gets whether the "device_provisioning_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeviceProvisioningId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "device_provisioning_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeviceProvisioningId() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CKeyEscrow_Ticket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CKeyEscrow_Ticket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Password != other.Password) return false;
    if (Identifier != other.Identifier) return false;
    if (Payload != other.Payload) return false;
    if (Timestamp != other.Timestamp) return false;
    if (Usage != other.Usage) return false;
    if (DeviceName != other.DeviceName) return false;
    if (DeviceModel != other.DeviceModel) return false;
    if (DeviceSerial != other.DeviceSerial) return false;
    if (DeviceProvisioningId != other.DeviceProvisioningId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPassword) hash ^= Password.GetHashCode();
    if (HasIdentifier) hash ^= Identifier.GetHashCode();
    if (HasPayload) hash ^= Payload.GetHashCode();
    if (HasTimestamp) hash ^= Timestamp.GetHashCode();
    if (HasUsage) hash ^= Usage.GetHashCode();
    if (HasDeviceName) hash ^= DeviceName.GetHashCode();
    if (HasDeviceModel) hash ^= DeviceModel.GetHashCode();
    if (HasDeviceSerial) hash ^= DeviceSerial.GetHashCode();
    if (HasDeviceProvisioningId) hash ^= DeviceProvisioningId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPassword) {
      output.WriteRawTag(10);
      output.WriteBytes(Password);
    }
    if (HasIdentifier) {
      output.WriteRawTag(16);
      output.WriteUInt64(Identifier);
    }
    if (HasPayload) {
      output.WriteRawTag(26);
      output.WriteBytes(Payload);
    }
    if (HasTimestamp) {
      output.WriteRawTag(32);
      output.WriteUInt32(Timestamp);
    }
    if (HasUsage) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Usage);
    }
    if (HasDeviceName) {
      output.WriteRawTag(50);
      output.WriteString(DeviceName);
    }
    if (HasDeviceModel) {
      output.WriteRawTag(58);
      output.WriteString(DeviceModel);
    }
    if (HasDeviceSerial) {
      output.WriteRawTag(66);
      output.WriteString(DeviceSerial);
    }
    if (HasDeviceProvisioningId) {
      output.WriteRawTag(72);
      output.WriteUInt32(DeviceProvisioningId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPassword) {
      output.WriteRawTag(10);
      output.WriteBytes(Password);
    }
    if (HasIdentifier) {
      output.WriteRawTag(16);
      output.WriteUInt64(Identifier);
    }
    if (HasPayload) {
      output.WriteRawTag(26);
      output.WriteBytes(Payload);
    }
    if (HasTimestamp) {
      output.WriteRawTag(32);
      output.WriteUInt32(Timestamp);
    }
    if (HasUsage) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Usage);
    }
    if (HasDeviceName) {
      output.WriteRawTag(50);
      output.WriteString(DeviceName);
    }
    if (HasDeviceModel) {
      output.WriteRawTag(58);
      output.WriteString(DeviceModel);
    }
    if (HasDeviceSerial) {
      output.WriteRawTag(66);
      output.WriteString(DeviceSerial);
    }
    if (HasDeviceProvisioningId) {
      output.WriteRawTag(72);
      output.WriteUInt32(DeviceProvisioningId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPassword) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Password);
    }
    if (HasIdentifier) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Identifier);
    }
    if (HasPayload) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (HasTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
    }
    if (HasUsage) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Usage);
    }
    if (HasDeviceName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
    }
    if (HasDeviceModel) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
    }
    if (HasDeviceSerial) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceSerial);
    }
    if (HasDeviceProvisioningId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeviceProvisioningId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CKeyEscrow_Ticket other) {
    if (other == null) {
      return;
    }
    if (other.HasPassword) {
      Password = other.Password;
    }
    if (other.HasIdentifier) {
      Identifier = other.Identifier;
    }
    if (other.HasPayload) {
      Payload = other.Payload;
    }
    if (other.HasTimestamp) {
      Timestamp = other.Timestamp;
    }
    if (other.HasUsage) {
      Usage = other.Usage;
    }
    if (other.HasDeviceName) {
      DeviceName = other.DeviceName;
    }
    if (other.HasDeviceModel) {
      DeviceModel = other.DeviceModel;
    }
    if (other.HasDeviceSerial) {
      DeviceSerial = other.DeviceSerial;
    }
    if (other.HasDeviceProvisioningId) {
      DeviceProvisioningId = other.DeviceProvisioningId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Password = input.ReadBytes();
          break;
        }
        case 16: {
          Identifier = input.ReadUInt64();
          break;
        }
        case 26: {
          Payload = input.ReadBytes();
          break;
        }
        case 32: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 40: {
          Usage = (global::EKeyEscrowUsage) input.ReadEnum();
          break;
        }
        case 50: {
          DeviceName = input.ReadString();
          break;
        }
        case 58: {
          DeviceModel = input.ReadString();
          break;
        }
        case 66: {
          DeviceSerial = input.ReadString();
          break;
        }
        case 72: {
          DeviceProvisioningId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Password = input.ReadBytes();
          break;
        }
        case 16: {
          Identifier = input.ReadUInt64();
          break;
        }
        case 26: {
          Payload = input.ReadBytes();
          break;
        }
        case 32: {
          Timestamp = input.ReadUInt32();
          break;
        }
        case 40: {
          Usage = (global::EKeyEscrowUsage) input.ReadEnum();
          break;
        }
        case 50: {
          DeviceName = input.ReadString();
          break;
        }
        case 58: {
          DeviceModel = input.ReadString();
          break;
        }
        case 66: {
          DeviceSerial = input.ReadString();
          break;
        }
        case 72: {
          DeviceProvisioningId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CKeyEscrow_Response : pb::IMessage<CKeyEscrow_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CKeyEscrow_Response> _parser = new pb::MessageParser<CKeyEscrow_Response>(() => new CKeyEscrow_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CKeyEscrow_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesSecretsSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Response(CKeyEscrow_Response other) : this() {
    ticket_ = other.ticket_ != null ? other.ticket_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CKeyEscrow_Response Clone() {
    return new CKeyEscrow_Response(this);
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 1;
  private global::CKeyEscrow_Ticket ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CKeyEscrow_Ticket Ticket {
    get { return ticket_; }
    set {
      ticket_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CKeyEscrow_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CKeyEscrow_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Ticket, other.Ticket)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (ticket_ != null) hash ^= Ticket.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ticket_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Ticket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ticket_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Ticket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (ticket_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticket);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CKeyEscrow_Response other) {
    if (other == null) {
      return;
    }
    if (other.ticket_ != null) {
      if (ticket_ == null) {
        Ticket = new global::CKeyEscrow_Ticket();
      }
      Ticket.MergeFrom(other.Ticket);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ticket_ == null) {
            Ticket = new global::CKeyEscrow_Ticket();
          }
          input.ReadMessage(Ticket);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (ticket_ == null) {
            Ticket = new global::CKeyEscrow_Ticket();
          }
          input.ReadMessage(Ticket);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

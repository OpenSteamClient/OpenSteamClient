// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steamnetworkingsockets_messages_certs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steamnetworkingsockets_messages_certs.proto</summary>
public static partial class SteamnetworkingsocketsMessagesCertsReflection {

  #region Descriptor
  /// <summary>File descriptor for steamnetworkingsockets_messages_certs.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteamnetworkingsocketsMessagesCertsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CitzdGVhbW5ldHdvcmtpbmdzb2NrZXRzX21lc3NhZ2VzX2NlcnRzLnByb3Rv",
          "IpsBCidDTXNnU3RlYW1OZXR3b3JraW5nSWRlbnRpdHlMZWdhY3lCaW5hcnkS",
          "EAoIc3RlYW1faWQYECABKAYSGAoQeGJveF9wYWlyd2lzZV9pZBgRIAEoCRIV",
          "Cg1nZW5lcmljX2J5dGVzGAIgASgMEhYKDmdlbmVyaWNfc3RyaW5nGAMgASgJ",
          "EhUKDWlwdjZfYW5kX3BvcnQYBCABKAwiigMKHENNc2dTdGVhbURhdGFncmFt",
          "Q2VydGlmaWNhdGUSQQoIa2V5X3R5cGUYASABKA4yJi5DTXNnU3RlYW1EYXRh",
          "Z3JhbUNlcnRpZmljYXRlLkVLZXlUeXBlOgdJTlZBTElEEhAKCGtleV9kYXRh",
          "GAIgASgMEhcKD2xlZ2FjeV9zdGVhbV9pZBgEIAEoBhJIChZsZWdhY3lfaWRl",
          "bnRpdHlfYmluYXJ5GAsgASgLMiguQ01zZ1N0ZWFtTmV0d29ya2luZ0lkZW50",
          "aXR5TGVnYWN5QmluYXJ5EhcKD2lkZW50aXR5X3N0cmluZxgMIAEoCRIhChln",
          "YW1lc2VydmVyX2RhdGFjZW50ZXJfaWRzGAUgAygHEhQKDHRpbWVfY3JlYXRl",
          "ZBgIIAEoBxITCgt0aW1lX2V4cGlyeRgJIAEoBxIPCgdhcHBfaWRzGAogAygN",
          "EhQKDGlwX2FkZHJlc3NlcxgNIAMoCSIkCghFS2V5VHlwZRILCgdJTlZBTElE",
          "EAASCwoHRUQyNTUxORABInUKIkNNc2dTdGVhbURhdGFncmFtQ2VydGlmaWNh",
          "dGVTaWduZWQSDAoEY2VydBgEIAEoDBIRCgljYV9rZXlfaWQYBSABKAYSFAoM",
          "Y2Ffc2lnbmF0dXJlGAYgASgMEhgKEHByaXZhdGVfa2V5X2RhdGEYASABKAwi",
          "UgojQ01zZ1N0ZWFtRGF0YWdyYW1DZXJ0aWZpY2F0ZVJlcXVlc3QSKwoEY2Vy",
          "dBgBIAEoCzIdLkNNc2dTdGVhbURhdGFncmFtQ2VydGlmaWNhdGVCBUgBgAEA"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingIdentityLegacyBinary), global::CMsgSteamNetworkingIdentityLegacyBinary.Parser, new[]{ "SteamId", "XboxPairwiseId", "GenericBytes", "GenericString", "Ipv6AndPort" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramCertificate), global::CMsgSteamDatagramCertificate.Parser, new[]{ "KeyType", "KeyData", "LegacySteamId", "LegacyIdentityBinary", "IdentityString", "GameserverDatacenterIds", "TimeCreated", "TimeExpiry", "AppIds", "IpAddresses" }, null, new[]{ typeof(global::CMsgSteamDatagramCertificate.Types.EKeyType) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramCertificateSigned), global::CMsgSteamDatagramCertificateSigned.Parser, new[]{ "Cert", "CaKeyId", "CaSignature", "PrivateKeyData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramCertificateRequest), global::CMsgSteamDatagramCertificateRequest.Parser, new[]{ "Cert" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CMsgSteamNetworkingIdentityLegacyBinary : pb::IMessage<CMsgSteamNetworkingIdentityLegacyBinary>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamNetworkingIdentityLegacyBinary> _parser = new pb::MessageParser<CMsgSteamNetworkingIdentityLegacyBinary>(() => new CMsgSteamNetworkingIdentityLegacyBinary());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamNetworkingIdentityLegacyBinary> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesCertsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingIdentityLegacyBinary() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingIdentityLegacyBinary(CMsgSteamNetworkingIdentityLegacyBinary other) : this() {
    _hasBits0 = other._hasBits0;
    steamId_ = other.steamId_;
    xboxPairwiseId_ = other.xboxPairwiseId_;
    genericBytes_ = other.genericBytes_;
    genericString_ = other.genericString_;
    ipv6AndPort_ = other.ipv6AndPort_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingIdentityLegacyBinary Clone() {
    return new CMsgSteamNetworkingIdentityLegacyBinary(this);
  }

  /// <summary>Field number for the "steam_id" field.</summary>
  public const int SteamIdFieldNumber = 16;
  private readonly static ulong SteamIdDefaultValue = 0UL;

  private ulong steamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamId {
    get { if ((_hasBits0 & 1) != 0) { return steamId_; } else { return SteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamId_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "xbox_pairwise_id" field.</summary>
  public const int XboxPairwiseIdFieldNumber = 17;
  private readonly static string XboxPairwiseIdDefaultValue = "";

  private string xboxPairwiseId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string XboxPairwiseId {
    get { return xboxPairwiseId_ ?? XboxPairwiseIdDefaultValue; }
    set {
      xboxPairwiseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "xbox_pairwise_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXboxPairwiseId {
    get { return xboxPairwiseId_ != null; }
  }
  /// <summary>Clears the value of the "xbox_pairwise_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXboxPairwiseId() {
    xboxPairwiseId_ = null;
  }

  /// <summary>Field number for the "generic_bytes" field.</summary>
  public const int GenericBytesFieldNumber = 2;
  private readonly static pb::ByteString GenericBytesDefaultValue = pb::ByteString.Empty;

  private pb::ByteString genericBytes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString GenericBytes {
    get { return genericBytes_ ?? GenericBytesDefaultValue; }
    set {
      genericBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "generic_bytes" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGenericBytes {
    get { return genericBytes_ != null; }
  }
  /// <summary>Clears the value of the "generic_bytes" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGenericBytes() {
    genericBytes_ = null;
  }

  /// <summary>Field number for the "generic_string" field.</summary>
  public const int GenericStringFieldNumber = 3;
  private readonly static string GenericStringDefaultValue = "";

  private string genericString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GenericString {
    get { return genericString_ ?? GenericStringDefaultValue; }
    set {
      genericString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "generic_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGenericString {
    get { return genericString_ != null; }
  }
  /// <summary>Clears the value of the "generic_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGenericString() {
    genericString_ = null;
  }

  /// <summary>Field number for the "ipv6_and_port" field.</summary>
  public const int Ipv6AndPortFieldNumber = 4;
  private readonly static pb::ByteString Ipv6AndPortDefaultValue = pb::ByteString.Empty;

  private pb::ByteString ipv6AndPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Ipv6AndPort {
    get { return ipv6AndPort_ ?? Ipv6AndPortDefaultValue; }
    set {
      ipv6AndPort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ipv6_and_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpv6AndPort {
    get { return ipv6AndPort_ != null; }
  }
  /// <summary>Clears the value of the "ipv6_and_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpv6AndPort() {
    ipv6AndPort_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamNetworkingIdentityLegacyBinary);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamNetworkingIdentityLegacyBinary other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamId != other.SteamId) return false;
    if (XboxPairwiseId != other.XboxPairwiseId) return false;
    if (GenericBytes != other.GenericBytes) return false;
    if (GenericString != other.GenericString) return false;
    if (Ipv6AndPort != other.Ipv6AndPort) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamId) hash ^= SteamId.GetHashCode();
    if (HasXboxPairwiseId) hash ^= XboxPairwiseId.GetHashCode();
    if (HasGenericBytes) hash ^= GenericBytes.GetHashCode();
    if (HasGenericString) hash ^= GenericString.GetHashCode();
    if (HasIpv6AndPort) hash ^= Ipv6AndPort.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGenericBytes) {
      output.WriteRawTag(18);
      output.WriteBytes(GenericBytes);
    }
    if (HasGenericString) {
      output.WriteRawTag(26);
      output.WriteString(GenericString);
    }
    if (HasIpv6AndPort) {
      output.WriteRawTag(34);
      output.WriteBytes(Ipv6AndPort);
    }
    if (HasSteamId) {
      output.WriteRawTag(129, 1);
      output.WriteFixed64(SteamId);
    }
    if (HasXboxPairwiseId) {
      output.WriteRawTag(138, 1);
      output.WriteString(XboxPairwiseId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGenericBytes) {
      output.WriteRawTag(18);
      output.WriteBytes(GenericBytes);
    }
    if (HasGenericString) {
      output.WriteRawTag(26);
      output.WriteString(GenericString);
    }
    if (HasIpv6AndPort) {
      output.WriteRawTag(34);
      output.WriteBytes(Ipv6AndPort);
    }
    if (HasSteamId) {
      output.WriteRawTag(129, 1);
      output.WriteFixed64(SteamId);
    }
    if (HasXboxPairwiseId) {
      output.WriteRawTag(138, 1);
      output.WriteString(XboxPairwiseId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamId) {
      size += 2 + 8;
    }
    if (HasXboxPairwiseId) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(XboxPairwiseId);
    }
    if (HasGenericBytes) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(GenericBytes);
    }
    if (HasGenericString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GenericString);
    }
    if (HasIpv6AndPort) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ipv6AndPort);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamNetworkingIdentityLegacyBinary other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamId) {
      SteamId = other.SteamId;
    }
    if (other.HasXboxPairwiseId) {
      XboxPairwiseId = other.XboxPairwiseId;
    }
    if (other.HasGenericBytes) {
      GenericBytes = other.GenericBytes;
    }
    if (other.HasGenericString) {
      GenericString = other.GenericString;
    }
    if (other.HasIpv6AndPort) {
      Ipv6AndPort = other.Ipv6AndPort;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          GenericBytes = input.ReadBytes();
          break;
        }
        case 26: {
          GenericString = input.ReadString();
          break;
        }
        case 34: {
          Ipv6AndPort = input.ReadBytes();
          break;
        }
        case 129: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 138: {
          XboxPairwiseId = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 18: {
          GenericBytes = input.ReadBytes();
          break;
        }
        case 26: {
          GenericString = input.ReadString();
          break;
        }
        case 34: {
          Ipv6AndPort = input.ReadBytes();
          break;
        }
        case 129: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 138: {
          XboxPairwiseId = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramCertificate : pb::IMessage<CMsgSteamDatagramCertificate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramCertificate> _parser = new pb::MessageParser<CMsgSteamDatagramCertificate>(() => new CMsgSteamDatagramCertificate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramCertificate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesCertsReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificate(CMsgSteamDatagramCertificate other) : this() {
    _hasBits0 = other._hasBits0;
    keyType_ = other.keyType_;
    keyData_ = other.keyData_;
    legacySteamId_ = other.legacySteamId_;
    legacyIdentityBinary_ = other.legacyIdentityBinary_ != null ? other.legacyIdentityBinary_.Clone() : null;
    identityString_ = other.identityString_;
    gameserverDatacenterIds_ = other.gameserverDatacenterIds_.Clone();
    timeCreated_ = other.timeCreated_;
    timeExpiry_ = other.timeExpiry_;
    appIds_ = other.appIds_.Clone();
    ipAddresses_ = other.ipAddresses_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificate Clone() {
    return new CMsgSteamDatagramCertificate(this);
  }

  /// <summary>Field number for the "key_type" field.</summary>
  public const int KeyTypeFieldNumber = 1;
  private readonly static global::CMsgSteamDatagramCertificate.Types.EKeyType KeyTypeDefaultValue = global::CMsgSteamDatagramCertificate.Types.EKeyType.Invalid;

  private global::CMsgSteamDatagramCertificate.Types.EKeyType keyType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramCertificate.Types.EKeyType KeyType {
    get { if ((_hasBits0 & 1) != 0) { return keyType_; } else { return KeyTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      keyType_ = value;
    }
  }
  /// <summary>Gets whether the "key_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "key_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "key_data" field.</summary>
  public const int KeyDataFieldNumber = 2;
  private readonly static pb::ByteString KeyDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString keyData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString KeyData {
    get { return keyData_ ?? KeyDataDefaultValue; }
    set {
      keyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "key_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyData {
    get { return keyData_ != null; }
  }
  /// <summary>Clears the value of the "key_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyData() {
    keyData_ = null;
  }

  /// <summary>Field number for the "legacy_steam_id" field.</summary>
  public const int LegacySteamIdFieldNumber = 4;
  private readonly static ulong LegacySteamIdDefaultValue = 0UL;

  private ulong legacySteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LegacySteamId {
    get { if ((_hasBits0 & 2) != 0) { return legacySteamId_; } else { return LegacySteamIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      legacySteamId_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacySteamId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "legacy_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacySteamId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "legacy_identity_binary" field.</summary>
  public const int LegacyIdentityBinaryFieldNumber = 11;
  private global::CMsgSteamNetworkingIdentityLegacyBinary legacyIdentityBinary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamNetworkingIdentityLegacyBinary LegacyIdentityBinary {
    get { return legacyIdentityBinary_; }
    set {
      legacyIdentityBinary_ = value;
    }
  }

  /// <summary>Field number for the "identity_string" field.</summary>
  public const int IdentityStringFieldNumber = 12;
  private readonly static string IdentityStringDefaultValue = "";

  private string identityString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IdentityString {
    get { return identityString_ ?? IdentityStringDefaultValue; }
    set {
      identityString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "identity_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdentityString {
    get { return identityString_ != null; }
  }
  /// <summary>Clears the value of the "identity_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdentityString() {
    identityString_ = null;
  }

  /// <summary>Field number for the "gameserver_datacenter_ids" field.</summary>
  public const int GameserverDatacenterIdsFieldNumber = 5;
  private static readonly pb::FieldCodec<uint> _repeated_gameserverDatacenterIds_codec
      = pb::FieldCodec.ForFixed32(45);
  private readonly pbc::RepeatedField<uint> gameserverDatacenterIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> GameserverDatacenterIds {
    get { return gameserverDatacenterIds_; }
  }

  /// <summary>Field number for the "time_created" field.</summary>
  public const int TimeCreatedFieldNumber = 8;
  private readonly static uint TimeCreatedDefaultValue = 0;

  private uint timeCreated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeCreated {
    get { if ((_hasBits0 & 4) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      timeCreated_ = value;
    }
  }
  /// <summary>Gets whether the "time_created" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeCreated {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "time_created" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeCreated() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "time_expiry" field.</summary>
  public const int TimeExpiryFieldNumber = 9;
  private readonly static uint TimeExpiryDefaultValue = 0;

  private uint timeExpiry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeExpiry {
    get { if ((_hasBits0 & 8) != 0) { return timeExpiry_; } else { return TimeExpiryDefaultValue; } }
    set {
      _hasBits0 |= 8;
      timeExpiry_ = value;
    }
  }
  /// <summary>Gets whether the "time_expiry" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeExpiry {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "time_expiry" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeExpiry() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "app_ids" field.</summary>
  public const int AppIdsFieldNumber = 10;
  private static readonly pb::FieldCodec<uint> _repeated_appIds_codec
      = pb::FieldCodec.ForUInt32(80);
  private readonly pbc::RepeatedField<uint> appIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AppIds {
    get { return appIds_; }
  }

  /// <summary>Field number for the "ip_addresses" field.</summary>
  public const int IpAddressesFieldNumber = 13;
  private static readonly pb::FieldCodec<string> _repeated_ipAddresses_codec
      = pb::FieldCodec.ForString(106);
  private readonly pbc::RepeatedField<string> ipAddresses_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> IpAddresses {
    get { return ipAddresses_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramCertificate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramCertificate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KeyType != other.KeyType) return false;
    if (KeyData != other.KeyData) return false;
    if (LegacySteamId != other.LegacySteamId) return false;
    if (!object.Equals(LegacyIdentityBinary, other.LegacyIdentityBinary)) return false;
    if (IdentityString != other.IdentityString) return false;
    if(!gameserverDatacenterIds_.Equals(other.gameserverDatacenterIds_)) return false;
    if (TimeCreated != other.TimeCreated) return false;
    if (TimeExpiry != other.TimeExpiry) return false;
    if(!appIds_.Equals(other.appIds_)) return false;
    if(!ipAddresses_.Equals(other.ipAddresses_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasKeyType) hash ^= KeyType.GetHashCode();
    if (HasKeyData) hash ^= KeyData.GetHashCode();
    if (HasLegacySteamId) hash ^= LegacySteamId.GetHashCode();
    if (legacyIdentityBinary_ != null) hash ^= LegacyIdentityBinary.GetHashCode();
    if (HasIdentityString) hash ^= IdentityString.GetHashCode();
    hash ^= gameserverDatacenterIds_.GetHashCode();
    if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
    if (HasTimeExpiry) hash ^= TimeExpiry.GetHashCode();
    hash ^= appIds_.GetHashCode();
    hash ^= ipAddresses_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasKeyType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) KeyType);
    }
    if (HasKeyData) {
      output.WriteRawTag(18);
      output.WriteBytes(KeyData);
    }
    if (HasLegacySteamId) {
      output.WriteRawTag(33);
      output.WriteFixed64(LegacySteamId);
    }
    gameserverDatacenterIds_.WriteTo(output, _repeated_gameserverDatacenterIds_codec);
    if (HasTimeCreated) {
      output.WriteRawTag(69);
      output.WriteFixed32(TimeCreated);
    }
    if (HasTimeExpiry) {
      output.WriteRawTag(77);
      output.WriteFixed32(TimeExpiry);
    }
    appIds_.WriteTo(output, _repeated_appIds_codec);
    if (legacyIdentityBinary_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(98);
      output.WriteString(IdentityString);
    }
    ipAddresses_.WriteTo(output, _repeated_ipAddresses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasKeyType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) KeyType);
    }
    if (HasKeyData) {
      output.WriteRawTag(18);
      output.WriteBytes(KeyData);
    }
    if (HasLegacySteamId) {
      output.WriteRawTag(33);
      output.WriteFixed64(LegacySteamId);
    }
    gameserverDatacenterIds_.WriteTo(ref output, _repeated_gameserverDatacenterIds_codec);
    if (HasTimeCreated) {
      output.WriteRawTag(69);
      output.WriteFixed32(TimeCreated);
    }
    if (HasTimeExpiry) {
      output.WriteRawTag(77);
      output.WriteFixed32(TimeExpiry);
    }
    appIds_.WriteTo(ref output, _repeated_appIds_codec);
    if (legacyIdentityBinary_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(98);
      output.WriteString(IdentityString);
    }
    ipAddresses_.WriteTo(ref output, _repeated_ipAddresses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasKeyType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KeyType);
    }
    if (HasKeyData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(KeyData);
    }
    if (HasLegacySteamId) {
      size += 1 + 8;
    }
    if (legacyIdentityBinary_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IdentityString);
    }
    size += gameserverDatacenterIds_.CalculateSize(_repeated_gameserverDatacenterIds_codec);
    if (HasTimeCreated) {
      size += 1 + 4;
    }
    if (HasTimeExpiry) {
      size += 1 + 4;
    }
    size += appIds_.CalculateSize(_repeated_appIds_codec);
    size += ipAddresses_.CalculateSize(_repeated_ipAddresses_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramCertificate other) {
    if (other == null) {
      return;
    }
    if (other.HasKeyType) {
      KeyType = other.KeyType;
    }
    if (other.HasKeyData) {
      KeyData = other.KeyData;
    }
    if (other.HasLegacySteamId) {
      LegacySteamId = other.LegacySteamId;
    }
    if (other.legacyIdentityBinary_ != null) {
      if (legacyIdentityBinary_ == null) {
        LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
      }
      LegacyIdentityBinary.MergeFrom(other.LegacyIdentityBinary);
    }
    if (other.HasIdentityString) {
      IdentityString = other.IdentityString;
    }
    gameserverDatacenterIds_.Add(other.gameserverDatacenterIds_);
    if (other.HasTimeCreated) {
      TimeCreated = other.TimeCreated;
    }
    if (other.HasTimeExpiry) {
      TimeExpiry = other.TimeExpiry;
    }
    appIds_.Add(other.appIds_);
    ipAddresses_.Add(other.ipAddresses_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          KeyType = (global::CMsgSteamDatagramCertificate.Types.EKeyType) input.ReadEnum();
          break;
        }
        case 18: {
          KeyData = input.ReadBytes();
          break;
        }
        case 33: {
          LegacySteamId = input.ReadFixed64();
          break;
        }
        case 42:
        case 45: {
          gameserverDatacenterIds_.AddEntriesFrom(input, _repeated_gameserverDatacenterIds_codec);
          break;
        }
        case 69: {
          TimeCreated = input.ReadFixed32();
          break;
        }
        case 77: {
          TimeExpiry = input.ReadFixed32();
          break;
        }
        case 82:
        case 80: {
          appIds_.AddEntriesFrom(input, _repeated_appIds_codec);
          break;
        }
        case 90: {
          if (legacyIdentityBinary_ == null) {
            LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
          }
          input.ReadMessage(LegacyIdentityBinary);
          break;
        }
        case 98: {
          IdentityString = input.ReadString();
          break;
        }
        case 106: {
          ipAddresses_.AddEntriesFrom(input, _repeated_ipAddresses_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          KeyType = (global::CMsgSteamDatagramCertificate.Types.EKeyType) input.ReadEnum();
          break;
        }
        case 18: {
          KeyData = input.ReadBytes();
          break;
        }
        case 33: {
          LegacySteamId = input.ReadFixed64();
          break;
        }
        case 42:
        case 45: {
          gameserverDatacenterIds_.AddEntriesFrom(ref input, _repeated_gameserverDatacenterIds_codec);
          break;
        }
        case 69: {
          TimeCreated = input.ReadFixed32();
          break;
        }
        case 77: {
          TimeExpiry = input.ReadFixed32();
          break;
        }
        case 82:
        case 80: {
          appIds_.AddEntriesFrom(ref input, _repeated_appIds_codec);
          break;
        }
        case 90: {
          if (legacyIdentityBinary_ == null) {
            LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
          }
          input.ReadMessage(LegacyIdentityBinary);
          break;
        }
        case 98: {
          IdentityString = input.ReadString();
          break;
        }
        case 106: {
          ipAddresses_.AddEntriesFrom(ref input, _repeated_ipAddresses_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgSteamDatagramCertificate message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum EKeyType {
      [pbr::OriginalName("INVALID")] Invalid = 0,
      [pbr::OriginalName("ED25519")] Ed25519 = 1,
    }

  }
  #endregion

}

public sealed partial class CMsgSteamDatagramCertificateSigned : pb::IMessage<CMsgSteamDatagramCertificateSigned>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramCertificateSigned> _parser = new pb::MessageParser<CMsgSteamDatagramCertificateSigned>(() => new CMsgSteamDatagramCertificateSigned());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramCertificateSigned> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesCertsReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificateSigned() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificateSigned(CMsgSteamDatagramCertificateSigned other) : this() {
    _hasBits0 = other._hasBits0;
    cert_ = other.cert_;
    caKeyId_ = other.caKeyId_;
    caSignature_ = other.caSignature_;
    privateKeyData_ = other.privateKeyData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificateSigned Clone() {
    return new CMsgSteamDatagramCertificateSigned(this);
  }

  /// <summary>Field number for the "cert" field.</summary>
  public const int CertFieldNumber = 4;
  private readonly static pb::ByteString CertDefaultValue = pb::ByteString.Empty;

  private pb::ByteString cert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Cert {
    get { return cert_ ?? CertDefaultValue; }
    set {
      cert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cert" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCert {
    get { return cert_ != null; }
  }
  /// <summary>Clears the value of the "cert" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCert() {
    cert_ = null;
  }

  /// <summary>Field number for the "ca_key_id" field.</summary>
  public const int CaKeyIdFieldNumber = 5;
  private readonly static ulong CaKeyIdDefaultValue = 0UL;

  private ulong caKeyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong CaKeyId {
    get { if ((_hasBits0 & 1) != 0) { return caKeyId_; } else { return CaKeyIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      caKeyId_ = value;
    }
  }
  /// <summary>Gets whether the "ca_key_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaKeyId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ca_key_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaKeyId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ca_signature" field.</summary>
  public const int CaSignatureFieldNumber = 6;
  private readonly static pb::ByteString CaSignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString caSignature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString CaSignature {
    get { return caSignature_ ?? CaSignatureDefaultValue; }
    set {
      caSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ca_signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaSignature {
    get { return caSignature_ != null; }
  }
  /// <summary>Clears the value of the "ca_signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaSignature() {
    caSignature_ = null;
  }

  /// <summary>Field number for the "private_key_data" field.</summary>
  public const int PrivateKeyDataFieldNumber = 1;
  private readonly static pb::ByteString PrivateKeyDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString privateKeyData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString PrivateKeyData {
    get { return privateKeyData_ ?? PrivateKeyDataDefaultValue; }
    set {
      privateKeyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "private_key_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrivateKeyData {
    get { return privateKeyData_ != null; }
  }
  /// <summary>Clears the value of the "private_key_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrivateKeyData() {
    privateKeyData_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramCertificateSigned);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramCertificateSigned other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cert != other.Cert) return false;
    if (CaKeyId != other.CaKeyId) return false;
    if (CaSignature != other.CaSignature) return false;
    if (PrivateKeyData != other.PrivateKeyData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCert) hash ^= Cert.GetHashCode();
    if (HasCaKeyId) hash ^= CaKeyId.GetHashCode();
    if (HasCaSignature) hash ^= CaSignature.GetHashCode();
    if (HasPrivateKeyData) hash ^= PrivateKeyData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPrivateKeyData) {
      output.WriteRawTag(10);
      output.WriteBytes(PrivateKeyData);
    }
    if (HasCert) {
      output.WriteRawTag(34);
      output.WriteBytes(Cert);
    }
    if (HasCaKeyId) {
      output.WriteRawTag(41);
      output.WriteFixed64(CaKeyId);
    }
    if (HasCaSignature) {
      output.WriteRawTag(50);
      output.WriteBytes(CaSignature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPrivateKeyData) {
      output.WriteRawTag(10);
      output.WriteBytes(PrivateKeyData);
    }
    if (HasCert) {
      output.WriteRawTag(34);
      output.WriteBytes(Cert);
    }
    if (HasCaKeyId) {
      output.WriteRawTag(41);
      output.WriteFixed64(CaKeyId);
    }
    if (HasCaSignature) {
      output.WriteRawTag(50);
      output.WriteBytes(CaSignature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCert) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Cert);
    }
    if (HasCaKeyId) {
      size += 1 + 8;
    }
    if (HasCaSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CaSignature);
    }
    if (HasPrivateKeyData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKeyData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramCertificateSigned other) {
    if (other == null) {
      return;
    }
    if (other.HasCert) {
      Cert = other.Cert;
    }
    if (other.HasCaKeyId) {
      CaKeyId = other.CaKeyId;
    }
    if (other.HasCaSignature) {
      CaSignature = other.CaSignature;
    }
    if (other.HasPrivateKeyData) {
      PrivateKeyData = other.PrivateKeyData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PrivateKeyData = input.ReadBytes();
          break;
        }
        case 34: {
          Cert = input.ReadBytes();
          break;
        }
        case 41: {
          CaKeyId = input.ReadFixed64();
          break;
        }
        case 50: {
          CaSignature = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          PrivateKeyData = input.ReadBytes();
          break;
        }
        case 34: {
          Cert = input.ReadBytes();
          break;
        }
        case 41: {
          CaKeyId = input.ReadFixed64();
          break;
        }
        case 50: {
          CaSignature = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramCertificateRequest : pb::IMessage<CMsgSteamDatagramCertificateRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramCertificateRequest> _parser = new pb::MessageParser<CMsgSteamDatagramCertificateRequest>(() => new CMsgSteamDatagramCertificateRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramCertificateRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesCertsReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificateRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificateRequest(CMsgSteamDatagramCertificateRequest other) : this() {
    cert_ = other.cert_ != null ? other.cert_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramCertificateRequest Clone() {
    return new CMsgSteamDatagramCertificateRequest(this);
  }

  /// <summary>Field number for the "cert" field.</summary>
  public const int CertFieldNumber = 1;
  private global::CMsgSteamDatagramCertificate cert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramCertificate Cert {
    get { return cert_; }
    set {
      cert_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramCertificateRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramCertificateRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Cert, other.Cert)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (cert_ != null) hash ^= Cert.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (cert_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Cert);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (cert_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Cert);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (cert_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cert);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramCertificateRequest other) {
    if (other == null) {
      return;
    }
    if (other.cert_ != null) {
      if (cert_ == null) {
        Cert = new global::CMsgSteamDatagramCertificate();
      }
      Cert.MergeFrom(other.Cert);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificate();
          }
          input.ReadMessage(Cert);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificate();
          }
          input.ReadMessage(Cert);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

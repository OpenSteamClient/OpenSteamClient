// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steamnetworkingsockets_messages_udp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steamnetworkingsockets_messages_udp.proto</summary>
public static partial class SteamnetworkingsocketsMessagesUdpReflection {

  #region Descriptor
  /// <summary>File descriptor for steamnetworkingsockets_messages_udp.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteamnetworkingsocketsMessagesUdpReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CilzdGVhbW5ldHdvcmtpbmdzb2NrZXRzX21lc3NhZ2VzX3VkcC5wcm90bxor",
          "c3RlYW1uZXR3b3JraW5nc29ja2V0c19tZXNzYWdlc19jZXJ0cy5wcm90bxol",
          "c3RlYW1uZXR3b3JraW5nc29ja2V0c19tZXNzYWdlcy5wcm90byJuCiVDTXNn",
          "U3RlYW1Tb2NrZXRzX1VEUF9DaGFsbGVuZ2VSZXF1ZXN0EhUKDWNvbm5lY3Rp",
          "b25faWQYASABKAcSFAoMbXlfdGltZXN0YW1wGAMgASgGEhgKEHByb3RvY29s",
          "X3ZlcnNpb24YBCABKA0igQEKI0NNc2dTdGVhbVNvY2tldHNfVURQX0NoYWxs",
          "ZW5nZVJlcGx5EhUKDWNvbm5lY3Rpb25faWQYASABKAcSEQoJY2hhbGxlbmdl",
          "GAIgASgGEhYKDnlvdXJfdGltZXN0YW1wGAMgASgGEhgKEHByb3RvY29sX3Zl",
          "cnNpb24YBCABKA0ikQMKI0NNc2dTdGVhbVNvY2tldHNfVURQX0Nvbm5lY3RS",
          "ZXF1ZXN0EhwKFGNsaWVudF9jb25uZWN0aW9uX2lkGAEgASgHEhEKCWNoYWxs",
          "ZW5nZRgCIAEoBhIUCgxteV90aW1lc3RhbXAYBSABKAYSEwoLcGluZ19lc3Rf",
          "bXMYBiABKA0SNwoFY3J5cHQYByABKAsyKC5DTXNnU3RlYW1EYXRhZ3JhbVNl",
          "c3Npb25DcnlwdEluZm9TaWduZWQSMQoEY2VydBgEIAEoCzIjLkNNc2dTdGVh",
          "bURhdGFncmFtQ2VydGlmaWNhdGVTaWduZWQSHwoXbGVnYWN5X3Byb3RvY29s",
          "X3ZlcnNpb24YCCABKA0SFwoPaWRlbnRpdHlfc3RyaW5nGAogASgJEh4KFmxl",
          "Z2FjeV9jbGllbnRfc3RlYW1faWQYAyABKAYSSAoWbGVnYWN5X2lkZW50aXR5",
          "X2JpbmFyeRgJIAEoCzIoLkNNc2dTdGVhbU5ldHdvcmtpbmdJZGVudGl0eUxl",
          "Z2FjeUJpbmFyeSL8AgoeQ01zZ1N0ZWFtU29ja2V0c19VRFBfQ29ubmVjdE9L",
          "EhwKFGNsaWVudF9jb25uZWN0aW9uX2lkGAEgASgHEhwKFHNlcnZlcl9jb25u",
          "ZWN0aW9uX2lkGAUgASgHEhYKDnlvdXJfdGltZXN0YW1wGAMgASgGEhcKD2Rl",
          "bGF5X3RpbWVfdXNlYxgEIAEoDRI3CgVjcnlwdBgHIAEoCzIoLkNNc2dTdGVh",
          "bURhdGFncmFtU2Vzc2lvbkNyeXB0SW5mb1NpZ25lZBIxCgRjZXJ0GAggASgL",
          "MiMuQ01zZ1N0ZWFtRGF0YWdyYW1DZXJ0aWZpY2F0ZVNpZ25lZBIXCg9pZGVu",
          "dGl0eV9zdHJpbmcYCyABKAkSHgoWbGVnYWN5X3NlcnZlcl9zdGVhbV9pZBgC",
          "IAEoBhJIChZsZWdhY3lfaWRlbnRpdHlfYmluYXJ5GAogASgLMiguQ01zZ1N0",
          "ZWFtTmV0d29ya2luZ0lkZW50aXR5TGVnYWN5QmluYXJ5IoEBCiVDTXNnU3Rl",
          "YW1Tb2NrZXRzX1VEUF9Db25uZWN0aW9uQ2xvc2VkEhgKEHRvX2Nvbm5lY3Rp",
          "b25faWQYBCABKAcSGgoSZnJvbV9jb25uZWN0aW9uX2lkGAUgASgHEg0KBWRl",
          "YnVnGAIgASgJEhMKC3JlYXNvbl9jb2RlGAMgASgNIlkKIUNNc2dTdGVhbVNv",
          "Y2tldHNfVURQX05vQ29ubmVjdGlvbhIaChJmcm9tX2Nvbm5lY3Rpb25faWQY",
          "AiABKAcSGAoQdG9fY29ubmVjdGlvbl9pZBgDIAEoByK3AQoaQ01zZ1N0ZWFt",
          "U29ja2V0c19VRFBfU3RhdHMSMgoFc3RhdHMYASABKAsyIy5DTXNnU3RlYW1E",
          "YXRhZ3JhbUNvbm5lY3Rpb25RdWFsaXR5Eg0KBWZsYWdzGAMgASgNIlYKBUZs",
          "YWdzEhMKD0FDS19SRVFVRVNUX0UyRRACEhkKFUFDS19SRVFVRVNUX0lNTUVE",
          "SUFURRAEEh0KGU5PVF9QUklNQVJZX1RSQU5TUE9SVF9FMkUQECqlAgoYRVN0",
          "ZWFtTmV0d29ya2luZ1VEUE1zZ0lEEi0KKWtfRVN0ZWFtTmV0d29ya2luZ1VE",
          "UE1zZ19DaGFsbGVuZ2VSZXF1ZXN0ECASKwona19FU3RlYW1OZXR3b3JraW5n",
          "VURQTXNnX0NoYWxsZW5nZVJlcGx5ECESKwona19FU3RlYW1OZXR3b3JraW5n",
          "VURQTXNnX0Nvbm5lY3RSZXF1ZXN0ECISJgoia19FU3RlYW1OZXR3b3JraW5n",
          "VURQTXNnX0Nvbm5lY3RPSxAjEi0KKWtfRVN0ZWFtTmV0d29ya2luZ1VEUE1z",
          "Z19Db25uZWN0aW9uQ2xvc2VkECQSKQola19FU3RlYW1OZXR3b3JraW5nVURQ",
          "TXNnX05vQ29ubmVjdGlvbhAlQgVIAYABAA=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteamnetworkingsocketsMessagesCertsReflection.Descriptor, global::SteamnetworkingsocketsMessagesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ESteamNetworkingUDPMsgID), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamSockets_UDP_ChallengeRequest), global::CMsgSteamSockets_UDP_ChallengeRequest.Parser, new[]{ "ConnectionId", "MyTimestamp", "ProtocolVersion" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamSockets_UDP_ChallengeReply), global::CMsgSteamSockets_UDP_ChallengeReply.Parser, new[]{ "ConnectionId", "Challenge", "YourTimestamp", "ProtocolVersion" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamSockets_UDP_ConnectRequest), global::CMsgSteamSockets_UDP_ConnectRequest.Parser, new[]{ "ClientConnectionId", "Challenge", "MyTimestamp", "PingEstMs", "Crypt", "Cert", "LegacyProtocolVersion", "IdentityString", "LegacyClientSteamId", "LegacyIdentityBinary" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamSockets_UDP_ConnectOK), global::CMsgSteamSockets_UDP_ConnectOK.Parser, new[]{ "ClientConnectionId", "ServerConnectionId", "YourTimestamp", "DelayTimeUsec", "Crypt", "Cert", "IdentityString", "LegacyServerSteamId", "LegacyIdentityBinary" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamSockets_UDP_ConnectionClosed), global::CMsgSteamSockets_UDP_ConnectionClosed.Parser, new[]{ "ToConnectionId", "FromConnectionId", "Debug", "ReasonCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamSockets_UDP_NoConnection), global::CMsgSteamSockets_UDP_NoConnection.Parser, new[]{ "FromConnectionId", "ToConnectionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamSockets_UDP_Stats), global::CMsgSteamSockets_UDP_Stats.Parser, new[]{ "Stats", "Flags" }, null, new[]{ typeof(global::CMsgSteamSockets_UDP_Stats.Types.Flags) }, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ESteamNetworkingUDPMsgID {
  [pbr::OriginalName("k_ESteamNetworkingUDPMsg_ChallengeRequest")] KEsteamNetworkingUdpmsgChallengeRequest = 32,
  [pbr::OriginalName("k_ESteamNetworkingUDPMsg_ChallengeReply")] KEsteamNetworkingUdpmsgChallengeReply = 33,
  [pbr::OriginalName("k_ESteamNetworkingUDPMsg_ConnectRequest")] KEsteamNetworkingUdpmsgConnectRequest = 34,
  [pbr::OriginalName("k_ESteamNetworkingUDPMsg_ConnectOK")] KEsteamNetworkingUdpmsgConnectOk = 35,
  [pbr::OriginalName("k_ESteamNetworkingUDPMsg_ConnectionClosed")] KEsteamNetworkingUdpmsgConnectionClosed = 36,
  [pbr::OriginalName("k_ESteamNetworkingUDPMsg_NoConnection")] KEsteamNetworkingUdpmsgNoConnection = 37,
}

#endregion

#region Messages
public sealed partial class CMsgSteamSockets_UDP_ChallengeRequest : pb::IMessage<CMsgSteamSockets_UDP_ChallengeRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamSockets_UDP_ChallengeRequest> _parser = new pb::MessageParser<CMsgSteamSockets_UDP_ChallengeRequest>(() => new CMsgSteamSockets_UDP_ChallengeRequest());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamSockets_UDP_ChallengeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesUdpReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ChallengeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ChallengeRequest(CMsgSteamSockets_UDP_ChallengeRequest other) : this() {
    _hasBits0 = other._hasBits0;
    connectionId_ = other.connectionId_;
    myTimestamp_ = other.myTimestamp_;
    protocolVersion_ = other.protocolVersion_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ChallengeRequest Clone() {
    return new CMsgSteamSockets_UDP_ChallengeRequest(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private readonly static uint ConnectionIdDefaultValue = 0;

  private uint connectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ConnectionId {
    get { if ((_hasBits0 & 1) != 0) { return connectionId_; } else { return ConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      connectionId_ = value;
    }
  }
  /// <summary>Gets whether the "connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "my_timestamp" field.</summary>
  public const int MyTimestampFieldNumber = 3;
  private readonly static ulong MyTimestampDefaultValue = 0UL;

  private ulong myTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MyTimestamp {
    get { if ((_hasBits0 & 2) != 0) { return myTimestamp_; } else { return MyTimestampDefaultValue; } }
    set {
      _hasBits0 |= 2;
      myTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "my_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMyTimestamp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "my_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMyTimestamp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 4;
  private readonly static uint ProtocolVersionDefaultValue = 0;

  private uint protocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProtocolVersion {
    get { if ((_hasBits0 & 4) != 0) { return protocolVersion_; } else { return ProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      protocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocolVersion {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocolVersion() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamSockets_UDP_ChallengeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamSockets_UDP_ChallengeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (MyTimestamp != other.MyTimestamp) return false;
    if (ProtocolVersion != other.ProtocolVersion) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConnectionId) hash ^= ConnectionId.GetHashCode();
    if (HasMyTimestamp) hash ^= MyTimestamp.GetHashCode();
    if (HasProtocolVersion) hash ^= ProtocolVersion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ConnectionId);
    }
    if (HasMyTimestamp) {
      output.WriteRawTag(25);
      output.WriteFixed64(MyTimestamp);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ConnectionId);
    }
    if (HasMyTimestamp) {
      output.WriteRawTag(25);
      output.WriteFixed64(MyTimestamp);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConnectionId) {
      size += 1 + 4;
    }
    if (HasMyTimestamp) {
      size += 1 + 8;
    }
    if (HasProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamSockets_UDP_ChallengeRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasConnectionId) {
      ConnectionId = other.ConnectionId;
    }
    if (other.HasMyTimestamp) {
      MyTimestamp = other.MyTimestamp;
    }
    if (other.HasProtocolVersion) {
      ProtocolVersion = other.ProtocolVersion;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          ConnectionId = input.ReadFixed32();
          break;
        }
        case 25: {
          MyTimestamp = input.ReadFixed64();
          break;
        }
        case 32: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          ConnectionId = input.ReadFixed32();
          break;
        }
        case 25: {
          MyTimestamp = input.ReadFixed64();
          break;
        }
        case 32: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamSockets_UDP_ChallengeReply : pb::IMessage<CMsgSteamSockets_UDP_ChallengeReply>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamSockets_UDP_ChallengeReply> _parser = new pb::MessageParser<CMsgSteamSockets_UDP_ChallengeReply>(() => new CMsgSteamSockets_UDP_ChallengeReply());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamSockets_UDP_ChallengeReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesUdpReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ChallengeReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ChallengeReply(CMsgSteamSockets_UDP_ChallengeReply other) : this() {
    _hasBits0 = other._hasBits0;
    connectionId_ = other.connectionId_;
    challenge_ = other.challenge_;
    yourTimestamp_ = other.yourTimestamp_;
    protocolVersion_ = other.protocolVersion_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ChallengeReply Clone() {
    return new CMsgSteamSockets_UDP_ChallengeReply(this);
  }

  /// <summary>Field number for the "connection_id" field.</summary>
  public const int ConnectionIdFieldNumber = 1;
  private readonly static uint ConnectionIdDefaultValue = 0;

  private uint connectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ConnectionId {
    get { if ((_hasBits0 & 1) != 0) { return connectionId_; } else { return ConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      connectionId_ = value;
    }
  }
  /// <summary>Gets whether the "connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "challenge" field.</summary>
  public const int ChallengeFieldNumber = 2;
  private readonly static ulong ChallengeDefaultValue = 0UL;

  private ulong challenge_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Challenge {
    get { if ((_hasBits0 & 2) != 0) { return challenge_; } else { return ChallengeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      challenge_ = value;
    }
  }
  /// <summary>Gets whether the "challenge" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChallenge {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "challenge" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChallenge() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "your_timestamp" field.</summary>
  public const int YourTimestampFieldNumber = 3;
  private readonly static ulong YourTimestampDefaultValue = 0UL;

  private ulong yourTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong YourTimestamp {
    get { if ((_hasBits0 & 4) != 0) { return yourTimestamp_; } else { return YourTimestampDefaultValue; } }
    set {
      _hasBits0 |= 4;
      yourTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "your_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasYourTimestamp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "your_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearYourTimestamp() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 4;
  private readonly static uint ProtocolVersionDefaultValue = 0;

  private uint protocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProtocolVersion {
    get { if ((_hasBits0 & 8) != 0) { return protocolVersion_; } else { return ProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 8;
      protocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocolVersion {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocolVersion() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamSockets_UDP_ChallengeReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamSockets_UDP_ChallengeReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionId != other.ConnectionId) return false;
    if (Challenge != other.Challenge) return false;
    if (YourTimestamp != other.YourTimestamp) return false;
    if (ProtocolVersion != other.ProtocolVersion) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConnectionId) hash ^= ConnectionId.GetHashCode();
    if (HasChallenge) hash ^= Challenge.GetHashCode();
    if (HasYourTimestamp) hash ^= YourTimestamp.GetHashCode();
    if (HasProtocolVersion) hash ^= ProtocolVersion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ConnectionId);
    }
    if (HasChallenge) {
      output.WriteRawTag(17);
      output.WriteFixed64(Challenge);
    }
    if (HasYourTimestamp) {
      output.WriteRawTag(25);
      output.WriteFixed64(YourTimestamp);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ConnectionId);
    }
    if (HasChallenge) {
      output.WriteRawTag(17);
      output.WriteFixed64(Challenge);
    }
    if (HasYourTimestamp) {
      output.WriteRawTag(25);
      output.WriteFixed64(YourTimestamp);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConnectionId) {
      size += 1 + 4;
    }
    if (HasChallenge) {
      size += 1 + 8;
    }
    if (HasYourTimestamp) {
      size += 1 + 8;
    }
    if (HasProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamSockets_UDP_ChallengeReply other) {
    if (other == null) {
      return;
    }
    if (other.HasConnectionId) {
      ConnectionId = other.ConnectionId;
    }
    if (other.HasChallenge) {
      Challenge = other.Challenge;
    }
    if (other.HasYourTimestamp) {
      YourTimestamp = other.YourTimestamp;
    }
    if (other.HasProtocolVersion) {
      ProtocolVersion = other.ProtocolVersion;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          ConnectionId = input.ReadFixed32();
          break;
        }
        case 17: {
          Challenge = input.ReadFixed64();
          break;
        }
        case 25: {
          YourTimestamp = input.ReadFixed64();
          break;
        }
        case 32: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          ConnectionId = input.ReadFixed32();
          break;
        }
        case 17: {
          Challenge = input.ReadFixed64();
          break;
        }
        case 25: {
          YourTimestamp = input.ReadFixed64();
          break;
        }
        case 32: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamSockets_UDP_ConnectRequest : pb::IMessage<CMsgSteamSockets_UDP_ConnectRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamSockets_UDP_ConnectRequest> _parser = new pb::MessageParser<CMsgSteamSockets_UDP_ConnectRequest>(() => new CMsgSteamSockets_UDP_ConnectRequest());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamSockets_UDP_ConnectRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesUdpReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectRequest(CMsgSteamSockets_UDP_ConnectRequest other) : this() {
    _hasBits0 = other._hasBits0;
    clientConnectionId_ = other.clientConnectionId_;
    challenge_ = other.challenge_;
    myTimestamp_ = other.myTimestamp_;
    pingEstMs_ = other.pingEstMs_;
    crypt_ = other.crypt_ != null ? other.crypt_.Clone() : null;
    cert_ = other.cert_ != null ? other.cert_.Clone() : null;
    legacyProtocolVersion_ = other.legacyProtocolVersion_;
    identityString_ = other.identityString_;
    legacyClientSteamId_ = other.legacyClientSteamId_;
    legacyIdentityBinary_ = other.legacyIdentityBinary_ != null ? other.legacyIdentityBinary_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectRequest Clone() {
    return new CMsgSteamSockets_UDP_ConnectRequest(this);
  }

  /// <summary>Field number for the "client_connection_id" field.</summary>
  public const int ClientConnectionIdFieldNumber = 1;
  private readonly static uint ClientConnectionIdDefaultValue = 0;

  private uint clientConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientConnectionId {
    get { if ((_hasBits0 & 1) != 0) { return clientConnectionId_; } else { return ClientConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clientConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "client_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientConnectionId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "client_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientConnectionId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "challenge" field.</summary>
  public const int ChallengeFieldNumber = 2;
  private readonly static ulong ChallengeDefaultValue = 0UL;

  private ulong challenge_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Challenge {
    get { if ((_hasBits0 & 2) != 0) { return challenge_; } else { return ChallengeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      challenge_ = value;
    }
  }
  /// <summary>Gets whether the "challenge" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChallenge {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "challenge" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChallenge() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "my_timestamp" field.</summary>
  public const int MyTimestampFieldNumber = 5;
  private readonly static ulong MyTimestampDefaultValue = 0UL;

  private ulong myTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MyTimestamp {
    get { if ((_hasBits0 & 8) != 0) { return myTimestamp_; } else { return MyTimestampDefaultValue; } }
    set {
      _hasBits0 |= 8;
      myTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "my_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMyTimestamp {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "my_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMyTimestamp() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "ping_est_ms" field.</summary>
  public const int PingEstMsFieldNumber = 6;
  private readonly static uint PingEstMsDefaultValue = 0;

  private uint pingEstMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingEstMs {
    get { if ((_hasBits0 & 16) != 0) { return pingEstMs_; } else { return PingEstMsDefaultValue; } }
    set {
      _hasBits0 |= 16;
      pingEstMs_ = value;
    }
  }
  /// <summary>Gets whether the "ping_est_ms" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingEstMs {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ping_est_ms" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingEstMs() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "crypt" field.</summary>
  public const int CryptFieldNumber = 7;
  private global::CMsgSteamDatagramSessionCryptInfoSigned crypt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramSessionCryptInfoSigned Crypt {
    get { return crypt_; }
    set {
      crypt_ = value;
    }
  }

  /// <summary>Field number for the "cert" field.</summary>
  public const int CertFieldNumber = 4;
  private global::CMsgSteamDatagramCertificateSigned cert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramCertificateSigned Cert {
    get { return cert_; }
    set {
      cert_ = value;
    }
  }

  /// <summary>Field number for the "legacy_protocol_version" field.</summary>
  public const int LegacyProtocolVersionFieldNumber = 8;
  private readonly static uint LegacyProtocolVersionDefaultValue = 0;

  private uint legacyProtocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LegacyProtocolVersion {
    get { if ((_hasBits0 & 32) != 0) { return legacyProtocolVersion_; } else { return LegacyProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 32;
      legacyProtocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyProtocolVersion {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "legacy_protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyProtocolVersion() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "identity_string" field.</summary>
  public const int IdentityStringFieldNumber = 10;
  private readonly static string IdentityStringDefaultValue = "";

  private string identityString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IdentityString {
    get { return identityString_ ?? IdentityStringDefaultValue; }
    set {
      identityString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "identity_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdentityString {
    get { return identityString_ != null; }
  }
  /// <summary>Clears the value of the "identity_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdentityString() {
    identityString_ = null;
  }

  /// <summary>Field number for the "legacy_client_steam_id" field.</summary>
  public const int LegacyClientSteamIdFieldNumber = 3;
  private readonly static ulong LegacyClientSteamIdDefaultValue = 0UL;

  private ulong legacyClientSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LegacyClientSteamId {
    get { if ((_hasBits0 & 4) != 0) { return legacyClientSteamId_; } else { return LegacyClientSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      legacyClientSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_client_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyClientSteamId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "legacy_client_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyClientSteamId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "legacy_identity_binary" field.</summary>
  public const int LegacyIdentityBinaryFieldNumber = 9;
  private global::CMsgSteamNetworkingIdentityLegacyBinary legacyIdentityBinary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamNetworkingIdentityLegacyBinary LegacyIdentityBinary {
    get { return legacyIdentityBinary_; }
    set {
      legacyIdentityBinary_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamSockets_UDP_ConnectRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamSockets_UDP_ConnectRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientConnectionId != other.ClientConnectionId) return false;
    if (Challenge != other.Challenge) return false;
    if (MyTimestamp != other.MyTimestamp) return false;
    if (PingEstMs != other.PingEstMs) return false;
    if (!object.Equals(Crypt, other.Crypt)) return false;
    if (!object.Equals(Cert, other.Cert)) return false;
    if (LegacyProtocolVersion != other.LegacyProtocolVersion) return false;
    if (IdentityString != other.IdentityString) return false;
    if (LegacyClientSteamId != other.LegacyClientSteamId) return false;
    if (!object.Equals(LegacyIdentityBinary, other.LegacyIdentityBinary)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasClientConnectionId) hash ^= ClientConnectionId.GetHashCode();
    if (HasChallenge) hash ^= Challenge.GetHashCode();
    if (HasMyTimestamp) hash ^= MyTimestamp.GetHashCode();
    if (HasPingEstMs) hash ^= PingEstMs.GetHashCode();
    if (crypt_ != null) hash ^= Crypt.GetHashCode();
    if (cert_ != null) hash ^= Cert.GetHashCode();
    if (HasLegacyProtocolVersion) hash ^= LegacyProtocolVersion.GetHashCode();
    if (HasIdentityString) hash ^= IdentityString.GetHashCode();
    if (HasLegacyClientSteamId) hash ^= LegacyClientSteamId.GetHashCode();
    if (legacyIdentityBinary_ != null) hash ^= LegacyIdentityBinary.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasClientConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ClientConnectionId);
    }
    if (HasChallenge) {
      output.WriteRawTag(17);
      output.WriteFixed64(Challenge);
    }
    if (HasLegacyClientSteamId) {
      output.WriteRawTag(25);
      output.WriteFixed64(LegacyClientSteamId);
    }
    if (cert_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Cert);
    }
    if (HasMyTimestamp) {
      output.WriteRawTag(41);
      output.WriteFixed64(MyTimestamp);
    }
    if (HasPingEstMs) {
      output.WriteRawTag(48);
      output.WriteUInt32(PingEstMs);
    }
    if (crypt_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Crypt);
    }
    if (HasLegacyProtocolVersion) {
      output.WriteRawTag(64);
      output.WriteUInt32(LegacyProtocolVersion);
    }
    if (legacyIdentityBinary_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(82);
      output.WriteString(IdentityString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasClientConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ClientConnectionId);
    }
    if (HasChallenge) {
      output.WriteRawTag(17);
      output.WriteFixed64(Challenge);
    }
    if (HasLegacyClientSteamId) {
      output.WriteRawTag(25);
      output.WriteFixed64(LegacyClientSteamId);
    }
    if (cert_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Cert);
    }
    if (HasMyTimestamp) {
      output.WriteRawTag(41);
      output.WriteFixed64(MyTimestamp);
    }
    if (HasPingEstMs) {
      output.WriteRawTag(48);
      output.WriteUInt32(PingEstMs);
    }
    if (crypt_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Crypt);
    }
    if (HasLegacyProtocolVersion) {
      output.WriteRawTag(64);
      output.WriteUInt32(LegacyProtocolVersion);
    }
    if (legacyIdentityBinary_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(82);
      output.WriteString(IdentityString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasClientConnectionId) {
      size += 1 + 4;
    }
    if (HasChallenge) {
      size += 1 + 8;
    }
    if (HasMyTimestamp) {
      size += 1 + 8;
    }
    if (HasPingEstMs) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingEstMs);
    }
    if (crypt_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Crypt);
    }
    if (cert_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cert);
    }
    if (HasLegacyProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LegacyProtocolVersion);
    }
    if (HasIdentityString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IdentityString);
    }
    if (HasLegacyClientSteamId) {
      size += 1 + 8;
    }
    if (legacyIdentityBinary_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LegacyIdentityBinary);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamSockets_UDP_ConnectRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasClientConnectionId) {
      ClientConnectionId = other.ClientConnectionId;
    }
    if (other.HasChallenge) {
      Challenge = other.Challenge;
    }
    if (other.HasMyTimestamp) {
      MyTimestamp = other.MyTimestamp;
    }
    if (other.HasPingEstMs) {
      PingEstMs = other.PingEstMs;
    }
    if (other.crypt_ != null) {
      if (crypt_ == null) {
        Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
      }
      Crypt.MergeFrom(other.Crypt);
    }
    if (other.cert_ != null) {
      if (cert_ == null) {
        Cert = new global::CMsgSteamDatagramCertificateSigned();
      }
      Cert.MergeFrom(other.Cert);
    }
    if (other.HasLegacyProtocolVersion) {
      LegacyProtocolVersion = other.LegacyProtocolVersion;
    }
    if (other.HasIdentityString) {
      IdentityString = other.IdentityString;
    }
    if (other.HasLegacyClientSteamId) {
      LegacyClientSteamId = other.LegacyClientSteamId;
    }
    if (other.legacyIdentityBinary_ != null) {
      if (legacyIdentityBinary_ == null) {
        LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
      }
      LegacyIdentityBinary.MergeFrom(other.LegacyIdentityBinary);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          ClientConnectionId = input.ReadFixed32();
          break;
        }
        case 17: {
          Challenge = input.ReadFixed64();
          break;
        }
        case 25: {
          LegacyClientSteamId = input.ReadFixed64();
          break;
        }
        case 34: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          input.ReadMessage(Cert);
          break;
        }
        case 41: {
          MyTimestamp = input.ReadFixed64();
          break;
        }
        case 48: {
          PingEstMs = input.ReadUInt32();
          break;
        }
        case 58: {
          if (crypt_ == null) {
            Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
          }
          input.ReadMessage(Crypt);
          break;
        }
        case 64: {
          LegacyProtocolVersion = input.ReadUInt32();
          break;
        }
        case 74: {
          if (legacyIdentityBinary_ == null) {
            LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
          }
          input.ReadMessage(LegacyIdentityBinary);
          break;
        }
        case 82: {
          IdentityString = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          ClientConnectionId = input.ReadFixed32();
          break;
        }
        case 17: {
          Challenge = input.ReadFixed64();
          break;
        }
        case 25: {
          LegacyClientSteamId = input.ReadFixed64();
          break;
        }
        case 34: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          input.ReadMessage(Cert);
          break;
        }
        case 41: {
          MyTimestamp = input.ReadFixed64();
          break;
        }
        case 48: {
          PingEstMs = input.ReadUInt32();
          break;
        }
        case 58: {
          if (crypt_ == null) {
            Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
          }
          input.ReadMessage(Crypt);
          break;
        }
        case 64: {
          LegacyProtocolVersion = input.ReadUInt32();
          break;
        }
        case 74: {
          if (legacyIdentityBinary_ == null) {
            LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
          }
          input.ReadMessage(LegacyIdentityBinary);
          break;
        }
        case 82: {
          IdentityString = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamSockets_UDP_ConnectOK : pb::IMessage<CMsgSteamSockets_UDP_ConnectOK>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamSockets_UDP_ConnectOK> _parser = new pb::MessageParser<CMsgSteamSockets_UDP_ConnectOK>(() => new CMsgSteamSockets_UDP_ConnectOK());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamSockets_UDP_ConnectOK> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesUdpReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectOK() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectOK(CMsgSteamSockets_UDP_ConnectOK other) : this() {
    _hasBits0 = other._hasBits0;
    clientConnectionId_ = other.clientConnectionId_;
    serverConnectionId_ = other.serverConnectionId_;
    yourTimestamp_ = other.yourTimestamp_;
    delayTimeUsec_ = other.delayTimeUsec_;
    crypt_ = other.crypt_ != null ? other.crypt_.Clone() : null;
    cert_ = other.cert_ != null ? other.cert_.Clone() : null;
    identityString_ = other.identityString_;
    legacyServerSteamId_ = other.legacyServerSteamId_;
    legacyIdentityBinary_ = other.legacyIdentityBinary_ != null ? other.legacyIdentityBinary_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectOK Clone() {
    return new CMsgSteamSockets_UDP_ConnectOK(this);
  }

  /// <summary>Field number for the "client_connection_id" field.</summary>
  public const int ClientConnectionIdFieldNumber = 1;
  private readonly static uint ClientConnectionIdDefaultValue = 0;

  private uint clientConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientConnectionId {
    get { if ((_hasBits0 & 1) != 0) { return clientConnectionId_; } else { return ClientConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clientConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "client_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientConnectionId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "client_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientConnectionId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "server_connection_id" field.</summary>
  public const int ServerConnectionIdFieldNumber = 5;
  private readonly static uint ServerConnectionIdDefaultValue = 0;

  private uint serverConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerConnectionId {
    get { if ((_hasBits0 & 16) != 0) { return serverConnectionId_; } else { return ServerConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 16;
      serverConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "server_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerConnectionId {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "server_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerConnectionId() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "your_timestamp" field.</summary>
  public const int YourTimestampFieldNumber = 3;
  private readonly static ulong YourTimestampDefaultValue = 0UL;

  private ulong yourTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong YourTimestamp {
    get { if ((_hasBits0 & 4) != 0) { return yourTimestamp_; } else { return YourTimestampDefaultValue; } }
    set {
      _hasBits0 |= 4;
      yourTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "your_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasYourTimestamp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "your_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearYourTimestamp() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "delay_time_usec" field.</summary>
  public const int DelayTimeUsecFieldNumber = 4;
  private readonly static uint DelayTimeUsecDefaultValue = 0;

  private uint delayTimeUsec_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DelayTimeUsec {
    get { if ((_hasBits0 & 8) != 0) { return delayTimeUsec_; } else { return DelayTimeUsecDefaultValue; } }
    set {
      _hasBits0 |= 8;
      delayTimeUsec_ = value;
    }
  }
  /// <summary>Gets whether the "delay_time_usec" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDelayTimeUsec {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "delay_time_usec" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDelayTimeUsec() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "crypt" field.</summary>
  public const int CryptFieldNumber = 7;
  private global::CMsgSteamDatagramSessionCryptInfoSigned crypt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramSessionCryptInfoSigned Crypt {
    get { return crypt_; }
    set {
      crypt_ = value;
    }
  }

  /// <summary>Field number for the "cert" field.</summary>
  public const int CertFieldNumber = 8;
  private global::CMsgSteamDatagramCertificateSigned cert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramCertificateSigned Cert {
    get { return cert_; }
    set {
      cert_ = value;
    }
  }

  /// <summary>Field number for the "identity_string" field.</summary>
  public const int IdentityStringFieldNumber = 11;
  private readonly static string IdentityStringDefaultValue = "";

  private string identityString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IdentityString {
    get { return identityString_ ?? IdentityStringDefaultValue; }
    set {
      identityString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "identity_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdentityString {
    get { return identityString_ != null; }
  }
  /// <summary>Clears the value of the "identity_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdentityString() {
    identityString_ = null;
  }

  /// <summary>Field number for the "legacy_server_steam_id" field.</summary>
  public const int LegacyServerSteamIdFieldNumber = 2;
  private readonly static ulong LegacyServerSteamIdDefaultValue = 0UL;

  private ulong legacyServerSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LegacyServerSteamId {
    get { if ((_hasBits0 & 2) != 0) { return legacyServerSteamId_; } else { return LegacyServerSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      legacyServerSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_server_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyServerSteamId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "legacy_server_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyServerSteamId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "legacy_identity_binary" field.</summary>
  public const int LegacyIdentityBinaryFieldNumber = 10;
  private global::CMsgSteamNetworkingIdentityLegacyBinary legacyIdentityBinary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamNetworkingIdentityLegacyBinary LegacyIdentityBinary {
    get { return legacyIdentityBinary_; }
    set {
      legacyIdentityBinary_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamSockets_UDP_ConnectOK);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamSockets_UDP_ConnectOK other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientConnectionId != other.ClientConnectionId) return false;
    if (ServerConnectionId != other.ServerConnectionId) return false;
    if (YourTimestamp != other.YourTimestamp) return false;
    if (DelayTimeUsec != other.DelayTimeUsec) return false;
    if (!object.Equals(Crypt, other.Crypt)) return false;
    if (!object.Equals(Cert, other.Cert)) return false;
    if (IdentityString != other.IdentityString) return false;
    if (LegacyServerSteamId != other.LegacyServerSteamId) return false;
    if (!object.Equals(LegacyIdentityBinary, other.LegacyIdentityBinary)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasClientConnectionId) hash ^= ClientConnectionId.GetHashCode();
    if (HasServerConnectionId) hash ^= ServerConnectionId.GetHashCode();
    if (HasYourTimestamp) hash ^= YourTimestamp.GetHashCode();
    if (HasDelayTimeUsec) hash ^= DelayTimeUsec.GetHashCode();
    if (crypt_ != null) hash ^= Crypt.GetHashCode();
    if (cert_ != null) hash ^= Cert.GetHashCode();
    if (HasIdentityString) hash ^= IdentityString.GetHashCode();
    if (HasLegacyServerSteamId) hash ^= LegacyServerSteamId.GetHashCode();
    if (legacyIdentityBinary_ != null) hash ^= LegacyIdentityBinary.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasClientConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ClientConnectionId);
    }
    if (HasLegacyServerSteamId) {
      output.WriteRawTag(17);
      output.WriteFixed64(LegacyServerSteamId);
    }
    if (HasYourTimestamp) {
      output.WriteRawTag(25);
      output.WriteFixed64(YourTimestamp);
    }
    if (HasDelayTimeUsec) {
      output.WriteRawTag(32);
      output.WriteUInt32(DelayTimeUsec);
    }
    if (HasServerConnectionId) {
      output.WriteRawTag(45);
      output.WriteFixed32(ServerConnectionId);
    }
    if (crypt_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Crypt);
    }
    if (cert_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Cert);
    }
    if (legacyIdentityBinary_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(90);
      output.WriteString(IdentityString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasClientConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ClientConnectionId);
    }
    if (HasLegacyServerSteamId) {
      output.WriteRawTag(17);
      output.WriteFixed64(LegacyServerSteamId);
    }
    if (HasYourTimestamp) {
      output.WriteRawTag(25);
      output.WriteFixed64(YourTimestamp);
    }
    if (HasDelayTimeUsec) {
      output.WriteRawTag(32);
      output.WriteUInt32(DelayTimeUsec);
    }
    if (HasServerConnectionId) {
      output.WriteRawTag(45);
      output.WriteFixed32(ServerConnectionId);
    }
    if (crypt_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Crypt);
    }
    if (cert_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Cert);
    }
    if (legacyIdentityBinary_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(LegacyIdentityBinary);
    }
    if (HasIdentityString) {
      output.WriteRawTag(90);
      output.WriteString(IdentityString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasClientConnectionId) {
      size += 1 + 4;
    }
    if (HasServerConnectionId) {
      size += 1 + 4;
    }
    if (HasYourTimestamp) {
      size += 1 + 8;
    }
    if (HasDelayTimeUsec) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DelayTimeUsec);
    }
    if (crypt_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Crypt);
    }
    if (cert_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cert);
    }
    if (HasIdentityString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IdentityString);
    }
    if (HasLegacyServerSteamId) {
      size += 1 + 8;
    }
    if (legacyIdentityBinary_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LegacyIdentityBinary);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamSockets_UDP_ConnectOK other) {
    if (other == null) {
      return;
    }
    if (other.HasClientConnectionId) {
      ClientConnectionId = other.ClientConnectionId;
    }
    if (other.HasServerConnectionId) {
      ServerConnectionId = other.ServerConnectionId;
    }
    if (other.HasYourTimestamp) {
      YourTimestamp = other.YourTimestamp;
    }
    if (other.HasDelayTimeUsec) {
      DelayTimeUsec = other.DelayTimeUsec;
    }
    if (other.crypt_ != null) {
      if (crypt_ == null) {
        Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
      }
      Crypt.MergeFrom(other.Crypt);
    }
    if (other.cert_ != null) {
      if (cert_ == null) {
        Cert = new global::CMsgSteamDatagramCertificateSigned();
      }
      Cert.MergeFrom(other.Cert);
    }
    if (other.HasIdentityString) {
      IdentityString = other.IdentityString;
    }
    if (other.HasLegacyServerSteamId) {
      LegacyServerSteamId = other.LegacyServerSteamId;
    }
    if (other.legacyIdentityBinary_ != null) {
      if (legacyIdentityBinary_ == null) {
        LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
      }
      LegacyIdentityBinary.MergeFrom(other.LegacyIdentityBinary);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          ClientConnectionId = input.ReadFixed32();
          break;
        }
        case 17: {
          LegacyServerSteamId = input.ReadFixed64();
          break;
        }
        case 25: {
          YourTimestamp = input.ReadFixed64();
          break;
        }
        case 32: {
          DelayTimeUsec = input.ReadUInt32();
          break;
        }
        case 45: {
          ServerConnectionId = input.ReadFixed32();
          break;
        }
        case 58: {
          if (crypt_ == null) {
            Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
          }
          input.ReadMessage(Crypt);
          break;
        }
        case 66: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          input.ReadMessage(Cert);
          break;
        }
        case 82: {
          if (legacyIdentityBinary_ == null) {
            LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
          }
          input.ReadMessage(LegacyIdentityBinary);
          break;
        }
        case 90: {
          IdentityString = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          ClientConnectionId = input.ReadFixed32();
          break;
        }
        case 17: {
          LegacyServerSteamId = input.ReadFixed64();
          break;
        }
        case 25: {
          YourTimestamp = input.ReadFixed64();
          break;
        }
        case 32: {
          DelayTimeUsec = input.ReadUInt32();
          break;
        }
        case 45: {
          ServerConnectionId = input.ReadFixed32();
          break;
        }
        case 58: {
          if (crypt_ == null) {
            Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
          }
          input.ReadMessage(Crypt);
          break;
        }
        case 66: {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          input.ReadMessage(Cert);
          break;
        }
        case 82: {
          if (legacyIdentityBinary_ == null) {
            LegacyIdentityBinary = new global::CMsgSteamNetworkingIdentityLegacyBinary();
          }
          input.ReadMessage(LegacyIdentityBinary);
          break;
        }
        case 90: {
          IdentityString = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamSockets_UDP_ConnectionClosed : pb::IMessage<CMsgSteamSockets_UDP_ConnectionClosed>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamSockets_UDP_ConnectionClosed> _parser = new pb::MessageParser<CMsgSteamSockets_UDP_ConnectionClosed>(() => new CMsgSteamSockets_UDP_ConnectionClosed());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamSockets_UDP_ConnectionClosed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesUdpReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectionClosed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectionClosed(CMsgSteamSockets_UDP_ConnectionClosed other) : this() {
    _hasBits0 = other._hasBits0;
    toConnectionId_ = other.toConnectionId_;
    fromConnectionId_ = other.fromConnectionId_;
    debug_ = other.debug_;
    reasonCode_ = other.reasonCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_ConnectionClosed Clone() {
    return new CMsgSteamSockets_UDP_ConnectionClosed(this);
  }

  /// <summary>Field number for the "to_connection_id" field.</summary>
  public const int ToConnectionIdFieldNumber = 4;
  private readonly static uint ToConnectionIdDefaultValue = 0;

  private uint toConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ToConnectionId {
    get { if ((_hasBits0 & 2) != 0) { return toConnectionId_; } else { return ToConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      toConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "to_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToConnectionId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "to_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToConnectionId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "from_connection_id" field.</summary>
  public const int FromConnectionIdFieldNumber = 5;
  private readonly static uint FromConnectionIdDefaultValue = 0;

  private uint fromConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FromConnectionId {
    get { if ((_hasBits0 & 4) != 0) { return fromConnectionId_; } else { return FromConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      fromConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "from_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFromConnectionId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "from_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFromConnectionId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "debug" field.</summary>
  public const int DebugFieldNumber = 2;
  private readonly static string DebugDefaultValue = "";

  private string debug_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Debug {
    get { return debug_ ?? DebugDefaultValue; }
    set {
      debug_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "debug" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDebug {
    get { return debug_ != null; }
  }
  /// <summary>Clears the value of the "debug" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDebug() {
    debug_ = null;
  }

  /// <summary>Field number for the "reason_code" field.</summary>
  public const int ReasonCodeFieldNumber = 3;
  private readonly static uint ReasonCodeDefaultValue = 0;

  private uint reasonCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ReasonCode {
    get { if ((_hasBits0 & 1) != 0) { return reasonCode_; } else { return ReasonCodeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      reasonCode_ = value;
    }
  }
  /// <summary>Gets whether the "reason_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReasonCode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "reason_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReasonCode() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamSockets_UDP_ConnectionClosed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamSockets_UDP_ConnectionClosed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ToConnectionId != other.ToConnectionId) return false;
    if (FromConnectionId != other.FromConnectionId) return false;
    if (Debug != other.Debug) return false;
    if (ReasonCode != other.ReasonCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasToConnectionId) hash ^= ToConnectionId.GetHashCode();
    if (HasFromConnectionId) hash ^= FromConnectionId.GetHashCode();
    if (HasDebug) hash ^= Debug.GetHashCode();
    if (HasReasonCode) hash ^= ReasonCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDebug) {
      output.WriteRawTag(18);
      output.WriteString(Debug);
    }
    if (HasReasonCode) {
      output.WriteRawTag(24);
      output.WriteUInt32(ReasonCode);
    }
    if (HasToConnectionId) {
      output.WriteRawTag(37);
      output.WriteFixed32(ToConnectionId);
    }
    if (HasFromConnectionId) {
      output.WriteRawTag(45);
      output.WriteFixed32(FromConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDebug) {
      output.WriteRawTag(18);
      output.WriteString(Debug);
    }
    if (HasReasonCode) {
      output.WriteRawTag(24);
      output.WriteUInt32(ReasonCode);
    }
    if (HasToConnectionId) {
      output.WriteRawTag(37);
      output.WriteFixed32(ToConnectionId);
    }
    if (HasFromConnectionId) {
      output.WriteRawTag(45);
      output.WriteFixed32(FromConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasToConnectionId) {
      size += 1 + 4;
    }
    if (HasFromConnectionId) {
      size += 1 + 4;
    }
    if (HasDebug) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Debug);
    }
    if (HasReasonCode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReasonCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamSockets_UDP_ConnectionClosed other) {
    if (other == null) {
      return;
    }
    if (other.HasToConnectionId) {
      ToConnectionId = other.ToConnectionId;
    }
    if (other.HasFromConnectionId) {
      FromConnectionId = other.FromConnectionId;
    }
    if (other.HasDebug) {
      Debug = other.Debug;
    }
    if (other.HasReasonCode) {
      ReasonCode = other.ReasonCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Debug = input.ReadString();
          break;
        }
        case 24: {
          ReasonCode = input.ReadUInt32();
          break;
        }
        case 37: {
          ToConnectionId = input.ReadFixed32();
          break;
        }
        case 45: {
          FromConnectionId = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 18: {
          Debug = input.ReadString();
          break;
        }
        case 24: {
          ReasonCode = input.ReadUInt32();
          break;
        }
        case 37: {
          ToConnectionId = input.ReadFixed32();
          break;
        }
        case 45: {
          FromConnectionId = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamSockets_UDP_NoConnection : pb::IMessage<CMsgSteamSockets_UDP_NoConnection>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamSockets_UDP_NoConnection> _parser = new pb::MessageParser<CMsgSteamSockets_UDP_NoConnection>(() => new CMsgSteamSockets_UDP_NoConnection());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamSockets_UDP_NoConnection> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesUdpReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_NoConnection() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_NoConnection(CMsgSteamSockets_UDP_NoConnection other) : this() {
    _hasBits0 = other._hasBits0;
    fromConnectionId_ = other.fromConnectionId_;
    toConnectionId_ = other.toConnectionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_NoConnection Clone() {
    return new CMsgSteamSockets_UDP_NoConnection(this);
  }

  /// <summary>Field number for the "from_connection_id" field.</summary>
  public const int FromConnectionIdFieldNumber = 2;
  private readonly static uint FromConnectionIdDefaultValue = 0;

  private uint fromConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FromConnectionId {
    get { if ((_hasBits0 & 1) != 0) { return fromConnectionId_; } else { return FromConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      fromConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "from_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFromConnectionId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "from_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFromConnectionId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "to_connection_id" field.</summary>
  public const int ToConnectionIdFieldNumber = 3;
  private readonly static uint ToConnectionIdDefaultValue = 0;

  private uint toConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ToConnectionId {
    get { if ((_hasBits0 & 2) != 0) { return toConnectionId_; } else { return ToConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      toConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "to_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToConnectionId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "to_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToConnectionId() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamSockets_UDP_NoConnection);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamSockets_UDP_NoConnection other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FromConnectionId != other.FromConnectionId) return false;
    if (ToConnectionId != other.ToConnectionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFromConnectionId) hash ^= FromConnectionId.GetHashCode();
    if (HasToConnectionId) hash ^= ToConnectionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFromConnectionId) {
      output.WriteRawTag(21);
      output.WriteFixed32(FromConnectionId);
    }
    if (HasToConnectionId) {
      output.WriteRawTag(29);
      output.WriteFixed32(ToConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFromConnectionId) {
      output.WriteRawTag(21);
      output.WriteFixed32(FromConnectionId);
    }
    if (HasToConnectionId) {
      output.WriteRawTag(29);
      output.WriteFixed32(ToConnectionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFromConnectionId) {
      size += 1 + 4;
    }
    if (HasToConnectionId) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamSockets_UDP_NoConnection other) {
    if (other == null) {
      return;
    }
    if (other.HasFromConnectionId) {
      FromConnectionId = other.FromConnectionId;
    }
    if (other.HasToConnectionId) {
      ToConnectionId = other.ToConnectionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 21: {
          FromConnectionId = input.ReadFixed32();
          break;
        }
        case 29: {
          ToConnectionId = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 21: {
          FromConnectionId = input.ReadFixed32();
          break;
        }
        case 29: {
          ToConnectionId = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamSockets_UDP_Stats : pb::IMessage<CMsgSteamSockets_UDP_Stats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamSockets_UDP_Stats> _parser = new pb::MessageParser<CMsgSteamSockets_UDP_Stats>(() => new CMsgSteamSockets_UDP_Stats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamSockets_UDP_Stats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesUdpReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_Stats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_Stats(CMsgSteamSockets_UDP_Stats other) : this() {
    _hasBits0 = other._hasBits0;
    stats_ = other.stats_ != null ? other.stats_.Clone() : null;
    flags_ = other.flags_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamSockets_UDP_Stats Clone() {
    return new CMsgSteamSockets_UDP_Stats(this);
  }

  /// <summary>Field number for the "stats" field.</summary>
  public const int StatsFieldNumber = 1;
  private global::CMsgSteamDatagramConnectionQuality stats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramConnectionQuality Stats {
    get { return stats_; }
    set {
      stats_ = value;
    }
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 3;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 1) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 1;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamSockets_UDP_Stats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamSockets_UDP_Stats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Stats, other.Stats)) return false;
    if (Flags != other.Flags) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (stats_ != null) hash ^= Stats.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (stats_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Stats);
    }
    if (HasFlags) {
      output.WriteRawTag(24);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (stats_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Stats);
    }
    if (HasFlags) {
      output.WriteRawTag(24);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (stats_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamSockets_UDP_Stats other) {
    if (other == null) {
      return;
    }
    if (other.stats_ != null) {
      if (stats_ == null) {
        Stats = new global::CMsgSteamDatagramConnectionQuality();
      }
      Stats.MergeFrom(other.Stats);
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (stats_ == null) {
            Stats = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(Stats);
          break;
        }
        case 24: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (stats_ == null) {
            Stats = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(Stats);
          break;
        }
        case 24: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgSteamSockets_UDP_Stats message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum Flags {
      [pbr::OriginalName("ACK_REQUEST_E2E")] AckRequestE2E = 2,
      [pbr::OriginalName("ACK_REQUEST_IMMEDIATE")] AckRequestImmediate = 4,
      [pbr::OriginalName("NOT_PRIMARY_TRANSPORT_E2E")] NotPrimaryTransportE2E = 16,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code

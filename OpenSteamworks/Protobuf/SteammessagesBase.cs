// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_base.proto</summary>
public static partial class SteammessagesBaseReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_base.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesBaseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhzdGVhbW1lc3NhZ2VzX2Jhc2UucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9k",
          "ZXNjcmlwdG9yLnByb3RvIjEKDUNNc2dJUEFkZHJlc3MSDAoCdjQYASABKAdI",
          "ABIMCgJ2NhgCIAEoDEgAQgQKAmlwIlIKE0NNc2dJUEFkZHJlc3NCdWNrZXQS",
          "KwoTb3JpZ2luYWxfaXBfYWRkcmVzcxgBIAEoCzIOLkNNc2dJUEFkZHJlc3MS",
          "DgoGYnVja2V0GAIgASgGIk8KG0NNc2dHQ1JvdXRpbmdQcm90b0J1ZkhlYWRl",
          "chIWCg5kc3RfZ2NpZF9xdWV1ZRgBIAEoBBIYChBkc3RfZ2NfZGlyX2luZGV4",
          "GAIgASgNIo4IChJDTXNnUHJvdG9CdWZIZWFkZXISDwoHc3RlYW1pZBgBIAEo",
          "BhIYChBjbGllbnRfc2Vzc2lvbmlkGAIgASgFEhUKDXJvdXRpbmdfYXBwaWQY",
          "AyABKA0SKgoMam9iaWRfc291cmNlGAogASgGOhQxODQ0Njc0NDA3MzcwOTU1",
          "MTYxNRIqCgxqb2JpZF90YXJnZXQYCyABKAY6FDE4NDQ2NzQ0MDczNzA5NTUx",
          "NjE1EhcKD3RhcmdldF9qb2JfbmFtZRgMIAEoCRIPCgdzZXFfbnVtGBggASgF",
          "EhIKB2VyZXN1bHQYDSABKAU6ATISFQoNZXJyb3JfbWVzc2FnZRgOIAEoCRIa",
          "ChJhdXRoX2FjY291bnRfZmxhZ3MYECABKA0SFAoMdG9rZW5fc291cmNlGBYg",
          "ASgNEhsKE2FkbWluX3Nwb29maW5nX3VzZXIYFyABKAgSGgoPdHJhbnNwb3J0",
          "X2Vycm9yGBEgASgFOgExEicKCW1lc3NhZ2VpZBgSIAEoBDoUMTg0NDY3NDQw",
          "NzM3MDk1NTE2MTUSGgoScHVibGlzaGVyX2dyb3VwX2lkGBMgASgNEg0KBXN5",
          "c2lkGBQgASgNEhEKCXRyYWNlX3RhZxgVIAEoBBIVCg13ZWJhcGlfa2V5X2lk",
          "GBkgASgNEh8KF2lzX2Zyb21fZXh0ZXJuYWxfc291cmNlGBogASgIEhgKEGZv",
          "cndhcmRfdG9fc3lzaWQYGyADKA0SEAoIY21fc3lzaWQYHCABKA0SGAoNbGF1",
          "bmNoZXJfdHlwZRgfIAEoDToBMBIQCgVyZWFsbRggIAEoDToBMBIWCgp0aW1l",
          "b3V0X21zGCEgASgFOgItMRIUCgxkZWJ1Z19zb3VyY2UYIiABKAkSIQoZZGVi",
          "dWdfc291cmNlX3N0cmluZ19pbmRleBgjIAEoDRIQCgh0b2tlbl9pZBgkIAEo",
          "BBIwCgpyb3V0aW5nX2djGCUgASgLMhwuQ01zZ0dDUm91dGluZ1Byb3RvQnVm",
          "SGVhZGVyEmEKE3Nlc3Npb25fZGlzcG9zaXRpb24YJiABKA4yJy5DTXNnUHJv",
          "dG9CdWZIZWFkZXIuRVNlc3Npb25EaXNwb3NpdGlvbjoba19FU2Vzc2lvbkRp",
          "c3Bvc2l0aW9uTm9ybWFsEhAKCHdnX3Rva2VuGCcgASgJEhYKDndlYnVpX2F1",
          "dGhfa2V5GCggASgJEgwKAmlwGA8gASgNSAASDwoFaXBfdjYYHSABKAxIACJb",
          "ChNFU2Vzc2lvbkRpc3Bvc2l0aW9uEh8KG2tfRVNlc3Npb25EaXNwb3NpdGlv",
          "bk5vcm1hbBAAEiMKH2tfRVNlc3Npb25EaXNwb3NpdGlvbkRpc2Nvbm5lY3QQ",
          "AUIJCgdpcF9hZGRyIjgKCUNNc2dNdWx0aRIVCg1zaXplX3VuemlwcGVkGAEg",
          "ASgNEhQKDG1lc3NhZ2VfYm9keRgCIAEoDCIrChNDTXNnUHJvdG9idWZXcmFw",
          "cGVkEhQKDG1lc3NhZ2VfYm9keRgBIAEoDCK7AQoOQ01zZ0F1dGhUaWNrZXQS",
          "DgoGZXN0YXRlGAEgASgNEhIKB2VyZXN1bHQYAiABKA06ATISDwoHc3RlYW1p",
          "ZBgDIAEoBhIOCgZnYW1laWQYBCABKAYSFAoMaF9zdGVhbV9waXBlGAUgASgN",
          "EhIKCnRpY2tldF9jcmMYBiABKA0SDgoGdGlja2V0GAcgASgMEhUKDXNlcnZl",
          "cl9zZWNyZXQYCCABKAwSEwoLdGlja2V0X3R5cGUYCSABKA0i6wIKFENDRERC",
          "QXBwRGV0YWlsQ29tbW9uEg0KBWFwcGlkGAEgASgNEgwKBG5hbWUYAiABKAkS",
          "DAoEaWNvbhgDIAEoCRIMCgR0b29sGAYgASgIEgwKBGRlbW8YByABKAgSDQoF",
          "bWVkaWEYCCABKAgSHwoXY29tbXVuaXR5X3Zpc2libGVfc3RhdHMYCSABKAgS",
          "FQoNZnJpZW5kbHlfbmFtZRgKIAEoCRITCgtwcm9wYWdhdGlvbhgLIAEoCRIZ",
          "ChFoYXNfYWR1bHRfY29udGVudBgMIAEoCBIhChlpc192aXNpYmxlX2luX3N0",
          "ZWFtX2NoaW5hGA0gASgIEhAKCGFwcF90eXBlGA4gASgNEh0KFWhhc19hZHVs",
          "dF9jb250ZW50X3NleBgPIAEoCBIiChpoYXNfYWR1bHRfY29udGVudF92aW9s",
          "ZW5jZRgQIAEoCBIdChVjb250ZW50X2Rlc2NyaXB0b3JpZHMYESADKA0iswMK",
          "DUNNc2dBcHBSaWdodHMSEQoJZWRpdF9pbmZvGAEgASgIEg8KB3B1Ymxpc2gY",
          "AiABKAgSFwoPdmlld19lcnJvcl9kYXRhGAMgASgIEhAKCGRvd25sb2FkGAQg",
          "ASgIEhUKDXVwbG9hZF9jZGtleXMYBSABKAgSFwoPZ2VuZXJhdGVfY2RrZXlz",
          "GAYgASgIEhcKD3ZpZXdfZmluYW5jaWFscxgHIAEoCBISCgptYW5hZ2VfY2Vn",
          "GAggASgIEhYKDm1hbmFnZV9zaWduaW5nGAkgASgIEhUKDW1hbmFnZV9jZGtl",
          "eXMYCiABKAgSFgoOZWRpdF9tYXJrZXRpbmcYCyABKAgSFwoPZWNvbm9teV9z",
          "dXBwb3J0GAwgASgIEiIKGmVjb25vbXlfc3VwcG9ydF9zdXBlcnZpc29yGA0g",
          "ASgIEhYKDm1hbmFnZV9wcmljaW5nGA4gASgIEhYKDmJyb2FkY2FzdF9saXZl",
          "GA8gASgIEh4KFnZpZXdfbWFya2V0aW5nX3RyYWZmaWMYECABKAgSIgoaZWRp",
          "dF9zdG9yZV9kaXNwbGF5X2NvbnRlbnQYESABKAgi8QIKE0NDdXJhdG9yUHJl",
          "ZmVyZW5jZXMSGwoTc3VwcG9ydGVkX2xhbmd1YWdlcxgBIAEoDRIYChBwbGF0",
          "Zm9ybV93aW5kb3dzGAIgASgIEhQKDHBsYXRmb3JtX21hYxgDIAEoCBIWCg5w",
          "bGF0Zm9ybV9saW51eBgEIAEoCBISCgp2cl9jb250ZW50GAUgASgIEh4KFmFk",
          "dWx0X2NvbnRlbnRfdmlvbGVuY2UYBiABKAgSGQoRYWR1bHRfY29udGVudF9z",
          "ZXgYByABKAgSGQoRdGltZXN0YW1wX3VwZGF0ZWQYCCABKA0SFgoOdGFnaWRz",
          "X2N1cmF0ZWQYCSADKA0SFwoPdGFnaWRzX2ZpbHRlcmVkGAogAygNEhUKDXdl",
          "YnNpdGVfdGl0bGUYCyABKAkSEwoLd2Vic2l0ZV91cmwYDCABKAkSFgoOZGlz",
          "Y3Vzc2lvbl91cmwYDSABKAkSFgoOc2hvd19icm9hZGNhc3QYDiABKAgiQAoS",
          "Q0xvY2FsaXphdGlvblRva2VuEhAKCGxhbmd1YWdlGAEgASgNEhgKEGxvY2Fs",
          "aXplZF9zdHJpbmcYAiABKAki7AEKF0NDbGFuRXZlbnRVc2VyTmV3c1R1cGxl",
          "Eg4KBmNsYW5pZBgBIAEoDRIRCglldmVudF9naWQYAiABKAYSGAoQYW5ub3Vu",
          "Y2VtZW50X2dpZBgDIAEoBhITCgtydGltZV9zdGFydBgEIAEoDRIRCglydGlt",
          "ZV9lbmQYBSABKA0SFgoOcHJpb3JpdHlfc2NvcmUYBiABKA0SDAoEdHlwZRgH",
          "IAEoDRIYChBjbGFtcF9yYW5nZV9zbG90GAggASgNEg0KBWFwcGlkGAkgASgN",
          "Eh0KFXJ0aW1lMzJfbGFzdF9tb2RpZmllZBgKIAEoDSKAAQoWQ0NsYW5NYXRj",
          "aEV2ZW50QnlSYW5nZRIUCgxydGltZV9iZWZvcmUYASABKA0SEwoLcnRpbWVf",
          "YWZ0ZXIYAiABKA0SEQoJcXVhbGlmaWVkGAMgASgNEigKBmV2ZW50cxgEIAMo",
          "CzIYLkNDbGFuRXZlbnRVc2VyTmV3c1R1cGxlIpsDCh9DQ29tbXVuaXR5X0Ns",
          "YW5Bbm5vdW5jZW1lbnRJbmZvEgsKA2dpZBgBIAEoBBIOCgZjbGFuaWQYAiAB",
          "KAQSEAoIcG9zdGVyaWQYAyABKAQSEAoIaGVhZGxpbmUYBCABKAkSEAoIcG9z",
          "dHRpbWUYBSABKA0SEgoKdXBkYXRldGltZRgGIAEoDRIMCgRib2R5GAcgASgJ",
          "EhQKDGNvbW1lbnRjb3VudBgIIAEoBRIMCgR0YWdzGAkgAygJEhAKCGxhbmd1",
          "YWdlGAogASgFEg4KBmhpZGRlbhgLIAEoCBIWCg5mb3J1bV90b3BpY19pZBgM",
          "IAEoBhIRCglldmVudF9naWQYDSABKAYSEwoLdm90ZXVwY291bnQYDiABKAUS",
          "FQoNdm90ZWRvd25jb3VudBgPIAEoBRJWChBiYW5fY2hlY2tfcmVzdWx0GBAg",
          "ASgOMhcuRUJhbkNvbnRlbnRDaGVja1Jlc3VsdDoja19FQmFuQ29udGVudENo",
          "ZWNrUmVzdWx0X05vdFNjYW5uZWQSDgoGYmFubmVkGBEgASgIIqYGCg5DQ2xh",
          "bkV2ZW50RGF0YRILCgNnaWQYASABKAYSFAoMY2xhbl9zdGVhbWlkGAIgASgG",
          "EhIKCmV2ZW50X25hbWUYAyABKAkSOwoKZXZlbnRfdHlwZRgEIAEoDjIULkVQ",
          "cm90b0NsYW5FdmVudFR5cGU6EWtfRUNsYW5PdGhlckV2ZW50Eg0KBWFwcGlk",
          "GAUgASgNEhYKDnNlcnZlcl9hZGRyZXNzGAYgASgJEhcKD3NlcnZlcl9wYXNz",
          "d29yZBgHIAEoCRIaChJydGltZTMyX3N0YXJ0X3RpbWUYCCABKA0SGAoQcnRp",
          "bWUzMl9lbmRfdGltZRgJIAEoDRIVCg1jb21tZW50X2NvdW50GAogASgFEhcK",
          "D2NyZWF0b3Jfc3RlYW1pZBgLIAEoBhIbChNsYXN0X3VwZGF0ZV9zdGVhbWlk",
          "GAwgASgGEhMKC2V2ZW50X25vdGVzGA0gASgJEhAKCGpzb25kYXRhGA4gASgJ",
          "EjsKEWFubm91bmNlbWVudF9ib2R5GA8gASgLMiAuQ0NvbW11bml0eV9DbGFu",
          "QW5ub3VuY2VtZW50SW5mbxIRCglwdWJsaXNoZWQYECABKAgSDgoGaGlkZGVu",
          "GBEgASgIEiAKGHJ0aW1lMzJfdmlzaWJpbGl0eV9zdGFydBgSIAEoDRIeChZy",
          "dGltZTMyX3Zpc2liaWxpdHlfZW5kGBMgASgNEh0KFWJyb2FkY2FzdGVyX2Fj",
          "Y291bnRpZBgUIAEoDRIWCg5mb2xsb3dlcl9jb3VudBgVIAEoDRIUCgxpZ25v",
          "cmVfY291bnQYFiABKA0SFgoOZm9ydW1fdG9waWNfaWQYFyABKAYSHQoVcnRp",
          "bWUzMl9sYXN0X21vZGlmaWVkGBggASgNEhUKDW5ld3NfcG9zdF9naWQYGSAB",
          "KAYSGgoScnRpbWVfbW9kX3Jldmlld2VkGBogASgNEhoKEmZlYXR1cmVkX2Fw",
          "cF90YWdpZBgbIAEoDRIZChFyZWZlcmVuY2VkX2FwcGlkcxgcIAMoDRIQCghi",
          "dWlsZF9pZBgdIAEoDRIUCgxidWlsZF9icmFuY2gYHiABKAkixwEKEENCaWxs",
          "aW5nX0FkZHJlc3MSEgoKZmlyc3RfbmFtZRgBIAEoCRIRCglsYXN0X25hbWUY",
          "AiABKAkSEAoIYWRkcmVzczEYAyABKAkSEAoIYWRkcmVzczIYBCABKAkSDAoE",
          "Y2l0eRgFIAEoCRIQCgh1c19zdGF0ZRgGIAEoCRIUCgxjb3VudHJ5X2NvZGUY",
          "ByABKAkSEAoIcG9zdGNvZGUYCCABKAkSEQoJemlwX3BsdXM0GAkgASgFEg0K",
          "BXBob25lGAogASgJItsBChlDUGFja2FnZVJlc2VydmF0aW9uU3RhdHVzEhEK",
          "CXBhY2thZ2VpZBgBIAEoDRIZChFyZXNlcnZhdGlvbl9zdGF0ZRgCIAEoBRIW",
          "Cg5xdWV1ZV9wb3NpdGlvbhgDIAEoBRIYChB0b3RhbF9xdWV1ZV9zaXplGAQg",
          "ASgFEiAKGHJlc2VydmF0aW9uX2NvdW50cnlfY29kZRgFIAEoCRIPCgdleHBp",
          "cmVkGAYgASgIEhQKDHRpbWVfZXhwaXJlcxgHIAEoDRIVCg10aW1lX3Jlc2Vy",
          "dmVkGAggASgNIi8KEENNc2dLZXlWYWx1ZVBhaXISDAoEbmFtZRgBIAEoCRIN",
          "CgV2YWx1ZRgCIAEoCSIzCg9DTXNnS2V5VmFsdWVTZXQSIAoFcGFpcnMYASAD",
          "KAsyES5DTXNnS2V5VmFsdWVQYWlyIssBCiBVc2VyQ29udGVudERlc2NyaXB0",
          "b3JQcmVmZXJlbmNlcxJbCh5jb250ZW50X2Rlc2NyaXB0b3JzX3RvX2V4Y2x1",
          "ZGUYASADKAsyMy5Vc2VyQ29udGVudERlc2NyaXB0b3JQcmVmZXJlbmNlcy5D",
          "b250ZW50RGVzY3JpcHRvchpKChFDb250ZW50RGVzY3JpcHRvchIcChRjb250",
          "ZW50X2Rlc2NyaXB0b3JpZBgBIAEoDRIXCg90aW1lc3RhbXBfYWRkZWQYAiAB",
          "KA0q2AIKFkVCYW5Db250ZW50Q2hlY2tSZXN1bHQSJwoja19FQmFuQ29udGVu",
          "dENoZWNrUmVzdWx0X05vdFNjYW5uZWQQABIiCh5rX0VCYW5Db250ZW50Q2hl",
          "Y2tSZXN1bHRfUmVzZXQQARIqCiZrX0VCYW5Db250ZW50Q2hlY2tSZXN1bHRf",
          "TmVlZHNDaGVja2luZxACEikKJWtfRUJhbkNvbnRlbnRDaGVja1Jlc3VsdF9W",
          "ZXJ5VW5saWtlbHkQBRIlCiFrX0VCYW5Db250ZW50Q2hlY2tSZXN1bHRfVW5s",
          "aWtlbHkQHhIlCiFrX0VCYW5Db250ZW50Q2hlY2tSZXN1bHRfUG9zc2libGUQ",
          "MhIjCh9rX0VCYW5Db250ZW50Q2hlY2tSZXN1bHRfTGlrZWx5EEsSJwoja19F",
          "QmFuQ29udGVudENoZWNrUmVzdWx0X1ZlcnlMaWtlbHkQZCrrBwoTRVByb3Rv",
          "Q2xhbkV2ZW50VHlwZRIVChFrX0VDbGFuT3RoZXJFdmVudBABEhQKEGtfRUNs",
          "YW5HYW1lRXZlbnQQAhIVChFrX0VDbGFuUGFydHlFdmVudBADEhcKE2tfRUNs",
          "YW5NZWV0aW5nRXZlbnQQBBIcChhrX0VDbGFuU3BlY2lhbENhdXNlRXZlbnQQ",
          "BRIcChhrX0VDbGFuTXVzaWNBbmRBcnRzRXZlbnQQBhIWChJrX0VDbGFuU3Bv",
          "cnRzRXZlbnQQBxIUChBrX0VDbGFuVHJpcEV2ZW50EAgSFAoQa19FQ2xhbkNo",
          "YXRFdmVudBAJEhsKF2tfRUNsYW5HYW1lUmVsZWFzZUV2ZW50EAoSGQoVa19F",
          "Q2xhbkJyb2FkY2FzdEV2ZW50EAsSGwoXa19FQ2xhblNtYWxsVXBkYXRlRXZl",
          "bnQQDBImCiJrX0VDbGFuUHJlQW5ub3VuY2VNYWpvclVwZGF0ZUV2ZW50EA0S",
          "GwoXa19FQ2xhbk1ham9yVXBkYXRlRXZlbnQQDhIaChZrX0VDbGFuRExDUmVs",
          "ZWFzZUV2ZW50EA8SHQoZa19FQ2xhbkZ1dHVyZVJlbGVhc2VFdmVudBAQEiYK",
          "ImtfRUNsYW5FU3BvcnRUb3VybmFtZW50U3RyZWFtRXZlbnQQERIZChVrX0VD",
          "bGFuRGV2U3RyZWFtRXZlbnQQEhIcChhrX0VDbGFuRmFtb3VzU3RyZWFtRXZl",
          "bnQQExIZChVrX0VDbGFuR2FtZVNhbGVzRXZlbnQQFBIdChlrX0VDbGFuR2Ft",
          "ZUl0ZW1TYWxlc0V2ZW50EBUSHQoZa19FQ2xhbkluR2FtZUJvbnVzWFBFdmVu",
          "dBAWEhoKFmtfRUNsYW5JbkdhbWVMb290RXZlbnQQFxIbChdrX0VDbGFuSW5H",
          "YW1lUGVya3NFdmVudBAYEh8KG2tfRUNsYW5JbkdhbWVDaGFsbGVuZ2VFdmVu",
          "dBAZEh0KGWtfRUNsYW5JbkdhbWVDb250ZXN0RXZlbnQQGhITCg9rX0VDbGFu",
          "SVJMRXZlbnQQGxIUChBrX0VDbGFuTmV3c0V2ZW50EBwSGwoXa19FQ2xhbkJl",
          "dGFSZWxlYXNlRXZlbnQQHRIkCiBrX0VDbGFuSW5HYW1lQ29udGVudFJlbGVh",
          "c2VFdmVudBAeEhQKEGtfRUNsYW5GcmVlVHJpYWwQHxIYChRrX0VDbGFuU2Vh",
          "c29uUmVsZWFzZRAgEhcKE2tfRUNsYW5TZWFzb25VcGRhdGUQIRIZChVrX0VD",
          "bGFuQ3Jvc3Nwb3N0RXZlbnQQIhIdChlrX0VDbGFuSW5HYW1lRXZlbnRHZW5l",
          "cmFsECMqgQEKHFBhcnRuZXJFdmVudE5vdGlmaWNhdGlvblR5cGUSEQoNa19F",
          "RXZlbnRTdGFydBAAEhoKFmtfRUV2ZW50QnJvYWRjYXN0U3RhcnQQARIWChJr",
          "X0VFdmVudE1hdGNoU3RhcnQQAhIaChZrX0VFdmVudFBhcnRuZXJNYXhUeXBl",
          "EAM6QQoSbXNncG9vbF9zb2Z0X2xpbWl0Eh8uZ29vZ2xlLnByb3RvYnVmLk1l",
          "c3NhZ2VPcHRpb25zGNCGAyABKAU6AjMyOkIKEm1zZ3Bvb2xfaGFyZF9saW1p",
          "dBIfLmdvb2dsZS5wcm90b2J1Zi5NZXNzYWdlT3B0aW9ucxjRhgMgASgFOgMz",
          "ODQ6QwoUZm9yY2VfcGhwX2dlbmVyYXRpb24SHC5nb29nbGUucHJvdG9idWYu",
          "RmlsZU9wdGlvbnMY0IYDIAEoCDoFZmFsc2U6SAoYcGhwX291dHB1dF9hbHdh",
          "eXNfbnVtYmVyEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxjkhgMg",
          "ASgIOgVmYWxzZTpKChphbGxvd19maWVsZF9uYW1lZF9zdGVhbV9pZBIdLmdv",
          "b2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMY6IYDIAEoCDoFZmFsc2VCCUgB",
          "gAEBgLUYAQ=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EBanContentCheckResult), typeof(global::EProtoClanEventType), typeof(global::PartnerEventNotificationType), }, new pb::Extension[] { SteammessagesBaseExtensions.MsgpoolSoftLimit, SteammessagesBaseExtensions.MsgpoolHardLimit, SteammessagesBaseExtensions.ForcePhpGeneration, SteammessagesBaseExtensions.PhpOutputAlwaysNumber, SteammessagesBaseExtensions.AllowFieldNamedSteamId }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgIPAddress), global::CMsgIPAddress.Parser, new[]{ "V4", "V6" }, new[]{ "Ip" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgIPAddressBucket), global::CMsgIPAddressBucket.Parser, new[]{ "OriginalIpAddress", "Bucket" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGCRoutingProtoBufHeader), global::CMsgGCRoutingProtoBufHeader.Parser, new[]{ "DstGcidQueue", "DstGcDirIndex" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgProtoBufHeader), global::CMsgProtoBufHeader.Parser, new[]{ "Steamid", "ClientSessionid", "RoutingAppid", "JobidSource", "JobidTarget", "TargetJobName", "SeqNum", "Eresult", "ErrorMessage", "AuthAccountFlags", "TokenSource", "AdminSpoofingUser", "TransportError", "Messageid", "PublisherGroupId", "Sysid", "TraceTag", "WebapiKeyId", "IsFromExternalSource", "ForwardToSysid", "CmSysid", "LauncherType", "Realm", "TimeoutMs", "DebugSource", "DebugSourceStringIndex", "TokenId", "RoutingGc", "SessionDisposition", "WgToken", "WebuiAuthKey", "Ip", "IpV6" }, new[]{ "IpAddr" }, new[]{ typeof(global::CMsgProtoBufHeader.Types.ESessionDisposition) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMulti), global::CMsgMulti.Parser, new[]{ "SizeUnzipped", "MessageBody" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgProtobufWrapped), global::CMsgProtobufWrapped.Parser, new[]{ "MessageBody" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAuthTicket), global::CMsgAuthTicket.Parser, new[]{ "Estate", "Eresult", "Steamid", "Gameid", "HSteamPipe", "TicketCrc", "Ticket", "ServerSecret", "TicketType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCDDBAppDetailCommon), global::CCDDBAppDetailCommon.Parser, new[]{ "Appid", "Name", "Icon", "Tool", "Demo", "Media", "CommunityVisibleStats", "FriendlyName", "Propagation", "HasAdultContent", "IsVisibleInSteamChina", "AppType", "HasAdultContentSex", "HasAdultContentViolence", "ContentDescriptorids" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAppRights), global::CMsgAppRights.Parser, new[]{ "EditInfo", "Publish", "ViewErrorData", "Download", "UploadCdkeys", "GenerateCdkeys", "ViewFinancials", "ManageCeg", "ManageSigning", "ManageCdkeys", "EditMarketing", "EconomySupport", "EconomySupportSupervisor", "ManagePricing", "BroadcastLive", "ViewMarketingTraffic", "EditStoreDisplayContent" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCuratorPreferences), global::CCuratorPreferences.Parser, new[]{ "SupportedLanguages", "PlatformWindows", "PlatformMac", "PlatformLinux", "VrContent", "AdultContentViolence", "AdultContentSex", "TimestampUpdated", "TagidsCurated", "TagidsFiltered", "WebsiteTitle", "WebsiteUrl", "DiscussionUrl", "ShowBroadcast" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CLocalizationToken), global::CLocalizationToken.Parser, new[]{ "Language", "LocalizedString" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CClanEventUserNewsTuple), global::CClanEventUserNewsTuple.Parser, new[]{ "Clanid", "EventGid", "AnnouncementGid", "RtimeStart", "RtimeEnd", "PriorityScore", "Type", "ClampRangeSlot", "Appid", "Rtime32LastModified" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CClanMatchEventByRange), global::CClanMatchEventByRange.Parser, new[]{ "RtimeBefore", "RtimeAfter", "Qualified", "Events" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCommunity_ClanAnnouncementInfo), global::CCommunity_ClanAnnouncementInfo.Parser, new[]{ "Gid", "Clanid", "Posterid", "Headline", "Posttime", "Updatetime", "Body", "Commentcount", "Tags", "Language", "Hidden", "ForumTopicId", "EventGid", "Voteupcount", "Votedowncount", "BanCheckResult", "Banned" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CClanEventData), global::CClanEventData.Parser, new[]{ "Gid", "ClanSteamid", "EventName", "EventType", "Appid", "ServerAddress", "ServerPassword", "Rtime32StartTime", "Rtime32EndTime", "CommentCount", "CreatorSteamid", "LastUpdateSteamid", "EventNotes", "Jsondata", "AnnouncementBody", "Published", "Hidden", "Rtime32VisibilityStart", "Rtime32VisibilityEnd", "BroadcasterAccountid", "FollowerCount", "IgnoreCount", "ForumTopicId", "Rtime32LastModified", "NewsPostGid", "RtimeModReviewed", "FeaturedAppTagid", "ReferencedAppids", "BuildId", "BuildBranch" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CBilling_Address), global::CBilling_Address.Parser, new[]{ "FirstName", "LastName", "Address1", "Address2", "City", "UsState", "CountryCode", "Postcode", "ZipPlus4", "Phone" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CPackageReservationStatus), global::CPackageReservationStatus.Parser, new[]{ "Packageid", "ReservationState", "QueuePosition", "TotalQueueSize", "ReservationCountryCode", "Expired", "TimeExpires", "TimeReserved" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgKeyValuePair), global::CMsgKeyValuePair.Parser, new[]{ "Name", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgKeyValueSet), global::CMsgKeyValueSet.Parser, new[]{ "Pairs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserContentDescriptorPreferences), global::UserContentDescriptorPreferences.Parser, new[]{ "ContentDescriptorsToExclude" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::UserContentDescriptorPreferences.Types.ContentDescriptor), global::UserContentDescriptorPreferences.Types.ContentDescriptor.Parser, new[]{ "ContentDescriptorid", "TimestampAdded" }, null, null, null, null)})
        }));
  }
  #endregion

}
/// <summary>Holder for extension identifiers generated from the top level of steammessages_base.proto</summary>
public static partial class SteammessagesBaseExtensions {
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int> MsgpoolSoftLimit =
    new pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int>(50000, pb::FieldCodec.ForInt32(400000, 32));
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int> MsgpoolHardLimit =
    new pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int>(50001, pb::FieldCodec.ForInt32(400008, 384));
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.FileOptions, bool> ForcePhpGeneration =
    new pb::Extension<global::Google.Protobuf.Reflection.FileOptions, bool>(50000, pb::FieldCodec.ForBool(400000, false));
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool> PhpOutputAlwaysNumber =
    new pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool>(50020, pb::FieldCodec.ForBool(400160, false));
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool> AllowFieldNamedSteamId =
    new pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool>(50024, pb::FieldCodec.ForBool(400192, false));
}

#region Enums
public enum EBanContentCheckResult {
  [pbr::OriginalName("k_EBanContentCheckResult_NotScanned")] KEbanContentCheckResultNotScanned = 0,
  [pbr::OriginalName("k_EBanContentCheckResult_Reset")] KEbanContentCheckResultReset = 1,
  [pbr::OriginalName("k_EBanContentCheckResult_NeedsChecking")] KEbanContentCheckResultNeedsChecking = 2,
  [pbr::OriginalName("k_EBanContentCheckResult_VeryUnlikely")] KEbanContentCheckResultVeryUnlikely = 5,
  [pbr::OriginalName("k_EBanContentCheckResult_Unlikely")] KEbanContentCheckResultUnlikely = 30,
  [pbr::OriginalName("k_EBanContentCheckResult_Possible")] KEbanContentCheckResultPossible = 50,
  [pbr::OriginalName("k_EBanContentCheckResult_Likely")] KEbanContentCheckResultLikely = 75,
  [pbr::OriginalName("k_EBanContentCheckResult_VeryLikely")] KEbanContentCheckResultVeryLikely = 100,
}

public enum EProtoClanEventType {
  [pbr::OriginalName("k_EClanOtherEvent")] KEclanOtherEvent = 1,
  [pbr::OriginalName("k_EClanGameEvent")] KEclanGameEvent = 2,
  [pbr::OriginalName("k_EClanPartyEvent")] KEclanPartyEvent = 3,
  [pbr::OriginalName("k_EClanMeetingEvent")] KEclanMeetingEvent = 4,
  [pbr::OriginalName("k_EClanSpecialCauseEvent")] KEclanSpecialCauseEvent = 5,
  [pbr::OriginalName("k_EClanMusicAndArtsEvent")] KEclanMusicAndArtsEvent = 6,
  [pbr::OriginalName("k_EClanSportsEvent")] KEclanSportsEvent = 7,
  [pbr::OriginalName("k_EClanTripEvent")] KEclanTripEvent = 8,
  [pbr::OriginalName("k_EClanChatEvent")] KEclanChatEvent = 9,
  [pbr::OriginalName("k_EClanGameReleaseEvent")] KEclanGameReleaseEvent = 10,
  [pbr::OriginalName("k_EClanBroadcastEvent")] KEclanBroadcastEvent = 11,
  [pbr::OriginalName("k_EClanSmallUpdateEvent")] KEclanSmallUpdateEvent = 12,
  [pbr::OriginalName("k_EClanPreAnnounceMajorUpdateEvent")] KEclanPreAnnounceMajorUpdateEvent = 13,
  [pbr::OriginalName("k_EClanMajorUpdateEvent")] KEclanMajorUpdateEvent = 14,
  [pbr::OriginalName("k_EClanDLCReleaseEvent")] KEclanDlcreleaseEvent = 15,
  [pbr::OriginalName("k_EClanFutureReleaseEvent")] KEclanFutureReleaseEvent = 16,
  [pbr::OriginalName("k_EClanESportTournamentStreamEvent")] KEclanEsportTournamentStreamEvent = 17,
  [pbr::OriginalName("k_EClanDevStreamEvent")] KEclanDevStreamEvent = 18,
  [pbr::OriginalName("k_EClanFamousStreamEvent")] KEclanFamousStreamEvent = 19,
  [pbr::OriginalName("k_EClanGameSalesEvent")] KEclanGameSalesEvent = 20,
  [pbr::OriginalName("k_EClanGameItemSalesEvent")] KEclanGameItemSalesEvent = 21,
  [pbr::OriginalName("k_EClanInGameBonusXPEvent")] KEclanInGameBonusXpevent = 22,
  [pbr::OriginalName("k_EClanInGameLootEvent")] KEclanInGameLootEvent = 23,
  [pbr::OriginalName("k_EClanInGamePerksEvent")] KEclanInGamePerksEvent = 24,
  [pbr::OriginalName("k_EClanInGameChallengeEvent")] KEclanInGameChallengeEvent = 25,
  [pbr::OriginalName("k_EClanInGameContestEvent")] KEclanInGameContestEvent = 26,
  [pbr::OriginalName("k_EClanIRLEvent")] KEclanIrlevent = 27,
  [pbr::OriginalName("k_EClanNewsEvent")] KEclanNewsEvent = 28,
  [pbr::OriginalName("k_EClanBetaReleaseEvent")] KEclanBetaReleaseEvent = 29,
  [pbr::OriginalName("k_EClanInGameContentReleaseEvent")] KEclanInGameContentReleaseEvent = 30,
  [pbr::OriginalName("k_EClanFreeTrial")] KEclanFreeTrial = 31,
  [pbr::OriginalName("k_EClanSeasonRelease")] KEclanSeasonRelease = 32,
  [pbr::OriginalName("k_EClanSeasonUpdate")] KEclanSeasonUpdate = 33,
  [pbr::OriginalName("k_EClanCrosspostEvent")] KEclanCrosspostEvent = 34,
  [pbr::OriginalName("k_EClanInGameEventGeneral")] KEclanInGameEventGeneral = 35,
}

public enum PartnerEventNotificationType {
  [pbr::OriginalName("k_EEventStart")] KEeventStart = 0,
  [pbr::OriginalName("k_EEventBroadcastStart")] KEeventBroadcastStart = 1,
  [pbr::OriginalName("k_EEventMatchStart")] KEeventMatchStart = 2,
  [pbr::OriginalName("k_EEventPartnerMaxType")] KEeventPartnerMaxType = 3,
}

#endregion

#region Messages
public sealed partial class CMsgIPAddress : pb::IMessage<CMsgIPAddress>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgIPAddress> _parser = new pb::MessageParser<CMsgIPAddress>(() => new CMsgIPAddress());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgIPAddress> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPAddress() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPAddress(CMsgIPAddress other) : this() {
    switch (other.IpCase) {
      case IpOneofCase.V4:
        V4 = other.V4;
        break;
      case IpOneofCase.V6:
        V6 = other.V6;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPAddress Clone() {
    return new CMsgIPAddress(this);
  }

  /// <summary>Field number for the "v4" field.</summary>
  public const int V4FieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint V4 {
    get { return HasV4 ? (uint) ip_ : 0; }
    set {
      ip_ = value;
      ipCase_ = IpOneofCase.V4;
    }
  }
  /// <summary>Gets whether the "v4" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasV4 {
    get { return ipCase_ == IpOneofCase.V4; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "v4" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearV4() {
    if (HasV4) {
      ClearIp();
    }
  }

  /// <summary>Field number for the "v6" field.</summary>
  public const int V6FieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString V6 {
    get { return HasV6 ? (pb::ByteString) ip_ : pb::ByteString.Empty; }
    set {
      ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      ipCase_ = IpOneofCase.V6;
    }
  }
  /// <summary>Gets whether the "v6" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasV6 {
    get { return ipCase_ == IpOneofCase.V6; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "v6" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearV6() {
    if (HasV6) {
      ClearIp();
    }
  }

  private object ip_;
  /// <summary>Enum of possible cases for the "ip" oneof.</summary>
  public enum IpOneofCase {
    None = 0,
    V4 = 1,
    V6 = 2,
  }
  private IpOneofCase ipCase_ = IpOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public IpOneofCase IpCase {
    get { return ipCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIp() {
    ipCase_ = IpOneofCase.None;
    ip_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgIPAddress);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgIPAddress other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (V4 != other.V4) return false;
    if (V6 != other.V6) return false;
    if (IpCase != other.IpCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasV4) hash ^= V4.GetHashCode();
    if (HasV6) hash ^= V6.GetHashCode();
    hash ^= (int) ipCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasV4) {
      output.WriteRawTag(13);
      output.WriteFixed32(V4);
    }
    if (HasV6) {
      output.WriteRawTag(18);
      output.WriteBytes(V6);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasV4) {
      output.WriteRawTag(13);
      output.WriteFixed32(V4);
    }
    if (HasV6) {
      output.WriteRawTag(18);
      output.WriteBytes(V6);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasV4) {
      size += 1 + 4;
    }
    if (HasV6) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(V6);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgIPAddress other) {
    if (other == null) {
      return;
    }
    switch (other.IpCase) {
      case IpOneofCase.V4:
        V4 = other.V4;
        break;
      case IpOneofCase.V6:
        V6 = other.V6;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          V4 = input.ReadFixed32();
          break;
        }
        case 18: {
          V6 = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          V4 = input.ReadFixed32();
          break;
        }
        case 18: {
          V6 = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgIPAddressBucket : pb::IMessage<CMsgIPAddressBucket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgIPAddressBucket> _parser = new pb::MessageParser<CMsgIPAddressBucket>(() => new CMsgIPAddressBucket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgIPAddressBucket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPAddressBucket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPAddressBucket(CMsgIPAddressBucket other) : this() {
    _hasBits0 = other._hasBits0;
    originalIpAddress_ = other.originalIpAddress_ != null ? other.originalIpAddress_.Clone() : null;
    bucket_ = other.bucket_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPAddressBucket Clone() {
    return new CMsgIPAddressBucket(this);
  }

  /// <summary>Field number for the "original_ip_address" field.</summary>
  public const int OriginalIpAddressFieldNumber = 1;
  private global::CMsgIPAddress originalIpAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgIPAddress OriginalIpAddress {
    get { return originalIpAddress_; }
    set {
      originalIpAddress_ = value;
    }
  }

  /// <summary>Field number for the "bucket" field.</summary>
  public const int BucketFieldNumber = 2;
  private readonly static ulong BucketDefaultValue = 0UL;

  private ulong bucket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Bucket {
    get { if ((_hasBits0 & 1) != 0) { return bucket_; } else { return BucketDefaultValue; } }
    set {
      _hasBits0 |= 1;
      bucket_ = value;
    }
  }
  /// <summary>Gets whether the "bucket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBucket {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "bucket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBucket() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgIPAddressBucket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgIPAddressBucket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(OriginalIpAddress, other.OriginalIpAddress)) return false;
    if (Bucket != other.Bucket) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (originalIpAddress_ != null) hash ^= OriginalIpAddress.GetHashCode();
    if (HasBucket) hash ^= Bucket.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (originalIpAddress_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(OriginalIpAddress);
    }
    if (HasBucket) {
      output.WriteRawTag(17);
      output.WriteFixed64(Bucket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (originalIpAddress_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(OriginalIpAddress);
    }
    if (HasBucket) {
      output.WriteRawTag(17);
      output.WriteFixed64(Bucket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (originalIpAddress_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalIpAddress);
    }
    if (HasBucket) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgIPAddressBucket other) {
    if (other == null) {
      return;
    }
    if (other.originalIpAddress_ != null) {
      if (originalIpAddress_ == null) {
        OriginalIpAddress = new global::CMsgIPAddress();
      }
      OriginalIpAddress.MergeFrom(other.OriginalIpAddress);
    }
    if (other.HasBucket) {
      Bucket = other.Bucket;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (originalIpAddress_ == null) {
            OriginalIpAddress = new global::CMsgIPAddress();
          }
          input.ReadMessage(OriginalIpAddress);
          break;
        }
        case 17: {
          Bucket = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (originalIpAddress_ == null) {
            OriginalIpAddress = new global::CMsgIPAddress();
          }
          input.ReadMessage(OriginalIpAddress);
          break;
        }
        case 17: {
          Bucket = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGCRoutingProtoBufHeader : pb::IMessage<CMsgGCRoutingProtoBufHeader>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGCRoutingProtoBufHeader> _parser = new pb::MessageParser<CMsgGCRoutingProtoBufHeader>(() => new CMsgGCRoutingProtoBufHeader());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGCRoutingProtoBufHeader> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCRoutingProtoBufHeader() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCRoutingProtoBufHeader(CMsgGCRoutingProtoBufHeader other) : this() {
    _hasBits0 = other._hasBits0;
    dstGcidQueue_ = other.dstGcidQueue_;
    dstGcDirIndex_ = other.dstGcDirIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGCRoutingProtoBufHeader Clone() {
    return new CMsgGCRoutingProtoBufHeader(this);
  }

  /// <summary>Field number for the "dst_gcid_queue" field.</summary>
  public const int DstGcidQueueFieldNumber = 1;
  private readonly static ulong DstGcidQueueDefaultValue = 0UL;

  private ulong dstGcidQueue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong DstGcidQueue {
    get { if ((_hasBits0 & 1) != 0) { return dstGcidQueue_; } else { return DstGcidQueueDefaultValue; } }
    set {
      _hasBits0 |= 1;
      dstGcidQueue_ = value;
    }
  }
  /// <summary>Gets whether the "dst_gcid_queue" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDstGcidQueue {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "dst_gcid_queue" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDstGcidQueue() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "dst_gc_dir_index" field.</summary>
  public const int DstGcDirIndexFieldNumber = 2;
  private readonly static uint DstGcDirIndexDefaultValue = 0;

  private uint dstGcDirIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DstGcDirIndex {
    get { if ((_hasBits0 & 2) != 0) { return dstGcDirIndex_; } else { return DstGcDirIndexDefaultValue; } }
    set {
      _hasBits0 |= 2;
      dstGcDirIndex_ = value;
    }
  }
  /// <summary>Gets whether the "dst_gc_dir_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDstGcDirIndex {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "dst_gc_dir_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDstGcDirIndex() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGCRoutingProtoBufHeader);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGCRoutingProtoBufHeader other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DstGcidQueue != other.DstGcidQueue) return false;
    if (DstGcDirIndex != other.DstGcDirIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDstGcidQueue) hash ^= DstGcidQueue.GetHashCode();
    if (HasDstGcDirIndex) hash ^= DstGcDirIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDstGcidQueue) {
      output.WriteRawTag(8);
      output.WriteUInt64(DstGcidQueue);
    }
    if (HasDstGcDirIndex) {
      output.WriteRawTag(16);
      output.WriteUInt32(DstGcDirIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDstGcidQueue) {
      output.WriteRawTag(8);
      output.WriteUInt64(DstGcidQueue);
    }
    if (HasDstGcDirIndex) {
      output.WriteRawTag(16);
      output.WriteUInt32(DstGcDirIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDstGcidQueue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DstGcidQueue);
    }
    if (HasDstGcDirIndex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DstGcDirIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGCRoutingProtoBufHeader other) {
    if (other == null) {
      return;
    }
    if (other.HasDstGcidQueue) {
      DstGcidQueue = other.DstGcidQueue;
    }
    if (other.HasDstGcDirIndex) {
      DstGcDirIndex = other.DstGcDirIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DstGcidQueue = input.ReadUInt64();
          break;
        }
        case 16: {
          DstGcDirIndex = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          DstGcidQueue = input.ReadUInt64();
          break;
        }
        case 16: {
          DstGcDirIndex = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgProtoBufHeader : pb::IMessage<CMsgProtoBufHeader>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgProtoBufHeader> _parser = new pb::MessageParser<CMsgProtoBufHeader>(() => new CMsgProtoBufHeader());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgProtoBufHeader> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtoBufHeader() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtoBufHeader(CMsgProtoBufHeader other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    clientSessionid_ = other.clientSessionid_;
    routingAppid_ = other.routingAppid_;
    jobidSource_ = other.jobidSource_;
    jobidTarget_ = other.jobidTarget_;
    targetJobName_ = other.targetJobName_;
    seqNum_ = other.seqNum_;
    eresult_ = other.eresult_;
    errorMessage_ = other.errorMessage_;
    authAccountFlags_ = other.authAccountFlags_;
    tokenSource_ = other.tokenSource_;
    adminSpoofingUser_ = other.adminSpoofingUser_;
    transportError_ = other.transportError_;
    messageid_ = other.messageid_;
    publisherGroupId_ = other.publisherGroupId_;
    sysid_ = other.sysid_;
    traceTag_ = other.traceTag_;
    webapiKeyId_ = other.webapiKeyId_;
    isFromExternalSource_ = other.isFromExternalSource_;
    forwardToSysid_ = other.forwardToSysid_.Clone();
    cmSysid_ = other.cmSysid_;
    launcherType_ = other.launcherType_;
    realm_ = other.realm_;
    timeoutMs_ = other.timeoutMs_;
    debugSource_ = other.debugSource_;
    debugSourceStringIndex_ = other.debugSourceStringIndex_;
    tokenId_ = other.tokenId_;
    routingGc_ = other.routingGc_ != null ? other.routingGc_.Clone() : null;
    sessionDisposition_ = other.sessionDisposition_;
    wgToken_ = other.wgToken_;
    webuiAuthKey_ = other.webuiAuthKey_;
    switch (other.IpAddrCase) {
      case IpAddrOneofCase.Ip:
        Ip = other.Ip;
        break;
      case IpAddrOneofCase.IpV6:
        IpV6 = other.IpV6;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtoBufHeader Clone() {
    return new CMsgProtoBufHeader(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "client_sessionid" field.</summary>
  public const int ClientSessionidFieldNumber = 2;
  private readonly static int ClientSessionidDefaultValue = 0;

  private int clientSessionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ClientSessionid {
    get { if ((_hasBits0 & 2) != 0) { return clientSessionid_; } else { return ClientSessionidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clientSessionid_ = value;
    }
  }
  /// <summary>Gets whether the "client_sessionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientSessionid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "client_sessionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientSessionid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "routing_appid" field.</summary>
  public const int RoutingAppidFieldNumber = 3;
  private readonly static uint RoutingAppidDefaultValue = 0;

  private uint routingAppid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RoutingAppid {
    get { if ((_hasBits0 & 4) != 0) { return routingAppid_; } else { return RoutingAppidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      routingAppid_ = value;
    }
  }
  /// <summary>Gets whether the "routing_appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRoutingAppid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "routing_appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRoutingAppid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "jobid_source" field.</summary>
  public const int JobidSourceFieldNumber = 10;
  private readonly static ulong JobidSourceDefaultValue = 18446744073709551615UL;

  private ulong jobidSource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong JobidSource {
    get { if ((_hasBits0 & 8) != 0) { return jobidSource_; } else { return JobidSourceDefaultValue; } }
    set {
      _hasBits0 |= 8;
      jobidSource_ = value;
    }
  }
  /// <summary>Gets whether the "jobid_source" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJobidSource {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "jobid_source" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJobidSource() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "jobid_target" field.</summary>
  public const int JobidTargetFieldNumber = 11;
  private readonly static ulong JobidTargetDefaultValue = 18446744073709551615UL;

  private ulong jobidTarget_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong JobidTarget {
    get { if ((_hasBits0 & 16) != 0) { return jobidTarget_; } else { return JobidTargetDefaultValue; } }
    set {
      _hasBits0 |= 16;
      jobidTarget_ = value;
    }
  }
  /// <summary>Gets whether the "jobid_target" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJobidTarget {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "jobid_target" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJobidTarget() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "target_job_name" field.</summary>
  public const int TargetJobNameFieldNumber = 12;
  private readonly static string TargetJobNameDefaultValue = "";

  private string targetJobName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TargetJobName {
    get { return targetJobName_ ?? TargetJobNameDefaultValue; }
    set {
      targetJobName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "target_job_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTargetJobName {
    get { return targetJobName_ != null; }
  }
  /// <summary>Clears the value of the "target_job_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTargetJobName() {
    targetJobName_ = null;
  }

  /// <summary>Field number for the "seq_num" field.</summary>
  public const int SeqNumFieldNumber = 24;
  private readonly static int SeqNumDefaultValue = 0;

  private int seqNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SeqNum {
    get { if ((_hasBits0 & 16384) != 0) { return seqNum_; } else { return SeqNumDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      seqNum_ = value;
    }
  }
  /// <summary>Gets whether the "seq_num" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeqNum {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "seq_num" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeqNum() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 13;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 32) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 32;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "error_message" field.</summary>
  public const int ErrorMessageFieldNumber = 14;
  private readonly static string ErrorMessageDefaultValue = "";

  private string errorMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ErrorMessage {
    get { return errorMessage_ ?? ErrorMessageDefaultValue; }
    set {
      errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "error_message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasErrorMessage {
    get { return errorMessage_ != null; }
  }
  /// <summary>Clears the value of the "error_message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearErrorMessage() {
    errorMessage_ = null;
  }

  /// <summary>Field number for the "auth_account_flags" field.</summary>
  public const int AuthAccountFlagsFieldNumber = 16;
  private readonly static uint AuthAccountFlagsDefaultValue = 0;

  private uint authAccountFlags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AuthAccountFlags {
    get { if ((_hasBits0 & 64) != 0) { return authAccountFlags_; } else { return AuthAccountFlagsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      authAccountFlags_ = value;
    }
  }
  /// <summary>Gets whether the "auth_account_flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthAccountFlags {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "auth_account_flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthAccountFlags() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "token_source" field.</summary>
  public const int TokenSourceFieldNumber = 22;
  private readonly static uint TokenSourceDefaultValue = 0;

  private uint tokenSource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TokenSource {
    get { if ((_hasBits0 & 4096) != 0) { return tokenSource_; } else { return TokenSourceDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      tokenSource_ = value;
    }
  }
  /// <summary>Gets whether the "token_source" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokenSource {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "token_source" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokenSource() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "admin_spoofing_user" field.</summary>
  public const int AdminSpoofingUserFieldNumber = 23;
  private readonly static bool AdminSpoofingUserDefaultValue = false;

  private bool adminSpoofingUser_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AdminSpoofingUser {
    get { if ((_hasBits0 & 8192) != 0) { return adminSpoofingUser_; } else { return AdminSpoofingUserDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      adminSpoofingUser_ = value;
    }
  }
  /// <summary>Gets whether the "admin_spoofing_user" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdminSpoofingUser {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "admin_spoofing_user" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAdminSpoofingUser() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "transport_error" field.</summary>
  public const int TransportErrorFieldNumber = 17;
  private readonly static int TransportErrorDefaultValue = 1;

  private int transportError_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TransportError {
    get { if ((_hasBits0 & 128) != 0) { return transportError_; } else { return TransportErrorDefaultValue; } }
    set {
      _hasBits0 |= 128;
      transportError_ = value;
    }
  }
  /// <summary>Gets whether the "transport_error" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTransportError {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "transport_error" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTransportError() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "messageid" field.</summary>
  public const int MessageidFieldNumber = 18;
  private readonly static ulong MessageidDefaultValue = 18446744073709551615UL;

  private ulong messageid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Messageid {
    get { if ((_hasBits0 & 256) != 0) { return messageid_; } else { return MessageidDefaultValue; } }
    set {
      _hasBits0 |= 256;
      messageid_ = value;
    }
  }
  /// <summary>Gets whether the "messageid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessageid {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "messageid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessageid() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "publisher_group_id" field.</summary>
  public const int PublisherGroupIdFieldNumber = 19;
  private readonly static uint PublisherGroupIdDefaultValue = 0;

  private uint publisherGroupId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PublisherGroupId {
    get { if ((_hasBits0 & 512) != 0) { return publisherGroupId_; } else { return PublisherGroupIdDefaultValue; } }
    set {
      _hasBits0 |= 512;
      publisherGroupId_ = value;
    }
  }
  /// <summary>Gets whether the "publisher_group_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPublisherGroupId {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "publisher_group_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPublisherGroupId() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "sysid" field.</summary>
  public const int SysidFieldNumber = 20;
  private readonly static uint SysidDefaultValue = 0;

  private uint sysid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Sysid {
    get { if ((_hasBits0 & 1024) != 0) { return sysid_; } else { return SysidDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      sysid_ = value;
    }
  }
  /// <summary>Gets whether the "sysid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSysid {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "sysid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSysid() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "trace_tag" field.</summary>
  public const int TraceTagFieldNumber = 21;
  private readonly static ulong TraceTagDefaultValue = 0UL;

  private ulong traceTag_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TraceTag {
    get { if ((_hasBits0 & 2048) != 0) { return traceTag_; } else { return TraceTagDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      traceTag_ = value;
    }
  }
  /// <summary>Gets whether the "trace_tag" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTraceTag {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "trace_tag" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTraceTag() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "webapi_key_id" field.</summary>
  public const int WebapiKeyIdFieldNumber = 25;
  private readonly static uint WebapiKeyIdDefaultValue = 0;

  private uint webapiKeyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint WebapiKeyId {
    get { if ((_hasBits0 & 32768) != 0) { return webapiKeyId_; } else { return WebapiKeyIdDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      webapiKeyId_ = value;
    }
  }
  /// <summary>Gets whether the "webapi_key_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWebapiKeyId {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "webapi_key_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWebapiKeyId() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "is_from_external_source" field.</summary>
  public const int IsFromExternalSourceFieldNumber = 26;
  private readonly static bool IsFromExternalSourceDefaultValue = false;

  private bool isFromExternalSource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsFromExternalSource {
    get { if ((_hasBits0 & 65536) != 0) { return isFromExternalSource_; } else { return IsFromExternalSourceDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      isFromExternalSource_ = value;
    }
  }
  /// <summary>Gets whether the "is_from_external_source" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsFromExternalSource {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "is_from_external_source" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsFromExternalSource() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "forward_to_sysid" field.</summary>
  public const int ForwardToSysidFieldNumber = 27;
  private static readonly pb::FieldCodec<uint> _repeated_forwardToSysid_codec
      = pb::FieldCodec.ForUInt32(216);
  private readonly pbc::RepeatedField<uint> forwardToSysid_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> ForwardToSysid {
    get { return forwardToSysid_; }
  }

  /// <summary>Field number for the "cm_sysid" field.</summary>
  public const int CmSysidFieldNumber = 28;
  private readonly static uint CmSysidDefaultValue = 0;

  private uint cmSysid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CmSysid {
    get { if ((_hasBits0 & 131072) != 0) { return cmSysid_; } else { return CmSysidDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      cmSysid_ = value;
    }
  }
  /// <summary>Gets whether the "cm_sysid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCmSysid {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "cm_sysid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCmSysid() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "launcher_type" field.</summary>
  public const int LauncherTypeFieldNumber = 31;
  private readonly static uint LauncherTypeDefaultValue = 0;

  private uint launcherType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LauncherType {
    get { if ((_hasBits0 & 262144) != 0) { return launcherType_; } else { return LauncherTypeDefaultValue; } }
    set {
      _hasBits0 |= 262144;
      launcherType_ = value;
    }
  }
  /// <summary>Gets whether the "launcher_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLauncherType {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "launcher_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLauncherType() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "realm" field.</summary>
  public const int RealmFieldNumber = 32;
  private readonly static uint RealmDefaultValue = 0;

  private uint realm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Realm {
    get { if ((_hasBits0 & 524288) != 0) { return realm_; } else { return RealmDefaultValue; } }
    set {
      _hasBits0 |= 524288;
      realm_ = value;
    }
  }
  /// <summary>Gets whether the "realm" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRealm {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "realm" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRealm() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "timeout_ms" field.</summary>
  public const int TimeoutMsFieldNumber = 33;
  private readonly static int TimeoutMsDefaultValue = -1;

  private int timeoutMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TimeoutMs {
    get { if ((_hasBits0 & 1048576) != 0) { return timeoutMs_; } else { return TimeoutMsDefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      timeoutMs_ = value;
    }
  }
  /// <summary>Gets whether the "timeout_ms" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeoutMs {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "timeout_ms" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeoutMs() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "debug_source" field.</summary>
  public const int DebugSourceFieldNumber = 34;
  private readonly static string DebugSourceDefaultValue = "";

  private string debugSource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DebugSource {
    get { return debugSource_ ?? DebugSourceDefaultValue; }
    set {
      debugSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "debug_source" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDebugSource {
    get { return debugSource_ != null; }
  }
  /// <summary>Clears the value of the "debug_source" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDebugSource() {
    debugSource_ = null;
  }

  /// <summary>Field number for the "debug_source_string_index" field.</summary>
  public const int DebugSourceStringIndexFieldNumber = 35;
  private readonly static uint DebugSourceStringIndexDefaultValue = 0;

  private uint debugSourceStringIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DebugSourceStringIndex {
    get { if ((_hasBits0 & 2097152) != 0) { return debugSourceStringIndex_; } else { return DebugSourceStringIndexDefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      debugSourceStringIndex_ = value;
    }
  }
  /// <summary>Gets whether the "debug_source_string_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDebugSourceStringIndex {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "debug_source_string_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDebugSourceStringIndex() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "token_id" field.</summary>
  public const int TokenIdFieldNumber = 36;
  private readonly static ulong TokenIdDefaultValue = 0UL;

  private ulong tokenId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TokenId {
    get { if ((_hasBits0 & 4194304) != 0) { return tokenId_; } else { return TokenIdDefaultValue; } }
    set {
      _hasBits0 |= 4194304;
      tokenId_ = value;
    }
  }
  /// <summary>Gets whether the "token_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokenId {
    get { return (_hasBits0 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "token_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokenId() {
    _hasBits0 &= ~4194304;
  }

  /// <summary>Field number for the "routing_gc" field.</summary>
  public const int RoutingGcFieldNumber = 37;
  private global::CMsgGCRoutingProtoBufHeader routingGc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgGCRoutingProtoBufHeader RoutingGc {
    get { return routingGc_; }
    set {
      routingGc_ = value;
    }
  }

  /// <summary>Field number for the "session_disposition" field.</summary>
  public const int SessionDispositionFieldNumber = 38;
  private readonly static global::CMsgProtoBufHeader.Types.ESessionDisposition SessionDispositionDefaultValue = global::CMsgProtoBufHeader.Types.ESessionDisposition.KEsessionDispositionNormal;

  private global::CMsgProtoBufHeader.Types.ESessionDisposition sessionDisposition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgProtoBufHeader.Types.ESessionDisposition SessionDisposition {
    get { if ((_hasBits0 & 8388608) != 0) { return sessionDisposition_; } else { return SessionDispositionDefaultValue; } }
    set {
      _hasBits0 |= 8388608;
      sessionDisposition_ = value;
    }
  }
  /// <summary>Gets whether the "session_disposition" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSessionDisposition {
    get { return (_hasBits0 & 8388608) != 0; }
  }
  /// <summary>Clears the value of the "session_disposition" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSessionDisposition() {
    _hasBits0 &= ~8388608;
  }

  /// <summary>Field number for the "wg_token" field.</summary>
  public const int WgTokenFieldNumber = 39;
  private readonly static string WgTokenDefaultValue = "";

  private string wgToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WgToken {
    get { return wgToken_ ?? WgTokenDefaultValue; }
    set {
      wgToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "wg_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWgToken {
    get { return wgToken_ != null; }
  }
  /// <summary>Clears the value of the "wg_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWgToken() {
    wgToken_ = null;
  }

  /// <summary>Field number for the "webui_auth_key" field.</summary>
  public const int WebuiAuthKeyFieldNumber = 40;
  private readonly static string WebuiAuthKeyDefaultValue = "";

  private string webuiAuthKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WebuiAuthKey {
    get { return webuiAuthKey_ ?? WebuiAuthKeyDefaultValue; }
    set {
      webuiAuthKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "webui_auth_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWebuiAuthKey {
    get { return webuiAuthKey_ != null; }
  }
  /// <summary>Clears the value of the "webui_auth_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWebuiAuthKey() {
    webuiAuthKey_ = null;
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 15;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ip {
    get { return HasIp ? (uint) ipAddr_ : 0; }
    set {
      ipAddr_ = value;
      ipAddrCase_ = IpAddrOneofCase.Ip;
    }
  }
  /// <summary>Gets whether the "ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIp {
    get { return ipAddrCase_ == IpAddrOneofCase.Ip; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "ip" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIp() {
    if (HasIp) {
      ClearIpAddr();
    }
  }

  /// <summary>Field number for the "ip_v6" field.</summary>
  public const int IpV6FieldNumber = 29;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString IpV6 {
    get { return HasIpV6 ? (pb::ByteString) ipAddr_ : pb::ByteString.Empty; }
    set {
      ipAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      ipAddrCase_ = IpAddrOneofCase.IpV6;
    }
  }
  /// <summary>Gets whether the "ip_v6" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpV6 {
    get { return ipAddrCase_ == IpAddrOneofCase.IpV6; }
  }
  /// <summary> Clears the value of the oneof if it's currently set to "ip_v6" </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpV6() {
    if (HasIpV6) {
      ClearIpAddr();
    }
  }

  private object ipAddr_;
  /// <summary>Enum of possible cases for the "ip_addr" oneof.</summary>
  public enum IpAddrOneofCase {
    None = 0,
    Ip = 15,
    IpV6 = 29,
  }
  private IpAddrOneofCase ipAddrCase_ = IpAddrOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public IpAddrOneofCase IpAddrCase {
    get { return ipAddrCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpAddr() {
    ipAddrCase_ = IpAddrOneofCase.None;
    ipAddr_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgProtoBufHeader);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgProtoBufHeader other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (ClientSessionid != other.ClientSessionid) return false;
    if (RoutingAppid != other.RoutingAppid) return false;
    if (JobidSource != other.JobidSource) return false;
    if (JobidTarget != other.JobidTarget) return false;
    if (TargetJobName != other.TargetJobName) return false;
    if (SeqNum != other.SeqNum) return false;
    if (Eresult != other.Eresult) return false;
    if (ErrorMessage != other.ErrorMessage) return false;
    if (AuthAccountFlags != other.AuthAccountFlags) return false;
    if (TokenSource != other.TokenSource) return false;
    if (AdminSpoofingUser != other.AdminSpoofingUser) return false;
    if (TransportError != other.TransportError) return false;
    if (Messageid != other.Messageid) return false;
    if (PublisherGroupId != other.PublisherGroupId) return false;
    if (Sysid != other.Sysid) return false;
    if (TraceTag != other.TraceTag) return false;
    if (WebapiKeyId != other.WebapiKeyId) return false;
    if (IsFromExternalSource != other.IsFromExternalSource) return false;
    if(!forwardToSysid_.Equals(other.forwardToSysid_)) return false;
    if (CmSysid != other.CmSysid) return false;
    if (LauncherType != other.LauncherType) return false;
    if (Realm != other.Realm) return false;
    if (TimeoutMs != other.TimeoutMs) return false;
    if (DebugSource != other.DebugSource) return false;
    if (DebugSourceStringIndex != other.DebugSourceStringIndex) return false;
    if (TokenId != other.TokenId) return false;
    if (!object.Equals(RoutingGc, other.RoutingGc)) return false;
    if (SessionDisposition != other.SessionDisposition) return false;
    if (WgToken != other.WgToken) return false;
    if (WebuiAuthKey != other.WebuiAuthKey) return false;
    if (Ip != other.Ip) return false;
    if (IpV6 != other.IpV6) return false;
    if (IpAddrCase != other.IpAddrCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasClientSessionid) hash ^= ClientSessionid.GetHashCode();
    if (HasRoutingAppid) hash ^= RoutingAppid.GetHashCode();
    if (HasJobidSource) hash ^= JobidSource.GetHashCode();
    if (HasJobidTarget) hash ^= JobidTarget.GetHashCode();
    if (HasTargetJobName) hash ^= TargetJobName.GetHashCode();
    if (HasSeqNum) hash ^= SeqNum.GetHashCode();
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasErrorMessage) hash ^= ErrorMessage.GetHashCode();
    if (HasAuthAccountFlags) hash ^= AuthAccountFlags.GetHashCode();
    if (HasTokenSource) hash ^= TokenSource.GetHashCode();
    if (HasAdminSpoofingUser) hash ^= AdminSpoofingUser.GetHashCode();
    if (HasTransportError) hash ^= TransportError.GetHashCode();
    if (HasMessageid) hash ^= Messageid.GetHashCode();
    if (HasPublisherGroupId) hash ^= PublisherGroupId.GetHashCode();
    if (HasSysid) hash ^= Sysid.GetHashCode();
    if (HasTraceTag) hash ^= TraceTag.GetHashCode();
    if (HasWebapiKeyId) hash ^= WebapiKeyId.GetHashCode();
    if (HasIsFromExternalSource) hash ^= IsFromExternalSource.GetHashCode();
    hash ^= forwardToSysid_.GetHashCode();
    if (HasCmSysid) hash ^= CmSysid.GetHashCode();
    if (HasLauncherType) hash ^= LauncherType.GetHashCode();
    if (HasRealm) hash ^= Realm.GetHashCode();
    if (HasTimeoutMs) hash ^= TimeoutMs.GetHashCode();
    if (HasDebugSource) hash ^= DebugSource.GetHashCode();
    if (HasDebugSourceStringIndex) hash ^= DebugSourceStringIndex.GetHashCode();
    if (HasTokenId) hash ^= TokenId.GetHashCode();
    if (routingGc_ != null) hash ^= RoutingGc.GetHashCode();
    if (HasSessionDisposition) hash ^= SessionDisposition.GetHashCode();
    if (HasWgToken) hash ^= WgToken.GetHashCode();
    if (HasWebuiAuthKey) hash ^= WebuiAuthKey.GetHashCode();
    if (HasIp) hash ^= Ip.GetHashCode();
    if (HasIpV6) hash ^= IpV6.GetHashCode();
    hash ^= (int) ipAddrCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasClientSessionid) {
      output.WriteRawTag(16);
      output.WriteInt32(ClientSessionid);
    }
    if (HasRoutingAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(RoutingAppid);
    }
    if (HasJobidSource) {
      output.WriteRawTag(81);
      output.WriteFixed64(JobidSource);
    }
    if (HasJobidTarget) {
      output.WriteRawTag(89);
      output.WriteFixed64(JobidTarget);
    }
    if (HasTargetJobName) {
      output.WriteRawTag(98);
      output.WriteString(TargetJobName);
    }
    if (HasEresult) {
      output.WriteRawTag(104);
      output.WriteInt32(Eresult);
    }
    if (HasErrorMessage) {
      output.WriteRawTag(114);
      output.WriteString(ErrorMessage);
    }
    if (HasIp) {
      output.WriteRawTag(120);
      output.WriteUInt32(Ip);
    }
    if (HasAuthAccountFlags) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(AuthAccountFlags);
    }
    if (HasTransportError) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(TransportError);
    }
    if (HasMessageid) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(Messageid);
    }
    if (HasPublisherGroupId) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(PublisherGroupId);
    }
    if (HasSysid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(Sysid);
    }
    if (HasTraceTag) {
      output.WriteRawTag(168, 1);
      output.WriteUInt64(TraceTag);
    }
    if (HasTokenSource) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(TokenSource);
    }
    if (HasAdminSpoofingUser) {
      output.WriteRawTag(184, 1);
      output.WriteBool(AdminSpoofingUser);
    }
    if (HasSeqNum) {
      output.WriteRawTag(192, 1);
      output.WriteInt32(SeqNum);
    }
    if (HasWebapiKeyId) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(WebapiKeyId);
    }
    if (HasIsFromExternalSource) {
      output.WriteRawTag(208, 1);
      output.WriteBool(IsFromExternalSource);
    }
    forwardToSysid_.WriteTo(output, _repeated_forwardToSysid_codec);
    if (HasCmSysid) {
      output.WriteRawTag(224, 1);
      output.WriteUInt32(CmSysid);
    }
    if (HasIpV6) {
      output.WriteRawTag(234, 1);
      output.WriteBytes(IpV6);
    }
    if (HasLauncherType) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(LauncherType);
    }
    if (HasRealm) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(Realm);
    }
    if (HasTimeoutMs) {
      output.WriteRawTag(136, 2);
      output.WriteInt32(TimeoutMs);
    }
    if (HasDebugSource) {
      output.WriteRawTag(146, 2);
      output.WriteString(DebugSource);
    }
    if (HasDebugSourceStringIndex) {
      output.WriteRawTag(152, 2);
      output.WriteUInt32(DebugSourceStringIndex);
    }
    if (HasTokenId) {
      output.WriteRawTag(160, 2);
      output.WriteUInt64(TokenId);
    }
    if (routingGc_ != null) {
      output.WriteRawTag(170, 2);
      output.WriteMessage(RoutingGc);
    }
    if (HasSessionDisposition) {
      output.WriteRawTag(176, 2);
      output.WriteEnum((int) SessionDisposition);
    }
    if (HasWgToken) {
      output.WriteRawTag(186, 2);
      output.WriteString(WgToken);
    }
    if (HasWebuiAuthKey) {
      output.WriteRawTag(194, 2);
      output.WriteString(WebuiAuthKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasClientSessionid) {
      output.WriteRawTag(16);
      output.WriteInt32(ClientSessionid);
    }
    if (HasRoutingAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(RoutingAppid);
    }
    if (HasJobidSource) {
      output.WriteRawTag(81);
      output.WriteFixed64(JobidSource);
    }
    if (HasJobidTarget) {
      output.WriteRawTag(89);
      output.WriteFixed64(JobidTarget);
    }
    if (HasTargetJobName) {
      output.WriteRawTag(98);
      output.WriteString(TargetJobName);
    }
    if (HasEresult) {
      output.WriteRawTag(104);
      output.WriteInt32(Eresult);
    }
    if (HasErrorMessage) {
      output.WriteRawTag(114);
      output.WriteString(ErrorMessage);
    }
    if (HasIp) {
      output.WriteRawTag(120);
      output.WriteUInt32(Ip);
    }
    if (HasAuthAccountFlags) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(AuthAccountFlags);
    }
    if (HasTransportError) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(TransportError);
    }
    if (HasMessageid) {
      output.WriteRawTag(144, 1);
      output.WriteUInt64(Messageid);
    }
    if (HasPublisherGroupId) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(PublisherGroupId);
    }
    if (HasSysid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(Sysid);
    }
    if (HasTraceTag) {
      output.WriteRawTag(168, 1);
      output.WriteUInt64(TraceTag);
    }
    if (HasTokenSource) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(TokenSource);
    }
    if (HasAdminSpoofingUser) {
      output.WriteRawTag(184, 1);
      output.WriteBool(AdminSpoofingUser);
    }
    if (HasSeqNum) {
      output.WriteRawTag(192, 1);
      output.WriteInt32(SeqNum);
    }
    if (HasWebapiKeyId) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(WebapiKeyId);
    }
    if (HasIsFromExternalSource) {
      output.WriteRawTag(208, 1);
      output.WriteBool(IsFromExternalSource);
    }
    forwardToSysid_.WriteTo(ref output, _repeated_forwardToSysid_codec);
    if (HasCmSysid) {
      output.WriteRawTag(224, 1);
      output.WriteUInt32(CmSysid);
    }
    if (HasIpV6) {
      output.WriteRawTag(234, 1);
      output.WriteBytes(IpV6);
    }
    if (HasLauncherType) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(LauncherType);
    }
    if (HasRealm) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(Realm);
    }
    if (HasTimeoutMs) {
      output.WriteRawTag(136, 2);
      output.WriteInt32(TimeoutMs);
    }
    if (HasDebugSource) {
      output.WriteRawTag(146, 2);
      output.WriteString(DebugSource);
    }
    if (HasDebugSourceStringIndex) {
      output.WriteRawTag(152, 2);
      output.WriteUInt32(DebugSourceStringIndex);
    }
    if (HasTokenId) {
      output.WriteRawTag(160, 2);
      output.WriteUInt64(TokenId);
    }
    if (routingGc_ != null) {
      output.WriteRawTag(170, 2);
      output.WriteMessage(RoutingGc);
    }
    if (HasSessionDisposition) {
      output.WriteRawTag(176, 2);
      output.WriteEnum((int) SessionDisposition);
    }
    if (HasWgToken) {
      output.WriteRawTag(186, 2);
      output.WriteString(WgToken);
    }
    if (HasWebuiAuthKey) {
      output.WriteRawTag(194, 2);
      output.WriteString(WebuiAuthKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasClientSessionid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientSessionid);
    }
    if (HasRoutingAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoutingAppid);
    }
    if (HasJobidSource) {
      size += 1 + 8;
    }
    if (HasJobidTarget) {
      size += 1 + 8;
    }
    if (HasTargetJobName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetJobName);
    }
    if (HasSeqNum) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(SeqNum);
    }
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (HasErrorMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
    }
    if (HasAuthAccountFlags) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AuthAccountFlags);
    }
    if (HasTokenSource) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TokenSource);
    }
    if (HasAdminSpoofingUser) {
      size += 2 + 1;
    }
    if (HasTransportError) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(TransportError);
    }
    if (HasMessageid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Messageid);
    }
    if (HasPublisherGroupId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PublisherGroupId);
    }
    if (HasSysid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Sysid);
    }
    if (HasTraceTag) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TraceTag);
    }
    if (HasWebapiKeyId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WebapiKeyId);
    }
    if (HasIsFromExternalSource) {
      size += 2 + 1;
    }
    size += forwardToSysid_.CalculateSize(_repeated_forwardToSysid_codec);
    if (HasCmSysid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CmSysid);
    }
    if (HasLauncherType) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LauncherType);
    }
    if (HasRealm) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Realm);
    }
    if (HasTimeoutMs) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(TimeoutMs);
    }
    if (HasDebugSource) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(DebugSource);
    }
    if (HasDebugSourceStringIndex) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DebugSourceStringIndex);
    }
    if (HasTokenId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TokenId);
    }
    if (routingGc_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoutingGc);
    }
    if (HasSessionDisposition) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) SessionDisposition);
    }
    if (HasWgToken) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(WgToken);
    }
    if (HasWebuiAuthKey) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(WebuiAuthKey);
    }
    if (HasIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ip);
    }
    if (HasIpV6) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(IpV6);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgProtoBufHeader other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasClientSessionid) {
      ClientSessionid = other.ClientSessionid;
    }
    if (other.HasRoutingAppid) {
      RoutingAppid = other.RoutingAppid;
    }
    if (other.HasJobidSource) {
      JobidSource = other.JobidSource;
    }
    if (other.HasJobidTarget) {
      JobidTarget = other.JobidTarget;
    }
    if (other.HasTargetJobName) {
      TargetJobName = other.TargetJobName;
    }
    if (other.HasSeqNum) {
      SeqNum = other.SeqNum;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasErrorMessage) {
      ErrorMessage = other.ErrorMessage;
    }
    if (other.HasAuthAccountFlags) {
      AuthAccountFlags = other.AuthAccountFlags;
    }
    if (other.HasTokenSource) {
      TokenSource = other.TokenSource;
    }
    if (other.HasAdminSpoofingUser) {
      AdminSpoofingUser = other.AdminSpoofingUser;
    }
    if (other.HasTransportError) {
      TransportError = other.TransportError;
    }
    if (other.HasMessageid) {
      Messageid = other.Messageid;
    }
    if (other.HasPublisherGroupId) {
      PublisherGroupId = other.PublisherGroupId;
    }
    if (other.HasSysid) {
      Sysid = other.Sysid;
    }
    if (other.HasTraceTag) {
      TraceTag = other.TraceTag;
    }
    if (other.HasWebapiKeyId) {
      WebapiKeyId = other.WebapiKeyId;
    }
    if (other.HasIsFromExternalSource) {
      IsFromExternalSource = other.IsFromExternalSource;
    }
    forwardToSysid_.Add(other.forwardToSysid_);
    if (other.HasCmSysid) {
      CmSysid = other.CmSysid;
    }
    if (other.HasLauncherType) {
      LauncherType = other.LauncherType;
    }
    if (other.HasRealm) {
      Realm = other.Realm;
    }
    if (other.HasTimeoutMs) {
      TimeoutMs = other.TimeoutMs;
    }
    if (other.HasDebugSource) {
      DebugSource = other.DebugSource;
    }
    if (other.HasDebugSourceStringIndex) {
      DebugSourceStringIndex = other.DebugSourceStringIndex;
    }
    if (other.HasTokenId) {
      TokenId = other.TokenId;
    }
    if (other.routingGc_ != null) {
      if (routingGc_ == null) {
        RoutingGc = new global::CMsgGCRoutingProtoBufHeader();
      }
      RoutingGc.MergeFrom(other.RoutingGc);
    }
    if (other.HasSessionDisposition) {
      SessionDisposition = other.SessionDisposition;
    }
    if (other.HasWgToken) {
      WgToken = other.WgToken;
    }
    if (other.HasWebuiAuthKey) {
      WebuiAuthKey = other.WebuiAuthKey;
    }
    switch (other.IpAddrCase) {
      case IpAddrOneofCase.Ip:
        Ip = other.Ip;
        break;
      case IpAddrOneofCase.IpV6:
        IpV6 = other.IpV6;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          ClientSessionid = input.ReadInt32();
          break;
        }
        case 24: {
          RoutingAppid = input.ReadUInt32();
          break;
        }
        case 81: {
          JobidSource = input.ReadFixed64();
          break;
        }
        case 89: {
          JobidTarget = input.ReadFixed64();
          break;
        }
        case 98: {
          TargetJobName = input.ReadString();
          break;
        }
        case 104: {
          Eresult = input.ReadInt32();
          break;
        }
        case 114: {
          ErrorMessage = input.ReadString();
          break;
        }
        case 120: {
          Ip = input.ReadUInt32();
          break;
        }
        case 128: {
          AuthAccountFlags = input.ReadUInt32();
          break;
        }
        case 136: {
          TransportError = input.ReadInt32();
          break;
        }
        case 144: {
          Messageid = input.ReadUInt64();
          break;
        }
        case 152: {
          PublisherGroupId = input.ReadUInt32();
          break;
        }
        case 160: {
          Sysid = input.ReadUInt32();
          break;
        }
        case 168: {
          TraceTag = input.ReadUInt64();
          break;
        }
        case 176: {
          TokenSource = input.ReadUInt32();
          break;
        }
        case 184: {
          AdminSpoofingUser = input.ReadBool();
          break;
        }
        case 192: {
          SeqNum = input.ReadInt32();
          break;
        }
        case 200: {
          WebapiKeyId = input.ReadUInt32();
          break;
        }
        case 208: {
          IsFromExternalSource = input.ReadBool();
          break;
        }
        case 218:
        case 216: {
          forwardToSysid_.AddEntriesFrom(input, _repeated_forwardToSysid_codec);
          break;
        }
        case 224: {
          CmSysid = input.ReadUInt32();
          break;
        }
        case 234: {
          IpV6 = input.ReadBytes();
          break;
        }
        case 248: {
          LauncherType = input.ReadUInt32();
          break;
        }
        case 256: {
          Realm = input.ReadUInt32();
          break;
        }
        case 264: {
          TimeoutMs = input.ReadInt32();
          break;
        }
        case 274: {
          DebugSource = input.ReadString();
          break;
        }
        case 280: {
          DebugSourceStringIndex = input.ReadUInt32();
          break;
        }
        case 288: {
          TokenId = input.ReadUInt64();
          break;
        }
        case 298: {
          if (routingGc_ == null) {
            RoutingGc = new global::CMsgGCRoutingProtoBufHeader();
          }
          input.ReadMessage(RoutingGc);
          break;
        }
        case 304: {
          SessionDisposition = (global::CMsgProtoBufHeader.Types.ESessionDisposition) input.ReadEnum();
          break;
        }
        case 314: {
          WgToken = input.ReadString();
          break;
        }
        case 322: {
          WebuiAuthKey = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          ClientSessionid = input.ReadInt32();
          break;
        }
        case 24: {
          RoutingAppid = input.ReadUInt32();
          break;
        }
        case 81: {
          JobidSource = input.ReadFixed64();
          break;
        }
        case 89: {
          JobidTarget = input.ReadFixed64();
          break;
        }
        case 98: {
          TargetJobName = input.ReadString();
          break;
        }
        case 104: {
          Eresult = input.ReadInt32();
          break;
        }
        case 114: {
          ErrorMessage = input.ReadString();
          break;
        }
        case 120: {
          Ip = input.ReadUInt32();
          break;
        }
        case 128: {
          AuthAccountFlags = input.ReadUInt32();
          break;
        }
        case 136: {
          TransportError = input.ReadInt32();
          break;
        }
        case 144: {
          Messageid = input.ReadUInt64();
          break;
        }
        case 152: {
          PublisherGroupId = input.ReadUInt32();
          break;
        }
        case 160: {
          Sysid = input.ReadUInt32();
          break;
        }
        case 168: {
          TraceTag = input.ReadUInt64();
          break;
        }
        case 176: {
          TokenSource = input.ReadUInt32();
          break;
        }
        case 184: {
          AdminSpoofingUser = input.ReadBool();
          break;
        }
        case 192: {
          SeqNum = input.ReadInt32();
          break;
        }
        case 200: {
          WebapiKeyId = input.ReadUInt32();
          break;
        }
        case 208: {
          IsFromExternalSource = input.ReadBool();
          break;
        }
        case 218:
        case 216: {
          forwardToSysid_.AddEntriesFrom(ref input, _repeated_forwardToSysid_codec);
          break;
        }
        case 224: {
          CmSysid = input.ReadUInt32();
          break;
        }
        case 234: {
          IpV6 = input.ReadBytes();
          break;
        }
        case 248: {
          LauncherType = input.ReadUInt32();
          break;
        }
        case 256: {
          Realm = input.ReadUInt32();
          break;
        }
        case 264: {
          TimeoutMs = input.ReadInt32();
          break;
        }
        case 274: {
          DebugSource = input.ReadString();
          break;
        }
        case 280: {
          DebugSourceStringIndex = input.ReadUInt32();
          break;
        }
        case 288: {
          TokenId = input.ReadUInt64();
          break;
        }
        case 298: {
          if (routingGc_ == null) {
            RoutingGc = new global::CMsgGCRoutingProtoBufHeader();
          }
          input.ReadMessage(RoutingGc);
          break;
        }
        case 304: {
          SessionDisposition = (global::CMsgProtoBufHeader.Types.ESessionDisposition) input.ReadEnum();
          break;
        }
        case 314: {
          WgToken = input.ReadString();
          break;
        }
        case 322: {
          WebuiAuthKey = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgProtoBufHeader message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum ESessionDisposition {
      [pbr::OriginalName("k_ESessionDispositionNormal")] KEsessionDispositionNormal = 0,
      [pbr::OriginalName("k_ESessionDispositionDisconnect")] KEsessionDispositionDisconnect = 1,
    }

  }
  #endregion

}

public sealed partial class CMsgMulti : pb::IMessage<CMsgMulti>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgMulti> _parser = new pb::MessageParser<CMsgMulti>(() => new CMsgMulti());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgMulti> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMulti() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMulti(CMsgMulti other) : this() {
    _hasBits0 = other._hasBits0;
    sizeUnzipped_ = other.sizeUnzipped_;
    messageBody_ = other.messageBody_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMulti Clone() {
    return new CMsgMulti(this);
  }

  /// <summary>Field number for the "size_unzipped" field.</summary>
  public const int SizeUnzippedFieldNumber = 1;
  private readonly static uint SizeUnzippedDefaultValue = 0;

  private uint sizeUnzipped_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SizeUnzipped {
    get { if ((_hasBits0 & 1) != 0) { return sizeUnzipped_; } else { return SizeUnzippedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sizeUnzipped_ = value;
    }
  }
  /// <summary>Gets whether the "size_unzipped" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSizeUnzipped {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "size_unzipped" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSizeUnzipped() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "message_body" field.</summary>
  public const int MessageBodyFieldNumber = 2;
  private readonly static pb::ByteString MessageBodyDefaultValue = pb::ByteString.Empty;

  private pb::ByteString messageBody_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString MessageBody {
    get { return messageBody_ ?? MessageBodyDefaultValue; }
    set {
      messageBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "message_body" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessageBody {
    get { return messageBody_ != null; }
  }
  /// <summary>Clears the value of the "message_body" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessageBody() {
    messageBody_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgMulti);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgMulti other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SizeUnzipped != other.SizeUnzipped) return false;
    if (MessageBody != other.MessageBody) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSizeUnzipped) hash ^= SizeUnzipped.GetHashCode();
    if (HasMessageBody) hash ^= MessageBody.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSizeUnzipped) {
      output.WriteRawTag(8);
      output.WriteUInt32(SizeUnzipped);
    }
    if (HasMessageBody) {
      output.WriteRawTag(18);
      output.WriteBytes(MessageBody);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSizeUnzipped) {
      output.WriteRawTag(8);
      output.WriteUInt32(SizeUnzipped);
    }
    if (HasMessageBody) {
      output.WriteRawTag(18);
      output.WriteBytes(MessageBody);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSizeUnzipped) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SizeUnzipped);
    }
    if (HasMessageBody) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageBody);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgMulti other) {
    if (other == null) {
      return;
    }
    if (other.HasSizeUnzipped) {
      SizeUnzipped = other.SizeUnzipped;
    }
    if (other.HasMessageBody) {
      MessageBody = other.MessageBody;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SizeUnzipped = input.ReadUInt32();
          break;
        }
        case 18: {
          MessageBody = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SizeUnzipped = input.ReadUInt32();
          break;
        }
        case 18: {
          MessageBody = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgProtobufWrapped : pb::IMessage<CMsgProtobufWrapped>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgProtobufWrapped> _parser = new pb::MessageParser<CMsgProtobufWrapped>(() => new CMsgProtobufWrapped());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgProtobufWrapped> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtobufWrapped() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtobufWrapped(CMsgProtobufWrapped other) : this() {
    messageBody_ = other.messageBody_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtobufWrapped Clone() {
    return new CMsgProtobufWrapped(this);
  }

  /// <summary>Field number for the "message_body" field.</summary>
  public const int MessageBodyFieldNumber = 1;
  private readonly static pb::ByteString MessageBodyDefaultValue = pb::ByteString.Empty;

  private pb::ByteString messageBody_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString MessageBody {
    get { return messageBody_ ?? MessageBodyDefaultValue; }
    set {
      messageBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "message_body" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessageBody {
    get { return messageBody_ != null; }
  }
  /// <summary>Clears the value of the "message_body" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessageBody() {
    messageBody_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgProtobufWrapped);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgProtobufWrapped other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MessageBody != other.MessageBody) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMessageBody) hash ^= MessageBody.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMessageBody) {
      output.WriteRawTag(10);
      output.WriteBytes(MessageBody);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMessageBody) {
      output.WriteRawTag(10);
      output.WriteBytes(MessageBody);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMessageBody) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageBody);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgProtobufWrapped other) {
    if (other == null) {
      return;
    }
    if (other.HasMessageBody) {
      MessageBody = other.MessageBody;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          MessageBody = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          MessageBody = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgAuthTicket : pb::IMessage<CMsgAuthTicket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgAuthTicket> _parser = new pb::MessageParser<CMsgAuthTicket>(() => new CMsgAuthTicket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgAuthTicket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAuthTicket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAuthTicket(CMsgAuthTicket other) : this() {
    _hasBits0 = other._hasBits0;
    estate_ = other.estate_;
    eresult_ = other.eresult_;
    steamid_ = other.steamid_;
    gameid_ = other.gameid_;
    hSteamPipe_ = other.hSteamPipe_;
    ticketCrc_ = other.ticketCrc_;
    ticket_ = other.ticket_;
    serverSecret_ = other.serverSecret_;
    ticketType_ = other.ticketType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAuthTicket Clone() {
    return new CMsgAuthTicket(this);
  }

  /// <summary>Field number for the "estate" field.</summary>
  public const int EstateFieldNumber = 1;
  private readonly static uint EstateDefaultValue = 0;

  private uint estate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Estate {
    get { if ((_hasBits0 & 1) != 0) { return estate_; } else { return EstateDefaultValue; } }
    set {
      _hasBits0 |= 1;
      estate_ = value;
    }
  }
  /// <summary>Gets whether the "estate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEstate {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "estate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEstate() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 2;
  private readonly static uint EresultDefaultValue = 2;

  private uint eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Eresult {
    get { if ((_hasBits0 & 2) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 2;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 3;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "gameid" field.</summary>
  public const int GameidFieldNumber = 4;
  private readonly static ulong GameidDefaultValue = 0UL;

  private ulong gameid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Gameid {
    get { if ((_hasBits0 & 8) != 0) { return gameid_; } else { return GameidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      gameid_ = value;
    }
  }
  /// <summary>Gets whether the "gameid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "gameid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameid() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "h_steam_pipe" field.</summary>
  public const int HSteamPipeFieldNumber = 5;
  private readonly static uint HSteamPipeDefaultValue = 0;

  private uint hSteamPipe_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HSteamPipe {
    get { if ((_hasBits0 & 16) != 0) { return hSteamPipe_; } else { return HSteamPipeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      hSteamPipe_ = value;
    }
  }
  /// <summary>Gets whether the "h_steam_pipe" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHSteamPipe {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "h_steam_pipe" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHSteamPipe() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "ticket_crc" field.</summary>
  public const int TicketCrcFieldNumber = 6;
  private readonly static uint TicketCrcDefaultValue = 0;

  private uint ticketCrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TicketCrc {
    get { if ((_hasBits0 & 32) != 0) { return ticketCrc_; } else { return TicketCrcDefaultValue; } }
    set {
      _hasBits0 |= 32;
      ticketCrc_ = value;
    }
  }
  /// <summary>Gets whether the "ticket_crc" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicketCrc {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "ticket_crc" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicketCrc() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 7;
  private readonly static pb::ByteString TicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Ticket {
    get { return ticket_ ?? TicketDefaultValue; }
    set {
      ticket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicket {
    get { return ticket_ != null; }
  }
  /// <summary>Clears the value of the "ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicket() {
    ticket_ = null;
  }

  /// <summary>Field number for the "server_secret" field.</summary>
  public const int ServerSecretFieldNumber = 8;
  private readonly static pb::ByteString ServerSecretDefaultValue = pb::ByteString.Empty;

  private pb::ByteString serverSecret_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ServerSecret {
    get { return serverSecret_ ?? ServerSecretDefaultValue; }
    set {
      serverSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_secret" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerSecret {
    get { return serverSecret_ != null; }
  }
  /// <summary>Clears the value of the "server_secret" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerSecret() {
    serverSecret_ = null;
  }

  /// <summary>Field number for the "ticket_type" field.</summary>
  public const int TicketTypeFieldNumber = 9;
  private readonly static uint TicketTypeDefaultValue = 0;

  private uint ticketType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TicketType {
    get { if ((_hasBits0 & 64) != 0) { return ticketType_; } else { return TicketTypeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      ticketType_ = value;
    }
  }
  /// <summary>Gets whether the "ticket_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicketType {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "ticket_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicketType() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgAuthTicket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgAuthTicket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Estate != other.Estate) return false;
    if (Eresult != other.Eresult) return false;
    if (Steamid != other.Steamid) return false;
    if (Gameid != other.Gameid) return false;
    if (HSteamPipe != other.HSteamPipe) return false;
    if (TicketCrc != other.TicketCrc) return false;
    if (Ticket != other.Ticket) return false;
    if (ServerSecret != other.ServerSecret) return false;
    if (TicketType != other.TicketType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEstate) hash ^= Estate.GetHashCode();
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasGameid) hash ^= Gameid.GetHashCode();
    if (HasHSteamPipe) hash ^= HSteamPipe.GetHashCode();
    if (HasTicketCrc) hash ^= TicketCrc.GetHashCode();
    if (HasTicket) hash ^= Ticket.GetHashCode();
    if (HasServerSecret) hash ^= ServerSecret.GetHashCode();
    if (HasTicketType) hash ^= TicketType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEstate) {
      output.WriteRawTag(8);
      output.WriteUInt32(Estate);
    }
    if (HasEresult) {
      output.WriteRawTag(16);
      output.WriteUInt32(Eresult);
    }
    if (HasSteamid) {
      output.WriteRawTag(25);
      output.WriteFixed64(Steamid);
    }
    if (HasGameid) {
      output.WriteRawTag(33);
      output.WriteFixed64(Gameid);
    }
    if (HasHSteamPipe) {
      output.WriteRawTag(40);
      output.WriteUInt32(HSteamPipe);
    }
    if (HasTicketCrc) {
      output.WriteRawTag(48);
      output.WriteUInt32(TicketCrc);
    }
    if (HasTicket) {
      output.WriteRawTag(58);
      output.WriteBytes(Ticket);
    }
    if (HasServerSecret) {
      output.WriteRawTag(66);
      output.WriteBytes(ServerSecret);
    }
    if (HasTicketType) {
      output.WriteRawTag(72);
      output.WriteUInt32(TicketType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEstate) {
      output.WriteRawTag(8);
      output.WriteUInt32(Estate);
    }
    if (HasEresult) {
      output.WriteRawTag(16);
      output.WriteUInt32(Eresult);
    }
    if (HasSteamid) {
      output.WriteRawTag(25);
      output.WriteFixed64(Steamid);
    }
    if (HasGameid) {
      output.WriteRawTag(33);
      output.WriteFixed64(Gameid);
    }
    if (HasHSteamPipe) {
      output.WriteRawTag(40);
      output.WriteUInt32(HSteamPipe);
    }
    if (HasTicketCrc) {
      output.WriteRawTag(48);
      output.WriteUInt32(TicketCrc);
    }
    if (HasTicket) {
      output.WriteRawTag(58);
      output.WriteBytes(Ticket);
    }
    if (HasServerSecret) {
      output.WriteRawTag(66);
      output.WriteBytes(ServerSecret);
    }
    if (HasTicketType) {
      output.WriteRawTag(72);
      output.WriteUInt32(TicketType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEstate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Estate);
    }
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eresult);
    }
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasGameid) {
      size += 1 + 8;
    }
    if (HasHSteamPipe) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HSteamPipe);
    }
    if (HasTicketCrc) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TicketCrc);
    }
    if (HasTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ticket);
    }
    if (HasServerSecret) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerSecret);
    }
    if (HasTicketType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TicketType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgAuthTicket other) {
    if (other == null) {
      return;
    }
    if (other.HasEstate) {
      Estate = other.Estate;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasGameid) {
      Gameid = other.Gameid;
    }
    if (other.HasHSteamPipe) {
      HSteamPipe = other.HSteamPipe;
    }
    if (other.HasTicketCrc) {
      TicketCrc = other.TicketCrc;
    }
    if (other.HasTicket) {
      Ticket = other.Ticket;
    }
    if (other.HasServerSecret) {
      ServerSecret = other.ServerSecret;
    }
    if (other.HasTicketType) {
      TicketType = other.TicketType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Estate = input.ReadUInt32();
          break;
        }
        case 16: {
          Eresult = input.ReadUInt32();
          break;
        }
        case 25: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 33: {
          Gameid = input.ReadFixed64();
          break;
        }
        case 40: {
          HSteamPipe = input.ReadUInt32();
          break;
        }
        case 48: {
          TicketCrc = input.ReadUInt32();
          break;
        }
        case 58: {
          Ticket = input.ReadBytes();
          break;
        }
        case 66: {
          ServerSecret = input.ReadBytes();
          break;
        }
        case 72: {
          TicketType = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Estate = input.ReadUInt32();
          break;
        }
        case 16: {
          Eresult = input.ReadUInt32();
          break;
        }
        case 25: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 33: {
          Gameid = input.ReadFixed64();
          break;
        }
        case 40: {
          HSteamPipe = input.ReadUInt32();
          break;
        }
        case 48: {
          TicketCrc = input.ReadUInt32();
          break;
        }
        case 58: {
          Ticket = input.ReadBytes();
          break;
        }
        case 66: {
          ServerSecret = input.ReadBytes();
          break;
        }
        case 72: {
          TicketType = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CCDDBAppDetailCommon : pb::IMessage<CCDDBAppDetailCommon>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCDDBAppDetailCommon> _parser = new pb::MessageParser<CCDDBAppDetailCommon>(() => new CCDDBAppDetailCommon());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCDDBAppDetailCommon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCDDBAppDetailCommon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCDDBAppDetailCommon(CCDDBAppDetailCommon other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    name_ = other.name_;
    icon_ = other.icon_;
    tool_ = other.tool_;
    demo_ = other.demo_;
    media_ = other.media_;
    communityVisibleStats_ = other.communityVisibleStats_;
    friendlyName_ = other.friendlyName_;
    propagation_ = other.propagation_;
    hasAdultContent_ = other.hasAdultContent_;
    isVisibleInSteamChina_ = other.isVisibleInSteamChina_;
    appType_ = other.appType_;
    hasAdultContentSex_ = other.hasAdultContentSex_;
    hasAdultContentViolence_ = other.hasAdultContentViolence_;
    contentDescriptorids_ = other.contentDescriptorids_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCDDBAppDetailCommon Clone() {
    return new CCDDBAppDetailCommon(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "icon" field.</summary>
  public const int IconFieldNumber = 3;
  private readonly static string IconDefaultValue = "";

  private string icon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Icon {
    get { return icon_ ?? IconDefaultValue; }
    set {
      icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "icon" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIcon {
    get { return icon_ != null; }
  }
  /// <summary>Clears the value of the "icon" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIcon() {
    icon_ = null;
  }

  /// <summary>Field number for the "tool" field.</summary>
  public const int ToolFieldNumber = 6;
  private readonly static bool ToolDefaultValue = false;

  private bool tool_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Tool {
    get { if ((_hasBits0 & 2) != 0) { return tool_; } else { return ToolDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tool_ = value;
    }
  }
  /// <summary>Gets whether the "tool" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTool {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "tool" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTool() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "demo" field.</summary>
  public const int DemoFieldNumber = 7;
  private readonly static bool DemoDefaultValue = false;

  private bool demo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Demo {
    get { if ((_hasBits0 & 4) != 0) { return demo_; } else { return DemoDefaultValue; } }
    set {
      _hasBits0 |= 4;
      demo_ = value;
    }
  }
  /// <summary>Gets whether the "demo" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDemo {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "demo" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDemo() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "media" field.</summary>
  public const int MediaFieldNumber = 8;
  private readonly static bool MediaDefaultValue = false;

  private bool media_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Media {
    get { if ((_hasBits0 & 8) != 0) { return media_; } else { return MediaDefaultValue; } }
    set {
      _hasBits0 |= 8;
      media_ = value;
    }
  }
  /// <summary>Gets whether the "media" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMedia {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "media" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMedia() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "community_visible_stats" field.</summary>
  public const int CommunityVisibleStatsFieldNumber = 9;
  private readonly static bool CommunityVisibleStatsDefaultValue = false;

  private bool communityVisibleStats_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CommunityVisibleStats {
    get { if ((_hasBits0 & 16) != 0) { return communityVisibleStats_; } else { return CommunityVisibleStatsDefaultValue; } }
    set {
      _hasBits0 |= 16;
      communityVisibleStats_ = value;
    }
  }
  /// <summary>Gets whether the "community_visible_stats" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCommunityVisibleStats {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "community_visible_stats" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCommunityVisibleStats() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "friendly_name" field.</summary>
  public const int FriendlyNameFieldNumber = 10;
  private readonly static string FriendlyNameDefaultValue = "";

  private string friendlyName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FriendlyName {
    get { return friendlyName_ ?? FriendlyNameDefaultValue; }
    set {
      friendlyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "friendly_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFriendlyName {
    get { return friendlyName_ != null; }
  }
  /// <summary>Clears the value of the "friendly_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFriendlyName() {
    friendlyName_ = null;
  }

  /// <summary>Field number for the "propagation" field.</summary>
  public const int PropagationFieldNumber = 11;
  private readonly static string PropagationDefaultValue = "";

  private string propagation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Propagation {
    get { return propagation_ ?? PropagationDefaultValue; }
    set {
      propagation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "propagation" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPropagation {
    get { return propagation_ != null; }
  }
  /// <summary>Clears the value of the "propagation" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPropagation() {
    propagation_ = null;
  }

  /// <summary>Field number for the "has_adult_content" field.</summary>
  public const int HasAdultContentFieldNumber = 12;
  private readonly static bool HasAdultContentDefaultValue = false;

  private bool hasAdultContent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdultContent {
    get { if ((_hasBits0 & 32) != 0) { return hasAdultContent_; } else { return HasAdultContentDefaultValue; } }
    set {
      _hasBits0 |= 32;
      hasAdultContent_ = value;
    }
  }
  /// <summary>Gets whether the "has_adult_content" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHasAdultContent {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "has_adult_content" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHasAdultContent() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "is_visible_in_steam_china" field.</summary>
  public const int IsVisibleInSteamChinaFieldNumber = 13;
  private readonly static bool IsVisibleInSteamChinaDefaultValue = false;

  private bool isVisibleInSteamChina_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsVisibleInSteamChina {
    get { if ((_hasBits0 & 64) != 0) { return isVisibleInSteamChina_; } else { return IsVisibleInSteamChinaDefaultValue; } }
    set {
      _hasBits0 |= 64;
      isVisibleInSteamChina_ = value;
    }
  }
  /// <summary>Gets whether the "is_visible_in_steam_china" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsVisibleInSteamChina {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "is_visible_in_steam_china" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsVisibleInSteamChina() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "app_type" field.</summary>
  public const int AppTypeFieldNumber = 14;
  private readonly static uint AppTypeDefaultValue = 0;

  private uint appType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppType {
    get { if ((_hasBits0 & 128) != 0) { return appType_; } else { return AppTypeDefaultValue; } }
    set {
      _hasBits0 |= 128;
      appType_ = value;
    }
  }
  /// <summary>Gets whether the "app_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppType {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "app_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppType() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "has_adult_content_sex" field.</summary>
  public const int HasAdultContentSexFieldNumber = 15;
  private readonly static bool HasAdultContentSexDefaultValue = false;

  private bool hasAdultContentSex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdultContentSex {
    get { if ((_hasBits0 & 256) != 0) { return hasAdultContentSex_; } else { return HasAdultContentSexDefaultValue; } }
    set {
      _hasBits0 |= 256;
      hasAdultContentSex_ = value;
    }
  }
  /// <summary>Gets whether the "has_adult_content_sex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHasAdultContentSex {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "has_adult_content_sex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHasAdultContentSex() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "has_adult_content_violence" field.</summary>
  public const int HasAdultContentViolenceFieldNumber = 16;
  private readonly static bool HasAdultContentViolenceDefaultValue = false;

  private bool hasAdultContentViolence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdultContentViolence {
    get { if ((_hasBits0 & 512) != 0) { return hasAdultContentViolence_; } else { return HasAdultContentViolenceDefaultValue; } }
    set {
      _hasBits0 |= 512;
      hasAdultContentViolence_ = value;
    }
  }
  /// <summary>Gets whether the "has_adult_content_violence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHasAdultContentViolence {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "has_adult_content_violence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHasAdultContentViolence() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "content_descriptorids" field.</summary>
  public const int ContentDescriptoridsFieldNumber = 17;
  private static readonly pb::FieldCodec<uint> _repeated_contentDescriptorids_codec
      = pb::FieldCodec.ForUInt32(136);
  private readonly pbc::RepeatedField<uint> contentDescriptorids_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> ContentDescriptorids {
    get { return contentDescriptorids_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCDDBAppDetailCommon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCDDBAppDetailCommon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Name != other.Name) return false;
    if (Icon != other.Icon) return false;
    if (Tool != other.Tool) return false;
    if (Demo != other.Demo) return false;
    if (Media != other.Media) return false;
    if (CommunityVisibleStats != other.CommunityVisibleStats) return false;
    if (FriendlyName != other.FriendlyName) return false;
    if (Propagation != other.Propagation) return false;
    if (HasAdultContent != other.HasAdultContent) return false;
    if (IsVisibleInSteamChina != other.IsVisibleInSteamChina) return false;
    if (AppType != other.AppType) return false;
    if (HasAdultContentSex != other.HasAdultContentSex) return false;
    if (HasAdultContentViolence != other.HasAdultContentViolence) return false;
    if(!contentDescriptorids_.Equals(other.contentDescriptorids_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (HasIcon) hash ^= Icon.GetHashCode();
    if (HasTool) hash ^= Tool.GetHashCode();
    if (HasDemo) hash ^= Demo.GetHashCode();
    if (HasMedia) hash ^= Media.GetHashCode();
    if (HasCommunityVisibleStats) hash ^= CommunityVisibleStats.GetHashCode();
    if (HasFriendlyName) hash ^= FriendlyName.GetHashCode();
    if (HasPropagation) hash ^= Propagation.GetHashCode();
    if (HasHasAdultContent) hash ^= HasAdultContent.GetHashCode();
    if (HasIsVisibleInSteamChina) hash ^= IsVisibleInSteamChina.GetHashCode();
    if (HasAppType) hash ^= AppType.GetHashCode();
    if (HasHasAdultContentSex) hash ^= HasAdultContentSex.GetHashCode();
    if (HasHasAdultContentViolence) hash ^= HasAdultContentViolence.GetHashCode();
    hash ^= contentDescriptorids_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasIcon) {
      output.WriteRawTag(26);
      output.WriteString(Icon);
    }
    if (HasTool) {
      output.WriteRawTag(48);
      output.WriteBool(Tool);
    }
    if (HasDemo) {
      output.WriteRawTag(56);
      output.WriteBool(Demo);
    }
    if (HasMedia) {
      output.WriteRawTag(64);
      output.WriteBool(Media);
    }
    if (HasCommunityVisibleStats) {
      output.WriteRawTag(72);
      output.WriteBool(CommunityVisibleStats);
    }
    if (HasFriendlyName) {
      output.WriteRawTag(82);
      output.WriteString(FriendlyName);
    }
    if (HasPropagation) {
      output.WriteRawTag(90);
      output.WriteString(Propagation);
    }
    if (HasHasAdultContent) {
      output.WriteRawTag(96);
      output.WriteBool(HasAdultContent);
    }
    if (HasIsVisibleInSteamChina) {
      output.WriteRawTag(104);
      output.WriteBool(IsVisibleInSteamChina);
    }
    if (HasAppType) {
      output.WriteRawTag(112);
      output.WriteUInt32(AppType);
    }
    if (HasHasAdultContentSex) {
      output.WriteRawTag(120);
      output.WriteBool(HasAdultContentSex);
    }
    if (HasHasAdultContentViolence) {
      output.WriteRawTag(128, 1);
      output.WriteBool(HasAdultContentViolence);
    }
    contentDescriptorids_.WriteTo(output, _repeated_contentDescriptorids_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasIcon) {
      output.WriteRawTag(26);
      output.WriteString(Icon);
    }
    if (HasTool) {
      output.WriteRawTag(48);
      output.WriteBool(Tool);
    }
    if (HasDemo) {
      output.WriteRawTag(56);
      output.WriteBool(Demo);
    }
    if (HasMedia) {
      output.WriteRawTag(64);
      output.WriteBool(Media);
    }
    if (HasCommunityVisibleStats) {
      output.WriteRawTag(72);
      output.WriteBool(CommunityVisibleStats);
    }
    if (HasFriendlyName) {
      output.WriteRawTag(82);
      output.WriteString(FriendlyName);
    }
    if (HasPropagation) {
      output.WriteRawTag(90);
      output.WriteString(Propagation);
    }
    if (HasHasAdultContent) {
      output.WriteRawTag(96);
      output.WriteBool(HasAdultContent);
    }
    if (HasIsVisibleInSteamChina) {
      output.WriteRawTag(104);
      output.WriteBool(IsVisibleInSteamChina);
    }
    if (HasAppType) {
      output.WriteRawTag(112);
      output.WriteUInt32(AppType);
    }
    if (HasHasAdultContentSex) {
      output.WriteRawTag(120);
      output.WriteBool(HasAdultContentSex);
    }
    if (HasHasAdultContentViolence) {
      output.WriteRawTag(128, 1);
      output.WriteBool(HasAdultContentViolence);
    }
    contentDescriptorids_.WriteTo(ref output, _repeated_contentDescriptorids_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasIcon) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
    }
    if (HasTool) {
      size += 1 + 1;
    }
    if (HasDemo) {
      size += 1 + 1;
    }
    if (HasMedia) {
      size += 1 + 1;
    }
    if (HasCommunityVisibleStats) {
      size += 1 + 1;
    }
    if (HasFriendlyName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendlyName);
    }
    if (HasPropagation) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Propagation);
    }
    if (HasHasAdultContent) {
      size += 1 + 1;
    }
    if (HasIsVisibleInSteamChina) {
      size += 1 + 1;
    }
    if (HasAppType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppType);
    }
    if (HasHasAdultContentSex) {
      size += 1 + 1;
    }
    if (HasHasAdultContentViolence) {
      size += 2 + 1;
    }
    size += contentDescriptorids_.CalculateSize(_repeated_contentDescriptorids_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCDDBAppDetailCommon other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasIcon) {
      Icon = other.Icon;
    }
    if (other.HasTool) {
      Tool = other.Tool;
    }
    if (other.HasDemo) {
      Demo = other.Demo;
    }
    if (other.HasMedia) {
      Media = other.Media;
    }
    if (other.HasCommunityVisibleStats) {
      CommunityVisibleStats = other.CommunityVisibleStats;
    }
    if (other.HasFriendlyName) {
      FriendlyName = other.FriendlyName;
    }
    if (other.HasPropagation) {
      Propagation = other.Propagation;
    }
    if (other.HasHasAdultContent) {
      HasAdultContent = other.HasAdultContent;
    }
    if (other.HasIsVisibleInSteamChina) {
      IsVisibleInSteamChina = other.IsVisibleInSteamChina;
    }
    if (other.HasAppType) {
      AppType = other.AppType;
    }
    if (other.HasHasAdultContentSex) {
      HasAdultContentSex = other.HasAdultContentSex;
    }
    if (other.HasHasAdultContentViolence) {
      HasAdultContentViolence = other.HasAdultContentViolence;
    }
    contentDescriptorids_.Add(other.contentDescriptorids_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Icon = input.ReadString();
          break;
        }
        case 48: {
          Tool = input.ReadBool();
          break;
        }
        case 56: {
          Demo = input.ReadBool();
          break;
        }
        case 64: {
          Media = input.ReadBool();
          break;
        }
        case 72: {
          CommunityVisibleStats = input.ReadBool();
          break;
        }
        case 82: {
          FriendlyName = input.ReadString();
          break;
        }
        case 90: {
          Propagation = input.ReadString();
          break;
        }
        case 96: {
          HasAdultContent = input.ReadBool();
          break;
        }
        case 104: {
          IsVisibleInSteamChina = input.ReadBool();
          break;
        }
        case 112: {
          AppType = input.ReadUInt32();
          break;
        }
        case 120: {
          HasAdultContentSex = input.ReadBool();
          break;
        }
        case 128: {
          HasAdultContentViolence = input.ReadBool();
          break;
        }
        case 138:
        case 136: {
          contentDescriptorids_.AddEntriesFrom(input, _repeated_contentDescriptorids_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 26: {
          Icon = input.ReadString();
          break;
        }
        case 48: {
          Tool = input.ReadBool();
          break;
        }
        case 56: {
          Demo = input.ReadBool();
          break;
        }
        case 64: {
          Media = input.ReadBool();
          break;
        }
        case 72: {
          CommunityVisibleStats = input.ReadBool();
          break;
        }
        case 82: {
          FriendlyName = input.ReadString();
          break;
        }
        case 90: {
          Propagation = input.ReadString();
          break;
        }
        case 96: {
          HasAdultContent = input.ReadBool();
          break;
        }
        case 104: {
          IsVisibleInSteamChina = input.ReadBool();
          break;
        }
        case 112: {
          AppType = input.ReadUInt32();
          break;
        }
        case 120: {
          HasAdultContentSex = input.ReadBool();
          break;
        }
        case 128: {
          HasAdultContentViolence = input.ReadBool();
          break;
        }
        case 138:
        case 136: {
          contentDescriptorids_.AddEntriesFrom(ref input, _repeated_contentDescriptorids_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgAppRights : pb::IMessage<CMsgAppRights>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgAppRights> _parser = new pb::MessageParser<CMsgAppRights>(() => new CMsgAppRights());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgAppRights> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAppRights() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAppRights(CMsgAppRights other) : this() {
    _hasBits0 = other._hasBits0;
    editInfo_ = other.editInfo_;
    publish_ = other.publish_;
    viewErrorData_ = other.viewErrorData_;
    download_ = other.download_;
    uploadCdkeys_ = other.uploadCdkeys_;
    generateCdkeys_ = other.generateCdkeys_;
    viewFinancials_ = other.viewFinancials_;
    manageCeg_ = other.manageCeg_;
    manageSigning_ = other.manageSigning_;
    manageCdkeys_ = other.manageCdkeys_;
    editMarketing_ = other.editMarketing_;
    economySupport_ = other.economySupport_;
    economySupportSupervisor_ = other.economySupportSupervisor_;
    managePricing_ = other.managePricing_;
    broadcastLive_ = other.broadcastLive_;
    viewMarketingTraffic_ = other.viewMarketingTraffic_;
    editStoreDisplayContent_ = other.editStoreDisplayContent_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAppRights Clone() {
    return new CMsgAppRights(this);
  }

  /// <summary>Field number for the "edit_info" field.</summary>
  public const int EditInfoFieldNumber = 1;
  private readonly static bool EditInfoDefaultValue = false;

  private bool editInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool EditInfo {
    get { if ((_hasBits0 & 1) != 0) { return editInfo_; } else { return EditInfoDefaultValue; } }
    set {
      _hasBits0 |= 1;
      editInfo_ = value;
    }
  }
  /// <summary>Gets whether the "edit_info" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEditInfo {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "edit_info" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEditInfo() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "publish" field.</summary>
  public const int PublishFieldNumber = 2;
  private readonly static bool PublishDefaultValue = false;

  private bool publish_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Publish {
    get { if ((_hasBits0 & 2) != 0) { return publish_; } else { return PublishDefaultValue; } }
    set {
      _hasBits0 |= 2;
      publish_ = value;
    }
  }
  /// <summary>Gets whether the "publish" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPublish {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "publish" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPublish() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "view_error_data" field.</summary>
  public const int ViewErrorDataFieldNumber = 3;
  private readonly static bool ViewErrorDataDefaultValue = false;

  private bool viewErrorData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ViewErrorData {
    get { if ((_hasBits0 & 4) != 0) { return viewErrorData_; } else { return ViewErrorDataDefaultValue; } }
    set {
      _hasBits0 |= 4;
      viewErrorData_ = value;
    }
  }
  /// <summary>Gets whether the "view_error_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasViewErrorData {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "view_error_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearViewErrorData() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "download" field.</summary>
  public const int DownloadFieldNumber = 4;
  private readonly static bool DownloadDefaultValue = false;

  private bool download_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Download {
    get { if ((_hasBits0 & 8) != 0) { return download_; } else { return DownloadDefaultValue; } }
    set {
      _hasBits0 |= 8;
      download_ = value;
    }
  }
  /// <summary>Gets whether the "download" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDownload {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "download" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDownload() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "upload_cdkeys" field.</summary>
  public const int UploadCdkeysFieldNumber = 5;
  private readonly static bool UploadCdkeysDefaultValue = false;

  private bool uploadCdkeys_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool UploadCdkeys {
    get { if ((_hasBits0 & 16) != 0) { return uploadCdkeys_; } else { return UploadCdkeysDefaultValue; } }
    set {
      _hasBits0 |= 16;
      uploadCdkeys_ = value;
    }
  }
  /// <summary>Gets whether the "upload_cdkeys" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUploadCdkeys {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "upload_cdkeys" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUploadCdkeys() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "generate_cdkeys" field.</summary>
  public const int GenerateCdkeysFieldNumber = 6;
  private readonly static bool GenerateCdkeysDefaultValue = false;

  private bool generateCdkeys_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool GenerateCdkeys {
    get { if ((_hasBits0 & 32) != 0) { return generateCdkeys_; } else { return GenerateCdkeysDefaultValue; } }
    set {
      _hasBits0 |= 32;
      generateCdkeys_ = value;
    }
  }
  /// <summary>Gets whether the "generate_cdkeys" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGenerateCdkeys {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "generate_cdkeys" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGenerateCdkeys() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "view_financials" field.</summary>
  public const int ViewFinancialsFieldNumber = 7;
  private readonly static bool ViewFinancialsDefaultValue = false;

  private bool viewFinancials_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ViewFinancials {
    get { if ((_hasBits0 & 64) != 0) { return viewFinancials_; } else { return ViewFinancialsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      viewFinancials_ = value;
    }
  }
  /// <summary>Gets whether the "view_financials" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasViewFinancials {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "view_financials" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearViewFinancials() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "manage_ceg" field.</summary>
  public const int ManageCegFieldNumber = 8;
  private readonly static bool ManageCegDefaultValue = false;

  private bool manageCeg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ManageCeg {
    get { if ((_hasBits0 & 128) != 0) { return manageCeg_; } else { return ManageCegDefaultValue; } }
    set {
      _hasBits0 |= 128;
      manageCeg_ = value;
    }
  }
  /// <summary>Gets whether the "manage_ceg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManageCeg {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "manage_ceg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManageCeg() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "manage_signing" field.</summary>
  public const int ManageSigningFieldNumber = 9;
  private readonly static bool ManageSigningDefaultValue = false;

  private bool manageSigning_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ManageSigning {
    get { if ((_hasBits0 & 256) != 0) { return manageSigning_; } else { return ManageSigningDefaultValue; } }
    set {
      _hasBits0 |= 256;
      manageSigning_ = value;
    }
  }
  /// <summary>Gets whether the "manage_signing" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManageSigning {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "manage_signing" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManageSigning() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "manage_cdkeys" field.</summary>
  public const int ManageCdkeysFieldNumber = 10;
  private readonly static bool ManageCdkeysDefaultValue = false;

  private bool manageCdkeys_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ManageCdkeys {
    get { if ((_hasBits0 & 512) != 0) { return manageCdkeys_; } else { return ManageCdkeysDefaultValue; } }
    set {
      _hasBits0 |= 512;
      manageCdkeys_ = value;
    }
  }
  /// <summary>Gets whether the "manage_cdkeys" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManageCdkeys {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "manage_cdkeys" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManageCdkeys() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "edit_marketing" field.</summary>
  public const int EditMarketingFieldNumber = 11;
  private readonly static bool EditMarketingDefaultValue = false;

  private bool editMarketing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool EditMarketing {
    get { if ((_hasBits0 & 1024) != 0) { return editMarketing_; } else { return EditMarketingDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      editMarketing_ = value;
    }
  }
  /// <summary>Gets whether the "edit_marketing" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEditMarketing {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "edit_marketing" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEditMarketing() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "economy_support" field.</summary>
  public const int EconomySupportFieldNumber = 12;
  private readonly static bool EconomySupportDefaultValue = false;

  private bool economySupport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool EconomySupport {
    get { if ((_hasBits0 & 2048) != 0) { return economySupport_; } else { return EconomySupportDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      economySupport_ = value;
    }
  }
  /// <summary>Gets whether the "economy_support" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEconomySupport {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "economy_support" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEconomySupport() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "economy_support_supervisor" field.</summary>
  public const int EconomySupportSupervisorFieldNumber = 13;
  private readonly static bool EconomySupportSupervisorDefaultValue = false;

  private bool economySupportSupervisor_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool EconomySupportSupervisor {
    get { if ((_hasBits0 & 4096) != 0) { return economySupportSupervisor_; } else { return EconomySupportSupervisorDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      economySupportSupervisor_ = value;
    }
  }
  /// <summary>Gets whether the "economy_support_supervisor" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEconomySupportSupervisor {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "economy_support_supervisor" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEconomySupportSupervisor() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "manage_pricing" field.</summary>
  public const int ManagePricingFieldNumber = 14;
  private readonly static bool ManagePricingDefaultValue = false;

  private bool managePricing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ManagePricing {
    get { if ((_hasBits0 & 8192) != 0) { return managePricing_; } else { return ManagePricingDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      managePricing_ = value;
    }
  }
  /// <summary>Gets whether the "manage_pricing" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManagePricing {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "manage_pricing" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManagePricing() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "broadcast_live" field.</summary>
  public const int BroadcastLiveFieldNumber = 15;
  private readonly static bool BroadcastLiveDefaultValue = false;

  private bool broadcastLive_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BroadcastLive {
    get { if ((_hasBits0 & 16384) != 0) { return broadcastLive_; } else { return BroadcastLiveDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      broadcastLive_ = value;
    }
  }
  /// <summary>Gets whether the "broadcast_live" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBroadcastLive {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "broadcast_live" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBroadcastLive() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "view_marketing_traffic" field.</summary>
  public const int ViewMarketingTrafficFieldNumber = 16;
  private readonly static bool ViewMarketingTrafficDefaultValue = false;

  private bool viewMarketingTraffic_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ViewMarketingTraffic {
    get { if ((_hasBits0 & 32768) != 0) { return viewMarketingTraffic_; } else { return ViewMarketingTrafficDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      viewMarketingTraffic_ = value;
    }
  }
  /// <summary>Gets whether the "view_marketing_traffic" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasViewMarketingTraffic {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "view_marketing_traffic" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearViewMarketingTraffic() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "edit_store_display_content" field.</summary>
  public const int EditStoreDisplayContentFieldNumber = 17;
  private readonly static bool EditStoreDisplayContentDefaultValue = false;

  private bool editStoreDisplayContent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool EditStoreDisplayContent {
    get { if ((_hasBits0 & 65536) != 0) { return editStoreDisplayContent_; } else { return EditStoreDisplayContentDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      editStoreDisplayContent_ = value;
    }
  }
  /// <summary>Gets whether the "edit_store_display_content" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEditStoreDisplayContent {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "edit_store_display_content" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEditStoreDisplayContent() {
    _hasBits0 &= ~65536;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgAppRights);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgAppRights other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EditInfo != other.EditInfo) return false;
    if (Publish != other.Publish) return false;
    if (ViewErrorData != other.ViewErrorData) return false;
    if (Download != other.Download) return false;
    if (UploadCdkeys != other.UploadCdkeys) return false;
    if (GenerateCdkeys != other.GenerateCdkeys) return false;
    if (ViewFinancials != other.ViewFinancials) return false;
    if (ManageCeg != other.ManageCeg) return false;
    if (ManageSigning != other.ManageSigning) return false;
    if (ManageCdkeys != other.ManageCdkeys) return false;
    if (EditMarketing != other.EditMarketing) return false;
    if (EconomySupport != other.EconomySupport) return false;
    if (EconomySupportSupervisor != other.EconomySupportSupervisor) return false;
    if (ManagePricing != other.ManagePricing) return false;
    if (BroadcastLive != other.BroadcastLive) return false;
    if (ViewMarketingTraffic != other.ViewMarketingTraffic) return false;
    if (EditStoreDisplayContent != other.EditStoreDisplayContent) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEditInfo) hash ^= EditInfo.GetHashCode();
    if (HasPublish) hash ^= Publish.GetHashCode();
    if (HasViewErrorData) hash ^= ViewErrorData.GetHashCode();
    if (HasDownload) hash ^= Download.GetHashCode();
    if (HasUploadCdkeys) hash ^= UploadCdkeys.GetHashCode();
    if (HasGenerateCdkeys) hash ^= GenerateCdkeys.GetHashCode();
    if (HasViewFinancials) hash ^= ViewFinancials.GetHashCode();
    if (HasManageCeg) hash ^= ManageCeg.GetHashCode();
    if (HasManageSigning) hash ^= ManageSigning.GetHashCode();
    if (HasManageCdkeys) hash ^= ManageCdkeys.GetHashCode();
    if (HasEditMarketing) hash ^= EditMarketing.GetHashCode();
    if (HasEconomySupport) hash ^= EconomySupport.GetHashCode();
    if (HasEconomySupportSupervisor) hash ^= EconomySupportSupervisor.GetHashCode();
    if (HasManagePricing) hash ^= ManagePricing.GetHashCode();
    if (HasBroadcastLive) hash ^= BroadcastLive.GetHashCode();
    if (HasViewMarketingTraffic) hash ^= ViewMarketingTraffic.GetHashCode();
    if (HasEditStoreDisplayContent) hash ^= EditStoreDisplayContent.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEditInfo) {
      output.WriteRawTag(8);
      output.WriteBool(EditInfo);
    }
    if (HasPublish) {
      output.WriteRawTag(16);
      output.WriteBool(Publish);
    }
    if (HasViewErrorData) {
      output.WriteRawTag(24);
      output.WriteBool(ViewErrorData);
    }
    if (HasDownload) {
      output.WriteRawTag(32);
      output.WriteBool(Download);
    }
    if (HasUploadCdkeys) {
      output.WriteRawTag(40);
      output.WriteBool(UploadCdkeys);
    }
    if (HasGenerateCdkeys) {
      output.WriteRawTag(48);
      output.WriteBool(GenerateCdkeys);
    }
    if (HasViewFinancials) {
      output.WriteRawTag(56);
      output.WriteBool(ViewFinancials);
    }
    if (HasManageCeg) {
      output.WriteRawTag(64);
      output.WriteBool(ManageCeg);
    }
    if (HasManageSigning) {
      output.WriteRawTag(72);
      output.WriteBool(ManageSigning);
    }
    if (HasManageCdkeys) {
      output.WriteRawTag(80);
      output.WriteBool(ManageCdkeys);
    }
    if (HasEditMarketing) {
      output.WriteRawTag(88);
      output.WriteBool(EditMarketing);
    }
    if (HasEconomySupport) {
      output.WriteRawTag(96);
      output.WriteBool(EconomySupport);
    }
    if (HasEconomySupportSupervisor) {
      output.WriteRawTag(104);
      output.WriteBool(EconomySupportSupervisor);
    }
    if (HasManagePricing) {
      output.WriteRawTag(112);
      output.WriteBool(ManagePricing);
    }
    if (HasBroadcastLive) {
      output.WriteRawTag(120);
      output.WriteBool(BroadcastLive);
    }
    if (HasViewMarketingTraffic) {
      output.WriteRawTag(128, 1);
      output.WriteBool(ViewMarketingTraffic);
    }
    if (HasEditStoreDisplayContent) {
      output.WriteRawTag(136, 1);
      output.WriteBool(EditStoreDisplayContent);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEditInfo) {
      output.WriteRawTag(8);
      output.WriteBool(EditInfo);
    }
    if (HasPublish) {
      output.WriteRawTag(16);
      output.WriteBool(Publish);
    }
    if (HasViewErrorData) {
      output.WriteRawTag(24);
      output.WriteBool(ViewErrorData);
    }
    if (HasDownload) {
      output.WriteRawTag(32);
      output.WriteBool(Download);
    }
    if (HasUploadCdkeys) {
      output.WriteRawTag(40);
      output.WriteBool(UploadCdkeys);
    }
    if (HasGenerateCdkeys) {
      output.WriteRawTag(48);
      output.WriteBool(GenerateCdkeys);
    }
    if (HasViewFinancials) {
      output.WriteRawTag(56);
      output.WriteBool(ViewFinancials);
    }
    if (HasManageCeg) {
      output.WriteRawTag(64);
      output.WriteBool(ManageCeg);
    }
    if (HasManageSigning) {
      output.WriteRawTag(72);
      output.WriteBool(ManageSigning);
    }
    if (HasManageCdkeys) {
      output.WriteRawTag(80);
      output.WriteBool(ManageCdkeys);
    }
    if (HasEditMarketing) {
      output.WriteRawTag(88);
      output.WriteBool(EditMarketing);
    }
    if (HasEconomySupport) {
      output.WriteRawTag(96);
      output.WriteBool(EconomySupport);
    }
    if (HasEconomySupportSupervisor) {
      output.WriteRawTag(104);
      output.WriteBool(EconomySupportSupervisor);
    }
    if (HasManagePricing) {
      output.WriteRawTag(112);
      output.WriteBool(ManagePricing);
    }
    if (HasBroadcastLive) {
      output.WriteRawTag(120);
      output.WriteBool(BroadcastLive);
    }
    if (HasViewMarketingTraffic) {
      output.WriteRawTag(128, 1);
      output.WriteBool(ViewMarketingTraffic);
    }
    if (HasEditStoreDisplayContent) {
      output.WriteRawTag(136, 1);
      output.WriteBool(EditStoreDisplayContent);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEditInfo) {
      size += 1 + 1;
    }
    if (HasPublish) {
      size += 1 + 1;
    }
    if (HasViewErrorData) {
      size += 1 + 1;
    }
    if (HasDownload) {
      size += 1 + 1;
    }
    if (HasUploadCdkeys) {
      size += 1 + 1;
    }
    if (HasGenerateCdkeys) {
      size += 1 + 1;
    }
    if (HasViewFinancials) {
      size += 1 + 1;
    }
    if (HasManageCeg) {
      size += 1 + 1;
    }
    if (HasManageSigning) {
      size += 1 + 1;
    }
    if (HasManageCdkeys) {
      size += 1 + 1;
    }
    if (HasEditMarketing) {
      size += 1 + 1;
    }
    if (HasEconomySupport) {
      size += 1 + 1;
    }
    if (HasEconomySupportSupervisor) {
      size += 1 + 1;
    }
    if (HasManagePricing) {
      size += 1 + 1;
    }
    if (HasBroadcastLive) {
      size += 1 + 1;
    }
    if (HasViewMarketingTraffic) {
      size += 2 + 1;
    }
    if (HasEditStoreDisplayContent) {
      size += 2 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgAppRights other) {
    if (other == null) {
      return;
    }
    if (other.HasEditInfo) {
      EditInfo = other.EditInfo;
    }
    if (other.HasPublish) {
      Publish = other.Publish;
    }
    if (other.HasViewErrorData) {
      ViewErrorData = other.ViewErrorData;
    }
    if (other.HasDownload) {
      Download = other.Download;
    }
    if (other.HasUploadCdkeys) {
      UploadCdkeys = other.UploadCdkeys;
    }
    if (other.HasGenerateCdkeys) {
      GenerateCdkeys = other.GenerateCdkeys;
    }
    if (other.HasViewFinancials) {
      ViewFinancials = other.ViewFinancials;
    }
    if (other.HasManageCeg) {
      ManageCeg = other.ManageCeg;
    }
    if (other.HasManageSigning) {
      ManageSigning = other.ManageSigning;
    }
    if (other.HasManageCdkeys) {
      ManageCdkeys = other.ManageCdkeys;
    }
    if (other.HasEditMarketing) {
      EditMarketing = other.EditMarketing;
    }
    if (other.HasEconomySupport) {
      EconomySupport = other.EconomySupport;
    }
    if (other.HasEconomySupportSupervisor) {
      EconomySupportSupervisor = other.EconomySupportSupervisor;
    }
    if (other.HasManagePricing) {
      ManagePricing = other.ManagePricing;
    }
    if (other.HasBroadcastLive) {
      BroadcastLive = other.BroadcastLive;
    }
    if (other.HasViewMarketingTraffic) {
      ViewMarketingTraffic = other.ViewMarketingTraffic;
    }
    if (other.HasEditStoreDisplayContent) {
      EditStoreDisplayContent = other.EditStoreDisplayContent;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EditInfo = input.ReadBool();
          break;
        }
        case 16: {
          Publish = input.ReadBool();
          break;
        }
        case 24: {
          ViewErrorData = input.ReadBool();
          break;
        }
        case 32: {
          Download = input.ReadBool();
          break;
        }
        case 40: {
          UploadCdkeys = input.ReadBool();
          break;
        }
        case 48: {
          GenerateCdkeys = input.ReadBool();
          break;
        }
        case 56: {
          ViewFinancials = input.ReadBool();
          break;
        }
        case 64: {
          ManageCeg = input.ReadBool();
          break;
        }
        case 72: {
          ManageSigning = input.ReadBool();
          break;
        }
        case 80: {
          ManageCdkeys = input.ReadBool();
          break;
        }
        case 88: {
          EditMarketing = input.ReadBool();
          break;
        }
        case 96: {
          EconomySupport = input.ReadBool();
          break;
        }
        case 104: {
          EconomySupportSupervisor = input.ReadBool();
          break;
        }
        case 112: {
          ManagePricing = input.ReadBool();
          break;
        }
        case 120: {
          BroadcastLive = input.ReadBool();
          break;
        }
        case 128: {
          ViewMarketingTraffic = input.ReadBool();
          break;
        }
        case 136: {
          EditStoreDisplayContent = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EditInfo = input.ReadBool();
          break;
        }
        case 16: {
          Publish = input.ReadBool();
          break;
        }
        case 24: {
          ViewErrorData = input.ReadBool();
          break;
        }
        case 32: {
          Download = input.ReadBool();
          break;
        }
        case 40: {
          UploadCdkeys = input.ReadBool();
          break;
        }
        case 48: {
          GenerateCdkeys = input.ReadBool();
          break;
        }
        case 56: {
          ViewFinancials = input.ReadBool();
          break;
        }
        case 64: {
          ManageCeg = input.ReadBool();
          break;
        }
        case 72: {
          ManageSigning = input.ReadBool();
          break;
        }
        case 80: {
          ManageCdkeys = input.ReadBool();
          break;
        }
        case 88: {
          EditMarketing = input.ReadBool();
          break;
        }
        case 96: {
          EconomySupport = input.ReadBool();
          break;
        }
        case 104: {
          EconomySupportSupervisor = input.ReadBool();
          break;
        }
        case 112: {
          ManagePricing = input.ReadBool();
          break;
        }
        case 120: {
          BroadcastLive = input.ReadBool();
          break;
        }
        case 128: {
          ViewMarketingTraffic = input.ReadBool();
          break;
        }
        case 136: {
          EditStoreDisplayContent = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CCuratorPreferences : pb::IMessage<CCuratorPreferences>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCuratorPreferences> _parser = new pb::MessageParser<CCuratorPreferences>(() => new CCuratorPreferences());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCuratorPreferences> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCuratorPreferences() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCuratorPreferences(CCuratorPreferences other) : this() {
    _hasBits0 = other._hasBits0;
    supportedLanguages_ = other.supportedLanguages_;
    platformWindows_ = other.platformWindows_;
    platformMac_ = other.platformMac_;
    platformLinux_ = other.platformLinux_;
    vrContent_ = other.vrContent_;
    adultContentViolence_ = other.adultContentViolence_;
    adultContentSex_ = other.adultContentSex_;
    timestampUpdated_ = other.timestampUpdated_;
    tagidsCurated_ = other.tagidsCurated_.Clone();
    tagidsFiltered_ = other.tagidsFiltered_.Clone();
    websiteTitle_ = other.websiteTitle_;
    websiteUrl_ = other.websiteUrl_;
    discussionUrl_ = other.discussionUrl_;
    showBroadcast_ = other.showBroadcast_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCuratorPreferences Clone() {
    return new CCuratorPreferences(this);
  }

  /// <summary>Field number for the "supported_languages" field.</summary>
  public const int SupportedLanguagesFieldNumber = 1;
  private readonly static uint SupportedLanguagesDefaultValue = 0;

  private uint supportedLanguages_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SupportedLanguages {
    get { if ((_hasBits0 & 1) != 0) { return supportedLanguages_; } else { return SupportedLanguagesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      supportedLanguages_ = value;
    }
  }
  /// <summary>Gets whether the "supported_languages" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSupportedLanguages {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "supported_languages" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSupportedLanguages() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "platform_windows" field.</summary>
  public const int PlatformWindowsFieldNumber = 2;
  private readonly static bool PlatformWindowsDefaultValue = false;

  private bool platformWindows_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool PlatformWindows {
    get { if ((_hasBits0 & 2) != 0) { return platformWindows_; } else { return PlatformWindowsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      platformWindows_ = value;
    }
  }
  /// <summary>Gets whether the "platform_windows" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlatformWindows {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "platform_windows" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlatformWindows() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "platform_mac" field.</summary>
  public const int PlatformMacFieldNumber = 3;
  private readonly static bool PlatformMacDefaultValue = false;

  private bool platformMac_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool PlatformMac {
    get { if ((_hasBits0 & 4) != 0) { return platformMac_; } else { return PlatformMacDefaultValue; } }
    set {
      _hasBits0 |= 4;
      platformMac_ = value;
    }
  }
  /// <summary>Gets whether the "platform_mac" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlatformMac {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "platform_mac" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlatformMac() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "platform_linux" field.</summary>
  public const int PlatformLinuxFieldNumber = 4;
  private readonly static bool PlatformLinuxDefaultValue = false;

  private bool platformLinux_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool PlatformLinux {
    get { if ((_hasBits0 & 8) != 0) { return platformLinux_; } else { return PlatformLinuxDefaultValue; } }
    set {
      _hasBits0 |= 8;
      platformLinux_ = value;
    }
  }
  /// <summary>Gets whether the "platform_linux" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlatformLinux {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "platform_linux" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlatformLinux() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "vr_content" field.</summary>
  public const int VrContentFieldNumber = 5;
  private readonly static bool VrContentDefaultValue = false;

  private bool vrContent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool VrContent {
    get { if ((_hasBits0 & 16) != 0) { return vrContent_; } else { return VrContentDefaultValue; } }
    set {
      _hasBits0 |= 16;
      vrContent_ = value;
    }
  }
  /// <summary>Gets whether the "vr_content" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVrContent {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "vr_content" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVrContent() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "adult_content_violence" field.</summary>
  public const int AdultContentViolenceFieldNumber = 6;
  private readonly static bool AdultContentViolenceDefaultValue = false;

  private bool adultContentViolence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AdultContentViolence {
    get { if ((_hasBits0 & 32) != 0) { return adultContentViolence_; } else { return AdultContentViolenceDefaultValue; } }
    set {
      _hasBits0 |= 32;
      adultContentViolence_ = value;
    }
  }
  /// <summary>Gets whether the "adult_content_violence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdultContentViolence {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "adult_content_violence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAdultContentViolence() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "adult_content_sex" field.</summary>
  public const int AdultContentSexFieldNumber = 7;
  private readonly static bool AdultContentSexDefaultValue = false;

  private bool adultContentSex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AdultContentSex {
    get { if ((_hasBits0 & 64) != 0) { return adultContentSex_; } else { return AdultContentSexDefaultValue; } }
    set {
      _hasBits0 |= 64;
      adultContentSex_ = value;
    }
  }
  /// <summary>Gets whether the "adult_content_sex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAdultContentSex {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "adult_content_sex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAdultContentSex() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "timestamp_updated" field.</summary>
  public const int TimestampUpdatedFieldNumber = 8;
  private readonly static uint TimestampUpdatedDefaultValue = 0;

  private uint timestampUpdated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimestampUpdated {
    get { if ((_hasBits0 & 128) != 0) { return timestampUpdated_; } else { return TimestampUpdatedDefaultValue; } }
    set {
      _hasBits0 |= 128;
      timestampUpdated_ = value;
    }
  }
  /// <summary>Gets whether the "timestamp_updated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimestampUpdated {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "timestamp_updated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimestampUpdated() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "tagids_curated" field.</summary>
  public const int TagidsCuratedFieldNumber = 9;
  private static readonly pb::FieldCodec<uint> _repeated_tagidsCurated_codec
      = pb::FieldCodec.ForUInt32(72);
  private readonly pbc::RepeatedField<uint> tagidsCurated_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> TagidsCurated {
    get { return tagidsCurated_; }
  }

  /// <summary>Field number for the "tagids_filtered" field.</summary>
  public const int TagidsFilteredFieldNumber = 10;
  private static readonly pb::FieldCodec<uint> _repeated_tagidsFiltered_codec
      = pb::FieldCodec.ForUInt32(80);
  private readonly pbc::RepeatedField<uint> tagidsFiltered_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> TagidsFiltered {
    get { return tagidsFiltered_; }
  }

  /// <summary>Field number for the "website_title" field.</summary>
  public const int WebsiteTitleFieldNumber = 11;
  private readonly static string WebsiteTitleDefaultValue = "";

  private string websiteTitle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WebsiteTitle {
    get { return websiteTitle_ ?? WebsiteTitleDefaultValue; }
    set {
      websiteTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "website_title" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWebsiteTitle {
    get { return websiteTitle_ != null; }
  }
  /// <summary>Clears the value of the "website_title" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWebsiteTitle() {
    websiteTitle_ = null;
  }

  /// <summary>Field number for the "website_url" field.</summary>
  public const int WebsiteUrlFieldNumber = 12;
  private readonly static string WebsiteUrlDefaultValue = "";

  private string websiteUrl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WebsiteUrl {
    get { return websiteUrl_ ?? WebsiteUrlDefaultValue; }
    set {
      websiteUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "website_url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWebsiteUrl {
    get { return websiteUrl_ != null; }
  }
  /// <summary>Clears the value of the "website_url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWebsiteUrl() {
    websiteUrl_ = null;
  }

  /// <summary>Field number for the "discussion_url" field.</summary>
  public const int DiscussionUrlFieldNumber = 13;
  private readonly static string DiscussionUrlDefaultValue = "";

  private string discussionUrl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DiscussionUrl {
    get { return discussionUrl_ ?? DiscussionUrlDefaultValue; }
    set {
      discussionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "discussion_url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiscussionUrl {
    get { return discussionUrl_ != null; }
  }
  /// <summary>Clears the value of the "discussion_url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiscussionUrl() {
    discussionUrl_ = null;
  }

  /// <summary>Field number for the "show_broadcast" field.</summary>
  public const int ShowBroadcastFieldNumber = 14;
  private readonly static bool ShowBroadcastDefaultValue = false;

  private bool showBroadcast_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ShowBroadcast {
    get { if ((_hasBits0 & 256) != 0) { return showBroadcast_; } else { return ShowBroadcastDefaultValue; } }
    set {
      _hasBits0 |= 256;
      showBroadcast_ = value;
    }
  }
  /// <summary>Gets whether the "show_broadcast" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShowBroadcast {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "show_broadcast" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShowBroadcast() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCuratorPreferences);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCuratorPreferences other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SupportedLanguages != other.SupportedLanguages) return false;
    if (PlatformWindows != other.PlatformWindows) return false;
    if (PlatformMac != other.PlatformMac) return false;
    if (PlatformLinux != other.PlatformLinux) return false;
    if (VrContent != other.VrContent) return false;
    if (AdultContentViolence != other.AdultContentViolence) return false;
    if (AdultContentSex != other.AdultContentSex) return false;
    if (TimestampUpdated != other.TimestampUpdated) return false;
    if(!tagidsCurated_.Equals(other.tagidsCurated_)) return false;
    if(!tagidsFiltered_.Equals(other.tagidsFiltered_)) return false;
    if (WebsiteTitle != other.WebsiteTitle) return false;
    if (WebsiteUrl != other.WebsiteUrl) return false;
    if (DiscussionUrl != other.DiscussionUrl) return false;
    if (ShowBroadcast != other.ShowBroadcast) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSupportedLanguages) hash ^= SupportedLanguages.GetHashCode();
    if (HasPlatformWindows) hash ^= PlatformWindows.GetHashCode();
    if (HasPlatformMac) hash ^= PlatformMac.GetHashCode();
    if (HasPlatformLinux) hash ^= PlatformLinux.GetHashCode();
    if (HasVrContent) hash ^= VrContent.GetHashCode();
    if (HasAdultContentViolence) hash ^= AdultContentViolence.GetHashCode();
    if (HasAdultContentSex) hash ^= AdultContentSex.GetHashCode();
    if (HasTimestampUpdated) hash ^= TimestampUpdated.GetHashCode();
    hash ^= tagidsCurated_.GetHashCode();
    hash ^= tagidsFiltered_.GetHashCode();
    if (HasWebsiteTitle) hash ^= WebsiteTitle.GetHashCode();
    if (HasWebsiteUrl) hash ^= WebsiteUrl.GetHashCode();
    if (HasDiscussionUrl) hash ^= DiscussionUrl.GetHashCode();
    if (HasShowBroadcast) hash ^= ShowBroadcast.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSupportedLanguages) {
      output.WriteRawTag(8);
      output.WriteUInt32(SupportedLanguages);
    }
    if (HasPlatformWindows) {
      output.WriteRawTag(16);
      output.WriteBool(PlatformWindows);
    }
    if (HasPlatformMac) {
      output.WriteRawTag(24);
      output.WriteBool(PlatformMac);
    }
    if (HasPlatformLinux) {
      output.WriteRawTag(32);
      output.WriteBool(PlatformLinux);
    }
    if (HasVrContent) {
      output.WriteRawTag(40);
      output.WriteBool(VrContent);
    }
    if (HasAdultContentViolence) {
      output.WriteRawTag(48);
      output.WriteBool(AdultContentViolence);
    }
    if (HasAdultContentSex) {
      output.WriteRawTag(56);
      output.WriteBool(AdultContentSex);
    }
    if (HasTimestampUpdated) {
      output.WriteRawTag(64);
      output.WriteUInt32(TimestampUpdated);
    }
    tagidsCurated_.WriteTo(output, _repeated_tagidsCurated_codec);
    tagidsFiltered_.WriteTo(output, _repeated_tagidsFiltered_codec);
    if (HasWebsiteTitle) {
      output.WriteRawTag(90);
      output.WriteString(WebsiteTitle);
    }
    if (HasWebsiteUrl) {
      output.WriteRawTag(98);
      output.WriteString(WebsiteUrl);
    }
    if (HasDiscussionUrl) {
      output.WriteRawTag(106);
      output.WriteString(DiscussionUrl);
    }
    if (HasShowBroadcast) {
      output.WriteRawTag(112);
      output.WriteBool(ShowBroadcast);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSupportedLanguages) {
      output.WriteRawTag(8);
      output.WriteUInt32(SupportedLanguages);
    }
    if (HasPlatformWindows) {
      output.WriteRawTag(16);
      output.WriteBool(PlatformWindows);
    }
    if (HasPlatformMac) {
      output.WriteRawTag(24);
      output.WriteBool(PlatformMac);
    }
    if (HasPlatformLinux) {
      output.WriteRawTag(32);
      output.WriteBool(PlatformLinux);
    }
    if (HasVrContent) {
      output.WriteRawTag(40);
      output.WriteBool(VrContent);
    }
    if (HasAdultContentViolence) {
      output.WriteRawTag(48);
      output.WriteBool(AdultContentViolence);
    }
    if (HasAdultContentSex) {
      output.WriteRawTag(56);
      output.WriteBool(AdultContentSex);
    }
    if (HasTimestampUpdated) {
      output.WriteRawTag(64);
      output.WriteUInt32(TimestampUpdated);
    }
    tagidsCurated_.WriteTo(ref output, _repeated_tagidsCurated_codec);
    tagidsFiltered_.WriteTo(ref output, _repeated_tagidsFiltered_codec);
    if (HasWebsiteTitle) {
      output.WriteRawTag(90);
      output.WriteString(WebsiteTitle);
    }
    if (HasWebsiteUrl) {
      output.WriteRawTag(98);
      output.WriteString(WebsiteUrl);
    }
    if (HasDiscussionUrl) {
      output.WriteRawTag(106);
      output.WriteString(DiscussionUrl);
    }
    if (HasShowBroadcast) {
      output.WriteRawTag(112);
      output.WriteBool(ShowBroadcast);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSupportedLanguages) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SupportedLanguages);
    }
    if (HasPlatformWindows) {
      size += 1 + 1;
    }
    if (HasPlatformMac) {
      size += 1 + 1;
    }
    if (HasPlatformLinux) {
      size += 1 + 1;
    }
    if (HasVrContent) {
      size += 1 + 1;
    }
    if (HasAdultContentViolence) {
      size += 1 + 1;
    }
    if (HasAdultContentSex) {
      size += 1 + 1;
    }
    if (HasTimestampUpdated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimestampUpdated);
    }
    size += tagidsCurated_.CalculateSize(_repeated_tagidsCurated_codec);
    size += tagidsFiltered_.CalculateSize(_repeated_tagidsFiltered_codec);
    if (HasWebsiteTitle) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WebsiteTitle);
    }
    if (HasWebsiteUrl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WebsiteUrl);
    }
    if (HasDiscussionUrl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscussionUrl);
    }
    if (HasShowBroadcast) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCuratorPreferences other) {
    if (other == null) {
      return;
    }
    if (other.HasSupportedLanguages) {
      SupportedLanguages = other.SupportedLanguages;
    }
    if (other.HasPlatformWindows) {
      PlatformWindows = other.PlatformWindows;
    }
    if (other.HasPlatformMac) {
      PlatformMac = other.PlatformMac;
    }
    if (other.HasPlatformLinux) {
      PlatformLinux = other.PlatformLinux;
    }
    if (other.HasVrContent) {
      VrContent = other.VrContent;
    }
    if (other.HasAdultContentViolence) {
      AdultContentViolence = other.AdultContentViolence;
    }
    if (other.HasAdultContentSex) {
      AdultContentSex = other.AdultContentSex;
    }
    if (other.HasTimestampUpdated) {
      TimestampUpdated = other.TimestampUpdated;
    }
    tagidsCurated_.Add(other.tagidsCurated_);
    tagidsFiltered_.Add(other.tagidsFiltered_);
    if (other.HasWebsiteTitle) {
      WebsiteTitle = other.WebsiteTitle;
    }
    if (other.HasWebsiteUrl) {
      WebsiteUrl = other.WebsiteUrl;
    }
    if (other.HasDiscussionUrl) {
      DiscussionUrl = other.DiscussionUrl;
    }
    if (other.HasShowBroadcast) {
      ShowBroadcast = other.ShowBroadcast;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SupportedLanguages = input.ReadUInt32();
          break;
        }
        case 16: {
          PlatformWindows = input.ReadBool();
          break;
        }
        case 24: {
          PlatformMac = input.ReadBool();
          break;
        }
        case 32: {
          PlatformLinux = input.ReadBool();
          break;
        }
        case 40: {
          VrContent = input.ReadBool();
          break;
        }
        case 48: {
          AdultContentViolence = input.ReadBool();
          break;
        }
        case 56: {
          AdultContentSex = input.ReadBool();
          break;
        }
        case 64: {
          TimestampUpdated = input.ReadUInt32();
          break;
        }
        case 74:
        case 72: {
          tagidsCurated_.AddEntriesFrom(input, _repeated_tagidsCurated_codec);
          break;
        }
        case 82:
        case 80: {
          tagidsFiltered_.AddEntriesFrom(input, _repeated_tagidsFiltered_codec);
          break;
        }
        case 90: {
          WebsiteTitle = input.ReadString();
          break;
        }
        case 98: {
          WebsiteUrl = input.ReadString();
          break;
        }
        case 106: {
          DiscussionUrl = input.ReadString();
          break;
        }
        case 112: {
          ShowBroadcast = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SupportedLanguages = input.ReadUInt32();
          break;
        }
        case 16: {
          PlatformWindows = input.ReadBool();
          break;
        }
        case 24: {
          PlatformMac = input.ReadBool();
          break;
        }
        case 32: {
          PlatformLinux = input.ReadBool();
          break;
        }
        case 40: {
          VrContent = input.ReadBool();
          break;
        }
        case 48: {
          AdultContentViolence = input.ReadBool();
          break;
        }
        case 56: {
          AdultContentSex = input.ReadBool();
          break;
        }
        case 64: {
          TimestampUpdated = input.ReadUInt32();
          break;
        }
        case 74:
        case 72: {
          tagidsCurated_.AddEntriesFrom(ref input, _repeated_tagidsCurated_codec);
          break;
        }
        case 82:
        case 80: {
          tagidsFiltered_.AddEntriesFrom(ref input, _repeated_tagidsFiltered_codec);
          break;
        }
        case 90: {
          WebsiteTitle = input.ReadString();
          break;
        }
        case 98: {
          WebsiteUrl = input.ReadString();
          break;
        }
        case 106: {
          DiscussionUrl = input.ReadString();
          break;
        }
        case 112: {
          ShowBroadcast = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CLocalizationToken : pb::IMessage<CLocalizationToken>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CLocalizationToken> _parser = new pb::MessageParser<CLocalizationToken>(() => new CLocalizationToken());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CLocalizationToken> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CLocalizationToken() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CLocalizationToken(CLocalizationToken other) : this() {
    _hasBits0 = other._hasBits0;
    language_ = other.language_;
    localizedString_ = other.localizedString_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CLocalizationToken Clone() {
    return new CLocalizationToken(this);
  }

  /// <summary>Field number for the "language" field.</summary>
  public const int LanguageFieldNumber = 1;
  private readonly static uint LanguageDefaultValue = 0;

  private uint language_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Language {
    get { if ((_hasBits0 & 1) != 0) { return language_; } else { return LanguageDefaultValue; } }
    set {
      _hasBits0 |= 1;
      language_ = value;
    }
  }
  /// <summary>Gets whether the "language" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLanguage {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "language" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLanguage() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "localized_string" field.</summary>
  public const int LocalizedStringFieldNumber = 2;
  private readonly static string LocalizedStringDefaultValue = "";

  private string localizedString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LocalizedString {
    get { return localizedString_ ?? LocalizedStringDefaultValue; }
    set {
      localizedString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "localized_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLocalizedString {
    get { return localizedString_ != null; }
  }
  /// <summary>Clears the value of the "localized_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLocalizedString() {
    localizedString_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CLocalizationToken);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CLocalizationToken other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Language != other.Language) return false;
    if (LocalizedString != other.LocalizedString) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasLanguage) hash ^= Language.GetHashCode();
    if (HasLocalizedString) hash ^= LocalizedString.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasLanguage) {
      output.WriteRawTag(8);
      output.WriteUInt32(Language);
    }
    if (HasLocalizedString) {
      output.WriteRawTag(18);
      output.WriteString(LocalizedString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasLanguage) {
      output.WriteRawTag(8);
      output.WriteUInt32(Language);
    }
    if (HasLocalizedString) {
      output.WriteRawTag(18);
      output.WriteString(LocalizedString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasLanguage) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Language);
    }
    if (HasLocalizedString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalizedString);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CLocalizationToken other) {
    if (other == null) {
      return;
    }
    if (other.HasLanguage) {
      Language = other.Language;
    }
    if (other.HasLocalizedString) {
      LocalizedString = other.LocalizedString;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Language = input.ReadUInt32();
          break;
        }
        case 18: {
          LocalizedString = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Language = input.ReadUInt32();
          break;
        }
        case 18: {
          LocalizedString = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CClanEventUserNewsTuple : pb::IMessage<CClanEventUserNewsTuple>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CClanEventUserNewsTuple> _parser = new pb::MessageParser<CClanEventUserNewsTuple>(() => new CClanEventUserNewsTuple());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CClanEventUserNewsTuple> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanEventUserNewsTuple() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanEventUserNewsTuple(CClanEventUserNewsTuple other) : this() {
    _hasBits0 = other._hasBits0;
    clanid_ = other.clanid_;
    eventGid_ = other.eventGid_;
    announcementGid_ = other.announcementGid_;
    rtimeStart_ = other.rtimeStart_;
    rtimeEnd_ = other.rtimeEnd_;
    priorityScore_ = other.priorityScore_;
    type_ = other.type_;
    clampRangeSlot_ = other.clampRangeSlot_;
    appid_ = other.appid_;
    rtime32LastModified_ = other.rtime32LastModified_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanEventUserNewsTuple Clone() {
    return new CClanEventUserNewsTuple(this);
  }

  /// <summary>Field number for the "clanid" field.</summary>
  public const int ClanidFieldNumber = 1;
  private readonly static uint ClanidDefaultValue = 0;

  private uint clanid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Clanid {
    get { if ((_hasBits0 & 1) != 0) { return clanid_; } else { return ClanidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clanid_ = value;
    }
  }
  /// <summary>Gets whether the "clanid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClanid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "clanid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClanid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "event_gid" field.</summary>
  public const int EventGidFieldNumber = 2;
  private readonly static ulong EventGidDefaultValue = 0UL;

  private ulong eventGid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong EventGid {
    get { if ((_hasBits0 & 2) != 0) { return eventGid_; } else { return EventGidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      eventGid_ = value;
    }
  }
  /// <summary>Gets whether the "event_gid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventGid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "event_gid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventGid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "announcement_gid" field.</summary>
  public const int AnnouncementGidFieldNumber = 3;
  private readonly static ulong AnnouncementGidDefaultValue = 0UL;

  private ulong announcementGid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AnnouncementGid {
    get { if ((_hasBits0 & 4) != 0) { return announcementGid_; } else { return AnnouncementGidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      announcementGid_ = value;
    }
  }
  /// <summary>Gets whether the "announcement_gid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAnnouncementGid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "announcement_gid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAnnouncementGid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "rtime_start" field.</summary>
  public const int RtimeStartFieldNumber = 4;
  private readonly static uint RtimeStartDefaultValue = 0;

  private uint rtimeStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeStart {
    get { if ((_hasBits0 & 8) != 0) { return rtimeStart_; } else { return RtimeStartDefaultValue; } }
    set {
      _hasBits0 |= 8;
      rtimeStart_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_start" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeStart {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "rtime_start" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeStart() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rtime_end" field.</summary>
  public const int RtimeEndFieldNumber = 5;
  private readonly static uint RtimeEndDefaultValue = 0;

  private uint rtimeEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeEnd {
    get { if ((_hasBits0 & 16) != 0) { return rtimeEnd_; } else { return RtimeEndDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rtimeEnd_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_end" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeEnd {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rtime_end" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeEnd() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "priority_score" field.</summary>
  public const int PriorityScoreFieldNumber = 6;
  private readonly static uint PriorityScoreDefaultValue = 0;

  private uint priorityScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PriorityScore {
    get { if ((_hasBits0 & 32) != 0) { return priorityScore_; } else { return PriorityScoreDefaultValue; } }
    set {
      _hasBits0 |= 32;
      priorityScore_ = value;
    }
  }
  /// <summary>Gets whether the "priority_score" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPriorityScore {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "priority_score" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPriorityScore() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 7;
  private readonly static uint TypeDefaultValue = 0;

  private uint type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Type {
    get { if ((_hasBits0 & 64) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "clamp_range_slot" field.</summary>
  public const int ClampRangeSlotFieldNumber = 8;
  private readonly static uint ClampRangeSlotDefaultValue = 0;

  private uint clampRangeSlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClampRangeSlot {
    get { if ((_hasBits0 & 128) != 0) { return clampRangeSlot_; } else { return ClampRangeSlotDefaultValue; } }
    set {
      _hasBits0 |= 128;
      clampRangeSlot_ = value;
    }
  }
  /// <summary>Gets whether the "clamp_range_slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClampRangeSlot {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "clamp_range_slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClampRangeSlot() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 9;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 256) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 256;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "rtime32_last_modified" field.</summary>
  public const int Rtime32LastModifiedFieldNumber = 10;
  private readonly static uint Rtime32LastModifiedDefaultValue = 0;

  private uint rtime32LastModified_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32LastModified {
    get { if ((_hasBits0 & 512) != 0) { return rtime32LastModified_; } else { return Rtime32LastModifiedDefaultValue; } }
    set {
      _hasBits0 |= 512;
      rtime32LastModified_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_last_modified" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32LastModified {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_last_modified" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32LastModified() {
    _hasBits0 &= ~512;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CClanEventUserNewsTuple);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CClanEventUserNewsTuple other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Clanid != other.Clanid) return false;
    if (EventGid != other.EventGid) return false;
    if (AnnouncementGid != other.AnnouncementGid) return false;
    if (RtimeStart != other.RtimeStart) return false;
    if (RtimeEnd != other.RtimeEnd) return false;
    if (PriorityScore != other.PriorityScore) return false;
    if (Type != other.Type) return false;
    if (ClampRangeSlot != other.ClampRangeSlot) return false;
    if (Appid != other.Appid) return false;
    if (Rtime32LastModified != other.Rtime32LastModified) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasClanid) hash ^= Clanid.GetHashCode();
    if (HasEventGid) hash ^= EventGid.GetHashCode();
    if (HasAnnouncementGid) hash ^= AnnouncementGid.GetHashCode();
    if (HasRtimeStart) hash ^= RtimeStart.GetHashCode();
    if (HasRtimeEnd) hash ^= RtimeEnd.GetHashCode();
    if (HasPriorityScore) hash ^= PriorityScore.GetHashCode();
    if (HasType) hash ^= Type.GetHashCode();
    if (HasClampRangeSlot) hash ^= ClampRangeSlot.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasRtime32LastModified) hash ^= Rtime32LastModified.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasClanid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Clanid);
    }
    if (HasEventGid) {
      output.WriteRawTag(17);
      output.WriteFixed64(EventGid);
    }
    if (HasAnnouncementGid) {
      output.WriteRawTag(25);
      output.WriteFixed64(AnnouncementGid);
    }
    if (HasRtimeStart) {
      output.WriteRawTag(32);
      output.WriteUInt32(RtimeStart);
    }
    if (HasRtimeEnd) {
      output.WriteRawTag(40);
      output.WriteUInt32(RtimeEnd);
    }
    if (HasPriorityScore) {
      output.WriteRawTag(48);
      output.WriteUInt32(PriorityScore);
    }
    if (HasType) {
      output.WriteRawTag(56);
      output.WriteUInt32(Type);
    }
    if (HasClampRangeSlot) {
      output.WriteRawTag(64);
      output.WriteUInt32(ClampRangeSlot);
    }
    if (HasAppid) {
      output.WriteRawTag(72);
      output.WriteUInt32(Appid);
    }
    if (HasRtime32LastModified) {
      output.WriteRawTag(80);
      output.WriteUInt32(Rtime32LastModified);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasClanid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Clanid);
    }
    if (HasEventGid) {
      output.WriteRawTag(17);
      output.WriteFixed64(EventGid);
    }
    if (HasAnnouncementGid) {
      output.WriteRawTag(25);
      output.WriteFixed64(AnnouncementGid);
    }
    if (HasRtimeStart) {
      output.WriteRawTag(32);
      output.WriteUInt32(RtimeStart);
    }
    if (HasRtimeEnd) {
      output.WriteRawTag(40);
      output.WriteUInt32(RtimeEnd);
    }
    if (HasPriorityScore) {
      output.WriteRawTag(48);
      output.WriteUInt32(PriorityScore);
    }
    if (HasType) {
      output.WriteRawTag(56);
      output.WriteUInt32(Type);
    }
    if (HasClampRangeSlot) {
      output.WriteRawTag(64);
      output.WriteUInt32(ClampRangeSlot);
    }
    if (HasAppid) {
      output.WriteRawTag(72);
      output.WriteUInt32(Appid);
    }
    if (HasRtime32LastModified) {
      output.WriteRawTag(80);
      output.WriteUInt32(Rtime32LastModified);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasClanid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Clanid);
    }
    if (HasEventGid) {
      size += 1 + 8;
    }
    if (HasAnnouncementGid) {
      size += 1 + 8;
    }
    if (HasRtimeStart) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeStart);
    }
    if (HasRtimeEnd) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeEnd);
    }
    if (HasPriorityScore) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PriorityScore);
    }
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
    }
    if (HasClampRangeSlot) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClampRangeSlot);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasRtime32LastModified) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32LastModified);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CClanEventUserNewsTuple other) {
    if (other == null) {
      return;
    }
    if (other.HasClanid) {
      Clanid = other.Clanid;
    }
    if (other.HasEventGid) {
      EventGid = other.EventGid;
    }
    if (other.HasAnnouncementGid) {
      AnnouncementGid = other.AnnouncementGid;
    }
    if (other.HasRtimeStart) {
      RtimeStart = other.RtimeStart;
    }
    if (other.HasRtimeEnd) {
      RtimeEnd = other.RtimeEnd;
    }
    if (other.HasPriorityScore) {
      PriorityScore = other.PriorityScore;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasClampRangeSlot) {
      ClampRangeSlot = other.ClampRangeSlot;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasRtime32LastModified) {
      Rtime32LastModified = other.Rtime32LastModified;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Clanid = input.ReadUInt32();
          break;
        }
        case 17: {
          EventGid = input.ReadFixed64();
          break;
        }
        case 25: {
          AnnouncementGid = input.ReadFixed64();
          break;
        }
        case 32: {
          RtimeStart = input.ReadUInt32();
          break;
        }
        case 40: {
          RtimeEnd = input.ReadUInt32();
          break;
        }
        case 48: {
          PriorityScore = input.ReadUInt32();
          break;
        }
        case 56: {
          Type = input.ReadUInt32();
          break;
        }
        case 64: {
          ClampRangeSlot = input.ReadUInt32();
          break;
        }
        case 72: {
          Appid = input.ReadUInt32();
          break;
        }
        case 80: {
          Rtime32LastModified = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Clanid = input.ReadUInt32();
          break;
        }
        case 17: {
          EventGid = input.ReadFixed64();
          break;
        }
        case 25: {
          AnnouncementGid = input.ReadFixed64();
          break;
        }
        case 32: {
          RtimeStart = input.ReadUInt32();
          break;
        }
        case 40: {
          RtimeEnd = input.ReadUInt32();
          break;
        }
        case 48: {
          PriorityScore = input.ReadUInt32();
          break;
        }
        case 56: {
          Type = input.ReadUInt32();
          break;
        }
        case 64: {
          ClampRangeSlot = input.ReadUInt32();
          break;
        }
        case 72: {
          Appid = input.ReadUInt32();
          break;
        }
        case 80: {
          Rtime32LastModified = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CClanMatchEventByRange : pb::IMessage<CClanMatchEventByRange>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CClanMatchEventByRange> _parser = new pb::MessageParser<CClanMatchEventByRange>(() => new CClanMatchEventByRange());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CClanMatchEventByRange> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanMatchEventByRange() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanMatchEventByRange(CClanMatchEventByRange other) : this() {
    _hasBits0 = other._hasBits0;
    rtimeBefore_ = other.rtimeBefore_;
    rtimeAfter_ = other.rtimeAfter_;
    qualified_ = other.qualified_;
    events_ = other.events_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanMatchEventByRange Clone() {
    return new CClanMatchEventByRange(this);
  }

  /// <summary>Field number for the "rtime_before" field.</summary>
  public const int RtimeBeforeFieldNumber = 1;
  private readonly static uint RtimeBeforeDefaultValue = 0;

  private uint rtimeBefore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeBefore {
    get { if ((_hasBits0 & 1) != 0) { return rtimeBefore_; } else { return RtimeBeforeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      rtimeBefore_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_before" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeBefore {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "rtime_before" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeBefore() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "rtime_after" field.</summary>
  public const int RtimeAfterFieldNumber = 2;
  private readonly static uint RtimeAfterDefaultValue = 0;

  private uint rtimeAfter_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeAfter {
    get { if ((_hasBits0 & 2) != 0) { return rtimeAfter_; } else { return RtimeAfterDefaultValue; } }
    set {
      _hasBits0 |= 2;
      rtimeAfter_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_after" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeAfter {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "rtime_after" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeAfter() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "qualified" field.</summary>
  public const int QualifiedFieldNumber = 3;
  private readonly static uint QualifiedDefaultValue = 0;

  private uint qualified_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Qualified {
    get { if ((_hasBits0 & 4) != 0) { return qualified_; } else { return QualifiedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      qualified_ = value;
    }
  }
  /// <summary>Gets whether the "qualified" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualified {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "qualified" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualified() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "events" field.</summary>
  public const int EventsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CClanEventUserNewsTuple> _repeated_events_codec
      = pb::FieldCodec.ForMessage(34, global::CClanEventUserNewsTuple.Parser);
  private readonly pbc::RepeatedField<global::CClanEventUserNewsTuple> events_ = new pbc::RepeatedField<global::CClanEventUserNewsTuple>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CClanEventUserNewsTuple> Events {
    get { return events_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CClanMatchEventByRange);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CClanMatchEventByRange other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RtimeBefore != other.RtimeBefore) return false;
    if (RtimeAfter != other.RtimeAfter) return false;
    if (Qualified != other.Qualified) return false;
    if(!events_.Equals(other.events_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRtimeBefore) hash ^= RtimeBefore.GetHashCode();
    if (HasRtimeAfter) hash ^= RtimeAfter.GetHashCode();
    if (HasQualified) hash ^= Qualified.GetHashCode();
    hash ^= events_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRtimeBefore) {
      output.WriteRawTag(8);
      output.WriteUInt32(RtimeBefore);
    }
    if (HasRtimeAfter) {
      output.WriteRawTag(16);
      output.WriteUInt32(RtimeAfter);
    }
    if (HasQualified) {
      output.WriteRawTag(24);
      output.WriteUInt32(Qualified);
    }
    events_.WriteTo(output, _repeated_events_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRtimeBefore) {
      output.WriteRawTag(8);
      output.WriteUInt32(RtimeBefore);
    }
    if (HasRtimeAfter) {
      output.WriteRawTag(16);
      output.WriteUInt32(RtimeAfter);
    }
    if (HasQualified) {
      output.WriteRawTag(24);
      output.WriteUInt32(Qualified);
    }
    events_.WriteTo(ref output, _repeated_events_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRtimeBefore) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeBefore);
    }
    if (HasRtimeAfter) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RtimeAfter);
    }
    if (HasQualified) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Qualified);
    }
    size += events_.CalculateSize(_repeated_events_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CClanMatchEventByRange other) {
    if (other == null) {
      return;
    }
    if (other.HasRtimeBefore) {
      RtimeBefore = other.RtimeBefore;
    }
    if (other.HasRtimeAfter) {
      RtimeAfter = other.RtimeAfter;
    }
    if (other.HasQualified) {
      Qualified = other.Qualified;
    }
    events_.Add(other.events_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RtimeBefore = input.ReadUInt32();
          break;
        }
        case 16: {
          RtimeAfter = input.ReadUInt32();
          break;
        }
        case 24: {
          Qualified = input.ReadUInt32();
          break;
        }
        case 34: {
          events_.AddEntriesFrom(input, _repeated_events_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RtimeBefore = input.ReadUInt32();
          break;
        }
        case 16: {
          RtimeAfter = input.ReadUInt32();
          break;
        }
        case 24: {
          Qualified = input.ReadUInt32();
          break;
        }
        case 34: {
          events_.AddEntriesFrom(ref input, _repeated_events_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CCommunity_ClanAnnouncementInfo : pb::IMessage<CCommunity_ClanAnnouncementInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCommunity_ClanAnnouncementInfo> _parser = new pb::MessageParser<CCommunity_ClanAnnouncementInfo>(() => new CCommunity_ClanAnnouncementInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCommunity_ClanAnnouncementInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCommunity_ClanAnnouncementInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCommunity_ClanAnnouncementInfo(CCommunity_ClanAnnouncementInfo other) : this() {
    _hasBits0 = other._hasBits0;
    gid_ = other.gid_;
    clanid_ = other.clanid_;
    posterid_ = other.posterid_;
    headline_ = other.headline_;
    posttime_ = other.posttime_;
    updatetime_ = other.updatetime_;
    body_ = other.body_;
    commentcount_ = other.commentcount_;
    tags_ = other.tags_.Clone();
    language_ = other.language_;
    hidden_ = other.hidden_;
    forumTopicId_ = other.forumTopicId_;
    eventGid_ = other.eventGid_;
    voteupcount_ = other.voteupcount_;
    votedowncount_ = other.votedowncount_;
    banCheckResult_ = other.banCheckResult_;
    banned_ = other.banned_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCommunity_ClanAnnouncementInfo Clone() {
    return new CCommunity_ClanAnnouncementInfo(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private readonly static ulong GidDefaultValue = 0UL;

  private ulong gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Gid {
    get { if ((_hasBits0 & 1) != 0) { return gid_; } else { return GidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gid_ = value;
    }
  }
  /// <summary>Gets whether the "gid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "gid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "clanid" field.</summary>
  public const int ClanidFieldNumber = 2;
  private readonly static ulong ClanidDefaultValue = 0UL;

  private ulong clanid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Clanid {
    get { if ((_hasBits0 & 2) != 0) { return clanid_; } else { return ClanidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clanid_ = value;
    }
  }
  /// <summary>Gets whether the "clanid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClanid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "clanid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClanid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "posterid" field.</summary>
  public const int PosteridFieldNumber = 3;
  private readonly static ulong PosteridDefaultValue = 0UL;

  private ulong posterid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Posterid {
    get { if ((_hasBits0 & 4) != 0) { return posterid_; } else { return PosteridDefaultValue; } }
    set {
      _hasBits0 |= 4;
      posterid_ = value;
    }
  }
  /// <summary>Gets whether the "posterid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPosterid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "posterid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPosterid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "headline" field.</summary>
  public const int HeadlineFieldNumber = 4;
  private readonly static string HeadlineDefaultValue = "";

  private string headline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Headline {
    get { return headline_ ?? HeadlineDefaultValue; }
    set {
      headline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "headline" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHeadline {
    get { return headline_ != null; }
  }
  /// <summary>Clears the value of the "headline" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHeadline() {
    headline_ = null;
  }

  /// <summary>Field number for the "posttime" field.</summary>
  public const int PosttimeFieldNumber = 5;
  private readonly static uint PosttimeDefaultValue = 0;

  private uint posttime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Posttime {
    get { if ((_hasBits0 & 8) != 0) { return posttime_; } else { return PosttimeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      posttime_ = value;
    }
  }
  /// <summary>Gets whether the "posttime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPosttime {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "posttime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPosttime() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "updatetime" field.</summary>
  public const int UpdatetimeFieldNumber = 6;
  private readonly static uint UpdatetimeDefaultValue = 0;

  private uint updatetime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Updatetime {
    get { if ((_hasBits0 & 16) != 0) { return updatetime_; } else { return UpdatetimeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      updatetime_ = value;
    }
  }
  /// <summary>Gets whether the "updatetime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUpdatetime {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "updatetime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUpdatetime() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "body" field.</summary>
  public const int BodyFieldNumber = 7;
  private readonly static string BodyDefaultValue = "";

  private string body_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Body {
    get { return body_ ?? BodyDefaultValue; }
    set {
      body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "body" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBody {
    get { return body_ != null; }
  }
  /// <summary>Clears the value of the "body" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBody() {
    body_ = null;
  }

  /// <summary>Field number for the "commentcount" field.</summary>
  public const int CommentcountFieldNumber = 8;
  private readonly static int CommentcountDefaultValue = 0;

  private int commentcount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Commentcount {
    get { if ((_hasBits0 & 32) != 0) { return commentcount_; } else { return CommentcountDefaultValue; } }
    set {
      _hasBits0 |= 32;
      commentcount_ = value;
    }
  }
  /// <summary>Gets whether the "commentcount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCommentcount {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "commentcount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCommentcount() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "tags" field.</summary>
  public const int TagsFieldNumber = 9;
  private static readonly pb::FieldCodec<string> _repeated_tags_codec
      = pb::FieldCodec.ForString(74);
  private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> Tags {
    get { return tags_; }
  }

  /// <summary>Field number for the "language" field.</summary>
  public const int LanguageFieldNumber = 10;
  private readonly static int LanguageDefaultValue = 0;

  private int language_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Language {
    get { if ((_hasBits0 & 64) != 0) { return language_; } else { return LanguageDefaultValue; } }
    set {
      _hasBits0 |= 64;
      language_ = value;
    }
  }
  /// <summary>Gets whether the "language" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLanguage {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "language" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLanguage() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "hidden" field.</summary>
  public const int HiddenFieldNumber = 11;
  private readonly static bool HiddenDefaultValue = false;

  private bool hidden_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Hidden {
    get { if ((_hasBits0 & 128) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
    set {
      _hasBits0 |= 128;
      hidden_ = value;
    }
  }
  /// <summary>Gets whether the "hidden" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHidden {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "hidden" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHidden() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "forum_topic_id" field.</summary>
  public const int ForumTopicIdFieldNumber = 12;
  private readonly static ulong ForumTopicIdDefaultValue = 0UL;

  private ulong forumTopicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ForumTopicId {
    get { if ((_hasBits0 & 256) != 0) { return forumTopicId_; } else { return ForumTopicIdDefaultValue; } }
    set {
      _hasBits0 |= 256;
      forumTopicId_ = value;
    }
  }
  /// <summary>Gets whether the "forum_topic_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasForumTopicId {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "forum_topic_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearForumTopicId() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "event_gid" field.</summary>
  public const int EventGidFieldNumber = 13;
  private readonly static ulong EventGidDefaultValue = 0UL;

  private ulong eventGid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong EventGid {
    get { if ((_hasBits0 & 512) != 0) { return eventGid_; } else { return EventGidDefaultValue; } }
    set {
      _hasBits0 |= 512;
      eventGid_ = value;
    }
  }
  /// <summary>Gets whether the "event_gid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventGid {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "event_gid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventGid() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "voteupcount" field.</summary>
  public const int VoteupcountFieldNumber = 14;
  private readonly static int VoteupcountDefaultValue = 0;

  private int voteupcount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Voteupcount {
    get { if ((_hasBits0 & 1024) != 0) { return voteupcount_; } else { return VoteupcountDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      voteupcount_ = value;
    }
  }
  /// <summary>Gets whether the "voteupcount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVoteupcount {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "voteupcount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVoteupcount() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "votedowncount" field.</summary>
  public const int VotedowncountFieldNumber = 15;
  private readonly static int VotedowncountDefaultValue = 0;

  private int votedowncount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Votedowncount {
    get { if ((_hasBits0 & 2048) != 0) { return votedowncount_; } else { return VotedowncountDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      votedowncount_ = value;
    }
  }
  /// <summary>Gets whether the "votedowncount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVotedowncount {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "votedowncount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVotedowncount() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "ban_check_result" field.</summary>
  public const int BanCheckResultFieldNumber = 16;
  private readonly static global::EBanContentCheckResult BanCheckResultDefaultValue = global::EBanContentCheckResult.KEbanContentCheckResultNotScanned;

  private global::EBanContentCheckResult banCheckResult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EBanContentCheckResult BanCheckResult {
    get { if ((_hasBits0 & 4096) != 0) { return banCheckResult_; } else { return BanCheckResultDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      banCheckResult_ = value;
    }
  }
  /// <summary>Gets whether the "ban_check_result" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBanCheckResult {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "ban_check_result" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBanCheckResult() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "banned" field.</summary>
  public const int BannedFieldNumber = 17;
  private readonly static bool BannedDefaultValue = false;

  private bool banned_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Banned {
    get { if ((_hasBits0 & 8192) != 0) { return banned_; } else { return BannedDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      banned_ = value;
    }
  }
  /// <summary>Gets whether the "banned" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBanned {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "banned" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBanned() {
    _hasBits0 &= ~8192;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCommunity_ClanAnnouncementInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCommunity_ClanAnnouncementInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (Clanid != other.Clanid) return false;
    if (Posterid != other.Posterid) return false;
    if (Headline != other.Headline) return false;
    if (Posttime != other.Posttime) return false;
    if (Updatetime != other.Updatetime) return false;
    if (Body != other.Body) return false;
    if (Commentcount != other.Commentcount) return false;
    if(!tags_.Equals(other.tags_)) return false;
    if (Language != other.Language) return false;
    if (Hidden != other.Hidden) return false;
    if (ForumTopicId != other.ForumTopicId) return false;
    if (EventGid != other.EventGid) return false;
    if (Voteupcount != other.Voteupcount) return false;
    if (Votedowncount != other.Votedowncount) return false;
    if (BanCheckResult != other.BanCheckResult) return false;
    if (Banned != other.Banned) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGid) hash ^= Gid.GetHashCode();
    if (HasClanid) hash ^= Clanid.GetHashCode();
    if (HasPosterid) hash ^= Posterid.GetHashCode();
    if (HasHeadline) hash ^= Headline.GetHashCode();
    if (HasPosttime) hash ^= Posttime.GetHashCode();
    if (HasUpdatetime) hash ^= Updatetime.GetHashCode();
    if (HasBody) hash ^= Body.GetHashCode();
    if (HasCommentcount) hash ^= Commentcount.GetHashCode();
    hash ^= tags_.GetHashCode();
    if (HasLanguage) hash ^= Language.GetHashCode();
    if (HasHidden) hash ^= Hidden.GetHashCode();
    if (HasForumTopicId) hash ^= ForumTopicId.GetHashCode();
    if (HasEventGid) hash ^= EventGid.GetHashCode();
    if (HasVoteupcount) hash ^= Voteupcount.GetHashCode();
    if (HasVotedowncount) hash ^= Votedowncount.GetHashCode();
    if (HasBanCheckResult) hash ^= BanCheckResult.GetHashCode();
    if (HasBanned) hash ^= Banned.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Gid);
    }
    if (HasClanid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Clanid);
    }
    if (HasPosterid) {
      output.WriteRawTag(24);
      output.WriteUInt64(Posterid);
    }
    if (HasHeadline) {
      output.WriteRawTag(34);
      output.WriteString(Headline);
    }
    if (HasPosttime) {
      output.WriteRawTag(40);
      output.WriteUInt32(Posttime);
    }
    if (HasUpdatetime) {
      output.WriteRawTag(48);
      output.WriteUInt32(Updatetime);
    }
    if (HasBody) {
      output.WriteRawTag(58);
      output.WriteString(Body);
    }
    if (HasCommentcount) {
      output.WriteRawTag(64);
      output.WriteInt32(Commentcount);
    }
    tags_.WriteTo(output, _repeated_tags_codec);
    if (HasLanguage) {
      output.WriteRawTag(80);
      output.WriteInt32(Language);
    }
    if (HasHidden) {
      output.WriteRawTag(88);
      output.WriteBool(Hidden);
    }
    if (HasForumTopicId) {
      output.WriteRawTag(97);
      output.WriteFixed64(ForumTopicId);
    }
    if (HasEventGid) {
      output.WriteRawTag(105);
      output.WriteFixed64(EventGid);
    }
    if (HasVoteupcount) {
      output.WriteRawTag(112);
      output.WriteInt32(Voteupcount);
    }
    if (HasVotedowncount) {
      output.WriteRawTag(120);
      output.WriteInt32(Votedowncount);
    }
    if (HasBanCheckResult) {
      output.WriteRawTag(128, 1);
      output.WriteEnum((int) BanCheckResult);
    }
    if (HasBanned) {
      output.WriteRawTag(136, 1);
      output.WriteBool(Banned);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Gid);
    }
    if (HasClanid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Clanid);
    }
    if (HasPosterid) {
      output.WriteRawTag(24);
      output.WriteUInt64(Posterid);
    }
    if (HasHeadline) {
      output.WriteRawTag(34);
      output.WriteString(Headline);
    }
    if (HasPosttime) {
      output.WriteRawTag(40);
      output.WriteUInt32(Posttime);
    }
    if (HasUpdatetime) {
      output.WriteRawTag(48);
      output.WriteUInt32(Updatetime);
    }
    if (HasBody) {
      output.WriteRawTag(58);
      output.WriteString(Body);
    }
    if (HasCommentcount) {
      output.WriteRawTag(64);
      output.WriteInt32(Commentcount);
    }
    tags_.WriteTo(ref output, _repeated_tags_codec);
    if (HasLanguage) {
      output.WriteRawTag(80);
      output.WriteInt32(Language);
    }
    if (HasHidden) {
      output.WriteRawTag(88);
      output.WriteBool(Hidden);
    }
    if (HasForumTopicId) {
      output.WriteRawTag(97);
      output.WriteFixed64(ForumTopicId);
    }
    if (HasEventGid) {
      output.WriteRawTag(105);
      output.WriteFixed64(EventGid);
    }
    if (HasVoteupcount) {
      output.WriteRawTag(112);
      output.WriteInt32(Voteupcount);
    }
    if (HasVotedowncount) {
      output.WriteRawTag(120);
      output.WriteInt32(Votedowncount);
    }
    if (HasBanCheckResult) {
      output.WriteRawTag(128, 1);
      output.WriteEnum((int) BanCheckResult);
    }
    if (HasBanned) {
      output.WriteRawTag(136, 1);
      output.WriteBool(Banned);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
    }
    if (HasClanid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Clanid);
    }
    if (HasPosterid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Posterid);
    }
    if (HasHeadline) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Headline);
    }
    if (HasPosttime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Posttime);
    }
    if (HasUpdatetime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Updatetime);
    }
    if (HasBody) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
    }
    if (HasCommentcount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Commentcount);
    }
    size += tags_.CalculateSize(_repeated_tags_codec);
    if (HasLanguage) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Language);
    }
    if (HasHidden) {
      size += 1 + 1;
    }
    if (HasForumTopicId) {
      size += 1 + 8;
    }
    if (HasEventGid) {
      size += 1 + 8;
    }
    if (HasVoteupcount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Voteupcount);
    }
    if (HasVotedowncount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Votedowncount);
    }
    if (HasBanCheckResult) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BanCheckResult);
    }
    if (HasBanned) {
      size += 2 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCommunity_ClanAnnouncementInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasGid) {
      Gid = other.Gid;
    }
    if (other.HasClanid) {
      Clanid = other.Clanid;
    }
    if (other.HasPosterid) {
      Posterid = other.Posterid;
    }
    if (other.HasHeadline) {
      Headline = other.Headline;
    }
    if (other.HasPosttime) {
      Posttime = other.Posttime;
    }
    if (other.HasUpdatetime) {
      Updatetime = other.Updatetime;
    }
    if (other.HasBody) {
      Body = other.Body;
    }
    if (other.HasCommentcount) {
      Commentcount = other.Commentcount;
    }
    tags_.Add(other.tags_);
    if (other.HasLanguage) {
      Language = other.Language;
    }
    if (other.HasHidden) {
      Hidden = other.Hidden;
    }
    if (other.HasForumTopicId) {
      ForumTopicId = other.ForumTopicId;
    }
    if (other.HasEventGid) {
      EventGid = other.EventGid;
    }
    if (other.HasVoteupcount) {
      Voteupcount = other.Voteupcount;
    }
    if (other.HasVotedowncount) {
      Votedowncount = other.Votedowncount;
    }
    if (other.HasBanCheckResult) {
      BanCheckResult = other.BanCheckResult;
    }
    if (other.HasBanned) {
      Banned = other.Banned;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Gid = input.ReadUInt64();
          break;
        }
        case 16: {
          Clanid = input.ReadUInt64();
          break;
        }
        case 24: {
          Posterid = input.ReadUInt64();
          break;
        }
        case 34: {
          Headline = input.ReadString();
          break;
        }
        case 40: {
          Posttime = input.ReadUInt32();
          break;
        }
        case 48: {
          Updatetime = input.ReadUInt32();
          break;
        }
        case 58: {
          Body = input.ReadString();
          break;
        }
        case 64: {
          Commentcount = input.ReadInt32();
          break;
        }
        case 74: {
          tags_.AddEntriesFrom(input, _repeated_tags_codec);
          break;
        }
        case 80: {
          Language = input.ReadInt32();
          break;
        }
        case 88: {
          Hidden = input.ReadBool();
          break;
        }
        case 97: {
          ForumTopicId = input.ReadFixed64();
          break;
        }
        case 105: {
          EventGid = input.ReadFixed64();
          break;
        }
        case 112: {
          Voteupcount = input.ReadInt32();
          break;
        }
        case 120: {
          Votedowncount = input.ReadInt32();
          break;
        }
        case 128: {
          BanCheckResult = (global::EBanContentCheckResult) input.ReadEnum();
          break;
        }
        case 136: {
          Banned = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Gid = input.ReadUInt64();
          break;
        }
        case 16: {
          Clanid = input.ReadUInt64();
          break;
        }
        case 24: {
          Posterid = input.ReadUInt64();
          break;
        }
        case 34: {
          Headline = input.ReadString();
          break;
        }
        case 40: {
          Posttime = input.ReadUInt32();
          break;
        }
        case 48: {
          Updatetime = input.ReadUInt32();
          break;
        }
        case 58: {
          Body = input.ReadString();
          break;
        }
        case 64: {
          Commentcount = input.ReadInt32();
          break;
        }
        case 74: {
          tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
          break;
        }
        case 80: {
          Language = input.ReadInt32();
          break;
        }
        case 88: {
          Hidden = input.ReadBool();
          break;
        }
        case 97: {
          ForumTopicId = input.ReadFixed64();
          break;
        }
        case 105: {
          EventGid = input.ReadFixed64();
          break;
        }
        case 112: {
          Voteupcount = input.ReadInt32();
          break;
        }
        case 120: {
          Votedowncount = input.ReadInt32();
          break;
        }
        case 128: {
          BanCheckResult = (global::EBanContentCheckResult) input.ReadEnum();
          break;
        }
        case 136: {
          Banned = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CClanEventData : pb::IMessage<CClanEventData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CClanEventData> _parser = new pb::MessageParser<CClanEventData>(() => new CClanEventData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CClanEventData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanEventData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanEventData(CClanEventData other) : this() {
    _hasBits0 = other._hasBits0;
    gid_ = other.gid_;
    clanSteamid_ = other.clanSteamid_;
    eventName_ = other.eventName_;
    eventType_ = other.eventType_;
    appid_ = other.appid_;
    serverAddress_ = other.serverAddress_;
    serverPassword_ = other.serverPassword_;
    rtime32StartTime_ = other.rtime32StartTime_;
    rtime32EndTime_ = other.rtime32EndTime_;
    commentCount_ = other.commentCount_;
    creatorSteamid_ = other.creatorSteamid_;
    lastUpdateSteamid_ = other.lastUpdateSteamid_;
    eventNotes_ = other.eventNotes_;
    jsondata_ = other.jsondata_;
    announcementBody_ = other.announcementBody_ != null ? other.announcementBody_.Clone() : null;
    published_ = other.published_;
    hidden_ = other.hidden_;
    rtime32VisibilityStart_ = other.rtime32VisibilityStart_;
    rtime32VisibilityEnd_ = other.rtime32VisibilityEnd_;
    broadcasterAccountid_ = other.broadcasterAccountid_;
    followerCount_ = other.followerCount_;
    ignoreCount_ = other.ignoreCount_;
    forumTopicId_ = other.forumTopicId_;
    rtime32LastModified_ = other.rtime32LastModified_;
    newsPostGid_ = other.newsPostGid_;
    rtimeModReviewed_ = other.rtimeModReviewed_;
    featuredAppTagid_ = other.featuredAppTagid_;
    referencedAppids_ = other.referencedAppids_.Clone();
    buildId_ = other.buildId_;
    buildBranch_ = other.buildBranch_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CClanEventData Clone() {
    return new CClanEventData(this);
  }

  /// <summary>Field number for the "gid" field.</summary>
  public const int GidFieldNumber = 1;
  private readonly static ulong GidDefaultValue = 0UL;

  private ulong gid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Gid {
    get { if ((_hasBits0 & 1) != 0) { return gid_; } else { return GidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      gid_ = value;
    }
  }
  /// <summary>Gets whether the "gid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "gid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "clan_steamid" field.</summary>
  public const int ClanSteamidFieldNumber = 2;
  private readonly static ulong ClanSteamidDefaultValue = 0UL;

  private ulong clanSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClanSteamid {
    get { if ((_hasBits0 & 2) != 0) { return clanSteamid_; } else { return ClanSteamidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clanSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "clan_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClanSteamid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "clan_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClanSteamid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "event_name" field.</summary>
  public const int EventNameFieldNumber = 3;
  private readonly static string EventNameDefaultValue = "";

  private string eventName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EventName {
    get { return eventName_ ?? EventNameDefaultValue; }
    set {
      eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "event_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventName {
    get { return eventName_ != null; }
  }
  /// <summary>Clears the value of the "event_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventName() {
    eventName_ = null;
  }

  /// <summary>Field number for the "event_type" field.</summary>
  public const int EventTypeFieldNumber = 4;
  private readonly static global::EProtoClanEventType EventTypeDefaultValue = global::EProtoClanEventType.KEclanOtherEvent;

  private global::EProtoClanEventType eventType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EProtoClanEventType EventType {
    get { if ((_hasBits0 & 4) != 0) { return eventType_; } else { return EventTypeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      eventType_ = value;
    }
  }
  /// <summary>Gets whether the "event_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventType {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "event_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventType() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 5;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 8) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "server_address" field.</summary>
  public const int ServerAddressFieldNumber = 6;
  private readonly static string ServerAddressDefaultValue = "";

  private string serverAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerAddress {
    get { return serverAddress_ ?? ServerAddressDefaultValue; }
    set {
      serverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerAddress {
    get { return serverAddress_ != null; }
  }
  /// <summary>Clears the value of the "server_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerAddress() {
    serverAddress_ = null;
  }

  /// <summary>Field number for the "server_password" field.</summary>
  public const int ServerPasswordFieldNumber = 7;
  private readonly static string ServerPasswordDefaultValue = "";

  private string serverPassword_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerPassword {
    get { return serverPassword_ ?? ServerPasswordDefaultValue; }
    set {
      serverPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_password" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerPassword {
    get { return serverPassword_ != null; }
  }
  /// <summary>Clears the value of the "server_password" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerPassword() {
    serverPassword_ = null;
  }

  /// <summary>Field number for the "rtime32_start_time" field.</summary>
  public const int Rtime32StartTimeFieldNumber = 8;
  private readonly static uint Rtime32StartTimeDefaultValue = 0;

  private uint rtime32StartTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32StartTime {
    get { if ((_hasBits0 & 16) != 0) { return rtime32StartTime_; } else { return Rtime32StartTimeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rtime32StartTime_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_start_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32StartTime {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_start_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32StartTime() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "rtime32_end_time" field.</summary>
  public const int Rtime32EndTimeFieldNumber = 9;
  private readonly static uint Rtime32EndTimeDefaultValue = 0;

  private uint rtime32EndTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32EndTime {
    get { if ((_hasBits0 & 32) != 0) { return rtime32EndTime_; } else { return Rtime32EndTimeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      rtime32EndTime_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_end_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32EndTime {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_end_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32EndTime() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "comment_count" field.</summary>
  public const int CommentCountFieldNumber = 10;
  private readonly static int CommentCountDefaultValue = 0;

  private int commentCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CommentCount {
    get { if ((_hasBits0 & 64) != 0) { return commentCount_; } else { return CommentCountDefaultValue; } }
    set {
      _hasBits0 |= 64;
      commentCount_ = value;
    }
  }
  /// <summary>Gets whether the "comment_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCommentCount {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "comment_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCommentCount() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "creator_steamid" field.</summary>
  public const int CreatorSteamidFieldNumber = 11;
  private readonly static ulong CreatorSteamidDefaultValue = 0UL;

  private ulong creatorSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong CreatorSteamid {
    get { if ((_hasBits0 & 128) != 0) { return creatorSteamid_; } else { return CreatorSteamidDefaultValue; } }
    set {
      _hasBits0 |= 128;
      creatorSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "creator_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreatorSteamid {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "creator_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreatorSteamid() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "last_update_steamid" field.</summary>
  public const int LastUpdateSteamidFieldNumber = 12;
  private readonly static ulong LastUpdateSteamidDefaultValue = 0UL;

  private ulong lastUpdateSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LastUpdateSteamid {
    get { if ((_hasBits0 & 256) != 0) { return lastUpdateSteamid_; } else { return LastUpdateSteamidDefaultValue; } }
    set {
      _hasBits0 |= 256;
      lastUpdateSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "last_update_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastUpdateSteamid {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "last_update_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastUpdateSteamid() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "event_notes" field.</summary>
  public const int EventNotesFieldNumber = 13;
  private readonly static string EventNotesDefaultValue = "";

  private string eventNotes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EventNotes {
    get { return eventNotes_ ?? EventNotesDefaultValue; }
    set {
      eventNotes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "event_notes" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventNotes {
    get { return eventNotes_ != null; }
  }
  /// <summary>Clears the value of the "event_notes" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventNotes() {
    eventNotes_ = null;
  }

  /// <summary>Field number for the "jsondata" field.</summary>
  public const int JsondataFieldNumber = 14;
  private readonly static string JsondataDefaultValue = "";

  private string jsondata_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Jsondata {
    get { return jsondata_ ?? JsondataDefaultValue; }
    set {
      jsondata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "jsondata" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJsondata {
    get { return jsondata_ != null; }
  }
  /// <summary>Clears the value of the "jsondata" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJsondata() {
    jsondata_ = null;
  }

  /// <summary>Field number for the "announcement_body" field.</summary>
  public const int AnnouncementBodyFieldNumber = 15;
  private global::CCommunity_ClanAnnouncementInfo announcementBody_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CCommunity_ClanAnnouncementInfo AnnouncementBody {
    get { return announcementBody_; }
    set {
      announcementBody_ = value;
    }
  }

  /// <summary>Field number for the "published" field.</summary>
  public const int PublishedFieldNumber = 16;
  private readonly static bool PublishedDefaultValue = false;

  private bool published_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Published {
    get { if ((_hasBits0 & 512) != 0) { return published_; } else { return PublishedDefaultValue; } }
    set {
      _hasBits0 |= 512;
      published_ = value;
    }
  }
  /// <summary>Gets whether the "published" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPublished {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "published" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPublished() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "hidden" field.</summary>
  public const int HiddenFieldNumber = 17;
  private readonly static bool HiddenDefaultValue = false;

  private bool hidden_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Hidden {
    get { if ((_hasBits0 & 1024) != 0) { return hidden_; } else { return HiddenDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      hidden_ = value;
    }
  }
  /// <summary>Gets whether the "hidden" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHidden {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "hidden" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHidden() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "rtime32_visibility_start" field.</summary>
  public const int Rtime32VisibilityStartFieldNumber = 18;
  private readonly static uint Rtime32VisibilityStartDefaultValue = 0;

  private uint rtime32VisibilityStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32VisibilityStart {
    get { if ((_hasBits0 & 2048) != 0) { return rtime32VisibilityStart_; } else { return Rtime32VisibilityStartDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      rtime32VisibilityStart_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_visibility_start" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32VisibilityStart {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_visibility_start" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32VisibilityStart() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "rtime32_visibility_end" field.</summary>
  public const int Rtime32VisibilityEndFieldNumber = 19;
  private readonly static uint Rtime32VisibilityEndDefaultValue = 0;

  private uint rtime32VisibilityEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32VisibilityEnd {
    get { if ((_hasBits0 & 4096) != 0) { return rtime32VisibilityEnd_; } else { return Rtime32VisibilityEndDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      rtime32VisibilityEnd_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_visibility_end" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32VisibilityEnd {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_visibility_end" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32VisibilityEnd() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "broadcaster_accountid" field.</summary>
  public const int BroadcasterAccountidFieldNumber = 20;
  private readonly static uint BroadcasterAccountidDefaultValue = 0;

  private uint broadcasterAccountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BroadcasterAccountid {
    get { if ((_hasBits0 & 8192) != 0) { return broadcasterAccountid_; } else { return BroadcasterAccountidDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      broadcasterAccountid_ = value;
    }
  }
  /// <summary>Gets whether the "broadcaster_accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBroadcasterAccountid {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "broadcaster_accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBroadcasterAccountid() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "follower_count" field.</summary>
  public const int FollowerCountFieldNumber = 21;
  private readonly static uint FollowerCountDefaultValue = 0;

  private uint followerCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FollowerCount {
    get { if ((_hasBits0 & 16384) != 0) { return followerCount_; } else { return FollowerCountDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      followerCount_ = value;
    }
  }
  /// <summary>Gets whether the "follower_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFollowerCount {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "follower_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFollowerCount() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "ignore_count" field.</summary>
  public const int IgnoreCountFieldNumber = 22;
  private readonly static uint IgnoreCountDefaultValue = 0;

  private uint ignoreCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint IgnoreCount {
    get { if ((_hasBits0 & 32768) != 0) { return ignoreCount_; } else { return IgnoreCountDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      ignoreCount_ = value;
    }
  }
  /// <summary>Gets whether the "ignore_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIgnoreCount {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "ignore_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIgnoreCount() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "forum_topic_id" field.</summary>
  public const int ForumTopicIdFieldNumber = 23;
  private readonly static ulong ForumTopicIdDefaultValue = 0UL;

  private ulong forumTopicId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ForumTopicId {
    get { if ((_hasBits0 & 65536) != 0) { return forumTopicId_; } else { return ForumTopicIdDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      forumTopicId_ = value;
    }
  }
  /// <summary>Gets whether the "forum_topic_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasForumTopicId {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "forum_topic_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearForumTopicId() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "rtime32_last_modified" field.</summary>
  public const int Rtime32LastModifiedFieldNumber = 24;
  private readonly static uint Rtime32LastModifiedDefaultValue = 0;

  private uint rtime32LastModified_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32LastModified {
    get { if ((_hasBits0 & 131072) != 0) { return rtime32LastModified_; } else { return Rtime32LastModifiedDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      rtime32LastModified_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_last_modified" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32LastModified {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_last_modified" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32LastModified() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "news_post_gid" field.</summary>
  public const int NewsPostGidFieldNumber = 25;
  private readonly static ulong NewsPostGidDefaultValue = 0UL;

  private ulong newsPostGid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong NewsPostGid {
    get { if ((_hasBits0 & 262144) != 0) { return newsPostGid_; } else { return NewsPostGidDefaultValue; } }
    set {
      _hasBits0 |= 262144;
      newsPostGid_ = value;
    }
  }
  /// <summary>Gets whether the "news_post_gid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNewsPostGid {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "news_post_gid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNewsPostGid() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "rtime_mod_reviewed" field.</summary>
  public const int RtimeModReviewedFieldNumber = 26;
  private readonly static uint RtimeModReviewedDefaultValue = 0;

  private uint rtimeModReviewed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtimeModReviewed {
    get { if ((_hasBits0 & 524288) != 0) { return rtimeModReviewed_; } else { return RtimeModReviewedDefaultValue; } }
    set {
      _hasBits0 |= 524288;
      rtimeModReviewed_ = value;
    }
  }
  /// <summary>Gets whether the "rtime_mod_reviewed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtimeModReviewed {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "rtime_mod_reviewed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtimeModReviewed() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "featured_app_tagid" field.</summary>
  public const int FeaturedAppTagidFieldNumber = 27;
  private readonly static uint FeaturedAppTagidDefaultValue = 0;

  private uint featuredAppTagid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FeaturedAppTagid {
    get { if ((_hasBits0 & 1048576) != 0) { return featuredAppTagid_; } else { return FeaturedAppTagidDefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      featuredAppTagid_ = value;
    }
  }
  /// <summary>Gets whether the "featured_app_tagid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFeaturedAppTagid {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "featured_app_tagid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFeaturedAppTagid() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "referenced_appids" field.</summary>
  public const int ReferencedAppidsFieldNumber = 28;
  private static readonly pb::FieldCodec<uint> _repeated_referencedAppids_codec
      = pb::FieldCodec.ForUInt32(224);
  private readonly pbc::RepeatedField<uint> referencedAppids_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> ReferencedAppids {
    get { return referencedAppids_; }
  }

  /// <summary>Field number for the "build_id" field.</summary>
  public const int BuildIdFieldNumber = 29;
  private readonly static uint BuildIdDefaultValue = 0;

  private uint buildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BuildId {
    get { if ((_hasBits0 & 2097152) != 0) { return buildId_; } else { return BuildIdDefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      buildId_ = value;
    }
  }
  /// <summary>Gets whether the "build_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBuildId {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "build_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBuildId() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "build_branch" field.</summary>
  public const int BuildBranchFieldNumber = 30;
  private readonly static string BuildBranchDefaultValue = "";

  private string buildBranch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string BuildBranch {
    get { return buildBranch_ ?? BuildBranchDefaultValue; }
    set {
      buildBranch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "build_branch" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBuildBranch {
    get { return buildBranch_ != null; }
  }
  /// <summary>Clears the value of the "build_branch" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBuildBranch() {
    buildBranch_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CClanEventData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CClanEventData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Gid != other.Gid) return false;
    if (ClanSteamid != other.ClanSteamid) return false;
    if (EventName != other.EventName) return false;
    if (EventType != other.EventType) return false;
    if (Appid != other.Appid) return false;
    if (ServerAddress != other.ServerAddress) return false;
    if (ServerPassword != other.ServerPassword) return false;
    if (Rtime32StartTime != other.Rtime32StartTime) return false;
    if (Rtime32EndTime != other.Rtime32EndTime) return false;
    if (CommentCount != other.CommentCount) return false;
    if (CreatorSteamid != other.CreatorSteamid) return false;
    if (LastUpdateSteamid != other.LastUpdateSteamid) return false;
    if (EventNotes != other.EventNotes) return false;
    if (Jsondata != other.Jsondata) return false;
    if (!object.Equals(AnnouncementBody, other.AnnouncementBody)) return false;
    if (Published != other.Published) return false;
    if (Hidden != other.Hidden) return false;
    if (Rtime32VisibilityStart != other.Rtime32VisibilityStart) return false;
    if (Rtime32VisibilityEnd != other.Rtime32VisibilityEnd) return false;
    if (BroadcasterAccountid != other.BroadcasterAccountid) return false;
    if (FollowerCount != other.FollowerCount) return false;
    if (IgnoreCount != other.IgnoreCount) return false;
    if (ForumTopicId != other.ForumTopicId) return false;
    if (Rtime32LastModified != other.Rtime32LastModified) return false;
    if (NewsPostGid != other.NewsPostGid) return false;
    if (RtimeModReviewed != other.RtimeModReviewed) return false;
    if (FeaturedAppTagid != other.FeaturedAppTagid) return false;
    if(!referencedAppids_.Equals(other.referencedAppids_)) return false;
    if (BuildId != other.BuildId) return false;
    if (BuildBranch != other.BuildBranch) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGid) hash ^= Gid.GetHashCode();
    if (HasClanSteamid) hash ^= ClanSteamid.GetHashCode();
    if (HasEventName) hash ^= EventName.GetHashCode();
    if (HasEventType) hash ^= EventType.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasServerAddress) hash ^= ServerAddress.GetHashCode();
    if (HasServerPassword) hash ^= ServerPassword.GetHashCode();
    if (HasRtime32StartTime) hash ^= Rtime32StartTime.GetHashCode();
    if (HasRtime32EndTime) hash ^= Rtime32EndTime.GetHashCode();
    if (HasCommentCount) hash ^= CommentCount.GetHashCode();
    if (HasCreatorSteamid) hash ^= CreatorSteamid.GetHashCode();
    if (HasLastUpdateSteamid) hash ^= LastUpdateSteamid.GetHashCode();
    if (HasEventNotes) hash ^= EventNotes.GetHashCode();
    if (HasJsondata) hash ^= Jsondata.GetHashCode();
    if (announcementBody_ != null) hash ^= AnnouncementBody.GetHashCode();
    if (HasPublished) hash ^= Published.GetHashCode();
    if (HasHidden) hash ^= Hidden.GetHashCode();
    if (HasRtime32VisibilityStart) hash ^= Rtime32VisibilityStart.GetHashCode();
    if (HasRtime32VisibilityEnd) hash ^= Rtime32VisibilityEnd.GetHashCode();
    if (HasBroadcasterAccountid) hash ^= BroadcasterAccountid.GetHashCode();
    if (HasFollowerCount) hash ^= FollowerCount.GetHashCode();
    if (HasIgnoreCount) hash ^= IgnoreCount.GetHashCode();
    if (HasForumTopicId) hash ^= ForumTopicId.GetHashCode();
    if (HasRtime32LastModified) hash ^= Rtime32LastModified.GetHashCode();
    if (HasNewsPostGid) hash ^= NewsPostGid.GetHashCode();
    if (HasRtimeModReviewed) hash ^= RtimeModReviewed.GetHashCode();
    if (HasFeaturedAppTagid) hash ^= FeaturedAppTagid.GetHashCode();
    hash ^= referencedAppids_.GetHashCode();
    if (HasBuildId) hash ^= BuildId.GetHashCode();
    if (HasBuildBranch) hash ^= BuildBranch.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Gid);
    }
    if (HasClanSteamid) {
      output.WriteRawTag(17);
      output.WriteFixed64(ClanSteamid);
    }
    if (HasEventName) {
      output.WriteRawTag(26);
      output.WriteString(EventName);
    }
    if (HasEventType) {
      output.WriteRawTag(32);
      output.WriteEnum((int) EventType);
    }
    if (HasAppid) {
      output.WriteRawTag(40);
      output.WriteUInt32(Appid);
    }
    if (HasServerAddress) {
      output.WriteRawTag(50);
      output.WriteString(ServerAddress);
    }
    if (HasServerPassword) {
      output.WriteRawTag(58);
      output.WriteString(ServerPassword);
    }
    if (HasRtime32StartTime) {
      output.WriteRawTag(64);
      output.WriteUInt32(Rtime32StartTime);
    }
    if (HasRtime32EndTime) {
      output.WriteRawTag(72);
      output.WriteUInt32(Rtime32EndTime);
    }
    if (HasCommentCount) {
      output.WriteRawTag(80);
      output.WriteInt32(CommentCount);
    }
    if (HasCreatorSteamid) {
      output.WriteRawTag(89);
      output.WriteFixed64(CreatorSteamid);
    }
    if (HasLastUpdateSteamid) {
      output.WriteRawTag(97);
      output.WriteFixed64(LastUpdateSteamid);
    }
    if (HasEventNotes) {
      output.WriteRawTag(106);
      output.WriteString(EventNotes);
    }
    if (HasJsondata) {
      output.WriteRawTag(114);
      output.WriteString(Jsondata);
    }
    if (announcementBody_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(AnnouncementBody);
    }
    if (HasPublished) {
      output.WriteRawTag(128, 1);
      output.WriteBool(Published);
    }
    if (HasHidden) {
      output.WriteRawTag(136, 1);
      output.WriteBool(Hidden);
    }
    if (HasRtime32VisibilityStart) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Rtime32VisibilityStart);
    }
    if (HasRtime32VisibilityEnd) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(Rtime32VisibilityEnd);
    }
    if (HasBroadcasterAccountid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(BroadcasterAccountid);
    }
    if (HasFollowerCount) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(FollowerCount);
    }
    if (HasIgnoreCount) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(IgnoreCount);
    }
    if (HasForumTopicId) {
      output.WriteRawTag(185, 1);
      output.WriteFixed64(ForumTopicId);
    }
    if (HasRtime32LastModified) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(Rtime32LastModified);
    }
    if (HasNewsPostGid) {
      output.WriteRawTag(201, 1);
      output.WriteFixed64(NewsPostGid);
    }
    if (HasRtimeModReviewed) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(RtimeModReviewed);
    }
    if (HasFeaturedAppTagid) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(FeaturedAppTagid);
    }
    referencedAppids_.WriteTo(output, _repeated_referencedAppids_codec);
    if (HasBuildId) {
      output.WriteRawTag(232, 1);
      output.WriteUInt32(BuildId);
    }
    if (HasBuildBranch) {
      output.WriteRawTag(242, 1);
      output.WriteString(BuildBranch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Gid);
    }
    if (HasClanSteamid) {
      output.WriteRawTag(17);
      output.WriteFixed64(ClanSteamid);
    }
    if (HasEventName) {
      output.WriteRawTag(26);
      output.WriteString(EventName);
    }
    if (HasEventType) {
      output.WriteRawTag(32);
      output.WriteEnum((int) EventType);
    }
    if (HasAppid) {
      output.WriteRawTag(40);
      output.WriteUInt32(Appid);
    }
    if (HasServerAddress) {
      output.WriteRawTag(50);
      output.WriteString(ServerAddress);
    }
    if (HasServerPassword) {
      output.WriteRawTag(58);
      output.WriteString(ServerPassword);
    }
    if (HasRtime32StartTime) {
      output.WriteRawTag(64);
      output.WriteUInt32(Rtime32StartTime);
    }
    if (HasRtime32EndTime) {
      output.WriteRawTag(72);
      output.WriteUInt32(Rtime32EndTime);
    }
    if (HasCommentCount) {
      output.WriteRawTag(80);
      output.WriteInt32(CommentCount);
    }
    if (HasCreatorSteamid) {
      output.WriteRawTag(89);
      output.WriteFixed64(CreatorSteamid);
    }
    if (HasLastUpdateSteamid) {
      output.WriteRawTag(97);
      output.WriteFixed64(LastUpdateSteamid);
    }
    if (HasEventNotes) {
      output.WriteRawTag(106);
      output.WriteString(EventNotes);
    }
    if (HasJsondata) {
      output.WriteRawTag(114);
      output.WriteString(Jsondata);
    }
    if (announcementBody_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(AnnouncementBody);
    }
    if (HasPublished) {
      output.WriteRawTag(128, 1);
      output.WriteBool(Published);
    }
    if (HasHidden) {
      output.WriteRawTag(136, 1);
      output.WriteBool(Hidden);
    }
    if (HasRtime32VisibilityStart) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Rtime32VisibilityStart);
    }
    if (HasRtime32VisibilityEnd) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(Rtime32VisibilityEnd);
    }
    if (HasBroadcasterAccountid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(BroadcasterAccountid);
    }
    if (HasFollowerCount) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(FollowerCount);
    }
    if (HasIgnoreCount) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(IgnoreCount);
    }
    if (HasForumTopicId) {
      output.WriteRawTag(185, 1);
      output.WriteFixed64(ForumTopicId);
    }
    if (HasRtime32LastModified) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(Rtime32LastModified);
    }
    if (HasNewsPostGid) {
      output.WriteRawTag(201, 1);
      output.WriteFixed64(NewsPostGid);
    }
    if (HasRtimeModReviewed) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(RtimeModReviewed);
    }
    if (HasFeaturedAppTagid) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(FeaturedAppTagid);
    }
    referencedAppids_.WriteTo(ref output, _repeated_referencedAppids_codec);
    if (HasBuildId) {
      output.WriteRawTag(232, 1);
      output.WriteUInt32(BuildId);
    }
    if (HasBuildBranch) {
      output.WriteRawTag(242, 1);
      output.WriteString(BuildBranch);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGid) {
      size += 1 + 8;
    }
    if (HasClanSteamid) {
      size += 1 + 8;
    }
    if (HasEventName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
    }
    if (HasEventType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasServerAddress) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerAddress);
    }
    if (HasServerPassword) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerPassword);
    }
    if (HasRtime32StartTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32StartTime);
    }
    if (HasRtime32EndTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32EndTime);
    }
    if (HasCommentCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CommentCount);
    }
    if (HasCreatorSteamid) {
      size += 1 + 8;
    }
    if (HasLastUpdateSteamid) {
      size += 1 + 8;
    }
    if (HasEventNotes) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EventNotes);
    }
    if (HasJsondata) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Jsondata);
    }
    if (announcementBody_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnnouncementBody);
    }
    if (HasPublished) {
      size += 2 + 1;
    }
    if (HasHidden) {
      size += 2 + 1;
    }
    if (HasRtime32VisibilityStart) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32VisibilityStart);
    }
    if (HasRtime32VisibilityEnd) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32VisibilityEnd);
    }
    if (HasBroadcasterAccountid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BroadcasterAccountid);
    }
    if (HasFollowerCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FollowerCount);
    }
    if (HasIgnoreCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(IgnoreCount);
    }
    if (HasForumTopicId) {
      size += 2 + 8;
    }
    if (HasRtime32LastModified) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Rtime32LastModified);
    }
    if (HasNewsPostGid) {
      size += 2 + 8;
    }
    if (HasRtimeModReviewed) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RtimeModReviewed);
    }
    if (HasFeaturedAppTagid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FeaturedAppTagid);
    }
    size += referencedAppids_.CalculateSize(_repeated_referencedAppids_codec);
    if (HasBuildId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BuildId);
    }
    if (HasBuildBranch) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(BuildBranch);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CClanEventData other) {
    if (other == null) {
      return;
    }
    if (other.HasGid) {
      Gid = other.Gid;
    }
    if (other.HasClanSteamid) {
      ClanSteamid = other.ClanSteamid;
    }
    if (other.HasEventName) {
      EventName = other.EventName;
    }
    if (other.HasEventType) {
      EventType = other.EventType;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasServerAddress) {
      ServerAddress = other.ServerAddress;
    }
    if (other.HasServerPassword) {
      ServerPassword = other.ServerPassword;
    }
    if (other.HasRtime32StartTime) {
      Rtime32StartTime = other.Rtime32StartTime;
    }
    if (other.HasRtime32EndTime) {
      Rtime32EndTime = other.Rtime32EndTime;
    }
    if (other.HasCommentCount) {
      CommentCount = other.CommentCount;
    }
    if (other.HasCreatorSteamid) {
      CreatorSteamid = other.CreatorSteamid;
    }
    if (other.HasLastUpdateSteamid) {
      LastUpdateSteamid = other.LastUpdateSteamid;
    }
    if (other.HasEventNotes) {
      EventNotes = other.EventNotes;
    }
    if (other.HasJsondata) {
      Jsondata = other.Jsondata;
    }
    if (other.announcementBody_ != null) {
      if (announcementBody_ == null) {
        AnnouncementBody = new global::CCommunity_ClanAnnouncementInfo();
      }
      AnnouncementBody.MergeFrom(other.AnnouncementBody);
    }
    if (other.HasPublished) {
      Published = other.Published;
    }
    if (other.HasHidden) {
      Hidden = other.Hidden;
    }
    if (other.HasRtime32VisibilityStart) {
      Rtime32VisibilityStart = other.Rtime32VisibilityStart;
    }
    if (other.HasRtime32VisibilityEnd) {
      Rtime32VisibilityEnd = other.Rtime32VisibilityEnd;
    }
    if (other.HasBroadcasterAccountid) {
      BroadcasterAccountid = other.BroadcasterAccountid;
    }
    if (other.HasFollowerCount) {
      FollowerCount = other.FollowerCount;
    }
    if (other.HasIgnoreCount) {
      IgnoreCount = other.IgnoreCount;
    }
    if (other.HasForumTopicId) {
      ForumTopicId = other.ForumTopicId;
    }
    if (other.HasRtime32LastModified) {
      Rtime32LastModified = other.Rtime32LastModified;
    }
    if (other.HasNewsPostGid) {
      NewsPostGid = other.NewsPostGid;
    }
    if (other.HasRtimeModReviewed) {
      RtimeModReviewed = other.RtimeModReviewed;
    }
    if (other.HasFeaturedAppTagid) {
      FeaturedAppTagid = other.FeaturedAppTagid;
    }
    referencedAppids_.Add(other.referencedAppids_);
    if (other.HasBuildId) {
      BuildId = other.BuildId;
    }
    if (other.HasBuildBranch) {
      BuildBranch = other.BuildBranch;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Gid = input.ReadFixed64();
          break;
        }
        case 17: {
          ClanSteamid = input.ReadFixed64();
          break;
        }
        case 26: {
          EventName = input.ReadString();
          break;
        }
        case 32: {
          EventType = (global::EProtoClanEventType) input.ReadEnum();
          break;
        }
        case 40: {
          Appid = input.ReadUInt32();
          break;
        }
        case 50: {
          ServerAddress = input.ReadString();
          break;
        }
        case 58: {
          ServerPassword = input.ReadString();
          break;
        }
        case 64: {
          Rtime32StartTime = input.ReadUInt32();
          break;
        }
        case 72: {
          Rtime32EndTime = input.ReadUInt32();
          break;
        }
        case 80: {
          CommentCount = input.ReadInt32();
          break;
        }
        case 89: {
          CreatorSteamid = input.ReadFixed64();
          break;
        }
        case 97: {
          LastUpdateSteamid = input.ReadFixed64();
          break;
        }
        case 106: {
          EventNotes = input.ReadString();
          break;
        }
        case 114: {
          Jsondata = input.ReadString();
          break;
        }
        case 122: {
          if (announcementBody_ == null) {
            AnnouncementBody = new global::CCommunity_ClanAnnouncementInfo();
          }
          input.ReadMessage(AnnouncementBody);
          break;
        }
        case 128: {
          Published = input.ReadBool();
          break;
        }
        case 136: {
          Hidden = input.ReadBool();
          break;
        }
        case 144: {
          Rtime32VisibilityStart = input.ReadUInt32();
          break;
        }
        case 152: {
          Rtime32VisibilityEnd = input.ReadUInt32();
          break;
        }
        case 160: {
          BroadcasterAccountid = input.ReadUInt32();
          break;
        }
        case 168: {
          FollowerCount = input.ReadUInt32();
          break;
        }
        case 176: {
          IgnoreCount = input.ReadUInt32();
          break;
        }
        case 185: {
          ForumTopicId = input.ReadFixed64();
          break;
        }
        case 192: {
          Rtime32LastModified = input.ReadUInt32();
          break;
        }
        case 201: {
          NewsPostGid = input.ReadFixed64();
          break;
        }
        case 208: {
          RtimeModReviewed = input.ReadUInt32();
          break;
        }
        case 216: {
          FeaturedAppTagid = input.ReadUInt32();
          break;
        }
        case 226:
        case 224: {
          referencedAppids_.AddEntriesFrom(input, _repeated_referencedAppids_codec);
          break;
        }
        case 232: {
          BuildId = input.ReadUInt32();
          break;
        }
        case 242: {
          BuildBranch = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Gid = input.ReadFixed64();
          break;
        }
        case 17: {
          ClanSteamid = input.ReadFixed64();
          break;
        }
        case 26: {
          EventName = input.ReadString();
          break;
        }
        case 32: {
          EventType = (global::EProtoClanEventType) input.ReadEnum();
          break;
        }
        case 40: {
          Appid = input.ReadUInt32();
          break;
        }
        case 50: {
          ServerAddress = input.ReadString();
          break;
        }
        case 58: {
          ServerPassword = input.ReadString();
          break;
        }
        case 64: {
          Rtime32StartTime = input.ReadUInt32();
          break;
        }
        case 72: {
          Rtime32EndTime = input.ReadUInt32();
          break;
        }
        case 80: {
          CommentCount = input.ReadInt32();
          break;
        }
        case 89: {
          CreatorSteamid = input.ReadFixed64();
          break;
        }
        case 97: {
          LastUpdateSteamid = input.ReadFixed64();
          break;
        }
        case 106: {
          EventNotes = input.ReadString();
          break;
        }
        case 114: {
          Jsondata = input.ReadString();
          break;
        }
        case 122: {
          if (announcementBody_ == null) {
            AnnouncementBody = new global::CCommunity_ClanAnnouncementInfo();
          }
          input.ReadMessage(AnnouncementBody);
          break;
        }
        case 128: {
          Published = input.ReadBool();
          break;
        }
        case 136: {
          Hidden = input.ReadBool();
          break;
        }
        case 144: {
          Rtime32VisibilityStart = input.ReadUInt32();
          break;
        }
        case 152: {
          Rtime32VisibilityEnd = input.ReadUInt32();
          break;
        }
        case 160: {
          BroadcasterAccountid = input.ReadUInt32();
          break;
        }
        case 168: {
          FollowerCount = input.ReadUInt32();
          break;
        }
        case 176: {
          IgnoreCount = input.ReadUInt32();
          break;
        }
        case 185: {
          ForumTopicId = input.ReadFixed64();
          break;
        }
        case 192: {
          Rtime32LastModified = input.ReadUInt32();
          break;
        }
        case 201: {
          NewsPostGid = input.ReadFixed64();
          break;
        }
        case 208: {
          RtimeModReviewed = input.ReadUInt32();
          break;
        }
        case 216: {
          FeaturedAppTagid = input.ReadUInt32();
          break;
        }
        case 226:
        case 224: {
          referencedAppids_.AddEntriesFrom(ref input, _repeated_referencedAppids_codec);
          break;
        }
        case 232: {
          BuildId = input.ReadUInt32();
          break;
        }
        case 242: {
          BuildBranch = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CBilling_Address : pb::IMessage<CBilling_Address>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CBilling_Address> _parser = new pb::MessageParser<CBilling_Address>(() => new CBilling_Address());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CBilling_Address> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBilling_Address() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBilling_Address(CBilling_Address other) : this() {
    _hasBits0 = other._hasBits0;
    firstName_ = other.firstName_;
    lastName_ = other.lastName_;
    address1_ = other.address1_;
    address2_ = other.address2_;
    city_ = other.city_;
    usState_ = other.usState_;
    countryCode_ = other.countryCode_;
    postcode_ = other.postcode_;
    zipPlus4_ = other.zipPlus4_;
    phone_ = other.phone_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBilling_Address Clone() {
    return new CBilling_Address(this);
  }

  /// <summary>Field number for the "first_name" field.</summary>
  public const int FirstNameFieldNumber = 1;
  private readonly static string FirstNameDefaultValue = "";

  private string firstName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FirstName {
    get { return firstName_ ?? FirstNameDefaultValue; }
    set {
      firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "first_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFirstName {
    get { return firstName_ != null; }
  }
  /// <summary>Clears the value of the "first_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFirstName() {
    firstName_ = null;
  }

  /// <summary>Field number for the "last_name" field.</summary>
  public const int LastNameFieldNumber = 2;
  private readonly static string LastNameDefaultValue = "";

  private string lastName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LastName {
    get { return lastName_ ?? LastNameDefaultValue; }
    set {
      lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "last_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastName {
    get { return lastName_ != null; }
  }
  /// <summary>Clears the value of the "last_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastName() {
    lastName_ = null;
  }

  /// <summary>Field number for the "address1" field.</summary>
  public const int Address1FieldNumber = 3;
  private readonly static string Address1DefaultValue = "";

  private string address1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Address1 {
    get { return address1_ ?? Address1DefaultValue; }
    set {
      address1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "address1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAddress1 {
    get { return address1_ != null; }
  }
  /// <summary>Clears the value of the "address1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAddress1() {
    address1_ = null;
  }

  /// <summary>Field number for the "address2" field.</summary>
  public const int Address2FieldNumber = 4;
  private readonly static string Address2DefaultValue = "";

  private string address2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Address2 {
    get { return address2_ ?? Address2DefaultValue; }
    set {
      address2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "address2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAddress2 {
    get { return address2_ != null; }
  }
  /// <summary>Clears the value of the "address2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAddress2() {
    address2_ = null;
  }

  /// <summary>Field number for the "city" field.</summary>
  public const int CityFieldNumber = 5;
  private readonly static string CityDefaultValue = "";

  private string city_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string City {
    get { return city_ ?? CityDefaultValue; }
    set {
      city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "city" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCity {
    get { return city_ != null; }
  }
  /// <summary>Clears the value of the "city" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCity() {
    city_ = null;
  }

  /// <summary>Field number for the "us_state" field.</summary>
  public const int UsStateFieldNumber = 6;
  private readonly static string UsStateDefaultValue = "";

  private string usState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string UsState {
    get { return usState_ ?? UsStateDefaultValue; }
    set {
      usState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "us_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsState {
    get { return usState_ != null; }
  }
  /// <summary>Clears the value of the "us_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsState() {
    usState_ = null;
  }

  /// <summary>Field number for the "country_code" field.</summary>
  public const int CountryCodeFieldNumber = 7;
  private readonly static string CountryCodeDefaultValue = "";

  private string countryCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CountryCode {
    get { return countryCode_ ?? CountryCodeDefaultValue; }
    set {
      countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "country_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountryCode {
    get { return countryCode_ != null; }
  }
  /// <summary>Clears the value of the "country_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountryCode() {
    countryCode_ = null;
  }

  /// <summary>Field number for the "postcode" field.</summary>
  public const int PostcodeFieldNumber = 8;
  private readonly static string PostcodeDefaultValue = "";

  private string postcode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Postcode {
    get { return postcode_ ?? PostcodeDefaultValue; }
    set {
      postcode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "postcode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPostcode {
    get { return postcode_ != null; }
  }
  /// <summary>Clears the value of the "postcode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPostcode() {
    postcode_ = null;
  }

  /// <summary>Field number for the "zip_plus4" field.</summary>
  public const int ZipPlus4FieldNumber = 9;
  private readonly static int ZipPlus4DefaultValue = 0;

  private int zipPlus4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ZipPlus4 {
    get { if ((_hasBits0 & 1) != 0) { return zipPlus4_; } else { return ZipPlus4DefaultValue; } }
    set {
      _hasBits0 |= 1;
      zipPlus4_ = value;
    }
  }
  /// <summary>Gets whether the "zip_plus4" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasZipPlus4 {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "zip_plus4" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearZipPlus4() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 10;
  private readonly static string PhoneDefaultValue = "";

  private string phone_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Phone {
    get { return phone_ ?? PhoneDefaultValue; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "phone" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPhone {
    get { return phone_ != null; }
  }
  /// <summary>Clears the value of the "phone" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPhone() {
    phone_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CBilling_Address);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CBilling_Address other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FirstName != other.FirstName) return false;
    if (LastName != other.LastName) return false;
    if (Address1 != other.Address1) return false;
    if (Address2 != other.Address2) return false;
    if (City != other.City) return false;
    if (UsState != other.UsState) return false;
    if (CountryCode != other.CountryCode) return false;
    if (Postcode != other.Postcode) return false;
    if (ZipPlus4 != other.ZipPlus4) return false;
    if (Phone != other.Phone) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFirstName) hash ^= FirstName.GetHashCode();
    if (HasLastName) hash ^= LastName.GetHashCode();
    if (HasAddress1) hash ^= Address1.GetHashCode();
    if (HasAddress2) hash ^= Address2.GetHashCode();
    if (HasCity) hash ^= City.GetHashCode();
    if (HasUsState) hash ^= UsState.GetHashCode();
    if (HasCountryCode) hash ^= CountryCode.GetHashCode();
    if (HasPostcode) hash ^= Postcode.GetHashCode();
    if (HasZipPlus4) hash ^= ZipPlus4.GetHashCode();
    if (HasPhone) hash ^= Phone.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFirstName) {
      output.WriteRawTag(10);
      output.WriteString(FirstName);
    }
    if (HasLastName) {
      output.WriteRawTag(18);
      output.WriteString(LastName);
    }
    if (HasAddress1) {
      output.WriteRawTag(26);
      output.WriteString(Address1);
    }
    if (HasAddress2) {
      output.WriteRawTag(34);
      output.WriteString(Address2);
    }
    if (HasCity) {
      output.WriteRawTag(42);
      output.WriteString(City);
    }
    if (HasUsState) {
      output.WriteRawTag(50);
      output.WriteString(UsState);
    }
    if (HasCountryCode) {
      output.WriteRawTag(58);
      output.WriteString(CountryCode);
    }
    if (HasPostcode) {
      output.WriteRawTag(66);
      output.WriteString(Postcode);
    }
    if (HasZipPlus4) {
      output.WriteRawTag(72);
      output.WriteInt32(ZipPlus4);
    }
    if (HasPhone) {
      output.WriteRawTag(82);
      output.WriteString(Phone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFirstName) {
      output.WriteRawTag(10);
      output.WriteString(FirstName);
    }
    if (HasLastName) {
      output.WriteRawTag(18);
      output.WriteString(LastName);
    }
    if (HasAddress1) {
      output.WriteRawTag(26);
      output.WriteString(Address1);
    }
    if (HasAddress2) {
      output.WriteRawTag(34);
      output.WriteString(Address2);
    }
    if (HasCity) {
      output.WriteRawTag(42);
      output.WriteString(City);
    }
    if (HasUsState) {
      output.WriteRawTag(50);
      output.WriteString(UsState);
    }
    if (HasCountryCode) {
      output.WriteRawTag(58);
      output.WriteString(CountryCode);
    }
    if (HasPostcode) {
      output.WriteRawTag(66);
      output.WriteString(Postcode);
    }
    if (HasZipPlus4) {
      output.WriteRawTag(72);
      output.WriteInt32(ZipPlus4);
    }
    if (HasPhone) {
      output.WriteRawTag(82);
      output.WriteString(Phone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFirstName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
    }
    if (HasLastName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
    }
    if (HasAddress1) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address1);
    }
    if (HasAddress2) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Address2);
    }
    if (HasCity) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
    }
    if (HasUsState) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UsState);
    }
    if (HasCountryCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
    }
    if (HasPostcode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Postcode);
    }
    if (HasZipPlus4) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZipPlus4);
    }
    if (HasPhone) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CBilling_Address other) {
    if (other == null) {
      return;
    }
    if (other.HasFirstName) {
      FirstName = other.FirstName;
    }
    if (other.HasLastName) {
      LastName = other.LastName;
    }
    if (other.HasAddress1) {
      Address1 = other.Address1;
    }
    if (other.HasAddress2) {
      Address2 = other.Address2;
    }
    if (other.HasCity) {
      City = other.City;
    }
    if (other.HasUsState) {
      UsState = other.UsState;
    }
    if (other.HasCountryCode) {
      CountryCode = other.CountryCode;
    }
    if (other.HasPostcode) {
      Postcode = other.Postcode;
    }
    if (other.HasZipPlus4) {
      ZipPlus4 = other.ZipPlus4;
    }
    if (other.HasPhone) {
      Phone = other.Phone;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FirstName = input.ReadString();
          break;
        }
        case 18: {
          LastName = input.ReadString();
          break;
        }
        case 26: {
          Address1 = input.ReadString();
          break;
        }
        case 34: {
          Address2 = input.ReadString();
          break;
        }
        case 42: {
          City = input.ReadString();
          break;
        }
        case 50: {
          UsState = input.ReadString();
          break;
        }
        case 58: {
          CountryCode = input.ReadString();
          break;
        }
        case 66: {
          Postcode = input.ReadString();
          break;
        }
        case 72: {
          ZipPlus4 = input.ReadInt32();
          break;
        }
        case 82: {
          Phone = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          FirstName = input.ReadString();
          break;
        }
        case 18: {
          LastName = input.ReadString();
          break;
        }
        case 26: {
          Address1 = input.ReadString();
          break;
        }
        case 34: {
          Address2 = input.ReadString();
          break;
        }
        case 42: {
          City = input.ReadString();
          break;
        }
        case 50: {
          UsState = input.ReadString();
          break;
        }
        case 58: {
          CountryCode = input.ReadString();
          break;
        }
        case 66: {
          Postcode = input.ReadString();
          break;
        }
        case 72: {
          ZipPlus4 = input.ReadInt32();
          break;
        }
        case 82: {
          Phone = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CPackageReservationStatus : pb::IMessage<CPackageReservationStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CPackageReservationStatus> _parser = new pb::MessageParser<CPackageReservationStatus>(() => new CPackageReservationStatus());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CPackageReservationStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CPackageReservationStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CPackageReservationStatus(CPackageReservationStatus other) : this() {
    _hasBits0 = other._hasBits0;
    packageid_ = other.packageid_;
    reservationState_ = other.reservationState_;
    queuePosition_ = other.queuePosition_;
    totalQueueSize_ = other.totalQueueSize_;
    reservationCountryCode_ = other.reservationCountryCode_;
    expired_ = other.expired_;
    timeExpires_ = other.timeExpires_;
    timeReserved_ = other.timeReserved_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CPackageReservationStatus Clone() {
    return new CPackageReservationStatus(this);
  }

  /// <summary>Field number for the "packageid" field.</summary>
  public const int PackageidFieldNumber = 1;
  private readonly static uint PackageidDefaultValue = 0;

  private uint packageid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Packageid {
    get { if ((_hasBits0 & 1) != 0) { return packageid_; } else { return PackageidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      packageid_ = value;
    }
  }
  /// <summary>Gets whether the "packageid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPackageid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "packageid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPackageid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "reservation_state" field.</summary>
  public const int ReservationStateFieldNumber = 2;
  private readonly static int ReservationStateDefaultValue = 0;

  private int reservationState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ReservationState {
    get { if ((_hasBits0 & 2) != 0) { return reservationState_; } else { return ReservationStateDefaultValue; } }
    set {
      _hasBits0 |= 2;
      reservationState_ = value;
    }
  }
  /// <summary>Gets whether the "reservation_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationState {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "reservation_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationState() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "queue_position" field.</summary>
  public const int QueuePositionFieldNumber = 3;
  private readonly static int QueuePositionDefaultValue = 0;

  private int queuePosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int QueuePosition {
    get { if ((_hasBits0 & 4) != 0) { return queuePosition_; } else { return QueuePositionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      queuePosition_ = value;
    }
  }
  /// <summary>Gets whether the "queue_position" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQueuePosition {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "queue_position" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQueuePosition() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "total_queue_size" field.</summary>
  public const int TotalQueueSizeFieldNumber = 4;
  private readonly static int TotalQueueSizeDefaultValue = 0;

  private int totalQueueSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TotalQueueSize {
    get { if ((_hasBits0 & 8) != 0) { return totalQueueSize_; } else { return TotalQueueSizeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      totalQueueSize_ = value;
    }
  }
  /// <summary>Gets whether the "total_queue_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalQueueSize {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "total_queue_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalQueueSize() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "reservation_country_code" field.</summary>
  public const int ReservationCountryCodeFieldNumber = 5;
  private readonly static string ReservationCountryCodeDefaultValue = "";

  private string reservationCountryCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ReservationCountryCode {
    get { return reservationCountryCode_ ?? ReservationCountryCodeDefaultValue; }
    set {
      reservationCountryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "reservation_country_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReservationCountryCode {
    get { return reservationCountryCode_ != null; }
  }
  /// <summary>Clears the value of the "reservation_country_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReservationCountryCode() {
    reservationCountryCode_ = null;
  }

  /// <summary>Field number for the "expired" field.</summary>
  public const int ExpiredFieldNumber = 6;
  private readonly static bool ExpiredDefaultValue = false;

  private bool expired_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Expired {
    get { if ((_hasBits0 & 16) != 0) { return expired_; } else { return ExpiredDefaultValue; } }
    set {
      _hasBits0 |= 16;
      expired_ = value;
    }
  }
  /// <summary>Gets whether the "expired" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExpired {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "expired" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExpired() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "time_expires" field.</summary>
  public const int TimeExpiresFieldNumber = 7;
  private readonly static uint TimeExpiresDefaultValue = 0;

  private uint timeExpires_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeExpires {
    get { if ((_hasBits0 & 32) != 0) { return timeExpires_; } else { return TimeExpiresDefaultValue; } }
    set {
      _hasBits0 |= 32;
      timeExpires_ = value;
    }
  }
  /// <summary>Gets whether the "time_expires" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeExpires {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "time_expires" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeExpires() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "time_reserved" field.</summary>
  public const int TimeReservedFieldNumber = 8;
  private readonly static uint TimeReservedDefaultValue = 0;

  private uint timeReserved_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeReserved {
    get { if ((_hasBits0 & 64) != 0) { return timeReserved_; } else { return TimeReservedDefaultValue; } }
    set {
      _hasBits0 |= 64;
      timeReserved_ = value;
    }
  }
  /// <summary>Gets whether the "time_reserved" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeReserved {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "time_reserved" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeReserved() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CPackageReservationStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CPackageReservationStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Packageid != other.Packageid) return false;
    if (ReservationState != other.ReservationState) return false;
    if (QueuePosition != other.QueuePosition) return false;
    if (TotalQueueSize != other.TotalQueueSize) return false;
    if (ReservationCountryCode != other.ReservationCountryCode) return false;
    if (Expired != other.Expired) return false;
    if (TimeExpires != other.TimeExpires) return false;
    if (TimeReserved != other.TimeReserved) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPackageid) hash ^= Packageid.GetHashCode();
    if (HasReservationState) hash ^= ReservationState.GetHashCode();
    if (HasQueuePosition) hash ^= QueuePosition.GetHashCode();
    if (HasTotalQueueSize) hash ^= TotalQueueSize.GetHashCode();
    if (HasReservationCountryCode) hash ^= ReservationCountryCode.GetHashCode();
    if (HasExpired) hash ^= Expired.GetHashCode();
    if (HasTimeExpires) hash ^= TimeExpires.GetHashCode();
    if (HasTimeReserved) hash ^= TimeReserved.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPackageid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Packageid);
    }
    if (HasReservationState) {
      output.WriteRawTag(16);
      output.WriteInt32(ReservationState);
    }
    if (HasQueuePosition) {
      output.WriteRawTag(24);
      output.WriteInt32(QueuePosition);
    }
    if (HasTotalQueueSize) {
      output.WriteRawTag(32);
      output.WriteInt32(TotalQueueSize);
    }
    if (HasReservationCountryCode) {
      output.WriteRawTag(42);
      output.WriteString(ReservationCountryCode);
    }
    if (HasExpired) {
      output.WriteRawTag(48);
      output.WriteBool(Expired);
    }
    if (HasTimeExpires) {
      output.WriteRawTag(56);
      output.WriteUInt32(TimeExpires);
    }
    if (HasTimeReserved) {
      output.WriteRawTag(64);
      output.WriteUInt32(TimeReserved);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPackageid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Packageid);
    }
    if (HasReservationState) {
      output.WriteRawTag(16);
      output.WriteInt32(ReservationState);
    }
    if (HasQueuePosition) {
      output.WriteRawTag(24);
      output.WriteInt32(QueuePosition);
    }
    if (HasTotalQueueSize) {
      output.WriteRawTag(32);
      output.WriteInt32(TotalQueueSize);
    }
    if (HasReservationCountryCode) {
      output.WriteRawTag(42);
      output.WriteString(ReservationCountryCode);
    }
    if (HasExpired) {
      output.WriteRawTag(48);
      output.WriteBool(Expired);
    }
    if (HasTimeExpires) {
      output.WriteRawTag(56);
      output.WriteUInt32(TimeExpires);
    }
    if (HasTimeReserved) {
      output.WriteRawTag(64);
      output.WriteUInt32(TimeReserved);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPackageid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Packageid);
    }
    if (HasReservationState) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReservationState);
    }
    if (HasQueuePosition) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(QueuePosition);
    }
    if (HasTotalQueueSize) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalQueueSize);
    }
    if (HasReservationCountryCode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReservationCountryCode);
    }
    if (HasExpired) {
      size += 1 + 1;
    }
    if (HasTimeExpires) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeExpires);
    }
    if (HasTimeReserved) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeReserved);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CPackageReservationStatus other) {
    if (other == null) {
      return;
    }
    if (other.HasPackageid) {
      Packageid = other.Packageid;
    }
    if (other.HasReservationState) {
      ReservationState = other.ReservationState;
    }
    if (other.HasQueuePosition) {
      QueuePosition = other.QueuePosition;
    }
    if (other.HasTotalQueueSize) {
      TotalQueueSize = other.TotalQueueSize;
    }
    if (other.HasReservationCountryCode) {
      ReservationCountryCode = other.ReservationCountryCode;
    }
    if (other.HasExpired) {
      Expired = other.Expired;
    }
    if (other.HasTimeExpires) {
      TimeExpires = other.TimeExpires;
    }
    if (other.HasTimeReserved) {
      TimeReserved = other.TimeReserved;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Packageid = input.ReadUInt32();
          break;
        }
        case 16: {
          ReservationState = input.ReadInt32();
          break;
        }
        case 24: {
          QueuePosition = input.ReadInt32();
          break;
        }
        case 32: {
          TotalQueueSize = input.ReadInt32();
          break;
        }
        case 42: {
          ReservationCountryCode = input.ReadString();
          break;
        }
        case 48: {
          Expired = input.ReadBool();
          break;
        }
        case 56: {
          TimeExpires = input.ReadUInt32();
          break;
        }
        case 64: {
          TimeReserved = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Packageid = input.ReadUInt32();
          break;
        }
        case 16: {
          ReservationState = input.ReadInt32();
          break;
        }
        case 24: {
          QueuePosition = input.ReadInt32();
          break;
        }
        case 32: {
          TotalQueueSize = input.ReadInt32();
          break;
        }
        case 42: {
          ReservationCountryCode = input.ReadString();
          break;
        }
        case 48: {
          Expired = input.ReadBool();
          break;
        }
        case 56: {
          TimeExpires = input.ReadUInt32();
          break;
        }
        case 64: {
          TimeReserved = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgKeyValuePair : pb::IMessage<CMsgKeyValuePair>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgKeyValuePair> _parser = new pb::MessageParser<CMsgKeyValuePair>(() => new CMsgKeyValuePair());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgKeyValuePair> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgKeyValuePair() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgKeyValuePair(CMsgKeyValuePair other) : this() {
    name_ = other.name_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgKeyValuePair Clone() {
    return new CMsgKeyValuePair(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private readonly static string ValueDefaultValue = "";

  private string value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Value {
    get { return value_ ?? ValueDefaultValue; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValue {
    get { return value_ != null; }
  }
  /// <summary>Clears the value of the "value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValue() {
    value_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgKeyValuePair);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgKeyValuePair other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (HasValue) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasValue) {
      output.WriteRawTag(18);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasValue) {
      output.WriteRawTag(18);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasValue) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgKeyValuePair other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasValue) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          Value = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 18: {
          Value = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgKeyValueSet : pb::IMessage<CMsgKeyValueSet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgKeyValueSet> _parser = new pb::MessageParser<CMsgKeyValueSet>(() => new CMsgKeyValueSet());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgKeyValueSet> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgKeyValueSet() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgKeyValueSet(CMsgKeyValueSet other) : this() {
    pairs_ = other.pairs_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgKeyValueSet Clone() {
    return new CMsgKeyValueSet(this);
  }

  /// <summary>Field number for the "pairs" field.</summary>
  public const int PairsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgKeyValuePair> _repeated_pairs_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgKeyValuePair.Parser);
  private readonly pbc::RepeatedField<global::CMsgKeyValuePair> pairs_ = new pbc::RepeatedField<global::CMsgKeyValuePair>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgKeyValuePair> Pairs {
    get { return pairs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgKeyValueSet);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgKeyValueSet other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!pairs_.Equals(other.pairs_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= pairs_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    pairs_.WriteTo(output, _repeated_pairs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    pairs_.WriteTo(ref output, _repeated_pairs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += pairs_.CalculateSize(_repeated_pairs_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgKeyValueSet other) {
    if (other == null) {
      return;
    }
    pairs_.Add(other.pairs_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          pairs_.AddEntriesFrom(input, _repeated_pairs_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          pairs_.AddEntriesFrom(ref input, _repeated_pairs_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class UserContentDescriptorPreferences : pb::IMessage<UserContentDescriptorPreferences>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<UserContentDescriptorPreferences> _parser = new pb::MessageParser<UserContentDescriptorPreferences>(() => new UserContentDescriptorPreferences());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<UserContentDescriptorPreferences> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesBaseReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UserContentDescriptorPreferences() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UserContentDescriptorPreferences(UserContentDescriptorPreferences other) : this() {
    contentDescriptorsToExclude_ = other.contentDescriptorsToExclude_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UserContentDescriptorPreferences Clone() {
    return new UserContentDescriptorPreferences(this);
  }

  /// <summary>Field number for the "content_descriptors_to_exclude" field.</summary>
  public const int ContentDescriptorsToExcludeFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserContentDescriptorPreferences.Types.ContentDescriptor> _repeated_contentDescriptorsToExclude_codec
      = pb::FieldCodec.ForMessage(10, global::UserContentDescriptorPreferences.Types.ContentDescriptor.Parser);
  private readonly pbc::RepeatedField<global::UserContentDescriptorPreferences.Types.ContentDescriptor> contentDescriptorsToExclude_ = new pbc::RepeatedField<global::UserContentDescriptorPreferences.Types.ContentDescriptor>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::UserContentDescriptorPreferences.Types.ContentDescriptor> ContentDescriptorsToExclude {
    get { return contentDescriptorsToExclude_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as UserContentDescriptorPreferences);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(UserContentDescriptorPreferences other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!contentDescriptorsToExclude_.Equals(other.contentDescriptorsToExclude_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= contentDescriptorsToExclude_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    contentDescriptorsToExclude_.WriteTo(output, _repeated_contentDescriptorsToExclude_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    contentDescriptorsToExclude_.WriteTo(ref output, _repeated_contentDescriptorsToExclude_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += contentDescriptorsToExclude_.CalculateSize(_repeated_contentDescriptorsToExclude_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(UserContentDescriptorPreferences other) {
    if (other == null) {
      return;
    }
    contentDescriptorsToExclude_.Add(other.contentDescriptorsToExclude_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          contentDescriptorsToExclude_.AddEntriesFrom(input, _repeated_contentDescriptorsToExclude_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          contentDescriptorsToExclude_.AddEntriesFrom(ref input, _repeated_contentDescriptorsToExclude_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the UserContentDescriptorPreferences message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class ContentDescriptor : pb::IMessage<ContentDescriptor>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ContentDescriptor> _parser = new pb::MessageParser<ContentDescriptor>(() => new ContentDescriptor());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ContentDescriptor> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::UserContentDescriptorPreferences.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ContentDescriptor() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ContentDescriptor(ContentDescriptor other) : this() {
        _hasBits0 = other._hasBits0;
        contentDescriptorid_ = other.contentDescriptorid_;
        timestampAdded_ = other.timestampAdded_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ContentDescriptor Clone() {
        return new ContentDescriptor(this);
      }

      /// <summary>Field number for the "content_descriptorid" field.</summary>
      public const int ContentDescriptoridFieldNumber = 1;
      private readonly static uint ContentDescriptoridDefaultValue = 0;

      private uint contentDescriptorid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ContentDescriptorid {
        get { if ((_hasBits0 & 1) != 0) { return contentDescriptorid_; } else { return ContentDescriptoridDefaultValue; } }
        set {
          _hasBits0 |= 1;
          contentDescriptorid_ = value;
        }
      }
      /// <summary>Gets whether the "content_descriptorid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasContentDescriptorid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "content_descriptorid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearContentDescriptorid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "timestamp_added" field.</summary>
      public const int TimestampAddedFieldNumber = 2;
      private readonly static uint TimestampAddedDefaultValue = 0;

      private uint timestampAdded_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimestampAdded {
        get { if ((_hasBits0 & 2) != 0) { return timestampAdded_; } else { return TimestampAddedDefaultValue; } }
        set {
          _hasBits0 |= 2;
          timestampAdded_ = value;
        }
      }
      /// <summary>Gets whether the "timestamp_added" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimestampAdded {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "timestamp_added" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimestampAdded() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ContentDescriptor);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ContentDescriptor other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ContentDescriptorid != other.ContentDescriptorid) return false;
        if (TimestampAdded != other.TimestampAdded) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasContentDescriptorid) hash ^= ContentDescriptorid.GetHashCode();
        if (HasTimestampAdded) hash ^= TimestampAdded.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasContentDescriptorid) {
          output.WriteRawTag(8);
          output.WriteUInt32(ContentDescriptorid);
        }
        if (HasTimestampAdded) {
          output.WriteRawTag(16);
          output.WriteUInt32(TimestampAdded);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasContentDescriptorid) {
          output.WriteRawTag(8);
          output.WriteUInt32(ContentDescriptorid);
        }
        if (HasTimestampAdded) {
          output.WriteRawTag(16);
          output.WriteUInt32(TimestampAdded);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasContentDescriptorid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContentDescriptorid);
        }
        if (HasTimestampAdded) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimestampAdded);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ContentDescriptor other) {
        if (other == null) {
          return;
        }
        if (other.HasContentDescriptorid) {
          ContentDescriptorid = other.ContentDescriptorid;
        }
        if (other.HasTimestampAdded) {
          TimestampAdded = other.TimestampAdded;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ContentDescriptorid = input.ReadUInt32();
              break;
            }
            case 16: {
              TimestampAdded = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ContentDescriptorid = input.ReadUInt32();
              break;
            }
            case 16: {
              TimestampAdded = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code

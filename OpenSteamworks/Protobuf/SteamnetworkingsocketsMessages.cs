// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steamnetworkingsockets_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steamnetworkingsockets_messages.proto</summary>
public static partial class SteamnetworkingsocketsMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for steamnetworkingsockets_messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteamnetworkingsocketsMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiVzdGVhbW5ldHdvcmtpbmdzb2NrZXRzX21lc3NhZ2VzLnByb3RvGitzdGVh",
          "bW5ldHdvcmtpbmdzb2NrZXRzX21lc3NhZ2VzX2NlcnRzLnByb3RvIoACCiFD",
          "TXNnU3RlYW1EYXRhZ3JhbVNlc3Npb25DcnlwdEluZm8SRgoIa2V5X3R5cGUY",
          "ASABKA4yKy5DTXNnU3RlYW1EYXRhZ3JhbVNlc3Npb25DcnlwdEluZm8uRUtl",
          "eVR5cGU6B0lOVkFMSUQSEAoIa2V5X2RhdGEYAiABKAwSDQoFbm9uY2UYAyAB",
          "KAYSGAoQcHJvdG9jb2xfdmVyc2lvbhgEIAEoDRIvCgdjaXBoZXJzGAUgAygO",
          "Mh4uRVN0ZWFtTmV0d29ya2luZ1NvY2tldHNDaXBoZXIiJwoIRUtleVR5cGUS",
          "CwoHSU5WQUxJRBAAEg4KCkNVUlZFMjU1MTkQASJKCidDTXNnU3RlYW1EYXRh",
          "Z3JhbVNlc3Npb25DcnlwdEluZm9TaWduZWQSDAoEaW5mbxgBIAEoDBIRCglz",
          "aWduYXR1cmUYAiABKAwiPQobQ01zZ1N0ZWFtRGF0YWdyYW1EaWFnbm9zdGlj",
          "EhAKCHNldmVyaXR5GAEgASgNEgwKBHRleHQYAiABKAkiiwIKJ0NNc2dTdGVh",
          "bURhdGFncmFtTGlua0luc3RhbnRhbmVvdXNTdGF0cxIfChdvdXRfcGFja2V0",
          "c19wZXJfc2VjX3gxMBgBIAEoDRIZChFvdXRfYnl0ZXNfcGVyX3NlYxgCIAEo",
          "DRIeChZpbl9wYWNrZXRzX3Blcl9zZWNfeDEwGAMgASgNEhgKEGluX2J5dGVz",
          "X3Blcl9zZWMYBCABKA0SDwoHcGluZ19tcxgFIAEoDRIbChNwYWNrZXRzX2Ry",
          "b3BwZWRfcGN0GAYgASgNEiIKGnBhY2tldHNfd2VpcmRfc2VxdWVuY2VfcGN0",
          "GAcgASgNEhgKEHBlYWtfaml0dGVyX3VzZWMYCCABKA0imREKIkNNc2dTdGVh",
          "bURhdGFncmFtTGlua0xpZmV0aW1lU3RhdHMSGQoRY29ubmVjdGVkX3NlY29u",
          "ZHMYAiABKA0SFAoMcGFja2V0c19zZW50GAMgASgEEg8KB2tiX3NlbnQYBCAB",
          "KAQSFAoMcGFja2V0c19yZWN2GAUgASgEEg8KB2tiX3JlY3YYBiABKAQSHgoW",
          "cGFja2V0c19yZWN2X3NlcXVlbmNlZBgHIAEoBBIcChRwYWNrZXRzX3JlY3Zf",
          "ZHJvcHBlZBgIIAEoBBIhChlwYWNrZXRzX3JlY3Zfb3V0X29mX29yZGVyGAkg",
          "ASgEEisKI3BhY2tldHNfcmVjdl9vdXRfb2Zfb3JkZXJfY29ycmVjdGVkGA8g",
          "ASgEEh4KFnBhY2tldHNfcmVjdl9kdXBsaWNhdGUYCiABKAQSGgoScGFja2V0",
          "c19yZWN2X2x1cmNoGAsgASgEEigKIG11bHRpcGF0aF9wYWNrZXRzX3JlY3Zf",
          "c2VxdWVuY2VkGAwgAygEEiQKHG11bHRpcGF0aF9wYWNrZXRzX3JlY3ZfbGF0",
          "ZXIYDSADKAQSHgoWbXVsdGlwYXRoX3NlbmRfZW5hYmxlZBgOIAEoDRIdChVx",
          "dWFsaXR5X2hpc3RvZ3JhbV8xMDAYFSABKA0SHAoUcXVhbGl0eV9oaXN0b2dy",
          "YW1fOTkYFiABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fOTcYFyABKA0SHAoU",
          "cXVhbGl0eV9oaXN0b2dyYW1fOTUYGCABKA0SHAoUcXVhbGl0eV9oaXN0b2dy",
          "YW1fOTAYGSABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fNzUYGiABKA0SHAoU",
          "cXVhbGl0eV9oaXN0b2dyYW1fNTAYGyABKA0SGwoTcXVhbGl0eV9oaXN0b2dy",
          "YW1fMRgcIAEoDRIeChZxdWFsaXR5X2hpc3RvZ3JhbV9kZWFkGB0gASgNEhkK",
          "EXF1YWxpdHlfbnRpbGVfMm5kGB4gASgNEhkKEXF1YWxpdHlfbnRpbGVfNXRo",
          "GB8gASgNEhoKEnF1YWxpdHlfbnRpbGVfMjV0aBggIAEoDRIaChJxdWFsaXR5",
          "X250aWxlXzUwdGgYISABKA0SGQoRcGluZ19oaXN0b2dyYW1fMjUYKSABKA0S",
          "GQoRcGluZ19oaXN0b2dyYW1fNTAYKiABKA0SGQoRcGluZ19oaXN0b2dyYW1f",
          "NzUYKyABKA0SGgoScGluZ19oaXN0b2dyYW1fMTAwGCwgASgNEhoKEnBpbmdf",
          "aGlzdG9ncmFtXzEyNRgtIAEoDRIaChJwaW5nX2hpc3RvZ3JhbV8xNTAYLiAB",
          "KA0SGgoScGluZ19oaXN0b2dyYW1fMjAwGC8gASgNEhoKEnBpbmdfaGlzdG9n",
          "cmFtXzMwMBgwIAEoDRIaChJwaW5nX2hpc3RvZ3JhbV9tYXgYMSABKA0SFgoO",
          "cGluZ19udGlsZV81dGgYMiABKA0SFwoPcGluZ19udGlsZV81MHRoGDMgASgN",
          "EhcKD3BpbmdfbnRpbGVfNzV0aBg0IAEoDRIXCg9waW5nX250aWxlXzk1dGgY",
          "NSABKA0SFwoPcGluZ19udGlsZV85OHRoGDYgASgNEiMKG2ppdHRlcl9oaXN0",
          "b2dyYW1fbmVnbGlnaWJsZRg9IAEoDRIaChJqaXR0ZXJfaGlzdG9ncmFtXzEY",
          "PiABKA0SGgoSaml0dGVyX2hpc3RvZ3JhbV8yGD8gASgNEhoKEmppdHRlcl9o",
          "aXN0b2dyYW1fNRhAIAEoDRIbChNqaXR0ZXJfaGlzdG9ncmFtXzEwGEEgASgN",
          "EhsKE2ppdHRlcl9oaXN0b2dyYW1fMjAYQiABKA0SEwoLdHhzcGVlZF9tYXgY",
          "QyABKA0SHAoUdHhzcGVlZF9oaXN0b2dyYW1fMTYYRCABKA0SHAoUdHhzcGVl",
          "ZF9oaXN0b2dyYW1fMzIYRSABKA0SHAoUdHhzcGVlZF9oaXN0b2dyYW1fNjQY",
          "RiABKA0SHQoVdHhzcGVlZF9oaXN0b2dyYW1fMTI4GEcgASgNEh0KFXR4c3Bl",
          "ZWRfaGlzdG9ncmFtXzI1NhhIIAEoDRIdChV0eHNwZWVkX2hpc3RvZ3JhbV81",
          "MTIYSSABKA0SHgoWdHhzcGVlZF9oaXN0b2dyYW1fMTAyNBhKIAEoDRIdChV0",
          "eHNwZWVkX2hpc3RvZ3JhbV9tYXgYSyABKA0SGQoRdHhzcGVlZF9udGlsZV81",
          "dGgYTCABKA0SGgoSdHhzcGVlZF9udGlsZV81MHRoGE0gASgNEhoKEnR4c3Bl",
          "ZWRfbnRpbGVfNzV0aBhOIAEoDRIaChJ0eHNwZWVkX250aWxlXzk1dGgYTyAB",
          "KA0SGgoSdHhzcGVlZF9udGlsZV85OHRoGFAgASgNEhMKC3J4c3BlZWRfbWF4",
          "GFEgASgNEhwKFHJ4c3BlZWRfaGlzdG9ncmFtXzE2GFIgASgNEhwKFHJ4c3Bl",
          "ZWRfaGlzdG9ncmFtXzMyGFMgASgNEhwKFHJ4c3BlZWRfaGlzdG9ncmFtXzY0",
          "GFQgASgNEh0KFXJ4c3BlZWRfaGlzdG9ncmFtXzEyOBhVIAEoDRIdChVyeHNw",
          "ZWVkX2hpc3RvZ3JhbV8yNTYYViABKA0SHQoVcnhzcGVlZF9oaXN0b2dyYW1f",
          "NTEyGFcgASgNEh4KFnJ4c3BlZWRfaGlzdG9ncmFtXzEwMjQYWCABKA0SHQoV",
          "cnhzcGVlZF9oaXN0b2dyYW1fbWF4GFkgASgNEhkKEXJ4c3BlZWRfbnRpbGVf",
          "NXRoGFogASgNEhoKEnJ4c3BlZWRfbnRpbGVfNTB0aBhbIAEoDRIaChJyeHNw",
          "ZWVkX250aWxlXzc1dGgYXCABKA0SGgoScnhzcGVlZF9udGlsZV85NXRoGF0g",
          "ASgNEhoKEnJ4c3BlZWRfbnRpbGVfOTh0aBheIAEoDSKcAQoiQ01zZ1N0ZWFt",
          "RGF0YWdyYW1Db25uZWN0aW9uUXVhbGl0eRI/Cg1pbnN0YW50YW5lb3VzGAEg",
          "ASgLMiguQ01zZ1N0ZWFtRGF0YWdyYW1MaW5rSW5zdGFudGFuZW91c1N0YXRz",
          "EjUKCGxpZmV0aW1lGAIgASgLMiMuQ01zZ1N0ZWFtRGF0YWdyYW1MaW5rTGlm",
          "ZXRpbWVTdGF0cyIlChBDTXNnSUNFQ2FuZGlkYXRlEhEKCWNhbmRpZGF0ZRgD",
          "IAEoCSJ+ChFDTXNnSUNFUmVuZGV6dm91cxIlCgRhdXRoGAIgASgLMhcuQ01z",
          "Z0lDRVJlbmRlenZvdXMuQXV0aBIoCg1hZGRfY2FuZGlkYXRlGAEgASgLMhEu",
          "Q01zZ0lDRUNhbmRpZGF0ZRoYCgRBdXRoEhAKCHB3ZF9mcmFnGAEgASgJIqMJ",
          "CiBDTXNnU3RlYW1OZXR3b3JraW5nUDJQUmVuZGV6dm91cxIVCg1mcm9tX2lk",
          "ZW50aXR5GAggASgJEhoKEmZyb21fY29ubmVjdGlvbl9pZBgJIAEoBxITCgt0",
          "b19pZGVudGl0eRgKIAEoCRIYChB0b19jb25uZWN0aW9uX2lkGAEgASgHEhIK",
          "CnNkcl9yb3V0ZXMYAiABKAwSIAoYYWNrX3BlZXJfcm91dGVzX3JldmlzaW9u",
          "GAMgASgNEhMKC2ljZV9lbmFibGVkGAcgASgIEhwKFGhvc3RlZF9zZXJ2ZXJf",
          "dGlja2V0GA4gASgMEkkKD2Nvbm5lY3RfcmVxdWVzdBgEIAEoCzIwLkNNc2dT",
          "dGVhbU5ldHdvcmtpbmdQMlBSZW5kZXp2b3VzLkNvbm5lY3RSZXF1ZXN0Ej8K",
          "CmNvbm5lY3Rfb2sYBSABKAsyKy5DTXNnU3RlYW1OZXR3b3JraW5nUDJQUmVu",
          "ZGV6dm91cy5Db25uZWN0T0sSTQoRY29ubmVjdGlvbl9jbG9zZWQYBiABKAsy",
          "Mi5DTXNnU3RlYW1OZXR3b3JraW5nUDJQUmVuZGV6dm91cy5Db25uZWN0aW9u",
          "Q2xvc2VkEhgKEGFja19yZWxpYWJsZV9tc2cYCyABKA0SGgoSZmlyc3RfcmVs",
          "aWFibGVfbXNnGAwgASgNEkwKEXJlbGlhYmxlX21lc3NhZ2VzGA0gAygLMjEu",
          "Q01zZ1N0ZWFtTmV0d29ya2luZ1AyUFJlbmRlenZvdXMuUmVsaWFibGVNZXNz",
          "YWdlElIKFGFwcGxpY2F0aW9uX21lc3NhZ2VzGA8gAygLMjQuQ01zZ1N0ZWFt",
          "TmV0d29ya2luZ1AyUFJlbmRlenZvdXMuQXBwbGljYXRpb25NZXNzYWdlGsUB",
          "Cg5Db25uZWN0UmVxdWVzdBI3CgVjcnlwdBgGIAEoCzIoLkNNc2dTdGVhbURh",
          "dGFncmFtU2Vzc2lvbkNyeXB0SW5mb1NpZ25lZBIxCgRjZXJ0GAcgASgLMiMu",
          "Q01zZ1N0ZWFtRGF0YWdyYW1DZXJ0aWZpY2F0ZVNpZ25lZBIXCg90b192aXJ0",
          "dWFsX3BvcnQYCSABKA0SGQoRZnJvbV92aXJ0dWFsX3BvcnQYCiABKA0SEwoL",
          "ZnJvbV9mYWtlaXAYCyABKAkadwoJQ29ubmVjdE9LEjcKBWNyeXB0GAUgASgL",
          "MiguQ01zZ1N0ZWFtRGF0YWdyYW1TZXNzaW9uQ3J5cHRJbmZvU2lnbmVkEjEK",
          "BGNlcnQYBiABKAsyIy5DTXNnU3RlYW1EYXRhZ3JhbUNlcnRpZmljYXRlU2ln",
          "bmVkGjYKEENvbm5lY3Rpb25DbG9zZWQSDQoFZGVidWcYBSABKAkSEwoLcmVh",
          "c29uX2NvZGUYBiABKA0aMgoPUmVsaWFibGVNZXNzYWdlEh8KA2ljZRgBIAEo",
          "CzISLkNNc2dJQ0VSZW5kZXp2b3VzGlQKEkFwcGxpY2F0aW9uTWVzc2FnZRIM",
          "CgRkYXRhGAEgASgMEg8KB21zZ19udW0YAiABKAQSDQoFZmxhZ3MYAyABKA0S",
          "EAoIbGFuZV9pZHgYBCABKA0ipgMKJENNc2dTdGVhbU5ldHdvcmtpbmdJQ0VT",
          "ZXNzaW9uU3VtbWFyeRIbChNmYWlsdXJlX3JlYXNvbl9jb2RlGAcgASgNEh0K",
          "FWxvY2FsX2NhbmRpZGF0ZV90eXBlcxgBIAEoDRIeChZyZW1vdGVfY2FuZGlk",
          "YXRlX3R5cGVzGAIgASgNEhoKEmluaXRpYWxfcm91dGVfa2luZBgDIAEoDRIU",
          "Cgxpbml0aWFsX3BpbmcYBCABKA0SFQoNaW5pdGlhbF9zY29yZRgGIAEoDRIW",
          "Cg5uZWdvdGlhdGlvbl9tcxgFIAEoDRIXCg9iZXN0X3JvdXRlX2tpbmQYECAB",
          "KA0SEQoJYmVzdF9waW5nGBEgASgNEhIKCmJlc3Rfc2NvcmUYEiABKA0SEQoJ",
          "YmVzdF90aW1lGBMgASgNEhgKEHNlbGVjdGVkX3NlY29uZHMYDCABKA0SFQoN",
          "dXNlcl9zZXR0aW5ncxgNIAEoDRIWCg5pY2VfZW5hYmxlX3ZhchgOIAEoDRIl",
          "Ch1sb2NhbF9jYW5kaWRhdGVfdHlwZXNfYWxsb3dlZBgPIAEoDSqnAQodRVN0",
          "ZWFtTmV0d29ya2luZ1NvY2tldHNDaXBoZXISKwona19FU3RlYW1OZXR3b3Jr",
          "aW5nU29ja2V0c0NpcGhlcl9JTlZBTElEEAASKAoka19FU3RlYW1OZXR3b3Jr",
          "aW5nU29ja2V0c0NpcGhlcl9OVUxMEAESLwora19FU3RlYW1OZXR3b3JraW5n",
          "U29ja2V0c0NpcGhlcl9BRVNfMjU2X0dDTRACQgVIAYABAA=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteamnetworkingsocketsMessagesCertsReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ESteamNetworkingSocketsCipher), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramSessionCryptInfo), global::CMsgSteamDatagramSessionCryptInfo.Parser, new[]{ "KeyType", "KeyData", "Nonce", "ProtocolVersion", "Ciphers" }, null, new[]{ typeof(global::CMsgSteamDatagramSessionCryptInfo.Types.EKeyType) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramSessionCryptInfoSigned), global::CMsgSteamDatagramSessionCryptInfoSigned.Parser, new[]{ "Info", "Signature" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramDiagnostic), global::CMsgSteamDatagramDiagnostic.Parser, new[]{ "Severity", "Text" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramLinkInstantaneousStats), global::CMsgSteamDatagramLinkInstantaneousStats.Parser, new[]{ "OutPacketsPerSecX10", "OutBytesPerSec", "InPacketsPerSecX10", "InBytesPerSec", "PingMs", "PacketsDroppedPct", "PacketsWeirdSequencePct", "PeakJitterUsec" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramLinkLifetimeStats), global::CMsgSteamDatagramLinkLifetimeStats.Parser, new[]{ "ConnectedSeconds", "PacketsSent", "KbSent", "PacketsRecv", "KbRecv", "PacketsRecvSequenced", "PacketsRecvDropped", "PacketsRecvOutOfOrder", "PacketsRecvOutOfOrderCorrected", "PacketsRecvDuplicate", "PacketsRecvLurch", "MultipathPacketsRecvSequenced", "MultipathPacketsRecvLater", "MultipathSendEnabled", "QualityHistogram100", "QualityHistogram99", "QualityHistogram97", "QualityHistogram95", "QualityHistogram90", "QualityHistogram75", "QualityHistogram50", "QualityHistogram1", "QualityHistogramDead", "QualityNtile2Nd", "QualityNtile5Th", "QualityNtile25Th", "QualityNtile50Th", "PingHistogram25", "PingHistogram50", "PingHistogram75", "PingHistogram100", "PingHistogram125", "PingHistogram150", "PingHistogram200", "PingHistogram300", "PingHistogramMax", "PingNtile5Th", "PingNtile50Th", "PingNtile75Th", "PingNtile95Th", "PingNtile98Th", "JitterHistogramNegligible", "JitterHistogram1", "JitterHistogram2", "JitterHistogram5", "JitterHistogram10", "JitterHistogram20", "TxspeedMax", "TxspeedHistogram16", "TxspeedHistogram32", "TxspeedHistogram64", "TxspeedHistogram128", "TxspeedHistogram256", "TxspeedHistogram512", "TxspeedHistogram1024", "TxspeedHistogramMax", "TxspeedNtile5Th", "TxspeedNtile50Th", "TxspeedNtile75Th", "TxspeedNtile95Th", "TxspeedNtile98Th", "RxspeedMax", "RxspeedHistogram16", "RxspeedHistogram32", "RxspeedHistogram64", "RxspeedHistogram128", "RxspeedHistogram256", "RxspeedHistogram512", "RxspeedHistogram1024", "RxspeedHistogramMax", "RxspeedNtile5Th", "RxspeedNtile50Th", "RxspeedNtile75Th", "RxspeedNtile95Th", "RxspeedNtile98Th" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamDatagramConnectionQuality), global::CMsgSteamDatagramConnectionQuality.Parser, new[]{ "Instantaneous", "Lifetime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgICECandidate), global::CMsgICECandidate.Parser, new[]{ "Candidate" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgICERendezvous), global::CMsgICERendezvous.Parser, new[]{ "Auth", "AddCandidate" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgICERendezvous.Types.Auth), global::CMsgICERendezvous.Types.Auth.Parser, new[]{ "PwdFrag" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingP2PRendezvous), global::CMsgSteamNetworkingP2PRendezvous.Parser, new[]{ "FromIdentity", "FromConnectionId", "ToIdentity", "ToConnectionId", "SdrRoutes", "AckPeerRoutesRevision", "IceEnabled", "HostedServerTicket", "ConnectRequest", "ConnectOk", "ConnectionClosed", "AckReliableMsg", "FirstReliableMsg", "ReliableMessages", "ApplicationMessages" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectRequest), global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectRequest.Parser, new[]{ "Crypt", "Cert", "ToVirtualPort", "FromVirtualPort", "FromFakeip" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectOK), global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectOK.Parser, new[]{ "Crypt", "Cert" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectionClosed), global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectionClosed.Parser, new[]{ "Debug", "ReasonCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingP2PRendezvous.Types.ReliableMessage), global::CMsgSteamNetworkingP2PRendezvous.Types.ReliableMessage.Parser, new[]{ "Ice" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingP2PRendezvous.Types.ApplicationMessage), global::CMsgSteamNetworkingP2PRendezvous.Types.ApplicationMessage.Parser, new[]{ "Data", "MsgNum", "Flags", "LaneIdx" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSteamNetworkingICESessionSummary), global::CMsgSteamNetworkingICESessionSummary.Parser, new[]{ "FailureReasonCode", "LocalCandidateTypes", "RemoteCandidateTypes", "InitialRouteKind", "InitialPing", "InitialScore", "NegotiationMs", "BestRouteKind", "BestPing", "BestScore", "BestTime", "SelectedSeconds", "UserSettings", "IceEnableVar", "LocalCandidateTypesAllowed" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ESteamNetworkingSocketsCipher {
  [pbr::OriginalName("k_ESteamNetworkingSocketsCipher_INVALID")] KEsteamNetworkingSocketsCipherInvalid = 0,
  [pbr::OriginalName("k_ESteamNetworkingSocketsCipher_NULL")] KEsteamNetworkingSocketsCipherNull = 1,
  [pbr::OriginalName("k_ESteamNetworkingSocketsCipher_AES_256_GCM")] KEsteamNetworkingSocketsCipherAes256Gcm = 2,
}

#endregion

#region Messages
public sealed partial class CMsgSteamDatagramSessionCryptInfo : pb::IMessage<CMsgSteamDatagramSessionCryptInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramSessionCryptInfo> _parser = new pb::MessageParser<CMsgSteamDatagramSessionCryptInfo>(() => new CMsgSteamDatagramSessionCryptInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramSessionCryptInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSessionCryptInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSessionCryptInfo(CMsgSteamDatagramSessionCryptInfo other) : this() {
    _hasBits0 = other._hasBits0;
    keyType_ = other.keyType_;
    keyData_ = other.keyData_;
    nonce_ = other.nonce_;
    protocolVersion_ = other.protocolVersion_;
    ciphers_ = other.ciphers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSessionCryptInfo Clone() {
    return new CMsgSteamDatagramSessionCryptInfo(this);
  }

  /// <summary>Field number for the "key_type" field.</summary>
  public const int KeyTypeFieldNumber = 1;
  private readonly static global::CMsgSteamDatagramSessionCryptInfo.Types.EKeyType KeyTypeDefaultValue = global::CMsgSteamDatagramSessionCryptInfo.Types.EKeyType.Invalid;

  private global::CMsgSteamDatagramSessionCryptInfo.Types.EKeyType keyType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramSessionCryptInfo.Types.EKeyType KeyType {
    get { if ((_hasBits0 & 1) != 0) { return keyType_; } else { return KeyTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      keyType_ = value;
    }
  }
  /// <summary>Gets whether the "key_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "key_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "key_data" field.</summary>
  public const int KeyDataFieldNumber = 2;
  private readonly static pb::ByteString KeyDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString keyData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString KeyData {
    get { return keyData_ ?? KeyDataDefaultValue; }
    set {
      keyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "key_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyData {
    get { return keyData_ != null; }
  }
  /// <summary>Clears the value of the "key_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyData() {
    keyData_ = null;
  }

  /// <summary>Field number for the "nonce" field.</summary>
  public const int NonceFieldNumber = 3;
  private readonly static ulong NonceDefaultValue = 0UL;

  private ulong nonce_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Nonce {
    get { if ((_hasBits0 & 2) != 0) { return nonce_; } else { return NonceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      nonce_ = value;
    }
  }
  /// <summary>Gets whether the "nonce" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNonce {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "nonce" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNonce() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 4;
  private readonly static uint ProtocolVersionDefaultValue = 0;

  private uint protocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProtocolVersion {
    get { if ((_hasBits0 & 4) != 0) { return protocolVersion_; } else { return ProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      protocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocolVersion {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocolVersion() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "ciphers" field.</summary>
  public const int CiphersFieldNumber = 5;
  private static readonly pb::FieldCodec<global::ESteamNetworkingSocketsCipher> _repeated_ciphers_codec
      = pb::FieldCodec.ForEnum(40, x => (int) x, x => (global::ESteamNetworkingSocketsCipher) x);
  private readonly pbc::RepeatedField<global::ESteamNetworkingSocketsCipher> ciphers_ = new pbc::RepeatedField<global::ESteamNetworkingSocketsCipher>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ESteamNetworkingSocketsCipher> Ciphers {
    get { return ciphers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramSessionCryptInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramSessionCryptInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KeyType != other.KeyType) return false;
    if (KeyData != other.KeyData) return false;
    if (Nonce != other.Nonce) return false;
    if (ProtocolVersion != other.ProtocolVersion) return false;
    if(!ciphers_.Equals(other.ciphers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasKeyType) hash ^= KeyType.GetHashCode();
    if (HasKeyData) hash ^= KeyData.GetHashCode();
    if (HasNonce) hash ^= Nonce.GetHashCode();
    if (HasProtocolVersion) hash ^= ProtocolVersion.GetHashCode();
    hash ^= ciphers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasKeyType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) KeyType);
    }
    if (HasKeyData) {
      output.WriteRawTag(18);
      output.WriteBytes(KeyData);
    }
    if (HasNonce) {
      output.WriteRawTag(25);
      output.WriteFixed64(Nonce);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ProtocolVersion);
    }
    ciphers_.WriteTo(output, _repeated_ciphers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasKeyType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) KeyType);
    }
    if (HasKeyData) {
      output.WriteRawTag(18);
      output.WriteBytes(KeyData);
    }
    if (HasNonce) {
      output.WriteRawTag(25);
      output.WriteFixed64(Nonce);
    }
    if (HasProtocolVersion) {
      output.WriteRawTag(32);
      output.WriteUInt32(ProtocolVersion);
    }
    ciphers_.WriteTo(ref output, _repeated_ciphers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasKeyType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KeyType);
    }
    if (HasKeyData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(KeyData);
    }
    if (HasNonce) {
      size += 1 + 8;
    }
    if (HasProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    size += ciphers_.CalculateSize(_repeated_ciphers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramSessionCryptInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasKeyType) {
      KeyType = other.KeyType;
    }
    if (other.HasKeyData) {
      KeyData = other.KeyData;
    }
    if (other.HasNonce) {
      Nonce = other.Nonce;
    }
    if (other.HasProtocolVersion) {
      ProtocolVersion = other.ProtocolVersion;
    }
    ciphers_.Add(other.ciphers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          KeyType = (global::CMsgSteamDatagramSessionCryptInfo.Types.EKeyType) input.ReadEnum();
          break;
        }
        case 18: {
          KeyData = input.ReadBytes();
          break;
        }
        case 25: {
          Nonce = input.ReadFixed64();
          break;
        }
        case 32: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
        case 42:
        case 40: {
          ciphers_.AddEntriesFrom(input, _repeated_ciphers_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          KeyType = (global::CMsgSteamDatagramSessionCryptInfo.Types.EKeyType) input.ReadEnum();
          break;
        }
        case 18: {
          KeyData = input.ReadBytes();
          break;
        }
        case 25: {
          Nonce = input.ReadFixed64();
          break;
        }
        case 32: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
        case 42:
        case 40: {
          ciphers_.AddEntriesFrom(ref input, _repeated_ciphers_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgSteamDatagramSessionCryptInfo message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum EKeyType {
      [pbr::OriginalName("INVALID")] Invalid = 0,
      [pbr::OriginalName("CURVE25519")] Curve25519 = 1,
    }

  }
  #endregion

}

public sealed partial class CMsgSteamDatagramSessionCryptInfoSigned : pb::IMessage<CMsgSteamDatagramSessionCryptInfoSigned>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramSessionCryptInfoSigned> _parser = new pb::MessageParser<CMsgSteamDatagramSessionCryptInfoSigned>(() => new CMsgSteamDatagramSessionCryptInfoSigned());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramSessionCryptInfoSigned> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSessionCryptInfoSigned() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSessionCryptInfoSigned(CMsgSteamDatagramSessionCryptInfoSigned other) : this() {
    info_ = other.info_;
    signature_ = other.signature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramSessionCryptInfoSigned Clone() {
    return new CMsgSteamDatagramSessionCryptInfoSigned(this);
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 1;
  private readonly static pb::ByteString InfoDefaultValue = pb::ByteString.Empty;

  private pb::ByteString info_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Info {
    get { return info_ ?? InfoDefaultValue; }
    set {
      info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "info" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInfo {
    get { return info_ != null; }
  }
  /// <summary>Clears the value of the "info" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInfo() {
    info_ = null;
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 2;
  private readonly static pb::ByteString SignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString signature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Signature {
    get { return signature_ ?? SignatureDefaultValue; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignature {
    get { return signature_ != null; }
  }
  /// <summary>Clears the value of the "signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignature() {
    signature_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramSessionCryptInfoSigned);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramSessionCryptInfoSigned other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Info != other.Info) return false;
    if (Signature != other.Signature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasInfo) hash ^= Info.GetHashCode();
    if (HasSignature) hash ^= Signature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasInfo) {
      output.WriteRawTag(10);
      output.WriteBytes(Info);
    }
    if (HasSignature) {
      output.WriteRawTag(18);
      output.WriteBytes(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasInfo) {
      output.WriteRawTag(10);
      output.WriteBytes(Info);
    }
    if (HasSignature) {
      output.WriteRawTag(18);
      output.WriteBytes(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasInfo) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Info);
    }
    if (HasSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramSessionCryptInfoSigned other) {
    if (other == null) {
      return;
    }
    if (other.HasInfo) {
      Info = other.Info;
    }
    if (other.HasSignature) {
      Signature = other.Signature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Info = input.ReadBytes();
          break;
        }
        case 18: {
          Signature = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Info = input.ReadBytes();
          break;
        }
        case 18: {
          Signature = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramDiagnostic : pb::IMessage<CMsgSteamDatagramDiagnostic>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramDiagnostic> _parser = new pb::MessageParser<CMsgSteamDatagramDiagnostic>(() => new CMsgSteamDatagramDiagnostic());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramDiagnostic> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramDiagnostic() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramDiagnostic(CMsgSteamDatagramDiagnostic other) : this() {
    _hasBits0 = other._hasBits0;
    severity_ = other.severity_;
    text_ = other.text_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramDiagnostic Clone() {
    return new CMsgSteamDatagramDiagnostic(this);
  }

  /// <summary>Field number for the "severity" field.</summary>
  public const int SeverityFieldNumber = 1;
  private readonly static uint SeverityDefaultValue = 0;

  private uint severity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Severity {
    get { if ((_hasBits0 & 1) != 0) { return severity_; } else { return SeverityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      severity_ = value;
    }
  }
  /// <summary>Gets whether the "severity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeverity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "severity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeverity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "text" field.</summary>
  public const int TextFieldNumber = 2;
  private readonly static string TextDefaultValue = "";

  private string text_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Text {
    get { return text_ ?? TextDefaultValue; }
    set {
      text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasText {
    get { return text_ != null; }
  }
  /// <summary>Clears the value of the "text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearText() {
    text_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramDiagnostic);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramDiagnostic other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Severity != other.Severity) return false;
    if (Text != other.Text) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSeverity) hash ^= Severity.GetHashCode();
    if (HasText) hash ^= Text.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSeverity) {
      output.WriteRawTag(8);
      output.WriteUInt32(Severity);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSeverity) {
      output.WriteRawTag(8);
      output.WriteUInt32(Severity);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSeverity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Severity);
    }
    if (HasText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramDiagnostic other) {
    if (other == null) {
      return;
    }
    if (other.HasSeverity) {
      Severity = other.Severity;
    }
    if (other.HasText) {
      Text = other.Text;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Severity = input.ReadUInt32();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Severity = input.ReadUInt32();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramLinkInstantaneousStats : pb::IMessage<CMsgSteamDatagramLinkInstantaneousStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramLinkInstantaneousStats> _parser = new pb::MessageParser<CMsgSteamDatagramLinkInstantaneousStats>(() => new CMsgSteamDatagramLinkInstantaneousStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramLinkInstantaneousStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramLinkInstantaneousStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramLinkInstantaneousStats(CMsgSteamDatagramLinkInstantaneousStats other) : this() {
    _hasBits0 = other._hasBits0;
    outPacketsPerSecX10_ = other.outPacketsPerSecX10_;
    outBytesPerSec_ = other.outBytesPerSec_;
    inPacketsPerSecX10_ = other.inPacketsPerSecX10_;
    inBytesPerSec_ = other.inBytesPerSec_;
    pingMs_ = other.pingMs_;
    packetsDroppedPct_ = other.packetsDroppedPct_;
    packetsWeirdSequencePct_ = other.packetsWeirdSequencePct_;
    peakJitterUsec_ = other.peakJitterUsec_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramLinkInstantaneousStats Clone() {
    return new CMsgSteamDatagramLinkInstantaneousStats(this);
  }

  /// <summary>Field number for the "out_packets_per_sec_x10" field.</summary>
  public const int OutPacketsPerSecX10FieldNumber = 1;
  private readonly static uint OutPacketsPerSecX10DefaultValue = 0;

  private uint outPacketsPerSecX10_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OutPacketsPerSecX10 {
    get { if ((_hasBits0 & 1) != 0) { return outPacketsPerSecX10_; } else { return OutPacketsPerSecX10DefaultValue; } }
    set {
      _hasBits0 |= 1;
      outPacketsPerSecX10_ = value;
    }
  }
  /// <summary>Gets whether the "out_packets_per_sec_x10" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOutPacketsPerSecX10 {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "out_packets_per_sec_x10" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOutPacketsPerSecX10() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "out_bytes_per_sec" field.</summary>
  public const int OutBytesPerSecFieldNumber = 2;
  private readonly static uint OutBytesPerSecDefaultValue = 0;

  private uint outBytesPerSec_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OutBytesPerSec {
    get { if ((_hasBits0 & 2) != 0) { return outBytesPerSec_; } else { return OutBytesPerSecDefaultValue; } }
    set {
      _hasBits0 |= 2;
      outBytesPerSec_ = value;
    }
  }
  /// <summary>Gets whether the "out_bytes_per_sec" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOutBytesPerSec {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "out_bytes_per_sec" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOutBytesPerSec() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "in_packets_per_sec_x10" field.</summary>
  public const int InPacketsPerSecX10FieldNumber = 3;
  private readonly static uint InPacketsPerSecX10DefaultValue = 0;

  private uint inPacketsPerSecX10_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint InPacketsPerSecX10 {
    get { if ((_hasBits0 & 4) != 0) { return inPacketsPerSecX10_; } else { return InPacketsPerSecX10DefaultValue; } }
    set {
      _hasBits0 |= 4;
      inPacketsPerSecX10_ = value;
    }
  }
  /// <summary>Gets whether the "in_packets_per_sec_x10" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInPacketsPerSecX10 {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "in_packets_per_sec_x10" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInPacketsPerSecX10() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "in_bytes_per_sec" field.</summary>
  public const int InBytesPerSecFieldNumber = 4;
  private readonly static uint InBytesPerSecDefaultValue = 0;

  private uint inBytesPerSec_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint InBytesPerSec {
    get { if ((_hasBits0 & 8) != 0) { return inBytesPerSec_; } else { return InBytesPerSecDefaultValue; } }
    set {
      _hasBits0 |= 8;
      inBytesPerSec_ = value;
    }
  }
  /// <summary>Gets whether the "in_bytes_per_sec" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInBytesPerSec {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "in_bytes_per_sec" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInBytesPerSec() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "ping_ms" field.</summary>
  public const int PingMsFieldNumber = 5;
  private readonly static uint PingMsDefaultValue = 0;

  private uint pingMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingMs {
    get { if ((_hasBits0 & 16) != 0) { return pingMs_; } else { return PingMsDefaultValue; } }
    set {
      _hasBits0 |= 16;
      pingMs_ = value;
    }
  }
  /// <summary>Gets whether the "ping_ms" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingMs {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ping_ms" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingMs() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "packets_dropped_pct" field.</summary>
  public const int PacketsDroppedPctFieldNumber = 6;
  private readonly static uint PacketsDroppedPctDefaultValue = 0;

  private uint packetsDroppedPct_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PacketsDroppedPct {
    get { if ((_hasBits0 & 32) != 0) { return packetsDroppedPct_; } else { return PacketsDroppedPctDefaultValue; } }
    set {
      _hasBits0 |= 32;
      packetsDroppedPct_ = value;
    }
  }
  /// <summary>Gets whether the "packets_dropped_pct" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsDroppedPct {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "packets_dropped_pct" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsDroppedPct() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "packets_weird_sequence_pct" field.</summary>
  public const int PacketsWeirdSequencePctFieldNumber = 7;
  private readonly static uint PacketsWeirdSequencePctDefaultValue = 0;

  private uint packetsWeirdSequencePct_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PacketsWeirdSequencePct {
    get { if ((_hasBits0 & 64) != 0) { return packetsWeirdSequencePct_; } else { return PacketsWeirdSequencePctDefaultValue; } }
    set {
      _hasBits0 |= 64;
      packetsWeirdSequencePct_ = value;
    }
  }
  /// <summary>Gets whether the "packets_weird_sequence_pct" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsWeirdSequencePct {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "packets_weird_sequence_pct" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsWeirdSequencePct() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "peak_jitter_usec" field.</summary>
  public const int PeakJitterUsecFieldNumber = 8;
  private readonly static uint PeakJitterUsecDefaultValue = 0;

  private uint peakJitterUsec_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PeakJitterUsec {
    get { if ((_hasBits0 & 128) != 0) { return peakJitterUsec_; } else { return PeakJitterUsecDefaultValue; } }
    set {
      _hasBits0 |= 128;
      peakJitterUsec_ = value;
    }
  }
  /// <summary>Gets whether the "peak_jitter_usec" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPeakJitterUsec {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "peak_jitter_usec" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPeakJitterUsec() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramLinkInstantaneousStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramLinkInstantaneousStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OutPacketsPerSecX10 != other.OutPacketsPerSecX10) return false;
    if (OutBytesPerSec != other.OutBytesPerSec) return false;
    if (InPacketsPerSecX10 != other.InPacketsPerSecX10) return false;
    if (InBytesPerSec != other.InBytesPerSec) return false;
    if (PingMs != other.PingMs) return false;
    if (PacketsDroppedPct != other.PacketsDroppedPct) return false;
    if (PacketsWeirdSequencePct != other.PacketsWeirdSequencePct) return false;
    if (PeakJitterUsec != other.PeakJitterUsec) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasOutPacketsPerSecX10) hash ^= OutPacketsPerSecX10.GetHashCode();
    if (HasOutBytesPerSec) hash ^= OutBytesPerSec.GetHashCode();
    if (HasInPacketsPerSecX10) hash ^= InPacketsPerSecX10.GetHashCode();
    if (HasInBytesPerSec) hash ^= InBytesPerSec.GetHashCode();
    if (HasPingMs) hash ^= PingMs.GetHashCode();
    if (HasPacketsDroppedPct) hash ^= PacketsDroppedPct.GetHashCode();
    if (HasPacketsWeirdSequencePct) hash ^= PacketsWeirdSequencePct.GetHashCode();
    if (HasPeakJitterUsec) hash ^= PeakJitterUsec.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasOutPacketsPerSecX10) {
      output.WriteRawTag(8);
      output.WriteUInt32(OutPacketsPerSecX10);
    }
    if (HasOutBytesPerSec) {
      output.WriteRawTag(16);
      output.WriteUInt32(OutBytesPerSec);
    }
    if (HasInPacketsPerSecX10) {
      output.WriteRawTag(24);
      output.WriteUInt32(InPacketsPerSecX10);
    }
    if (HasInBytesPerSec) {
      output.WriteRawTag(32);
      output.WriteUInt32(InBytesPerSec);
    }
    if (HasPingMs) {
      output.WriteRawTag(40);
      output.WriteUInt32(PingMs);
    }
    if (HasPacketsDroppedPct) {
      output.WriteRawTag(48);
      output.WriteUInt32(PacketsDroppedPct);
    }
    if (HasPacketsWeirdSequencePct) {
      output.WriteRawTag(56);
      output.WriteUInt32(PacketsWeirdSequencePct);
    }
    if (HasPeakJitterUsec) {
      output.WriteRawTag(64);
      output.WriteUInt32(PeakJitterUsec);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasOutPacketsPerSecX10) {
      output.WriteRawTag(8);
      output.WriteUInt32(OutPacketsPerSecX10);
    }
    if (HasOutBytesPerSec) {
      output.WriteRawTag(16);
      output.WriteUInt32(OutBytesPerSec);
    }
    if (HasInPacketsPerSecX10) {
      output.WriteRawTag(24);
      output.WriteUInt32(InPacketsPerSecX10);
    }
    if (HasInBytesPerSec) {
      output.WriteRawTag(32);
      output.WriteUInt32(InBytesPerSec);
    }
    if (HasPingMs) {
      output.WriteRawTag(40);
      output.WriteUInt32(PingMs);
    }
    if (HasPacketsDroppedPct) {
      output.WriteRawTag(48);
      output.WriteUInt32(PacketsDroppedPct);
    }
    if (HasPacketsWeirdSequencePct) {
      output.WriteRawTag(56);
      output.WriteUInt32(PacketsWeirdSequencePct);
    }
    if (HasPeakJitterUsec) {
      output.WriteRawTag(64);
      output.WriteUInt32(PeakJitterUsec);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasOutPacketsPerSecX10) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutPacketsPerSecX10);
    }
    if (HasOutBytesPerSec) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutBytesPerSec);
    }
    if (HasInPacketsPerSecX10) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InPacketsPerSecX10);
    }
    if (HasInBytesPerSec) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InBytesPerSec);
    }
    if (HasPingMs) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingMs);
    }
    if (HasPacketsDroppedPct) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PacketsDroppedPct);
    }
    if (HasPacketsWeirdSequencePct) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PacketsWeirdSequencePct);
    }
    if (HasPeakJitterUsec) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PeakJitterUsec);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramLinkInstantaneousStats other) {
    if (other == null) {
      return;
    }
    if (other.HasOutPacketsPerSecX10) {
      OutPacketsPerSecX10 = other.OutPacketsPerSecX10;
    }
    if (other.HasOutBytesPerSec) {
      OutBytesPerSec = other.OutBytesPerSec;
    }
    if (other.HasInPacketsPerSecX10) {
      InPacketsPerSecX10 = other.InPacketsPerSecX10;
    }
    if (other.HasInBytesPerSec) {
      InBytesPerSec = other.InBytesPerSec;
    }
    if (other.HasPingMs) {
      PingMs = other.PingMs;
    }
    if (other.HasPacketsDroppedPct) {
      PacketsDroppedPct = other.PacketsDroppedPct;
    }
    if (other.HasPacketsWeirdSequencePct) {
      PacketsWeirdSequencePct = other.PacketsWeirdSequencePct;
    }
    if (other.HasPeakJitterUsec) {
      PeakJitterUsec = other.PeakJitterUsec;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          OutPacketsPerSecX10 = input.ReadUInt32();
          break;
        }
        case 16: {
          OutBytesPerSec = input.ReadUInt32();
          break;
        }
        case 24: {
          InPacketsPerSecX10 = input.ReadUInt32();
          break;
        }
        case 32: {
          InBytesPerSec = input.ReadUInt32();
          break;
        }
        case 40: {
          PingMs = input.ReadUInt32();
          break;
        }
        case 48: {
          PacketsDroppedPct = input.ReadUInt32();
          break;
        }
        case 56: {
          PacketsWeirdSequencePct = input.ReadUInt32();
          break;
        }
        case 64: {
          PeakJitterUsec = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          OutPacketsPerSecX10 = input.ReadUInt32();
          break;
        }
        case 16: {
          OutBytesPerSec = input.ReadUInt32();
          break;
        }
        case 24: {
          InPacketsPerSecX10 = input.ReadUInt32();
          break;
        }
        case 32: {
          InBytesPerSec = input.ReadUInt32();
          break;
        }
        case 40: {
          PingMs = input.ReadUInt32();
          break;
        }
        case 48: {
          PacketsDroppedPct = input.ReadUInt32();
          break;
        }
        case 56: {
          PacketsWeirdSequencePct = input.ReadUInt32();
          break;
        }
        case 64: {
          PeakJitterUsec = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramLinkLifetimeStats : pb::IMessage<CMsgSteamDatagramLinkLifetimeStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramLinkLifetimeStats> _parser = new pb::MessageParser<CMsgSteamDatagramLinkLifetimeStats>(() => new CMsgSteamDatagramLinkLifetimeStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  private int _hasBits1;
  private int _hasBits2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramLinkLifetimeStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramLinkLifetimeStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramLinkLifetimeStats(CMsgSteamDatagramLinkLifetimeStats other) : this() {
    _hasBits0 = other._hasBits0;
    _hasBits1 = other._hasBits1;
    _hasBits2 = other._hasBits2;
    connectedSeconds_ = other.connectedSeconds_;
    packetsSent_ = other.packetsSent_;
    kbSent_ = other.kbSent_;
    packetsRecv_ = other.packetsRecv_;
    kbRecv_ = other.kbRecv_;
    packetsRecvSequenced_ = other.packetsRecvSequenced_;
    packetsRecvDropped_ = other.packetsRecvDropped_;
    packetsRecvOutOfOrder_ = other.packetsRecvOutOfOrder_;
    packetsRecvOutOfOrderCorrected_ = other.packetsRecvOutOfOrderCorrected_;
    packetsRecvDuplicate_ = other.packetsRecvDuplicate_;
    packetsRecvLurch_ = other.packetsRecvLurch_;
    multipathPacketsRecvSequenced_ = other.multipathPacketsRecvSequenced_.Clone();
    multipathPacketsRecvLater_ = other.multipathPacketsRecvLater_.Clone();
    multipathSendEnabled_ = other.multipathSendEnabled_;
    qualityHistogram100_ = other.qualityHistogram100_;
    qualityHistogram99_ = other.qualityHistogram99_;
    qualityHistogram97_ = other.qualityHistogram97_;
    qualityHistogram95_ = other.qualityHistogram95_;
    qualityHistogram90_ = other.qualityHistogram90_;
    qualityHistogram75_ = other.qualityHistogram75_;
    qualityHistogram50_ = other.qualityHistogram50_;
    qualityHistogram1_ = other.qualityHistogram1_;
    qualityHistogramDead_ = other.qualityHistogramDead_;
    qualityNtile2Nd_ = other.qualityNtile2Nd_;
    qualityNtile5Th_ = other.qualityNtile5Th_;
    qualityNtile25Th_ = other.qualityNtile25Th_;
    qualityNtile50Th_ = other.qualityNtile50Th_;
    pingHistogram25_ = other.pingHistogram25_;
    pingHistogram50_ = other.pingHistogram50_;
    pingHistogram75_ = other.pingHistogram75_;
    pingHistogram100_ = other.pingHistogram100_;
    pingHistogram125_ = other.pingHistogram125_;
    pingHistogram150_ = other.pingHistogram150_;
    pingHistogram200_ = other.pingHistogram200_;
    pingHistogram300_ = other.pingHistogram300_;
    pingHistogramMax_ = other.pingHistogramMax_;
    pingNtile5Th_ = other.pingNtile5Th_;
    pingNtile50Th_ = other.pingNtile50Th_;
    pingNtile75Th_ = other.pingNtile75Th_;
    pingNtile95Th_ = other.pingNtile95Th_;
    pingNtile98Th_ = other.pingNtile98Th_;
    jitterHistogramNegligible_ = other.jitterHistogramNegligible_;
    jitterHistogram1_ = other.jitterHistogram1_;
    jitterHistogram2_ = other.jitterHistogram2_;
    jitterHistogram5_ = other.jitterHistogram5_;
    jitterHistogram10_ = other.jitterHistogram10_;
    jitterHistogram20_ = other.jitterHistogram20_;
    txspeedMax_ = other.txspeedMax_;
    txspeedHistogram16_ = other.txspeedHistogram16_;
    txspeedHistogram32_ = other.txspeedHistogram32_;
    txspeedHistogram64_ = other.txspeedHistogram64_;
    txspeedHistogram128_ = other.txspeedHistogram128_;
    txspeedHistogram256_ = other.txspeedHistogram256_;
    txspeedHistogram512_ = other.txspeedHistogram512_;
    txspeedHistogram1024_ = other.txspeedHistogram1024_;
    txspeedHistogramMax_ = other.txspeedHistogramMax_;
    txspeedNtile5Th_ = other.txspeedNtile5Th_;
    txspeedNtile50Th_ = other.txspeedNtile50Th_;
    txspeedNtile75Th_ = other.txspeedNtile75Th_;
    txspeedNtile95Th_ = other.txspeedNtile95Th_;
    txspeedNtile98Th_ = other.txspeedNtile98Th_;
    rxspeedMax_ = other.rxspeedMax_;
    rxspeedHistogram16_ = other.rxspeedHistogram16_;
    rxspeedHistogram32_ = other.rxspeedHistogram32_;
    rxspeedHistogram64_ = other.rxspeedHistogram64_;
    rxspeedHistogram128_ = other.rxspeedHistogram128_;
    rxspeedHistogram256_ = other.rxspeedHistogram256_;
    rxspeedHistogram512_ = other.rxspeedHistogram512_;
    rxspeedHistogram1024_ = other.rxspeedHistogram1024_;
    rxspeedHistogramMax_ = other.rxspeedHistogramMax_;
    rxspeedNtile5Th_ = other.rxspeedNtile5Th_;
    rxspeedNtile50Th_ = other.rxspeedNtile50Th_;
    rxspeedNtile75Th_ = other.rxspeedNtile75Th_;
    rxspeedNtile95Th_ = other.rxspeedNtile95Th_;
    rxspeedNtile98Th_ = other.rxspeedNtile98Th_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramLinkLifetimeStats Clone() {
    return new CMsgSteamDatagramLinkLifetimeStats(this);
  }

  /// <summary>Field number for the "connected_seconds" field.</summary>
  public const int ConnectedSecondsFieldNumber = 2;
  private readonly static uint ConnectedSecondsDefaultValue = 0;

  private uint connectedSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ConnectedSeconds {
    get { if ((_hasBits0 & 1) != 0) { return connectedSeconds_; } else { return ConnectedSecondsDefaultValue; } }
    set {
      _hasBits0 |= 1;
      connectedSeconds_ = value;
    }
  }
  /// <summary>Gets whether the "connected_seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectedSeconds {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "connected_seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectedSeconds() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "packets_sent" field.</summary>
  public const int PacketsSentFieldNumber = 3;
  private readonly static ulong PacketsSentDefaultValue = 0UL;

  private ulong packetsSent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsSent {
    get { if ((_hasBits0 & 2) != 0) { return packetsSent_; } else { return PacketsSentDefaultValue; } }
    set {
      _hasBits0 |= 2;
      packetsSent_ = value;
    }
  }
  /// <summary>Gets whether the "packets_sent" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsSent {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "packets_sent" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsSent() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "kb_sent" field.</summary>
  public const int KbSentFieldNumber = 4;
  private readonly static ulong KbSentDefaultValue = 0UL;

  private ulong kbSent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong KbSent {
    get { if ((_hasBits0 & 4) != 0) { return kbSent_; } else { return KbSentDefaultValue; } }
    set {
      _hasBits0 |= 4;
      kbSent_ = value;
    }
  }
  /// <summary>Gets whether the "kb_sent" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKbSent {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "kb_sent" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKbSent() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "packets_recv" field.</summary>
  public const int PacketsRecvFieldNumber = 5;
  private readonly static ulong PacketsRecvDefaultValue = 0UL;

  private ulong packetsRecv_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsRecv {
    get { if ((_hasBits0 & 8) != 0) { return packetsRecv_; } else { return PacketsRecvDefaultValue; } }
    set {
      _hasBits0 |= 8;
      packetsRecv_ = value;
    }
  }
  /// <summary>Gets whether the "packets_recv" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsRecv {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "packets_recv" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsRecv() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "kb_recv" field.</summary>
  public const int KbRecvFieldNumber = 6;
  private readonly static ulong KbRecvDefaultValue = 0UL;

  private ulong kbRecv_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong KbRecv {
    get { if ((_hasBits0 & 16) != 0) { return kbRecv_; } else { return KbRecvDefaultValue; } }
    set {
      _hasBits0 |= 16;
      kbRecv_ = value;
    }
  }
  /// <summary>Gets whether the "kb_recv" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKbRecv {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "kb_recv" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKbRecv() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "packets_recv_sequenced" field.</summary>
  public const int PacketsRecvSequencedFieldNumber = 7;
  private readonly static ulong PacketsRecvSequencedDefaultValue = 0UL;

  private ulong packetsRecvSequenced_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsRecvSequenced {
    get { if ((_hasBits0 & 32) != 0) { return packetsRecvSequenced_; } else { return PacketsRecvSequencedDefaultValue; } }
    set {
      _hasBits0 |= 32;
      packetsRecvSequenced_ = value;
    }
  }
  /// <summary>Gets whether the "packets_recv_sequenced" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsRecvSequenced {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "packets_recv_sequenced" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsRecvSequenced() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "packets_recv_dropped" field.</summary>
  public const int PacketsRecvDroppedFieldNumber = 8;
  private readonly static ulong PacketsRecvDroppedDefaultValue = 0UL;

  private ulong packetsRecvDropped_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsRecvDropped {
    get { if ((_hasBits0 & 64) != 0) { return packetsRecvDropped_; } else { return PacketsRecvDroppedDefaultValue; } }
    set {
      _hasBits0 |= 64;
      packetsRecvDropped_ = value;
    }
  }
  /// <summary>Gets whether the "packets_recv_dropped" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsRecvDropped {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "packets_recv_dropped" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsRecvDropped() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "packets_recv_out_of_order" field.</summary>
  public const int PacketsRecvOutOfOrderFieldNumber = 9;
  private readonly static ulong PacketsRecvOutOfOrderDefaultValue = 0UL;

  private ulong packetsRecvOutOfOrder_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsRecvOutOfOrder {
    get { if ((_hasBits0 & 128) != 0) { return packetsRecvOutOfOrder_; } else { return PacketsRecvOutOfOrderDefaultValue; } }
    set {
      _hasBits0 |= 128;
      packetsRecvOutOfOrder_ = value;
    }
  }
  /// <summary>Gets whether the "packets_recv_out_of_order" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsRecvOutOfOrder {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "packets_recv_out_of_order" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsRecvOutOfOrder() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "packets_recv_out_of_order_corrected" field.</summary>
  public const int PacketsRecvOutOfOrderCorrectedFieldNumber = 15;
  private readonly static ulong PacketsRecvOutOfOrderCorrectedDefaultValue = 0UL;

  private ulong packetsRecvOutOfOrderCorrected_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsRecvOutOfOrderCorrected {
    get { if ((_hasBits0 & 2048) != 0) { return packetsRecvOutOfOrderCorrected_; } else { return PacketsRecvOutOfOrderCorrectedDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      packetsRecvOutOfOrderCorrected_ = value;
    }
  }
  /// <summary>Gets whether the "packets_recv_out_of_order_corrected" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsRecvOutOfOrderCorrected {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "packets_recv_out_of_order_corrected" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsRecvOutOfOrderCorrected() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "packets_recv_duplicate" field.</summary>
  public const int PacketsRecvDuplicateFieldNumber = 10;
  private readonly static ulong PacketsRecvDuplicateDefaultValue = 0UL;

  private ulong packetsRecvDuplicate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsRecvDuplicate {
    get { if ((_hasBits0 & 256) != 0) { return packetsRecvDuplicate_; } else { return PacketsRecvDuplicateDefaultValue; } }
    set {
      _hasBits0 |= 256;
      packetsRecvDuplicate_ = value;
    }
  }
  /// <summary>Gets whether the "packets_recv_duplicate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsRecvDuplicate {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "packets_recv_duplicate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsRecvDuplicate() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "packets_recv_lurch" field.</summary>
  public const int PacketsRecvLurchFieldNumber = 11;
  private readonly static ulong PacketsRecvLurchDefaultValue = 0UL;

  private ulong packetsRecvLurch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PacketsRecvLurch {
    get { if ((_hasBits0 & 512) != 0) { return packetsRecvLurch_; } else { return PacketsRecvLurchDefaultValue; } }
    set {
      _hasBits0 |= 512;
      packetsRecvLurch_ = value;
    }
  }
  /// <summary>Gets whether the "packets_recv_lurch" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketsRecvLurch {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "packets_recv_lurch" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketsRecvLurch() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "multipath_packets_recv_sequenced" field.</summary>
  public const int MultipathPacketsRecvSequencedFieldNumber = 12;
  private static readonly pb::FieldCodec<ulong> _repeated_multipathPacketsRecvSequenced_codec
      = pb::FieldCodec.ForUInt64(96);
  private readonly pbc::RepeatedField<ulong> multipathPacketsRecvSequenced_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> MultipathPacketsRecvSequenced {
    get { return multipathPacketsRecvSequenced_; }
  }

  /// <summary>Field number for the "multipath_packets_recv_later" field.</summary>
  public const int MultipathPacketsRecvLaterFieldNumber = 13;
  private static readonly pb::FieldCodec<ulong> _repeated_multipathPacketsRecvLater_codec
      = pb::FieldCodec.ForUInt64(104);
  private readonly pbc::RepeatedField<ulong> multipathPacketsRecvLater_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> MultipathPacketsRecvLater {
    get { return multipathPacketsRecvLater_; }
  }

  /// <summary>Field number for the "multipath_send_enabled" field.</summary>
  public const int MultipathSendEnabledFieldNumber = 14;
  private readonly static uint MultipathSendEnabledDefaultValue = 0;

  private uint multipathSendEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MultipathSendEnabled {
    get { if ((_hasBits0 & 1024) != 0) { return multipathSendEnabled_; } else { return MultipathSendEnabledDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      multipathSendEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "multipath_send_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMultipathSendEnabled {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "multipath_send_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMultipathSendEnabled() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "quality_histogram_100" field.</summary>
  public const int QualityHistogram100FieldNumber = 21;
  private readonly static uint QualityHistogram100DefaultValue = 0;

  private uint qualityHistogram100_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram100 {
    get { if ((_hasBits0 & 4096) != 0) { return qualityHistogram100_; } else { return QualityHistogram100DefaultValue; } }
    set {
      _hasBits0 |= 4096;
      qualityHistogram100_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_100" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram100 {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_100" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram100() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "quality_histogram_99" field.</summary>
  public const int QualityHistogram99FieldNumber = 22;
  private readonly static uint QualityHistogram99DefaultValue = 0;

  private uint qualityHistogram99_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram99 {
    get { if ((_hasBits0 & 8192) != 0) { return qualityHistogram99_; } else { return QualityHistogram99DefaultValue; } }
    set {
      _hasBits0 |= 8192;
      qualityHistogram99_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_99" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram99 {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_99" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram99() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "quality_histogram_97" field.</summary>
  public const int QualityHistogram97FieldNumber = 23;
  private readonly static uint QualityHistogram97DefaultValue = 0;

  private uint qualityHistogram97_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram97 {
    get { if ((_hasBits0 & 16384) != 0) { return qualityHistogram97_; } else { return QualityHistogram97DefaultValue; } }
    set {
      _hasBits0 |= 16384;
      qualityHistogram97_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_97" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram97 {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_97" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram97() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "quality_histogram_95" field.</summary>
  public const int QualityHistogram95FieldNumber = 24;
  private readonly static uint QualityHistogram95DefaultValue = 0;

  private uint qualityHistogram95_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram95 {
    get { if ((_hasBits0 & 32768) != 0) { return qualityHistogram95_; } else { return QualityHistogram95DefaultValue; } }
    set {
      _hasBits0 |= 32768;
      qualityHistogram95_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_95" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram95 {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_95" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram95() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "quality_histogram_90" field.</summary>
  public const int QualityHistogram90FieldNumber = 25;
  private readonly static uint QualityHistogram90DefaultValue = 0;

  private uint qualityHistogram90_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram90 {
    get { if ((_hasBits0 & 65536) != 0) { return qualityHistogram90_; } else { return QualityHistogram90DefaultValue; } }
    set {
      _hasBits0 |= 65536;
      qualityHistogram90_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_90" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram90 {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_90" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram90() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "quality_histogram_75" field.</summary>
  public const int QualityHistogram75FieldNumber = 26;
  private readonly static uint QualityHistogram75DefaultValue = 0;

  private uint qualityHistogram75_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram75 {
    get { if ((_hasBits0 & 131072) != 0) { return qualityHistogram75_; } else { return QualityHistogram75DefaultValue; } }
    set {
      _hasBits0 |= 131072;
      qualityHistogram75_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_75" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram75 {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_75" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram75() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "quality_histogram_50" field.</summary>
  public const int QualityHistogram50FieldNumber = 27;
  private readonly static uint QualityHistogram50DefaultValue = 0;

  private uint qualityHistogram50_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram50 {
    get { if ((_hasBits0 & 262144) != 0) { return qualityHistogram50_; } else { return QualityHistogram50DefaultValue; } }
    set {
      _hasBits0 |= 262144;
      qualityHistogram50_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_50" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram50 {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_50" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram50() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "quality_histogram_1" field.</summary>
  public const int QualityHistogram1FieldNumber = 28;
  private readonly static uint QualityHistogram1DefaultValue = 0;

  private uint qualityHistogram1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogram1 {
    get { if ((_hasBits0 & 524288) != 0) { return qualityHistogram1_; } else { return QualityHistogram1DefaultValue; } }
    set {
      _hasBits0 |= 524288;
      qualityHistogram1_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogram1 {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogram1() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "quality_histogram_dead" field.</summary>
  public const int QualityHistogramDeadFieldNumber = 29;
  private readonly static uint QualityHistogramDeadDefaultValue = 0;

  private uint qualityHistogramDead_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityHistogramDead {
    get { if ((_hasBits0 & 1048576) != 0) { return qualityHistogramDead_; } else { return QualityHistogramDeadDefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      qualityHistogramDead_ = value;
    }
  }
  /// <summary>Gets whether the "quality_histogram_dead" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityHistogramDead {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "quality_histogram_dead" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityHistogramDead() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "quality_ntile_2nd" field.</summary>
  public const int QualityNtile2NdFieldNumber = 30;
  private readonly static uint QualityNtile2NdDefaultValue = 0;

  private uint qualityNtile2Nd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityNtile2Nd {
    get { if ((_hasBits0 & 2097152) != 0) { return qualityNtile2Nd_; } else { return QualityNtile2NdDefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      qualityNtile2Nd_ = value;
    }
  }
  /// <summary>Gets whether the "quality_ntile_2nd" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityNtile2Nd {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "quality_ntile_2nd" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityNtile2Nd() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "quality_ntile_5th" field.</summary>
  public const int QualityNtile5ThFieldNumber = 31;
  private readonly static uint QualityNtile5ThDefaultValue = 0;

  private uint qualityNtile5Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityNtile5Th {
    get { if ((_hasBits0 & 4194304) != 0) { return qualityNtile5Th_; } else { return QualityNtile5ThDefaultValue; } }
    set {
      _hasBits0 |= 4194304;
      qualityNtile5Th_ = value;
    }
  }
  /// <summary>Gets whether the "quality_ntile_5th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityNtile5Th {
    get { return (_hasBits0 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "quality_ntile_5th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityNtile5Th() {
    _hasBits0 &= ~4194304;
  }

  /// <summary>Field number for the "quality_ntile_25th" field.</summary>
  public const int QualityNtile25ThFieldNumber = 32;
  private readonly static uint QualityNtile25ThDefaultValue = 0;

  private uint qualityNtile25Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityNtile25Th {
    get { if ((_hasBits0 & 8388608) != 0) { return qualityNtile25Th_; } else { return QualityNtile25ThDefaultValue; } }
    set {
      _hasBits0 |= 8388608;
      qualityNtile25Th_ = value;
    }
  }
  /// <summary>Gets whether the "quality_ntile_25th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityNtile25Th {
    get { return (_hasBits0 & 8388608) != 0; }
  }
  /// <summary>Clears the value of the "quality_ntile_25th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityNtile25Th() {
    _hasBits0 &= ~8388608;
  }

  /// <summary>Field number for the "quality_ntile_50th" field.</summary>
  public const int QualityNtile50ThFieldNumber = 33;
  private readonly static uint QualityNtile50ThDefaultValue = 0;

  private uint qualityNtile50Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QualityNtile50Th {
    get { if ((_hasBits0 & 16777216) != 0) { return qualityNtile50Th_; } else { return QualityNtile50ThDefaultValue; } }
    set {
      _hasBits0 |= 16777216;
      qualityNtile50Th_ = value;
    }
  }
  /// <summary>Gets whether the "quality_ntile_50th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQualityNtile50Th {
    get { return (_hasBits0 & 16777216) != 0; }
  }
  /// <summary>Clears the value of the "quality_ntile_50th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQualityNtile50Th() {
    _hasBits0 &= ~16777216;
  }

  /// <summary>Field number for the "ping_histogram_25" field.</summary>
  public const int PingHistogram25FieldNumber = 41;
  private readonly static uint PingHistogram25DefaultValue = 0;

  private uint pingHistogram25_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram25 {
    get { if ((_hasBits0 & 33554432) != 0) { return pingHistogram25_; } else { return PingHistogram25DefaultValue; } }
    set {
      _hasBits0 |= 33554432;
      pingHistogram25_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_25" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram25 {
    get { return (_hasBits0 & 33554432) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_25" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram25() {
    _hasBits0 &= ~33554432;
  }

  /// <summary>Field number for the "ping_histogram_50" field.</summary>
  public const int PingHistogram50FieldNumber = 42;
  private readonly static uint PingHistogram50DefaultValue = 0;

  private uint pingHistogram50_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram50 {
    get { if ((_hasBits0 & 67108864) != 0) { return pingHistogram50_; } else { return PingHistogram50DefaultValue; } }
    set {
      _hasBits0 |= 67108864;
      pingHistogram50_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_50" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram50 {
    get { return (_hasBits0 & 67108864) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_50" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram50() {
    _hasBits0 &= ~67108864;
  }

  /// <summary>Field number for the "ping_histogram_75" field.</summary>
  public const int PingHistogram75FieldNumber = 43;
  private readonly static uint PingHistogram75DefaultValue = 0;

  private uint pingHistogram75_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram75 {
    get { if ((_hasBits0 & 134217728) != 0) { return pingHistogram75_; } else { return PingHistogram75DefaultValue; } }
    set {
      _hasBits0 |= 134217728;
      pingHistogram75_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_75" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram75 {
    get { return (_hasBits0 & 134217728) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_75" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram75() {
    _hasBits0 &= ~134217728;
  }

  /// <summary>Field number for the "ping_histogram_100" field.</summary>
  public const int PingHistogram100FieldNumber = 44;
  private readonly static uint PingHistogram100DefaultValue = 0;

  private uint pingHistogram100_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram100 {
    get { if ((_hasBits0 & 268435456) != 0) { return pingHistogram100_; } else { return PingHistogram100DefaultValue; } }
    set {
      _hasBits0 |= 268435456;
      pingHistogram100_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_100" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram100 {
    get { return (_hasBits0 & 268435456) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_100" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram100() {
    _hasBits0 &= ~268435456;
  }

  /// <summary>Field number for the "ping_histogram_125" field.</summary>
  public const int PingHistogram125FieldNumber = 45;
  private readonly static uint PingHistogram125DefaultValue = 0;

  private uint pingHistogram125_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram125 {
    get { if ((_hasBits0 & 536870912) != 0) { return pingHistogram125_; } else { return PingHistogram125DefaultValue; } }
    set {
      _hasBits0 |= 536870912;
      pingHistogram125_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_125" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram125 {
    get { return (_hasBits0 & 536870912) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_125" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram125() {
    _hasBits0 &= ~536870912;
  }

  /// <summary>Field number for the "ping_histogram_150" field.</summary>
  public const int PingHistogram150FieldNumber = 46;
  private readonly static uint PingHistogram150DefaultValue = 0;

  private uint pingHistogram150_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram150 {
    get { if ((_hasBits0 & 1073741824) != 0) { return pingHistogram150_; } else { return PingHistogram150DefaultValue; } }
    set {
      _hasBits0 |= 1073741824;
      pingHistogram150_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_150" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram150 {
    get { return (_hasBits0 & 1073741824) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_150" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram150() {
    _hasBits0 &= ~1073741824;
  }

  /// <summary>Field number for the "ping_histogram_200" field.</summary>
  public const int PingHistogram200FieldNumber = 47;
  private readonly static uint PingHistogram200DefaultValue = 0;

  private uint pingHistogram200_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram200 {
    get { if ((_hasBits0 & -2147483648) != 0) { return pingHistogram200_; } else { return PingHistogram200DefaultValue; } }
    set {
      _hasBits0 |= -2147483648;
      pingHistogram200_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_200" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram200 {
    get { return (_hasBits0 & -2147483648) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_200" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram200() {
    _hasBits0 &= ~-2147483648;
  }

  /// <summary>Field number for the "ping_histogram_300" field.</summary>
  public const int PingHistogram300FieldNumber = 48;
  private readonly static uint PingHistogram300DefaultValue = 0;

  private uint pingHistogram300_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogram300 {
    get { if ((_hasBits1 & 1) != 0) { return pingHistogram300_; } else { return PingHistogram300DefaultValue; } }
    set {
      _hasBits1 |= 1;
      pingHistogram300_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_300" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogram300 {
    get { return (_hasBits1 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_300" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogram300() {
    _hasBits1 &= ~1;
  }

  /// <summary>Field number for the "ping_histogram_max" field.</summary>
  public const int PingHistogramMaxFieldNumber = 49;
  private readonly static uint PingHistogramMaxDefaultValue = 0;

  private uint pingHistogramMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingHistogramMax {
    get { if ((_hasBits1 & 2) != 0) { return pingHistogramMax_; } else { return PingHistogramMaxDefaultValue; } }
    set {
      _hasBits1 |= 2;
      pingHistogramMax_ = value;
    }
  }
  /// <summary>Gets whether the "ping_histogram_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingHistogramMax {
    get { return (_hasBits1 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ping_histogram_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingHistogramMax() {
    _hasBits1 &= ~2;
  }

  /// <summary>Field number for the "ping_ntile_5th" field.</summary>
  public const int PingNtile5ThFieldNumber = 50;
  private readonly static uint PingNtile5ThDefaultValue = 0;

  private uint pingNtile5Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingNtile5Th {
    get { if ((_hasBits1 & 4) != 0) { return pingNtile5Th_; } else { return PingNtile5ThDefaultValue; } }
    set {
      _hasBits1 |= 4;
      pingNtile5Th_ = value;
    }
  }
  /// <summary>Gets whether the "ping_ntile_5th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingNtile5Th {
    get { return (_hasBits1 & 4) != 0; }
  }
  /// <summary>Clears the value of the "ping_ntile_5th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingNtile5Th() {
    _hasBits1 &= ~4;
  }

  /// <summary>Field number for the "ping_ntile_50th" field.</summary>
  public const int PingNtile50ThFieldNumber = 51;
  private readonly static uint PingNtile50ThDefaultValue = 0;

  private uint pingNtile50Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingNtile50Th {
    get { if ((_hasBits1 & 8) != 0) { return pingNtile50Th_; } else { return PingNtile50ThDefaultValue; } }
    set {
      _hasBits1 |= 8;
      pingNtile50Th_ = value;
    }
  }
  /// <summary>Gets whether the "ping_ntile_50th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingNtile50Th {
    get { return (_hasBits1 & 8) != 0; }
  }
  /// <summary>Clears the value of the "ping_ntile_50th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingNtile50Th() {
    _hasBits1 &= ~8;
  }

  /// <summary>Field number for the "ping_ntile_75th" field.</summary>
  public const int PingNtile75ThFieldNumber = 52;
  private readonly static uint PingNtile75ThDefaultValue = 0;

  private uint pingNtile75Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingNtile75Th {
    get { if ((_hasBits1 & 16) != 0) { return pingNtile75Th_; } else { return PingNtile75ThDefaultValue; } }
    set {
      _hasBits1 |= 16;
      pingNtile75Th_ = value;
    }
  }
  /// <summary>Gets whether the "ping_ntile_75th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingNtile75Th {
    get { return (_hasBits1 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ping_ntile_75th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingNtile75Th() {
    _hasBits1 &= ~16;
  }

  /// <summary>Field number for the "ping_ntile_95th" field.</summary>
  public const int PingNtile95ThFieldNumber = 53;
  private readonly static uint PingNtile95ThDefaultValue = 0;

  private uint pingNtile95Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingNtile95Th {
    get { if ((_hasBits1 & 32) != 0) { return pingNtile95Th_; } else { return PingNtile95ThDefaultValue; } }
    set {
      _hasBits1 |= 32;
      pingNtile95Th_ = value;
    }
  }
  /// <summary>Gets whether the "ping_ntile_95th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingNtile95Th {
    get { return (_hasBits1 & 32) != 0; }
  }
  /// <summary>Clears the value of the "ping_ntile_95th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingNtile95Th() {
    _hasBits1 &= ~32;
  }

  /// <summary>Field number for the "ping_ntile_98th" field.</summary>
  public const int PingNtile98ThFieldNumber = 54;
  private readonly static uint PingNtile98ThDefaultValue = 0;

  private uint pingNtile98Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingNtile98Th {
    get { if ((_hasBits1 & 64) != 0) { return pingNtile98Th_; } else { return PingNtile98ThDefaultValue; } }
    set {
      _hasBits1 |= 64;
      pingNtile98Th_ = value;
    }
  }
  /// <summary>Gets whether the "ping_ntile_98th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingNtile98Th {
    get { return (_hasBits1 & 64) != 0; }
  }
  /// <summary>Clears the value of the "ping_ntile_98th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingNtile98Th() {
    _hasBits1 &= ~64;
  }

  /// <summary>Field number for the "jitter_histogram_negligible" field.</summary>
  public const int JitterHistogramNegligibleFieldNumber = 61;
  private readonly static uint JitterHistogramNegligibleDefaultValue = 0;

  private uint jitterHistogramNegligible_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JitterHistogramNegligible {
    get { if ((_hasBits1 & 128) != 0) { return jitterHistogramNegligible_; } else { return JitterHistogramNegligibleDefaultValue; } }
    set {
      _hasBits1 |= 128;
      jitterHistogramNegligible_ = value;
    }
  }
  /// <summary>Gets whether the "jitter_histogram_negligible" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJitterHistogramNegligible {
    get { return (_hasBits1 & 128) != 0; }
  }
  /// <summary>Clears the value of the "jitter_histogram_negligible" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJitterHistogramNegligible() {
    _hasBits1 &= ~128;
  }

  /// <summary>Field number for the "jitter_histogram_1" field.</summary>
  public const int JitterHistogram1FieldNumber = 62;
  private readonly static uint JitterHistogram1DefaultValue = 0;

  private uint jitterHistogram1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JitterHistogram1 {
    get { if ((_hasBits1 & 256) != 0) { return jitterHistogram1_; } else { return JitterHistogram1DefaultValue; } }
    set {
      _hasBits1 |= 256;
      jitterHistogram1_ = value;
    }
  }
  /// <summary>Gets whether the "jitter_histogram_1" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJitterHistogram1 {
    get { return (_hasBits1 & 256) != 0; }
  }
  /// <summary>Clears the value of the "jitter_histogram_1" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJitterHistogram1() {
    _hasBits1 &= ~256;
  }

  /// <summary>Field number for the "jitter_histogram_2" field.</summary>
  public const int JitterHistogram2FieldNumber = 63;
  private readonly static uint JitterHistogram2DefaultValue = 0;

  private uint jitterHistogram2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JitterHistogram2 {
    get { if ((_hasBits1 & 512) != 0) { return jitterHistogram2_; } else { return JitterHistogram2DefaultValue; } }
    set {
      _hasBits1 |= 512;
      jitterHistogram2_ = value;
    }
  }
  /// <summary>Gets whether the "jitter_histogram_2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJitterHistogram2 {
    get { return (_hasBits1 & 512) != 0; }
  }
  /// <summary>Clears the value of the "jitter_histogram_2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJitterHistogram2() {
    _hasBits1 &= ~512;
  }

  /// <summary>Field number for the "jitter_histogram_5" field.</summary>
  public const int JitterHistogram5FieldNumber = 64;
  private readonly static uint JitterHistogram5DefaultValue = 0;

  private uint jitterHistogram5_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JitterHistogram5 {
    get { if ((_hasBits1 & 1024) != 0) { return jitterHistogram5_; } else { return JitterHistogram5DefaultValue; } }
    set {
      _hasBits1 |= 1024;
      jitterHistogram5_ = value;
    }
  }
  /// <summary>Gets whether the "jitter_histogram_5" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJitterHistogram5 {
    get { return (_hasBits1 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "jitter_histogram_5" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJitterHistogram5() {
    _hasBits1 &= ~1024;
  }

  /// <summary>Field number for the "jitter_histogram_10" field.</summary>
  public const int JitterHistogram10FieldNumber = 65;
  private readonly static uint JitterHistogram10DefaultValue = 0;

  private uint jitterHistogram10_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JitterHistogram10 {
    get { if ((_hasBits1 & 2048) != 0) { return jitterHistogram10_; } else { return JitterHistogram10DefaultValue; } }
    set {
      _hasBits1 |= 2048;
      jitterHistogram10_ = value;
    }
  }
  /// <summary>Gets whether the "jitter_histogram_10" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJitterHistogram10 {
    get { return (_hasBits1 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "jitter_histogram_10" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJitterHistogram10() {
    _hasBits1 &= ~2048;
  }

  /// <summary>Field number for the "jitter_histogram_20" field.</summary>
  public const int JitterHistogram20FieldNumber = 66;
  private readonly static uint JitterHistogram20DefaultValue = 0;

  private uint jitterHistogram20_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint JitterHistogram20 {
    get { if ((_hasBits1 & 4096) != 0) { return jitterHistogram20_; } else { return JitterHistogram20DefaultValue; } }
    set {
      _hasBits1 |= 4096;
      jitterHistogram20_ = value;
    }
  }
  /// <summary>Gets whether the "jitter_histogram_20" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJitterHistogram20 {
    get { return (_hasBits1 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "jitter_histogram_20" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJitterHistogram20() {
    _hasBits1 &= ~4096;
  }

  /// <summary>Field number for the "txspeed_max" field.</summary>
  public const int TxspeedMaxFieldNumber = 67;
  private readonly static uint TxspeedMaxDefaultValue = 0;

  private uint txspeedMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedMax {
    get { if ((_hasBits1 & 8192) != 0) { return txspeedMax_; } else { return TxspeedMaxDefaultValue; } }
    set {
      _hasBits1 |= 8192;
      txspeedMax_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedMax {
    get { return (_hasBits1 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedMax() {
    _hasBits1 &= ~8192;
  }

  /// <summary>Field number for the "txspeed_histogram_16" field.</summary>
  public const int TxspeedHistogram16FieldNumber = 68;
  private readonly static uint TxspeedHistogram16DefaultValue = 0;

  private uint txspeedHistogram16_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogram16 {
    get { if ((_hasBits1 & 16384) != 0) { return txspeedHistogram16_; } else { return TxspeedHistogram16DefaultValue; } }
    set {
      _hasBits1 |= 16384;
      txspeedHistogram16_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_16" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogram16 {
    get { return (_hasBits1 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_16" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogram16() {
    _hasBits1 &= ~16384;
  }

  /// <summary>Field number for the "txspeed_histogram_32" field.</summary>
  public const int TxspeedHistogram32FieldNumber = 69;
  private readonly static uint TxspeedHistogram32DefaultValue = 0;

  private uint txspeedHistogram32_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogram32 {
    get { if ((_hasBits1 & 32768) != 0) { return txspeedHistogram32_; } else { return TxspeedHistogram32DefaultValue; } }
    set {
      _hasBits1 |= 32768;
      txspeedHistogram32_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_32" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogram32 {
    get { return (_hasBits1 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_32" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogram32() {
    _hasBits1 &= ~32768;
  }

  /// <summary>Field number for the "txspeed_histogram_64" field.</summary>
  public const int TxspeedHistogram64FieldNumber = 70;
  private readonly static uint TxspeedHistogram64DefaultValue = 0;

  private uint txspeedHistogram64_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogram64 {
    get { if ((_hasBits1 & 65536) != 0) { return txspeedHistogram64_; } else { return TxspeedHistogram64DefaultValue; } }
    set {
      _hasBits1 |= 65536;
      txspeedHistogram64_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_64" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogram64 {
    get { return (_hasBits1 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_64" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogram64() {
    _hasBits1 &= ~65536;
  }

  /// <summary>Field number for the "txspeed_histogram_128" field.</summary>
  public const int TxspeedHistogram128FieldNumber = 71;
  private readonly static uint TxspeedHistogram128DefaultValue = 0;

  private uint txspeedHistogram128_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogram128 {
    get { if ((_hasBits1 & 131072) != 0) { return txspeedHistogram128_; } else { return TxspeedHistogram128DefaultValue; } }
    set {
      _hasBits1 |= 131072;
      txspeedHistogram128_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_128" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogram128 {
    get { return (_hasBits1 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_128" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogram128() {
    _hasBits1 &= ~131072;
  }

  /// <summary>Field number for the "txspeed_histogram_256" field.</summary>
  public const int TxspeedHistogram256FieldNumber = 72;
  private readonly static uint TxspeedHistogram256DefaultValue = 0;

  private uint txspeedHistogram256_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogram256 {
    get { if ((_hasBits1 & 262144) != 0) { return txspeedHistogram256_; } else { return TxspeedHistogram256DefaultValue; } }
    set {
      _hasBits1 |= 262144;
      txspeedHistogram256_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_256" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogram256 {
    get { return (_hasBits1 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_256" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogram256() {
    _hasBits1 &= ~262144;
  }

  /// <summary>Field number for the "txspeed_histogram_512" field.</summary>
  public const int TxspeedHistogram512FieldNumber = 73;
  private readonly static uint TxspeedHistogram512DefaultValue = 0;

  private uint txspeedHistogram512_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogram512 {
    get { if ((_hasBits1 & 524288) != 0) { return txspeedHistogram512_; } else { return TxspeedHistogram512DefaultValue; } }
    set {
      _hasBits1 |= 524288;
      txspeedHistogram512_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_512" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogram512 {
    get { return (_hasBits1 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_512" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogram512() {
    _hasBits1 &= ~524288;
  }

  /// <summary>Field number for the "txspeed_histogram_1024" field.</summary>
  public const int TxspeedHistogram1024FieldNumber = 74;
  private readonly static uint TxspeedHistogram1024DefaultValue = 0;

  private uint txspeedHistogram1024_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogram1024 {
    get { if ((_hasBits1 & 1048576) != 0) { return txspeedHistogram1024_; } else { return TxspeedHistogram1024DefaultValue; } }
    set {
      _hasBits1 |= 1048576;
      txspeedHistogram1024_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_1024" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogram1024 {
    get { return (_hasBits1 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_1024" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogram1024() {
    _hasBits1 &= ~1048576;
  }

  /// <summary>Field number for the "txspeed_histogram_max" field.</summary>
  public const int TxspeedHistogramMaxFieldNumber = 75;
  private readonly static uint TxspeedHistogramMaxDefaultValue = 0;

  private uint txspeedHistogramMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedHistogramMax {
    get { if ((_hasBits1 & 2097152) != 0) { return txspeedHistogramMax_; } else { return TxspeedHistogramMaxDefaultValue; } }
    set {
      _hasBits1 |= 2097152;
      txspeedHistogramMax_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_histogram_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedHistogramMax {
    get { return (_hasBits1 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_histogram_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedHistogramMax() {
    _hasBits1 &= ~2097152;
  }

  /// <summary>Field number for the "txspeed_ntile_5th" field.</summary>
  public const int TxspeedNtile5ThFieldNumber = 76;
  private readonly static uint TxspeedNtile5ThDefaultValue = 0;

  private uint txspeedNtile5Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedNtile5Th {
    get { if ((_hasBits1 & 4194304) != 0) { return txspeedNtile5Th_; } else { return TxspeedNtile5ThDefaultValue; } }
    set {
      _hasBits1 |= 4194304;
      txspeedNtile5Th_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_ntile_5th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedNtile5Th {
    get { return (_hasBits1 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_ntile_5th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedNtile5Th() {
    _hasBits1 &= ~4194304;
  }

  /// <summary>Field number for the "txspeed_ntile_50th" field.</summary>
  public const int TxspeedNtile50ThFieldNumber = 77;
  private readonly static uint TxspeedNtile50ThDefaultValue = 0;

  private uint txspeedNtile50Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedNtile50Th {
    get { if ((_hasBits1 & 8388608) != 0) { return txspeedNtile50Th_; } else { return TxspeedNtile50ThDefaultValue; } }
    set {
      _hasBits1 |= 8388608;
      txspeedNtile50Th_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_ntile_50th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedNtile50Th {
    get { return (_hasBits1 & 8388608) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_ntile_50th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedNtile50Th() {
    _hasBits1 &= ~8388608;
  }

  /// <summary>Field number for the "txspeed_ntile_75th" field.</summary>
  public const int TxspeedNtile75ThFieldNumber = 78;
  private readonly static uint TxspeedNtile75ThDefaultValue = 0;

  private uint txspeedNtile75Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedNtile75Th {
    get { if ((_hasBits1 & 16777216) != 0) { return txspeedNtile75Th_; } else { return TxspeedNtile75ThDefaultValue; } }
    set {
      _hasBits1 |= 16777216;
      txspeedNtile75Th_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_ntile_75th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedNtile75Th {
    get { return (_hasBits1 & 16777216) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_ntile_75th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedNtile75Th() {
    _hasBits1 &= ~16777216;
  }

  /// <summary>Field number for the "txspeed_ntile_95th" field.</summary>
  public const int TxspeedNtile95ThFieldNumber = 79;
  private readonly static uint TxspeedNtile95ThDefaultValue = 0;

  private uint txspeedNtile95Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedNtile95Th {
    get { if ((_hasBits1 & 33554432) != 0) { return txspeedNtile95Th_; } else { return TxspeedNtile95ThDefaultValue; } }
    set {
      _hasBits1 |= 33554432;
      txspeedNtile95Th_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_ntile_95th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedNtile95Th {
    get { return (_hasBits1 & 33554432) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_ntile_95th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedNtile95Th() {
    _hasBits1 &= ~33554432;
  }

  /// <summary>Field number for the "txspeed_ntile_98th" field.</summary>
  public const int TxspeedNtile98ThFieldNumber = 80;
  private readonly static uint TxspeedNtile98ThDefaultValue = 0;

  private uint txspeedNtile98Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TxspeedNtile98Th {
    get { if ((_hasBits1 & 67108864) != 0) { return txspeedNtile98Th_; } else { return TxspeedNtile98ThDefaultValue; } }
    set {
      _hasBits1 |= 67108864;
      txspeedNtile98Th_ = value;
    }
  }
  /// <summary>Gets whether the "txspeed_ntile_98th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxspeedNtile98Th {
    get { return (_hasBits1 & 67108864) != 0; }
  }
  /// <summary>Clears the value of the "txspeed_ntile_98th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxspeedNtile98Th() {
    _hasBits1 &= ~67108864;
  }

  /// <summary>Field number for the "rxspeed_max" field.</summary>
  public const int RxspeedMaxFieldNumber = 81;
  private readonly static uint RxspeedMaxDefaultValue = 0;

  private uint rxspeedMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedMax {
    get { if ((_hasBits1 & 134217728) != 0) { return rxspeedMax_; } else { return RxspeedMaxDefaultValue; } }
    set {
      _hasBits1 |= 134217728;
      rxspeedMax_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedMax {
    get { return (_hasBits1 & 134217728) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedMax() {
    _hasBits1 &= ~134217728;
  }

  /// <summary>Field number for the "rxspeed_histogram_16" field.</summary>
  public const int RxspeedHistogram16FieldNumber = 82;
  private readonly static uint RxspeedHistogram16DefaultValue = 0;

  private uint rxspeedHistogram16_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogram16 {
    get { if ((_hasBits1 & 268435456) != 0) { return rxspeedHistogram16_; } else { return RxspeedHistogram16DefaultValue; } }
    set {
      _hasBits1 |= 268435456;
      rxspeedHistogram16_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_16" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogram16 {
    get { return (_hasBits1 & 268435456) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_16" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogram16() {
    _hasBits1 &= ~268435456;
  }

  /// <summary>Field number for the "rxspeed_histogram_32" field.</summary>
  public const int RxspeedHistogram32FieldNumber = 83;
  private readonly static uint RxspeedHistogram32DefaultValue = 0;

  private uint rxspeedHistogram32_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogram32 {
    get { if ((_hasBits1 & 536870912) != 0) { return rxspeedHistogram32_; } else { return RxspeedHistogram32DefaultValue; } }
    set {
      _hasBits1 |= 536870912;
      rxspeedHistogram32_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_32" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogram32 {
    get { return (_hasBits1 & 536870912) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_32" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogram32() {
    _hasBits1 &= ~536870912;
  }

  /// <summary>Field number for the "rxspeed_histogram_64" field.</summary>
  public const int RxspeedHistogram64FieldNumber = 84;
  private readonly static uint RxspeedHistogram64DefaultValue = 0;

  private uint rxspeedHistogram64_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogram64 {
    get { if ((_hasBits1 & 1073741824) != 0) { return rxspeedHistogram64_; } else { return RxspeedHistogram64DefaultValue; } }
    set {
      _hasBits1 |= 1073741824;
      rxspeedHistogram64_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_64" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogram64 {
    get { return (_hasBits1 & 1073741824) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_64" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogram64() {
    _hasBits1 &= ~1073741824;
  }

  /// <summary>Field number for the "rxspeed_histogram_128" field.</summary>
  public const int RxspeedHistogram128FieldNumber = 85;
  private readonly static uint RxspeedHistogram128DefaultValue = 0;

  private uint rxspeedHistogram128_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogram128 {
    get { if ((_hasBits1 & -2147483648) != 0) { return rxspeedHistogram128_; } else { return RxspeedHistogram128DefaultValue; } }
    set {
      _hasBits1 |= -2147483648;
      rxspeedHistogram128_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_128" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogram128 {
    get { return (_hasBits1 & -2147483648) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_128" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogram128() {
    _hasBits1 &= ~-2147483648;
  }

  /// <summary>Field number for the "rxspeed_histogram_256" field.</summary>
  public const int RxspeedHistogram256FieldNumber = 86;
  private readonly static uint RxspeedHistogram256DefaultValue = 0;

  private uint rxspeedHistogram256_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogram256 {
    get { if ((_hasBits2 & 1) != 0) { return rxspeedHistogram256_; } else { return RxspeedHistogram256DefaultValue; } }
    set {
      _hasBits2 |= 1;
      rxspeedHistogram256_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_256" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogram256 {
    get { return (_hasBits2 & 1) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_256" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogram256() {
    _hasBits2 &= ~1;
  }

  /// <summary>Field number for the "rxspeed_histogram_512" field.</summary>
  public const int RxspeedHistogram512FieldNumber = 87;
  private readonly static uint RxspeedHistogram512DefaultValue = 0;

  private uint rxspeedHistogram512_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogram512 {
    get { if ((_hasBits2 & 2) != 0) { return rxspeedHistogram512_; } else { return RxspeedHistogram512DefaultValue; } }
    set {
      _hasBits2 |= 2;
      rxspeedHistogram512_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_512" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogram512 {
    get { return (_hasBits2 & 2) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_512" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogram512() {
    _hasBits2 &= ~2;
  }

  /// <summary>Field number for the "rxspeed_histogram_1024" field.</summary>
  public const int RxspeedHistogram1024FieldNumber = 88;
  private readonly static uint RxspeedHistogram1024DefaultValue = 0;

  private uint rxspeedHistogram1024_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogram1024 {
    get { if ((_hasBits2 & 4) != 0) { return rxspeedHistogram1024_; } else { return RxspeedHistogram1024DefaultValue; } }
    set {
      _hasBits2 |= 4;
      rxspeedHistogram1024_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_1024" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogram1024 {
    get { return (_hasBits2 & 4) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_1024" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogram1024() {
    _hasBits2 &= ~4;
  }

  /// <summary>Field number for the "rxspeed_histogram_max" field.</summary>
  public const int RxspeedHistogramMaxFieldNumber = 89;
  private readonly static uint RxspeedHistogramMaxDefaultValue = 0;

  private uint rxspeedHistogramMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedHistogramMax {
    get { if ((_hasBits2 & 8) != 0) { return rxspeedHistogramMax_; } else { return RxspeedHistogramMaxDefaultValue; } }
    set {
      _hasBits2 |= 8;
      rxspeedHistogramMax_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_histogram_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedHistogramMax {
    get { return (_hasBits2 & 8) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_histogram_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedHistogramMax() {
    _hasBits2 &= ~8;
  }

  /// <summary>Field number for the "rxspeed_ntile_5th" field.</summary>
  public const int RxspeedNtile5ThFieldNumber = 90;
  private readonly static uint RxspeedNtile5ThDefaultValue = 0;

  private uint rxspeedNtile5Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedNtile5Th {
    get { if ((_hasBits2 & 16) != 0) { return rxspeedNtile5Th_; } else { return RxspeedNtile5ThDefaultValue; } }
    set {
      _hasBits2 |= 16;
      rxspeedNtile5Th_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_ntile_5th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedNtile5Th {
    get { return (_hasBits2 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_ntile_5th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedNtile5Th() {
    _hasBits2 &= ~16;
  }

  /// <summary>Field number for the "rxspeed_ntile_50th" field.</summary>
  public const int RxspeedNtile50ThFieldNumber = 91;
  private readonly static uint RxspeedNtile50ThDefaultValue = 0;

  private uint rxspeedNtile50Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedNtile50Th {
    get { if ((_hasBits2 & 32) != 0) { return rxspeedNtile50Th_; } else { return RxspeedNtile50ThDefaultValue; } }
    set {
      _hasBits2 |= 32;
      rxspeedNtile50Th_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_ntile_50th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedNtile50Th {
    get { return (_hasBits2 & 32) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_ntile_50th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedNtile50Th() {
    _hasBits2 &= ~32;
  }

  /// <summary>Field number for the "rxspeed_ntile_75th" field.</summary>
  public const int RxspeedNtile75ThFieldNumber = 92;
  private readonly static uint RxspeedNtile75ThDefaultValue = 0;

  private uint rxspeedNtile75Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedNtile75Th {
    get { if ((_hasBits2 & 64) != 0) { return rxspeedNtile75Th_; } else { return RxspeedNtile75ThDefaultValue; } }
    set {
      _hasBits2 |= 64;
      rxspeedNtile75Th_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_ntile_75th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedNtile75Th {
    get { return (_hasBits2 & 64) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_ntile_75th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedNtile75Th() {
    _hasBits2 &= ~64;
  }

  /// <summary>Field number for the "rxspeed_ntile_95th" field.</summary>
  public const int RxspeedNtile95ThFieldNumber = 93;
  private readonly static uint RxspeedNtile95ThDefaultValue = 0;

  private uint rxspeedNtile95Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedNtile95Th {
    get { if ((_hasBits2 & 128) != 0) { return rxspeedNtile95Th_; } else { return RxspeedNtile95ThDefaultValue; } }
    set {
      _hasBits2 |= 128;
      rxspeedNtile95Th_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_ntile_95th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedNtile95Th {
    get { return (_hasBits2 & 128) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_ntile_95th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedNtile95Th() {
    _hasBits2 &= ~128;
  }

  /// <summary>Field number for the "rxspeed_ntile_98th" field.</summary>
  public const int RxspeedNtile98ThFieldNumber = 94;
  private readonly static uint RxspeedNtile98ThDefaultValue = 0;

  private uint rxspeedNtile98Th_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RxspeedNtile98Th {
    get { if ((_hasBits2 & 256) != 0) { return rxspeedNtile98Th_; } else { return RxspeedNtile98ThDefaultValue; } }
    set {
      _hasBits2 |= 256;
      rxspeedNtile98Th_ = value;
    }
  }
  /// <summary>Gets whether the "rxspeed_ntile_98th" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRxspeedNtile98Th {
    get { return (_hasBits2 & 256) != 0; }
  }
  /// <summary>Clears the value of the "rxspeed_ntile_98th" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRxspeedNtile98Th() {
    _hasBits2 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramLinkLifetimeStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramLinkLifetimeStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectedSeconds != other.ConnectedSeconds) return false;
    if (PacketsSent != other.PacketsSent) return false;
    if (KbSent != other.KbSent) return false;
    if (PacketsRecv != other.PacketsRecv) return false;
    if (KbRecv != other.KbRecv) return false;
    if (PacketsRecvSequenced != other.PacketsRecvSequenced) return false;
    if (PacketsRecvDropped != other.PacketsRecvDropped) return false;
    if (PacketsRecvOutOfOrder != other.PacketsRecvOutOfOrder) return false;
    if (PacketsRecvOutOfOrderCorrected != other.PacketsRecvOutOfOrderCorrected) return false;
    if (PacketsRecvDuplicate != other.PacketsRecvDuplicate) return false;
    if (PacketsRecvLurch != other.PacketsRecvLurch) return false;
    if(!multipathPacketsRecvSequenced_.Equals(other.multipathPacketsRecvSequenced_)) return false;
    if(!multipathPacketsRecvLater_.Equals(other.multipathPacketsRecvLater_)) return false;
    if (MultipathSendEnabled != other.MultipathSendEnabled) return false;
    if (QualityHistogram100 != other.QualityHistogram100) return false;
    if (QualityHistogram99 != other.QualityHistogram99) return false;
    if (QualityHistogram97 != other.QualityHistogram97) return false;
    if (QualityHistogram95 != other.QualityHistogram95) return false;
    if (QualityHistogram90 != other.QualityHistogram90) return false;
    if (QualityHistogram75 != other.QualityHistogram75) return false;
    if (QualityHistogram50 != other.QualityHistogram50) return false;
    if (QualityHistogram1 != other.QualityHistogram1) return false;
    if (QualityHistogramDead != other.QualityHistogramDead) return false;
    if (QualityNtile2Nd != other.QualityNtile2Nd) return false;
    if (QualityNtile5Th != other.QualityNtile5Th) return false;
    if (QualityNtile25Th != other.QualityNtile25Th) return false;
    if (QualityNtile50Th != other.QualityNtile50Th) return false;
    if (PingHistogram25 != other.PingHistogram25) return false;
    if (PingHistogram50 != other.PingHistogram50) return false;
    if (PingHistogram75 != other.PingHistogram75) return false;
    if (PingHistogram100 != other.PingHistogram100) return false;
    if (PingHistogram125 != other.PingHistogram125) return false;
    if (PingHistogram150 != other.PingHistogram150) return false;
    if (PingHistogram200 != other.PingHistogram200) return false;
    if (PingHistogram300 != other.PingHistogram300) return false;
    if (PingHistogramMax != other.PingHistogramMax) return false;
    if (PingNtile5Th != other.PingNtile5Th) return false;
    if (PingNtile50Th != other.PingNtile50Th) return false;
    if (PingNtile75Th != other.PingNtile75Th) return false;
    if (PingNtile95Th != other.PingNtile95Th) return false;
    if (PingNtile98Th != other.PingNtile98Th) return false;
    if (JitterHistogramNegligible != other.JitterHistogramNegligible) return false;
    if (JitterHistogram1 != other.JitterHistogram1) return false;
    if (JitterHistogram2 != other.JitterHistogram2) return false;
    if (JitterHistogram5 != other.JitterHistogram5) return false;
    if (JitterHistogram10 != other.JitterHistogram10) return false;
    if (JitterHistogram20 != other.JitterHistogram20) return false;
    if (TxspeedMax != other.TxspeedMax) return false;
    if (TxspeedHistogram16 != other.TxspeedHistogram16) return false;
    if (TxspeedHistogram32 != other.TxspeedHistogram32) return false;
    if (TxspeedHistogram64 != other.TxspeedHistogram64) return false;
    if (TxspeedHistogram128 != other.TxspeedHistogram128) return false;
    if (TxspeedHistogram256 != other.TxspeedHistogram256) return false;
    if (TxspeedHistogram512 != other.TxspeedHistogram512) return false;
    if (TxspeedHistogram1024 != other.TxspeedHistogram1024) return false;
    if (TxspeedHistogramMax != other.TxspeedHistogramMax) return false;
    if (TxspeedNtile5Th != other.TxspeedNtile5Th) return false;
    if (TxspeedNtile50Th != other.TxspeedNtile50Th) return false;
    if (TxspeedNtile75Th != other.TxspeedNtile75Th) return false;
    if (TxspeedNtile95Th != other.TxspeedNtile95Th) return false;
    if (TxspeedNtile98Th != other.TxspeedNtile98Th) return false;
    if (RxspeedMax != other.RxspeedMax) return false;
    if (RxspeedHistogram16 != other.RxspeedHistogram16) return false;
    if (RxspeedHistogram32 != other.RxspeedHistogram32) return false;
    if (RxspeedHistogram64 != other.RxspeedHistogram64) return false;
    if (RxspeedHistogram128 != other.RxspeedHistogram128) return false;
    if (RxspeedHistogram256 != other.RxspeedHistogram256) return false;
    if (RxspeedHistogram512 != other.RxspeedHistogram512) return false;
    if (RxspeedHistogram1024 != other.RxspeedHistogram1024) return false;
    if (RxspeedHistogramMax != other.RxspeedHistogramMax) return false;
    if (RxspeedNtile5Th != other.RxspeedNtile5Th) return false;
    if (RxspeedNtile50Th != other.RxspeedNtile50Th) return false;
    if (RxspeedNtile75Th != other.RxspeedNtile75Th) return false;
    if (RxspeedNtile95Th != other.RxspeedNtile95Th) return false;
    if (RxspeedNtile98Th != other.RxspeedNtile98Th) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConnectedSeconds) hash ^= ConnectedSeconds.GetHashCode();
    if (HasPacketsSent) hash ^= PacketsSent.GetHashCode();
    if (HasKbSent) hash ^= KbSent.GetHashCode();
    if (HasPacketsRecv) hash ^= PacketsRecv.GetHashCode();
    if (HasKbRecv) hash ^= KbRecv.GetHashCode();
    if (HasPacketsRecvSequenced) hash ^= PacketsRecvSequenced.GetHashCode();
    if (HasPacketsRecvDropped) hash ^= PacketsRecvDropped.GetHashCode();
    if (HasPacketsRecvOutOfOrder) hash ^= PacketsRecvOutOfOrder.GetHashCode();
    if (HasPacketsRecvOutOfOrderCorrected) hash ^= PacketsRecvOutOfOrderCorrected.GetHashCode();
    if (HasPacketsRecvDuplicate) hash ^= PacketsRecvDuplicate.GetHashCode();
    if (HasPacketsRecvLurch) hash ^= PacketsRecvLurch.GetHashCode();
    hash ^= multipathPacketsRecvSequenced_.GetHashCode();
    hash ^= multipathPacketsRecvLater_.GetHashCode();
    if (HasMultipathSendEnabled) hash ^= MultipathSendEnabled.GetHashCode();
    if (HasQualityHistogram100) hash ^= QualityHistogram100.GetHashCode();
    if (HasQualityHistogram99) hash ^= QualityHistogram99.GetHashCode();
    if (HasQualityHistogram97) hash ^= QualityHistogram97.GetHashCode();
    if (HasQualityHistogram95) hash ^= QualityHistogram95.GetHashCode();
    if (HasQualityHistogram90) hash ^= QualityHistogram90.GetHashCode();
    if (HasQualityHistogram75) hash ^= QualityHistogram75.GetHashCode();
    if (HasQualityHistogram50) hash ^= QualityHistogram50.GetHashCode();
    if (HasQualityHistogram1) hash ^= QualityHistogram1.GetHashCode();
    if (HasQualityHistogramDead) hash ^= QualityHistogramDead.GetHashCode();
    if (HasQualityNtile2Nd) hash ^= QualityNtile2Nd.GetHashCode();
    if (HasQualityNtile5Th) hash ^= QualityNtile5Th.GetHashCode();
    if (HasQualityNtile25Th) hash ^= QualityNtile25Th.GetHashCode();
    if (HasQualityNtile50Th) hash ^= QualityNtile50Th.GetHashCode();
    if (HasPingHistogram25) hash ^= PingHistogram25.GetHashCode();
    if (HasPingHistogram50) hash ^= PingHistogram50.GetHashCode();
    if (HasPingHistogram75) hash ^= PingHistogram75.GetHashCode();
    if (HasPingHistogram100) hash ^= PingHistogram100.GetHashCode();
    if (HasPingHistogram125) hash ^= PingHistogram125.GetHashCode();
    if (HasPingHistogram150) hash ^= PingHistogram150.GetHashCode();
    if (HasPingHistogram200) hash ^= PingHistogram200.GetHashCode();
    if (HasPingHistogram300) hash ^= PingHistogram300.GetHashCode();
    if (HasPingHistogramMax) hash ^= PingHistogramMax.GetHashCode();
    if (HasPingNtile5Th) hash ^= PingNtile5Th.GetHashCode();
    if (HasPingNtile50Th) hash ^= PingNtile50Th.GetHashCode();
    if (HasPingNtile75Th) hash ^= PingNtile75Th.GetHashCode();
    if (HasPingNtile95Th) hash ^= PingNtile95Th.GetHashCode();
    if (HasPingNtile98Th) hash ^= PingNtile98Th.GetHashCode();
    if (HasJitterHistogramNegligible) hash ^= JitterHistogramNegligible.GetHashCode();
    if (HasJitterHistogram1) hash ^= JitterHistogram1.GetHashCode();
    if (HasJitterHistogram2) hash ^= JitterHistogram2.GetHashCode();
    if (HasJitterHistogram5) hash ^= JitterHistogram5.GetHashCode();
    if (HasJitterHistogram10) hash ^= JitterHistogram10.GetHashCode();
    if (HasJitterHistogram20) hash ^= JitterHistogram20.GetHashCode();
    if (HasTxspeedMax) hash ^= TxspeedMax.GetHashCode();
    if (HasTxspeedHistogram16) hash ^= TxspeedHistogram16.GetHashCode();
    if (HasTxspeedHistogram32) hash ^= TxspeedHistogram32.GetHashCode();
    if (HasTxspeedHistogram64) hash ^= TxspeedHistogram64.GetHashCode();
    if (HasTxspeedHistogram128) hash ^= TxspeedHistogram128.GetHashCode();
    if (HasTxspeedHistogram256) hash ^= TxspeedHistogram256.GetHashCode();
    if (HasTxspeedHistogram512) hash ^= TxspeedHistogram512.GetHashCode();
    if (HasTxspeedHistogram1024) hash ^= TxspeedHistogram1024.GetHashCode();
    if (HasTxspeedHistogramMax) hash ^= TxspeedHistogramMax.GetHashCode();
    if (HasTxspeedNtile5Th) hash ^= TxspeedNtile5Th.GetHashCode();
    if (HasTxspeedNtile50Th) hash ^= TxspeedNtile50Th.GetHashCode();
    if (HasTxspeedNtile75Th) hash ^= TxspeedNtile75Th.GetHashCode();
    if (HasTxspeedNtile95Th) hash ^= TxspeedNtile95Th.GetHashCode();
    if (HasTxspeedNtile98Th) hash ^= TxspeedNtile98Th.GetHashCode();
    if (HasRxspeedMax) hash ^= RxspeedMax.GetHashCode();
    if (HasRxspeedHistogram16) hash ^= RxspeedHistogram16.GetHashCode();
    if (HasRxspeedHistogram32) hash ^= RxspeedHistogram32.GetHashCode();
    if (HasRxspeedHistogram64) hash ^= RxspeedHistogram64.GetHashCode();
    if (HasRxspeedHistogram128) hash ^= RxspeedHistogram128.GetHashCode();
    if (HasRxspeedHistogram256) hash ^= RxspeedHistogram256.GetHashCode();
    if (HasRxspeedHistogram512) hash ^= RxspeedHistogram512.GetHashCode();
    if (HasRxspeedHistogram1024) hash ^= RxspeedHistogram1024.GetHashCode();
    if (HasRxspeedHistogramMax) hash ^= RxspeedHistogramMax.GetHashCode();
    if (HasRxspeedNtile5Th) hash ^= RxspeedNtile5Th.GetHashCode();
    if (HasRxspeedNtile50Th) hash ^= RxspeedNtile50Th.GetHashCode();
    if (HasRxspeedNtile75Th) hash ^= RxspeedNtile75Th.GetHashCode();
    if (HasRxspeedNtile95Th) hash ^= RxspeedNtile95Th.GetHashCode();
    if (HasRxspeedNtile98Th) hash ^= RxspeedNtile98Th.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConnectedSeconds) {
      output.WriteRawTag(16);
      output.WriteUInt32(ConnectedSeconds);
    }
    if (HasPacketsSent) {
      output.WriteRawTag(24);
      output.WriteUInt64(PacketsSent);
    }
    if (HasKbSent) {
      output.WriteRawTag(32);
      output.WriteUInt64(KbSent);
    }
    if (HasPacketsRecv) {
      output.WriteRawTag(40);
      output.WriteUInt64(PacketsRecv);
    }
    if (HasKbRecv) {
      output.WriteRawTag(48);
      output.WriteUInt64(KbRecv);
    }
    if (HasPacketsRecvSequenced) {
      output.WriteRawTag(56);
      output.WriteUInt64(PacketsRecvSequenced);
    }
    if (HasPacketsRecvDropped) {
      output.WriteRawTag(64);
      output.WriteUInt64(PacketsRecvDropped);
    }
    if (HasPacketsRecvOutOfOrder) {
      output.WriteRawTag(72);
      output.WriteUInt64(PacketsRecvOutOfOrder);
    }
    if (HasPacketsRecvDuplicate) {
      output.WriteRawTag(80);
      output.WriteUInt64(PacketsRecvDuplicate);
    }
    if (HasPacketsRecvLurch) {
      output.WriteRawTag(88);
      output.WriteUInt64(PacketsRecvLurch);
    }
    multipathPacketsRecvSequenced_.WriteTo(output, _repeated_multipathPacketsRecvSequenced_codec);
    multipathPacketsRecvLater_.WriteTo(output, _repeated_multipathPacketsRecvLater_codec);
    if (HasMultipathSendEnabled) {
      output.WriteRawTag(112);
      output.WriteUInt32(MultipathSendEnabled);
    }
    if (HasPacketsRecvOutOfOrderCorrected) {
      output.WriteRawTag(120);
      output.WriteUInt64(PacketsRecvOutOfOrderCorrected);
    }
    if (HasQualityHistogram100) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(QualityHistogram100);
    }
    if (HasQualityHistogram99) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(QualityHistogram99);
    }
    if (HasQualityHistogram97) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(QualityHistogram97);
    }
    if (HasQualityHistogram95) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(QualityHistogram95);
    }
    if (HasQualityHistogram90) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(QualityHistogram90);
    }
    if (HasQualityHistogram75) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(QualityHistogram75);
    }
    if (HasQualityHistogram50) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(QualityHistogram50);
    }
    if (HasQualityHistogram1) {
      output.WriteRawTag(224, 1);
      output.WriteUInt32(QualityHistogram1);
    }
    if (HasQualityHistogramDead) {
      output.WriteRawTag(232, 1);
      output.WriteUInt32(QualityHistogramDead);
    }
    if (HasQualityNtile2Nd) {
      output.WriteRawTag(240, 1);
      output.WriteUInt32(QualityNtile2Nd);
    }
    if (HasQualityNtile5Th) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(QualityNtile5Th);
    }
    if (HasQualityNtile25Th) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(QualityNtile25Th);
    }
    if (HasQualityNtile50Th) {
      output.WriteRawTag(136, 2);
      output.WriteUInt32(QualityNtile50Th);
    }
    if (HasPingHistogram25) {
      output.WriteRawTag(200, 2);
      output.WriteUInt32(PingHistogram25);
    }
    if (HasPingHistogram50) {
      output.WriteRawTag(208, 2);
      output.WriteUInt32(PingHistogram50);
    }
    if (HasPingHistogram75) {
      output.WriteRawTag(216, 2);
      output.WriteUInt32(PingHistogram75);
    }
    if (HasPingHistogram100) {
      output.WriteRawTag(224, 2);
      output.WriteUInt32(PingHistogram100);
    }
    if (HasPingHistogram125) {
      output.WriteRawTag(232, 2);
      output.WriteUInt32(PingHistogram125);
    }
    if (HasPingHistogram150) {
      output.WriteRawTag(240, 2);
      output.WriteUInt32(PingHistogram150);
    }
    if (HasPingHistogram200) {
      output.WriteRawTag(248, 2);
      output.WriteUInt32(PingHistogram200);
    }
    if (HasPingHistogram300) {
      output.WriteRawTag(128, 3);
      output.WriteUInt32(PingHistogram300);
    }
    if (HasPingHistogramMax) {
      output.WriteRawTag(136, 3);
      output.WriteUInt32(PingHistogramMax);
    }
    if (HasPingNtile5Th) {
      output.WriteRawTag(144, 3);
      output.WriteUInt32(PingNtile5Th);
    }
    if (HasPingNtile50Th) {
      output.WriteRawTag(152, 3);
      output.WriteUInt32(PingNtile50Th);
    }
    if (HasPingNtile75Th) {
      output.WriteRawTag(160, 3);
      output.WriteUInt32(PingNtile75Th);
    }
    if (HasPingNtile95Th) {
      output.WriteRawTag(168, 3);
      output.WriteUInt32(PingNtile95Th);
    }
    if (HasPingNtile98Th) {
      output.WriteRawTag(176, 3);
      output.WriteUInt32(PingNtile98Th);
    }
    if (HasJitterHistogramNegligible) {
      output.WriteRawTag(232, 3);
      output.WriteUInt32(JitterHistogramNegligible);
    }
    if (HasJitterHistogram1) {
      output.WriteRawTag(240, 3);
      output.WriteUInt32(JitterHistogram1);
    }
    if (HasJitterHistogram2) {
      output.WriteRawTag(248, 3);
      output.WriteUInt32(JitterHistogram2);
    }
    if (HasJitterHistogram5) {
      output.WriteRawTag(128, 4);
      output.WriteUInt32(JitterHistogram5);
    }
    if (HasJitterHistogram10) {
      output.WriteRawTag(136, 4);
      output.WriteUInt32(JitterHistogram10);
    }
    if (HasJitterHistogram20) {
      output.WriteRawTag(144, 4);
      output.WriteUInt32(JitterHistogram20);
    }
    if (HasTxspeedMax) {
      output.WriteRawTag(152, 4);
      output.WriteUInt32(TxspeedMax);
    }
    if (HasTxspeedHistogram16) {
      output.WriteRawTag(160, 4);
      output.WriteUInt32(TxspeedHistogram16);
    }
    if (HasTxspeedHistogram32) {
      output.WriteRawTag(168, 4);
      output.WriteUInt32(TxspeedHistogram32);
    }
    if (HasTxspeedHistogram64) {
      output.WriteRawTag(176, 4);
      output.WriteUInt32(TxspeedHistogram64);
    }
    if (HasTxspeedHistogram128) {
      output.WriteRawTag(184, 4);
      output.WriteUInt32(TxspeedHistogram128);
    }
    if (HasTxspeedHistogram256) {
      output.WriteRawTag(192, 4);
      output.WriteUInt32(TxspeedHistogram256);
    }
    if (HasTxspeedHistogram512) {
      output.WriteRawTag(200, 4);
      output.WriteUInt32(TxspeedHistogram512);
    }
    if (HasTxspeedHistogram1024) {
      output.WriteRawTag(208, 4);
      output.WriteUInt32(TxspeedHistogram1024);
    }
    if (HasTxspeedHistogramMax) {
      output.WriteRawTag(216, 4);
      output.WriteUInt32(TxspeedHistogramMax);
    }
    if (HasTxspeedNtile5Th) {
      output.WriteRawTag(224, 4);
      output.WriteUInt32(TxspeedNtile5Th);
    }
    if (HasTxspeedNtile50Th) {
      output.WriteRawTag(232, 4);
      output.WriteUInt32(TxspeedNtile50Th);
    }
    if (HasTxspeedNtile75Th) {
      output.WriteRawTag(240, 4);
      output.WriteUInt32(TxspeedNtile75Th);
    }
    if (HasTxspeedNtile95Th) {
      output.WriteRawTag(248, 4);
      output.WriteUInt32(TxspeedNtile95Th);
    }
    if (HasTxspeedNtile98Th) {
      output.WriteRawTag(128, 5);
      output.WriteUInt32(TxspeedNtile98Th);
    }
    if (HasRxspeedMax) {
      output.WriteRawTag(136, 5);
      output.WriteUInt32(RxspeedMax);
    }
    if (HasRxspeedHistogram16) {
      output.WriteRawTag(144, 5);
      output.WriteUInt32(RxspeedHistogram16);
    }
    if (HasRxspeedHistogram32) {
      output.WriteRawTag(152, 5);
      output.WriteUInt32(RxspeedHistogram32);
    }
    if (HasRxspeedHistogram64) {
      output.WriteRawTag(160, 5);
      output.WriteUInt32(RxspeedHistogram64);
    }
    if (HasRxspeedHistogram128) {
      output.WriteRawTag(168, 5);
      output.WriteUInt32(RxspeedHistogram128);
    }
    if (HasRxspeedHistogram256) {
      output.WriteRawTag(176, 5);
      output.WriteUInt32(RxspeedHistogram256);
    }
    if (HasRxspeedHistogram512) {
      output.WriteRawTag(184, 5);
      output.WriteUInt32(RxspeedHistogram512);
    }
    if (HasRxspeedHistogram1024) {
      output.WriteRawTag(192, 5);
      output.WriteUInt32(RxspeedHistogram1024);
    }
    if (HasRxspeedHistogramMax) {
      output.WriteRawTag(200, 5);
      output.WriteUInt32(RxspeedHistogramMax);
    }
    if (HasRxspeedNtile5Th) {
      output.WriteRawTag(208, 5);
      output.WriteUInt32(RxspeedNtile5Th);
    }
    if (HasRxspeedNtile50Th) {
      output.WriteRawTag(216, 5);
      output.WriteUInt32(RxspeedNtile50Th);
    }
    if (HasRxspeedNtile75Th) {
      output.WriteRawTag(224, 5);
      output.WriteUInt32(RxspeedNtile75Th);
    }
    if (HasRxspeedNtile95Th) {
      output.WriteRawTag(232, 5);
      output.WriteUInt32(RxspeedNtile95Th);
    }
    if (HasRxspeedNtile98Th) {
      output.WriteRawTag(240, 5);
      output.WriteUInt32(RxspeedNtile98Th);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConnectedSeconds) {
      output.WriteRawTag(16);
      output.WriteUInt32(ConnectedSeconds);
    }
    if (HasPacketsSent) {
      output.WriteRawTag(24);
      output.WriteUInt64(PacketsSent);
    }
    if (HasKbSent) {
      output.WriteRawTag(32);
      output.WriteUInt64(KbSent);
    }
    if (HasPacketsRecv) {
      output.WriteRawTag(40);
      output.WriteUInt64(PacketsRecv);
    }
    if (HasKbRecv) {
      output.WriteRawTag(48);
      output.WriteUInt64(KbRecv);
    }
    if (HasPacketsRecvSequenced) {
      output.WriteRawTag(56);
      output.WriteUInt64(PacketsRecvSequenced);
    }
    if (HasPacketsRecvDropped) {
      output.WriteRawTag(64);
      output.WriteUInt64(PacketsRecvDropped);
    }
    if (HasPacketsRecvOutOfOrder) {
      output.WriteRawTag(72);
      output.WriteUInt64(PacketsRecvOutOfOrder);
    }
    if (HasPacketsRecvDuplicate) {
      output.WriteRawTag(80);
      output.WriteUInt64(PacketsRecvDuplicate);
    }
    if (HasPacketsRecvLurch) {
      output.WriteRawTag(88);
      output.WriteUInt64(PacketsRecvLurch);
    }
    multipathPacketsRecvSequenced_.WriteTo(ref output, _repeated_multipathPacketsRecvSequenced_codec);
    multipathPacketsRecvLater_.WriteTo(ref output, _repeated_multipathPacketsRecvLater_codec);
    if (HasMultipathSendEnabled) {
      output.WriteRawTag(112);
      output.WriteUInt32(MultipathSendEnabled);
    }
    if (HasPacketsRecvOutOfOrderCorrected) {
      output.WriteRawTag(120);
      output.WriteUInt64(PacketsRecvOutOfOrderCorrected);
    }
    if (HasQualityHistogram100) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(QualityHistogram100);
    }
    if (HasQualityHistogram99) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(QualityHistogram99);
    }
    if (HasQualityHistogram97) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(QualityHistogram97);
    }
    if (HasQualityHistogram95) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(QualityHistogram95);
    }
    if (HasQualityHistogram90) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(QualityHistogram90);
    }
    if (HasQualityHistogram75) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(QualityHistogram75);
    }
    if (HasQualityHistogram50) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(QualityHistogram50);
    }
    if (HasQualityHistogram1) {
      output.WriteRawTag(224, 1);
      output.WriteUInt32(QualityHistogram1);
    }
    if (HasQualityHistogramDead) {
      output.WriteRawTag(232, 1);
      output.WriteUInt32(QualityHistogramDead);
    }
    if (HasQualityNtile2Nd) {
      output.WriteRawTag(240, 1);
      output.WriteUInt32(QualityNtile2Nd);
    }
    if (HasQualityNtile5Th) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(QualityNtile5Th);
    }
    if (HasQualityNtile25Th) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(QualityNtile25Th);
    }
    if (HasQualityNtile50Th) {
      output.WriteRawTag(136, 2);
      output.WriteUInt32(QualityNtile50Th);
    }
    if (HasPingHistogram25) {
      output.WriteRawTag(200, 2);
      output.WriteUInt32(PingHistogram25);
    }
    if (HasPingHistogram50) {
      output.WriteRawTag(208, 2);
      output.WriteUInt32(PingHistogram50);
    }
    if (HasPingHistogram75) {
      output.WriteRawTag(216, 2);
      output.WriteUInt32(PingHistogram75);
    }
    if (HasPingHistogram100) {
      output.WriteRawTag(224, 2);
      output.WriteUInt32(PingHistogram100);
    }
    if (HasPingHistogram125) {
      output.WriteRawTag(232, 2);
      output.WriteUInt32(PingHistogram125);
    }
    if (HasPingHistogram150) {
      output.WriteRawTag(240, 2);
      output.WriteUInt32(PingHistogram150);
    }
    if (HasPingHistogram200) {
      output.WriteRawTag(248, 2);
      output.WriteUInt32(PingHistogram200);
    }
    if (HasPingHistogram300) {
      output.WriteRawTag(128, 3);
      output.WriteUInt32(PingHistogram300);
    }
    if (HasPingHistogramMax) {
      output.WriteRawTag(136, 3);
      output.WriteUInt32(PingHistogramMax);
    }
    if (HasPingNtile5Th) {
      output.WriteRawTag(144, 3);
      output.WriteUInt32(PingNtile5Th);
    }
    if (HasPingNtile50Th) {
      output.WriteRawTag(152, 3);
      output.WriteUInt32(PingNtile50Th);
    }
    if (HasPingNtile75Th) {
      output.WriteRawTag(160, 3);
      output.WriteUInt32(PingNtile75Th);
    }
    if (HasPingNtile95Th) {
      output.WriteRawTag(168, 3);
      output.WriteUInt32(PingNtile95Th);
    }
    if (HasPingNtile98Th) {
      output.WriteRawTag(176, 3);
      output.WriteUInt32(PingNtile98Th);
    }
    if (HasJitterHistogramNegligible) {
      output.WriteRawTag(232, 3);
      output.WriteUInt32(JitterHistogramNegligible);
    }
    if (HasJitterHistogram1) {
      output.WriteRawTag(240, 3);
      output.WriteUInt32(JitterHistogram1);
    }
    if (HasJitterHistogram2) {
      output.WriteRawTag(248, 3);
      output.WriteUInt32(JitterHistogram2);
    }
    if (HasJitterHistogram5) {
      output.WriteRawTag(128, 4);
      output.WriteUInt32(JitterHistogram5);
    }
    if (HasJitterHistogram10) {
      output.WriteRawTag(136, 4);
      output.WriteUInt32(JitterHistogram10);
    }
    if (HasJitterHistogram20) {
      output.WriteRawTag(144, 4);
      output.WriteUInt32(JitterHistogram20);
    }
    if (HasTxspeedMax) {
      output.WriteRawTag(152, 4);
      output.WriteUInt32(TxspeedMax);
    }
    if (HasTxspeedHistogram16) {
      output.WriteRawTag(160, 4);
      output.WriteUInt32(TxspeedHistogram16);
    }
    if (HasTxspeedHistogram32) {
      output.WriteRawTag(168, 4);
      output.WriteUInt32(TxspeedHistogram32);
    }
    if (HasTxspeedHistogram64) {
      output.WriteRawTag(176, 4);
      output.WriteUInt32(TxspeedHistogram64);
    }
    if (HasTxspeedHistogram128) {
      output.WriteRawTag(184, 4);
      output.WriteUInt32(TxspeedHistogram128);
    }
    if (HasTxspeedHistogram256) {
      output.WriteRawTag(192, 4);
      output.WriteUInt32(TxspeedHistogram256);
    }
    if (HasTxspeedHistogram512) {
      output.WriteRawTag(200, 4);
      output.WriteUInt32(TxspeedHistogram512);
    }
    if (HasTxspeedHistogram1024) {
      output.WriteRawTag(208, 4);
      output.WriteUInt32(TxspeedHistogram1024);
    }
    if (HasTxspeedHistogramMax) {
      output.WriteRawTag(216, 4);
      output.WriteUInt32(TxspeedHistogramMax);
    }
    if (HasTxspeedNtile5Th) {
      output.WriteRawTag(224, 4);
      output.WriteUInt32(TxspeedNtile5Th);
    }
    if (HasTxspeedNtile50Th) {
      output.WriteRawTag(232, 4);
      output.WriteUInt32(TxspeedNtile50Th);
    }
    if (HasTxspeedNtile75Th) {
      output.WriteRawTag(240, 4);
      output.WriteUInt32(TxspeedNtile75Th);
    }
    if (HasTxspeedNtile95Th) {
      output.WriteRawTag(248, 4);
      output.WriteUInt32(TxspeedNtile95Th);
    }
    if (HasTxspeedNtile98Th) {
      output.WriteRawTag(128, 5);
      output.WriteUInt32(TxspeedNtile98Th);
    }
    if (HasRxspeedMax) {
      output.WriteRawTag(136, 5);
      output.WriteUInt32(RxspeedMax);
    }
    if (HasRxspeedHistogram16) {
      output.WriteRawTag(144, 5);
      output.WriteUInt32(RxspeedHistogram16);
    }
    if (HasRxspeedHistogram32) {
      output.WriteRawTag(152, 5);
      output.WriteUInt32(RxspeedHistogram32);
    }
    if (HasRxspeedHistogram64) {
      output.WriteRawTag(160, 5);
      output.WriteUInt32(RxspeedHistogram64);
    }
    if (HasRxspeedHistogram128) {
      output.WriteRawTag(168, 5);
      output.WriteUInt32(RxspeedHistogram128);
    }
    if (HasRxspeedHistogram256) {
      output.WriteRawTag(176, 5);
      output.WriteUInt32(RxspeedHistogram256);
    }
    if (HasRxspeedHistogram512) {
      output.WriteRawTag(184, 5);
      output.WriteUInt32(RxspeedHistogram512);
    }
    if (HasRxspeedHistogram1024) {
      output.WriteRawTag(192, 5);
      output.WriteUInt32(RxspeedHistogram1024);
    }
    if (HasRxspeedHistogramMax) {
      output.WriteRawTag(200, 5);
      output.WriteUInt32(RxspeedHistogramMax);
    }
    if (HasRxspeedNtile5Th) {
      output.WriteRawTag(208, 5);
      output.WriteUInt32(RxspeedNtile5Th);
    }
    if (HasRxspeedNtile50Th) {
      output.WriteRawTag(216, 5);
      output.WriteUInt32(RxspeedNtile50Th);
    }
    if (HasRxspeedNtile75Th) {
      output.WriteRawTag(224, 5);
      output.WriteUInt32(RxspeedNtile75Th);
    }
    if (HasRxspeedNtile95Th) {
      output.WriteRawTag(232, 5);
      output.WriteUInt32(RxspeedNtile95Th);
    }
    if (HasRxspeedNtile98Th) {
      output.WriteRawTag(240, 5);
      output.WriteUInt32(RxspeedNtile98Th);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConnectedSeconds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectedSeconds);
    }
    if (HasPacketsSent) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsSent);
    }
    if (HasKbSent) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(KbSent);
    }
    if (HasPacketsRecv) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsRecv);
    }
    if (HasKbRecv) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(KbRecv);
    }
    if (HasPacketsRecvSequenced) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsRecvSequenced);
    }
    if (HasPacketsRecvDropped) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsRecvDropped);
    }
    if (HasPacketsRecvOutOfOrder) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsRecvOutOfOrder);
    }
    if (HasPacketsRecvOutOfOrderCorrected) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsRecvOutOfOrderCorrected);
    }
    if (HasPacketsRecvDuplicate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsRecvDuplicate);
    }
    if (HasPacketsRecvLurch) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PacketsRecvLurch);
    }
    size += multipathPacketsRecvSequenced_.CalculateSize(_repeated_multipathPacketsRecvSequenced_codec);
    size += multipathPacketsRecvLater_.CalculateSize(_repeated_multipathPacketsRecvLater_codec);
    if (HasMultipathSendEnabled) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MultipathSendEnabled);
    }
    if (HasQualityHistogram100) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram100);
    }
    if (HasQualityHistogram99) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram99);
    }
    if (HasQualityHistogram97) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram97);
    }
    if (HasQualityHistogram95) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram95);
    }
    if (HasQualityHistogram90) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram90);
    }
    if (HasQualityHistogram75) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram75);
    }
    if (HasQualityHistogram50) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram50);
    }
    if (HasQualityHistogram1) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogram1);
    }
    if (HasQualityHistogramDead) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityHistogramDead);
    }
    if (HasQualityNtile2Nd) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityNtile2Nd);
    }
    if (HasQualityNtile5Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityNtile5Th);
    }
    if (HasQualityNtile25Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityNtile25Th);
    }
    if (HasQualityNtile50Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QualityNtile50Th);
    }
    if (HasPingHistogram25) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram25);
    }
    if (HasPingHistogram50) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram50);
    }
    if (HasPingHistogram75) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram75);
    }
    if (HasPingHistogram100) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram100);
    }
    if (HasPingHistogram125) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram125);
    }
    if (HasPingHistogram150) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram150);
    }
    if (HasPingHistogram200) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram200);
    }
    if (HasPingHistogram300) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogram300);
    }
    if (HasPingHistogramMax) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingHistogramMax);
    }
    if (HasPingNtile5Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingNtile5Th);
    }
    if (HasPingNtile50Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingNtile50Th);
    }
    if (HasPingNtile75Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingNtile75Th);
    }
    if (HasPingNtile95Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingNtile95Th);
    }
    if (HasPingNtile98Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingNtile98Th);
    }
    if (HasJitterHistogramNegligible) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JitterHistogramNegligible);
    }
    if (HasJitterHistogram1) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JitterHistogram1);
    }
    if (HasJitterHistogram2) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JitterHistogram2);
    }
    if (HasJitterHistogram5) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JitterHistogram5);
    }
    if (HasJitterHistogram10) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JitterHistogram10);
    }
    if (HasJitterHistogram20) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(JitterHistogram20);
    }
    if (HasTxspeedMax) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedMax);
    }
    if (HasTxspeedHistogram16) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogram16);
    }
    if (HasTxspeedHistogram32) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogram32);
    }
    if (HasTxspeedHistogram64) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogram64);
    }
    if (HasTxspeedHistogram128) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogram128);
    }
    if (HasTxspeedHistogram256) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogram256);
    }
    if (HasTxspeedHistogram512) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogram512);
    }
    if (HasTxspeedHistogram1024) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogram1024);
    }
    if (HasTxspeedHistogramMax) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedHistogramMax);
    }
    if (HasTxspeedNtile5Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedNtile5Th);
    }
    if (HasTxspeedNtile50Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedNtile50Th);
    }
    if (HasTxspeedNtile75Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedNtile75Th);
    }
    if (HasTxspeedNtile95Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedNtile95Th);
    }
    if (HasTxspeedNtile98Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TxspeedNtile98Th);
    }
    if (HasRxspeedMax) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedMax);
    }
    if (HasRxspeedHistogram16) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogram16);
    }
    if (HasRxspeedHistogram32) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogram32);
    }
    if (HasRxspeedHistogram64) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogram64);
    }
    if (HasRxspeedHistogram128) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogram128);
    }
    if (HasRxspeedHistogram256) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogram256);
    }
    if (HasRxspeedHistogram512) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogram512);
    }
    if (HasRxspeedHistogram1024) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogram1024);
    }
    if (HasRxspeedHistogramMax) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedHistogramMax);
    }
    if (HasRxspeedNtile5Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedNtile5Th);
    }
    if (HasRxspeedNtile50Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedNtile50Th);
    }
    if (HasRxspeedNtile75Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedNtile75Th);
    }
    if (HasRxspeedNtile95Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedNtile95Th);
    }
    if (HasRxspeedNtile98Th) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RxspeedNtile98Th);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramLinkLifetimeStats other) {
    if (other == null) {
      return;
    }
    if (other.HasConnectedSeconds) {
      ConnectedSeconds = other.ConnectedSeconds;
    }
    if (other.HasPacketsSent) {
      PacketsSent = other.PacketsSent;
    }
    if (other.HasKbSent) {
      KbSent = other.KbSent;
    }
    if (other.HasPacketsRecv) {
      PacketsRecv = other.PacketsRecv;
    }
    if (other.HasKbRecv) {
      KbRecv = other.KbRecv;
    }
    if (other.HasPacketsRecvSequenced) {
      PacketsRecvSequenced = other.PacketsRecvSequenced;
    }
    if (other.HasPacketsRecvDropped) {
      PacketsRecvDropped = other.PacketsRecvDropped;
    }
    if (other.HasPacketsRecvOutOfOrder) {
      PacketsRecvOutOfOrder = other.PacketsRecvOutOfOrder;
    }
    if (other.HasPacketsRecvOutOfOrderCorrected) {
      PacketsRecvOutOfOrderCorrected = other.PacketsRecvOutOfOrderCorrected;
    }
    if (other.HasPacketsRecvDuplicate) {
      PacketsRecvDuplicate = other.PacketsRecvDuplicate;
    }
    if (other.HasPacketsRecvLurch) {
      PacketsRecvLurch = other.PacketsRecvLurch;
    }
    multipathPacketsRecvSequenced_.Add(other.multipathPacketsRecvSequenced_);
    multipathPacketsRecvLater_.Add(other.multipathPacketsRecvLater_);
    if (other.HasMultipathSendEnabled) {
      MultipathSendEnabled = other.MultipathSendEnabled;
    }
    if (other.HasQualityHistogram100) {
      QualityHistogram100 = other.QualityHistogram100;
    }
    if (other.HasQualityHistogram99) {
      QualityHistogram99 = other.QualityHistogram99;
    }
    if (other.HasQualityHistogram97) {
      QualityHistogram97 = other.QualityHistogram97;
    }
    if (other.HasQualityHistogram95) {
      QualityHistogram95 = other.QualityHistogram95;
    }
    if (other.HasQualityHistogram90) {
      QualityHistogram90 = other.QualityHistogram90;
    }
    if (other.HasQualityHistogram75) {
      QualityHistogram75 = other.QualityHistogram75;
    }
    if (other.HasQualityHistogram50) {
      QualityHistogram50 = other.QualityHistogram50;
    }
    if (other.HasQualityHistogram1) {
      QualityHistogram1 = other.QualityHistogram1;
    }
    if (other.HasQualityHistogramDead) {
      QualityHistogramDead = other.QualityHistogramDead;
    }
    if (other.HasQualityNtile2Nd) {
      QualityNtile2Nd = other.QualityNtile2Nd;
    }
    if (other.HasQualityNtile5Th) {
      QualityNtile5Th = other.QualityNtile5Th;
    }
    if (other.HasQualityNtile25Th) {
      QualityNtile25Th = other.QualityNtile25Th;
    }
    if (other.HasQualityNtile50Th) {
      QualityNtile50Th = other.QualityNtile50Th;
    }
    if (other.HasPingHistogram25) {
      PingHistogram25 = other.PingHistogram25;
    }
    if (other.HasPingHistogram50) {
      PingHistogram50 = other.PingHistogram50;
    }
    if (other.HasPingHistogram75) {
      PingHistogram75 = other.PingHistogram75;
    }
    if (other.HasPingHistogram100) {
      PingHistogram100 = other.PingHistogram100;
    }
    if (other.HasPingHistogram125) {
      PingHistogram125 = other.PingHistogram125;
    }
    if (other.HasPingHistogram150) {
      PingHistogram150 = other.PingHistogram150;
    }
    if (other.HasPingHistogram200) {
      PingHistogram200 = other.PingHistogram200;
    }
    if (other.HasPingHistogram300) {
      PingHistogram300 = other.PingHistogram300;
    }
    if (other.HasPingHistogramMax) {
      PingHistogramMax = other.PingHistogramMax;
    }
    if (other.HasPingNtile5Th) {
      PingNtile5Th = other.PingNtile5Th;
    }
    if (other.HasPingNtile50Th) {
      PingNtile50Th = other.PingNtile50Th;
    }
    if (other.HasPingNtile75Th) {
      PingNtile75Th = other.PingNtile75Th;
    }
    if (other.HasPingNtile95Th) {
      PingNtile95Th = other.PingNtile95Th;
    }
    if (other.HasPingNtile98Th) {
      PingNtile98Th = other.PingNtile98Th;
    }
    if (other.HasJitterHistogramNegligible) {
      JitterHistogramNegligible = other.JitterHistogramNegligible;
    }
    if (other.HasJitterHistogram1) {
      JitterHistogram1 = other.JitterHistogram1;
    }
    if (other.HasJitterHistogram2) {
      JitterHistogram2 = other.JitterHistogram2;
    }
    if (other.HasJitterHistogram5) {
      JitterHistogram5 = other.JitterHistogram5;
    }
    if (other.HasJitterHistogram10) {
      JitterHistogram10 = other.JitterHistogram10;
    }
    if (other.HasJitterHistogram20) {
      JitterHistogram20 = other.JitterHistogram20;
    }
    if (other.HasTxspeedMax) {
      TxspeedMax = other.TxspeedMax;
    }
    if (other.HasTxspeedHistogram16) {
      TxspeedHistogram16 = other.TxspeedHistogram16;
    }
    if (other.HasTxspeedHistogram32) {
      TxspeedHistogram32 = other.TxspeedHistogram32;
    }
    if (other.HasTxspeedHistogram64) {
      TxspeedHistogram64 = other.TxspeedHistogram64;
    }
    if (other.HasTxspeedHistogram128) {
      TxspeedHistogram128 = other.TxspeedHistogram128;
    }
    if (other.HasTxspeedHistogram256) {
      TxspeedHistogram256 = other.TxspeedHistogram256;
    }
    if (other.HasTxspeedHistogram512) {
      TxspeedHistogram512 = other.TxspeedHistogram512;
    }
    if (other.HasTxspeedHistogram1024) {
      TxspeedHistogram1024 = other.TxspeedHistogram1024;
    }
    if (other.HasTxspeedHistogramMax) {
      TxspeedHistogramMax = other.TxspeedHistogramMax;
    }
    if (other.HasTxspeedNtile5Th) {
      TxspeedNtile5Th = other.TxspeedNtile5Th;
    }
    if (other.HasTxspeedNtile50Th) {
      TxspeedNtile50Th = other.TxspeedNtile50Th;
    }
    if (other.HasTxspeedNtile75Th) {
      TxspeedNtile75Th = other.TxspeedNtile75Th;
    }
    if (other.HasTxspeedNtile95Th) {
      TxspeedNtile95Th = other.TxspeedNtile95Th;
    }
    if (other.HasTxspeedNtile98Th) {
      TxspeedNtile98Th = other.TxspeedNtile98Th;
    }
    if (other.HasRxspeedMax) {
      RxspeedMax = other.RxspeedMax;
    }
    if (other.HasRxspeedHistogram16) {
      RxspeedHistogram16 = other.RxspeedHistogram16;
    }
    if (other.HasRxspeedHistogram32) {
      RxspeedHistogram32 = other.RxspeedHistogram32;
    }
    if (other.HasRxspeedHistogram64) {
      RxspeedHistogram64 = other.RxspeedHistogram64;
    }
    if (other.HasRxspeedHistogram128) {
      RxspeedHistogram128 = other.RxspeedHistogram128;
    }
    if (other.HasRxspeedHistogram256) {
      RxspeedHistogram256 = other.RxspeedHistogram256;
    }
    if (other.HasRxspeedHistogram512) {
      RxspeedHistogram512 = other.RxspeedHistogram512;
    }
    if (other.HasRxspeedHistogram1024) {
      RxspeedHistogram1024 = other.RxspeedHistogram1024;
    }
    if (other.HasRxspeedHistogramMax) {
      RxspeedHistogramMax = other.RxspeedHistogramMax;
    }
    if (other.HasRxspeedNtile5Th) {
      RxspeedNtile5Th = other.RxspeedNtile5Th;
    }
    if (other.HasRxspeedNtile50Th) {
      RxspeedNtile50Th = other.RxspeedNtile50Th;
    }
    if (other.HasRxspeedNtile75Th) {
      RxspeedNtile75Th = other.RxspeedNtile75Th;
    }
    if (other.HasRxspeedNtile95Th) {
      RxspeedNtile95Th = other.RxspeedNtile95Th;
    }
    if (other.HasRxspeedNtile98Th) {
      RxspeedNtile98Th = other.RxspeedNtile98Th;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          ConnectedSeconds = input.ReadUInt32();
          break;
        }
        case 24: {
          PacketsSent = input.ReadUInt64();
          break;
        }
        case 32: {
          KbSent = input.ReadUInt64();
          break;
        }
        case 40: {
          PacketsRecv = input.ReadUInt64();
          break;
        }
        case 48: {
          KbRecv = input.ReadUInt64();
          break;
        }
        case 56: {
          PacketsRecvSequenced = input.ReadUInt64();
          break;
        }
        case 64: {
          PacketsRecvDropped = input.ReadUInt64();
          break;
        }
        case 72: {
          PacketsRecvOutOfOrder = input.ReadUInt64();
          break;
        }
        case 80: {
          PacketsRecvDuplicate = input.ReadUInt64();
          break;
        }
        case 88: {
          PacketsRecvLurch = input.ReadUInt64();
          break;
        }
        case 98:
        case 96: {
          multipathPacketsRecvSequenced_.AddEntriesFrom(input, _repeated_multipathPacketsRecvSequenced_codec);
          break;
        }
        case 106:
        case 104: {
          multipathPacketsRecvLater_.AddEntriesFrom(input, _repeated_multipathPacketsRecvLater_codec);
          break;
        }
        case 112: {
          MultipathSendEnabled = input.ReadUInt32();
          break;
        }
        case 120: {
          PacketsRecvOutOfOrderCorrected = input.ReadUInt64();
          break;
        }
        case 168: {
          QualityHistogram100 = input.ReadUInt32();
          break;
        }
        case 176: {
          QualityHistogram99 = input.ReadUInt32();
          break;
        }
        case 184: {
          QualityHistogram97 = input.ReadUInt32();
          break;
        }
        case 192: {
          QualityHistogram95 = input.ReadUInt32();
          break;
        }
        case 200: {
          QualityHistogram90 = input.ReadUInt32();
          break;
        }
        case 208: {
          QualityHistogram75 = input.ReadUInt32();
          break;
        }
        case 216: {
          QualityHistogram50 = input.ReadUInt32();
          break;
        }
        case 224: {
          QualityHistogram1 = input.ReadUInt32();
          break;
        }
        case 232: {
          QualityHistogramDead = input.ReadUInt32();
          break;
        }
        case 240: {
          QualityNtile2Nd = input.ReadUInt32();
          break;
        }
        case 248: {
          QualityNtile5Th = input.ReadUInt32();
          break;
        }
        case 256: {
          QualityNtile25Th = input.ReadUInt32();
          break;
        }
        case 264: {
          QualityNtile50Th = input.ReadUInt32();
          break;
        }
        case 328: {
          PingHistogram25 = input.ReadUInt32();
          break;
        }
        case 336: {
          PingHistogram50 = input.ReadUInt32();
          break;
        }
        case 344: {
          PingHistogram75 = input.ReadUInt32();
          break;
        }
        case 352: {
          PingHistogram100 = input.ReadUInt32();
          break;
        }
        case 360: {
          PingHistogram125 = input.ReadUInt32();
          break;
        }
        case 368: {
          PingHistogram150 = input.ReadUInt32();
          break;
        }
        case 376: {
          PingHistogram200 = input.ReadUInt32();
          break;
        }
        case 384: {
          PingHistogram300 = input.ReadUInt32();
          break;
        }
        case 392: {
          PingHistogramMax = input.ReadUInt32();
          break;
        }
        case 400: {
          PingNtile5Th = input.ReadUInt32();
          break;
        }
        case 408: {
          PingNtile50Th = input.ReadUInt32();
          break;
        }
        case 416: {
          PingNtile75Th = input.ReadUInt32();
          break;
        }
        case 424: {
          PingNtile95Th = input.ReadUInt32();
          break;
        }
        case 432: {
          PingNtile98Th = input.ReadUInt32();
          break;
        }
        case 488: {
          JitterHistogramNegligible = input.ReadUInt32();
          break;
        }
        case 496: {
          JitterHistogram1 = input.ReadUInt32();
          break;
        }
        case 504: {
          JitterHistogram2 = input.ReadUInt32();
          break;
        }
        case 512: {
          JitterHistogram5 = input.ReadUInt32();
          break;
        }
        case 520: {
          JitterHistogram10 = input.ReadUInt32();
          break;
        }
        case 528: {
          JitterHistogram20 = input.ReadUInt32();
          break;
        }
        case 536: {
          TxspeedMax = input.ReadUInt32();
          break;
        }
        case 544: {
          TxspeedHistogram16 = input.ReadUInt32();
          break;
        }
        case 552: {
          TxspeedHistogram32 = input.ReadUInt32();
          break;
        }
        case 560: {
          TxspeedHistogram64 = input.ReadUInt32();
          break;
        }
        case 568: {
          TxspeedHistogram128 = input.ReadUInt32();
          break;
        }
        case 576: {
          TxspeedHistogram256 = input.ReadUInt32();
          break;
        }
        case 584: {
          TxspeedHistogram512 = input.ReadUInt32();
          break;
        }
        case 592: {
          TxspeedHistogram1024 = input.ReadUInt32();
          break;
        }
        case 600: {
          TxspeedHistogramMax = input.ReadUInt32();
          break;
        }
        case 608: {
          TxspeedNtile5Th = input.ReadUInt32();
          break;
        }
        case 616: {
          TxspeedNtile50Th = input.ReadUInt32();
          break;
        }
        case 624: {
          TxspeedNtile75Th = input.ReadUInt32();
          break;
        }
        case 632: {
          TxspeedNtile95Th = input.ReadUInt32();
          break;
        }
        case 640: {
          TxspeedNtile98Th = input.ReadUInt32();
          break;
        }
        case 648: {
          RxspeedMax = input.ReadUInt32();
          break;
        }
        case 656: {
          RxspeedHistogram16 = input.ReadUInt32();
          break;
        }
        case 664: {
          RxspeedHistogram32 = input.ReadUInt32();
          break;
        }
        case 672: {
          RxspeedHistogram64 = input.ReadUInt32();
          break;
        }
        case 680: {
          RxspeedHistogram128 = input.ReadUInt32();
          break;
        }
        case 688: {
          RxspeedHistogram256 = input.ReadUInt32();
          break;
        }
        case 696: {
          RxspeedHistogram512 = input.ReadUInt32();
          break;
        }
        case 704: {
          RxspeedHistogram1024 = input.ReadUInt32();
          break;
        }
        case 712: {
          RxspeedHistogramMax = input.ReadUInt32();
          break;
        }
        case 720: {
          RxspeedNtile5Th = input.ReadUInt32();
          break;
        }
        case 728: {
          RxspeedNtile50Th = input.ReadUInt32();
          break;
        }
        case 736: {
          RxspeedNtile75Th = input.ReadUInt32();
          break;
        }
        case 744: {
          RxspeedNtile95Th = input.ReadUInt32();
          break;
        }
        case 752: {
          RxspeedNtile98Th = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          ConnectedSeconds = input.ReadUInt32();
          break;
        }
        case 24: {
          PacketsSent = input.ReadUInt64();
          break;
        }
        case 32: {
          KbSent = input.ReadUInt64();
          break;
        }
        case 40: {
          PacketsRecv = input.ReadUInt64();
          break;
        }
        case 48: {
          KbRecv = input.ReadUInt64();
          break;
        }
        case 56: {
          PacketsRecvSequenced = input.ReadUInt64();
          break;
        }
        case 64: {
          PacketsRecvDropped = input.ReadUInt64();
          break;
        }
        case 72: {
          PacketsRecvOutOfOrder = input.ReadUInt64();
          break;
        }
        case 80: {
          PacketsRecvDuplicate = input.ReadUInt64();
          break;
        }
        case 88: {
          PacketsRecvLurch = input.ReadUInt64();
          break;
        }
        case 98:
        case 96: {
          multipathPacketsRecvSequenced_.AddEntriesFrom(ref input, _repeated_multipathPacketsRecvSequenced_codec);
          break;
        }
        case 106:
        case 104: {
          multipathPacketsRecvLater_.AddEntriesFrom(ref input, _repeated_multipathPacketsRecvLater_codec);
          break;
        }
        case 112: {
          MultipathSendEnabled = input.ReadUInt32();
          break;
        }
        case 120: {
          PacketsRecvOutOfOrderCorrected = input.ReadUInt64();
          break;
        }
        case 168: {
          QualityHistogram100 = input.ReadUInt32();
          break;
        }
        case 176: {
          QualityHistogram99 = input.ReadUInt32();
          break;
        }
        case 184: {
          QualityHistogram97 = input.ReadUInt32();
          break;
        }
        case 192: {
          QualityHistogram95 = input.ReadUInt32();
          break;
        }
        case 200: {
          QualityHistogram90 = input.ReadUInt32();
          break;
        }
        case 208: {
          QualityHistogram75 = input.ReadUInt32();
          break;
        }
        case 216: {
          QualityHistogram50 = input.ReadUInt32();
          break;
        }
        case 224: {
          QualityHistogram1 = input.ReadUInt32();
          break;
        }
        case 232: {
          QualityHistogramDead = input.ReadUInt32();
          break;
        }
        case 240: {
          QualityNtile2Nd = input.ReadUInt32();
          break;
        }
        case 248: {
          QualityNtile5Th = input.ReadUInt32();
          break;
        }
        case 256: {
          QualityNtile25Th = input.ReadUInt32();
          break;
        }
        case 264: {
          QualityNtile50Th = input.ReadUInt32();
          break;
        }
        case 328: {
          PingHistogram25 = input.ReadUInt32();
          break;
        }
        case 336: {
          PingHistogram50 = input.ReadUInt32();
          break;
        }
        case 344: {
          PingHistogram75 = input.ReadUInt32();
          break;
        }
        case 352: {
          PingHistogram100 = input.ReadUInt32();
          break;
        }
        case 360: {
          PingHistogram125 = input.ReadUInt32();
          break;
        }
        case 368: {
          PingHistogram150 = input.ReadUInt32();
          break;
        }
        case 376: {
          PingHistogram200 = input.ReadUInt32();
          break;
        }
        case 384: {
          PingHistogram300 = input.ReadUInt32();
          break;
        }
        case 392: {
          PingHistogramMax = input.ReadUInt32();
          break;
        }
        case 400: {
          PingNtile5Th = input.ReadUInt32();
          break;
        }
        case 408: {
          PingNtile50Th = input.ReadUInt32();
          break;
        }
        case 416: {
          PingNtile75Th = input.ReadUInt32();
          break;
        }
        case 424: {
          PingNtile95Th = input.ReadUInt32();
          break;
        }
        case 432: {
          PingNtile98Th = input.ReadUInt32();
          break;
        }
        case 488: {
          JitterHistogramNegligible = input.ReadUInt32();
          break;
        }
        case 496: {
          JitterHistogram1 = input.ReadUInt32();
          break;
        }
        case 504: {
          JitterHistogram2 = input.ReadUInt32();
          break;
        }
        case 512: {
          JitterHistogram5 = input.ReadUInt32();
          break;
        }
        case 520: {
          JitterHistogram10 = input.ReadUInt32();
          break;
        }
        case 528: {
          JitterHistogram20 = input.ReadUInt32();
          break;
        }
        case 536: {
          TxspeedMax = input.ReadUInt32();
          break;
        }
        case 544: {
          TxspeedHistogram16 = input.ReadUInt32();
          break;
        }
        case 552: {
          TxspeedHistogram32 = input.ReadUInt32();
          break;
        }
        case 560: {
          TxspeedHistogram64 = input.ReadUInt32();
          break;
        }
        case 568: {
          TxspeedHistogram128 = input.ReadUInt32();
          break;
        }
        case 576: {
          TxspeedHistogram256 = input.ReadUInt32();
          break;
        }
        case 584: {
          TxspeedHistogram512 = input.ReadUInt32();
          break;
        }
        case 592: {
          TxspeedHistogram1024 = input.ReadUInt32();
          break;
        }
        case 600: {
          TxspeedHistogramMax = input.ReadUInt32();
          break;
        }
        case 608: {
          TxspeedNtile5Th = input.ReadUInt32();
          break;
        }
        case 616: {
          TxspeedNtile50Th = input.ReadUInt32();
          break;
        }
        case 624: {
          TxspeedNtile75Th = input.ReadUInt32();
          break;
        }
        case 632: {
          TxspeedNtile95Th = input.ReadUInt32();
          break;
        }
        case 640: {
          TxspeedNtile98Th = input.ReadUInt32();
          break;
        }
        case 648: {
          RxspeedMax = input.ReadUInt32();
          break;
        }
        case 656: {
          RxspeedHistogram16 = input.ReadUInt32();
          break;
        }
        case 664: {
          RxspeedHistogram32 = input.ReadUInt32();
          break;
        }
        case 672: {
          RxspeedHistogram64 = input.ReadUInt32();
          break;
        }
        case 680: {
          RxspeedHistogram128 = input.ReadUInt32();
          break;
        }
        case 688: {
          RxspeedHistogram256 = input.ReadUInt32();
          break;
        }
        case 696: {
          RxspeedHistogram512 = input.ReadUInt32();
          break;
        }
        case 704: {
          RxspeedHistogram1024 = input.ReadUInt32();
          break;
        }
        case 712: {
          RxspeedHistogramMax = input.ReadUInt32();
          break;
        }
        case 720: {
          RxspeedNtile5Th = input.ReadUInt32();
          break;
        }
        case 728: {
          RxspeedNtile50Th = input.ReadUInt32();
          break;
        }
        case 736: {
          RxspeedNtile75Th = input.ReadUInt32();
          break;
        }
        case 744: {
          RxspeedNtile95Th = input.ReadUInt32();
          break;
        }
        case 752: {
          RxspeedNtile98Th = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgSteamDatagramConnectionQuality : pb::IMessage<CMsgSteamDatagramConnectionQuality>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamDatagramConnectionQuality> _parser = new pb::MessageParser<CMsgSteamDatagramConnectionQuality>(() => new CMsgSteamDatagramConnectionQuality());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamDatagramConnectionQuality> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramConnectionQuality() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramConnectionQuality(CMsgSteamDatagramConnectionQuality other) : this() {
    instantaneous_ = other.instantaneous_ != null ? other.instantaneous_.Clone() : null;
    lifetime_ = other.lifetime_ != null ? other.lifetime_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamDatagramConnectionQuality Clone() {
    return new CMsgSteamDatagramConnectionQuality(this);
  }

  /// <summary>Field number for the "instantaneous" field.</summary>
  public const int InstantaneousFieldNumber = 1;
  private global::CMsgSteamDatagramLinkInstantaneousStats instantaneous_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramLinkInstantaneousStats Instantaneous {
    get { return instantaneous_; }
    set {
      instantaneous_ = value;
    }
  }

  /// <summary>Field number for the "lifetime" field.</summary>
  public const int LifetimeFieldNumber = 2;
  private global::CMsgSteamDatagramLinkLifetimeStats lifetime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramLinkLifetimeStats Lifetime {
    get { return lifetime_; }
    set {
      lifetime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamDatagramConnectionQuality);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamDatagramConnectionQuality other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Instantaneous, other.Instantaneous)) return false;
    if (!object.Equals(Lifetime, other.Lifetime)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (instantaneous_ != null) hash ^= Instantaneous.GetHashCode();
    if (lifetime_ != null) hash ^= Lifetime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (instantaneous_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Instantaneous);
    }
    if (lifetime_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Lifetime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (instantaneous_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Instantaneous);
    }
    if (lifetime_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Lifetime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (instantaneous_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instantaneous);
    }
    if (lifetime_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lifetime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamDatagramConnectionQuality other) {
    if (other == null) {
      return;
    }
    if (other.instantaneous_ != null) {
      if (instantaneous_ == null) {
        Instantaneous = new global::CMsgSteamDatagramLinkInstantaneousStats();
      }
      Instantaneous.MergeFrom(other.Instantaneous);
    }
    if (other.lifetime_ != null) {
      if (lifetime_ == null) {
        Lifetime = new global::CMsgSteamDatagramLinkLifetimeStats();
      }
      Lifetime.MergeFrom(other.Lifetime);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (instantaneous_ == null) {
            Instantaneous = new global::CMsgSteamDatagramLinkInstantaneousStats();
          }
          input.ReadMessage(Instantaneous);
          break;
        }
        case 18: {
          if (lifetime_ == null) {
            Lifetime = new global::CMsgSteamDatagramLinkLifetimeStats();
          }
          input.ReadMessage(Lifetime);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (instantaneous_ == null) {
            Instantaneous = new global::CMsgSteamDatagramLinkInstantaneousStats();
          }
          input.ReadMessage(Instantaneous);
          break;
        }
        case 18: {
          if (lifetime_ == null) {
            Lifetime = new global::CMsgSteamDatagramLinkLifetimeStats();
          }
          input.ReadMessage(Lifetime);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgICECandidate : pb::IMessage<CMsgICECandidate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgICECandidate> _parser = new pb::MessageParser<CMsgICECandidate>(() => new CMsgICECandidate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgICECandidate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgICECandidate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgICECandidate(CMsgICECandidate other) : this() {
    candidate_ = other.candidate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgICECandidate Clone() {
    return new CMsgICECandidate(this);
  }

  /// <summary>Field number for the "candidate" field.</summary>
  public const int CandidateFieldNumber = 3;
  private readonly static string CandidateDefaultValue = "";

  private string candidate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Candidate {
    get { return candidate_ ?? CandidateDefaultValue; }
    set {
      candidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "candidate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCandidate {
    get { return candidate_ != null; }
  }
  /// <summary>Clears the value of the "candidate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCandidate() {
    candidate_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgICECandidate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgICECandidate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Candidate != other.Candidate) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCandidate) hash ^= Candidate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCandidate) {
      output.WriteRawTag(26);
      output.WriteString(Candidate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCandidate) {
      output.WriteRawTag(26);
      output.WriteString(Candidate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCandidate) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Candidate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgICECandidate other) {
    if (other == null) {
      return;
    }
    if (other.HasCandidate) {
      Candidate = other.Candidate;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 26: {
          Candidate = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 26: {
          Candidate = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgICERendezvous : pb::IMessage<CMsgICERendezvous>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgICERendezvous> _parser = new pb::MessageParser<CMsgICERendezvous>(() => new CMsgICERendezvous());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgICERendezvous> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgICERendezvous() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgICERendezvous(CMsgICERendezvous other) : this() {
    auth_ = other.auth_ != null ? other.auth_.Clone() : null;
    addCandidate_ = other.addCandidate_ != null ? other.addCandidate_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgICERendezvous Clone() {
    return new CMsgICERendezvous(this);
  }

  /// <summary>Field number for the "auth" field.</summary>
  public const int AuthFieldNumber = 2;
  private global::CMsgICERendezvous.Types.Auth auth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgICERendezvous.Types.Auth Auth {
    get { return auth_; }
    set {
      auth_ = value;
    }
  }

  /// <summary>Field number for the "add_candidate" field.</summary>
  public const int AddCandidateFieldNumber = 1;
  private global::CMsgICECandidate addCandidate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgICECandidate AddCandidate {
    get { return addCandidate_; }
    set {
      addCandidate_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgICERendezvous);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgICERendezvous other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Auth, other.Auth)) return false;
    if (!object.Equals(AddCandidate, other.AddCandidate)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (auth_ != null) hash ^= Auth.GetHashCode();
    if (addCandidate_ != null) hash ^= AddCandidate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (addCandidate_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AddCandidate);
    }
    if (auth_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Auth);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (addCandidate_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(AddCandidate);
    }
    if (auth_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Auth);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (auth_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
    }
    if (addCandidate_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddCandidate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgICERendezvous other) {
    if (other == null) {
      return;
    }
    if (other.auth_ != null) {
      if (auth_ == null) {
        Auth = new global::CMsgICERendezvous.Types.Auth();
      }
      Auth.MergeFrom(other.Auth);
    }
    if (other.addCandidate_ != null) {
      if (addCandidate_ == null) {
        AddCandidate = new global::CMsgICECandidate();
      }
      AddCandidate.MergeFrom(other.AddCandidate);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (addCandidate_ == null) {
            AddCandidate = new global::CMsgICECandidate();
          }
          input.ReadMessage(AddCandidate);
          break;
        }
        case 18: {
          if (auth_ == null) {
            Auth = new global::CMsgICERendezvous.Types.Auth();
          }
          input.ReadMessage(Auth);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (addCandidate_ == null) {
            AddCandidate = new global::CMsgICECandidate();
          }
          input.ReadMessage(AddCandidate);
          break;
        }
        case 18: {
          if (auth_ == null) {
            Auth = new global::CMsgICERendezvous.Types.Auth();
          }
          input.ReadMessage(Auth);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgICERendezvous message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Auth : pb::IMessage<Auth>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Auth> _parser = new pb::MessageParser<Auth>(() => new Auth());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Auth> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgICERendezvous.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Auth() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Auth(Auth other) : this() {
        pwdFrag_ = other.pwdFrag_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Auth Clone() {
        return new Auth(this);
      }

      /// <summary>Field number for the "pwd_frag" field.</summary>
      public const int PwdFragFieldNumber = 1;
      private readonly static string PwdFragDefaultValue = "";

      private string pwdFrag_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string PwdFrag {
        get { return pwdFrag_ ?? PwdFragDefaultValue; }
        set {
          pwdFrag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "pwd_frag" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPwdFrag {
        get { return pwdFrag_ != null; }
      }
      /// <summary>Clears the value of the "pwd_frag" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPwdFrag() {
        pwdFrag_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Auth);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Auth other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (PwdFrag != other.PwdFrag) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPwdFrag) hash ^= PwdFrag.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPwdFrag) {
          output.WriteRawTag(10);
          output.WriteString(PwdFrag);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPwdFrag) {
          output.WriteRawTag(10);
          output.WriteString(PwdFrag);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPwdFrag) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(PwdFrag);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Auth other) {
        if (other == null) {
          return;
        }
        if (other.HasPwdFrag) {
          PwdFrag = other.PwdFrag;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              PwdFrag = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              PwdFrag = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgSteamNetworkingP2PRendezvous : pb::IMessage<CMsgSteamNetworkingP2PRendezvous>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamNetworkingP2PRendezvous> _parser = new pb::MessageParser<CMsgSteamNetworkingP2PRendezvous>(() => new CMsgSteamNetworkingP2PRendezvous());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamNetworkingP2PRendezvous> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingP2PRendezvous() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingP2PRendezvous(CMsgSteamNetworkingP2PRendezvous other) : this() {
    _hasBits0 = other._hasBits0;
    fromIdentity_ = other.fromIdentity_;
    fromConnectionId_ = other.fromConnectionId_;
    toIdentity_ = other.toIdentity_;
    toConnectionId_ = other.toConnectionId_;
    sdrRoutes_ = other.sdrRoutes_;
    ackPeerRoutesRevision_ = other.ackPeerRoutesRevision_;
    iceEnabled_ = other.iceEnabled_;
    hostedServerTicket_ = other.hostedServerTicket_;
    connectRequest_ = other.connectRequest_ != null ? other.connectRequest_.Clone() : null;
    connectOk_ = other.connectOk_ != null ? other.connectOk_.Clone() : null;
    connectionClosed_ = other.connectionClosed_ != null ? other.connectionClosed_.Clone() : null;
    ackReliableMsg_ = other.ackReliableMsg_;
    firstReliableMsg_ = other.firstReliableMsg_;
    reliableMessages_ = other.reliableMessages_.Clone();
    applicationMessages_ = other.applicationMessages_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingP2PRendezvous Clone() {
    return new CMsgSteamNetworkingP2PRendezvous(this);
  }

  /// <summary>Field number for the "from_identity" field.</summary>
  public const int FromIdentityFieldNumber = 8;
  private readonly static string FromIdentityDefaultValue = "";

  private string fromIdentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FromIdentity {
    get { return fromIdentity_ ?? FromIdentityDefaultValue; }
    set {
      fromIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "from_identity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFromIdentity {
    get { return fromIdentity_ != null; }
  }
  /// <summary>Clears the value of the "from_identity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFromIdentity() {
    fromIdentity_ = null;
  }

  /// <summary>Field number for the "from_connection_id" field.</summary>
  public const int FromConnectionIdFieldNumber = 9;
  private readonly static uint FromConnectionIdDefaultValue = 0;

  private uint fromConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FromConnectionId {
    get { if ((_hasBits0 & 8) != 0) { return fromConnectionId_; } else { return FromConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      fromConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "from_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFromConnectionId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "from_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFromConnectionId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "to_identity" field.</summary>
  public const int ToIdentityFieldNumber = 10;
  private readonly static string ToIdentityDefaultValue = "";

  private string toIdentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ToIdentity {
    get { return toIdentity_ ?? ToIdentityDefaultValue; }
    set {
      toIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "to_identity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToIdentity {
    get { return toIdentity_ != null; }
  }
  /// <summary>Clears the value of the "to_identity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToIdentity() {
    toIdentity_ = null;
  }

  /// <summary>Field number for the "to_connection_id" field.</summary>
  public const int ToConnectionIdFieldNumber = 1;
  private readonly static uint ToConnectionIdDefaultValue = 0;

  private uint toConnectionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ToConnectionId {
    get { if ((_hasBits0 & 1) != 0) { return toConnectionId_; } else { return ToConnectionIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      toConnectionId_ = value;
    }
  }
  /// <summary>Gets whether the "to_connection_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToConnectionId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "to_connection_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToConnectionId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "sdr_routes" field.</summary>
  public const int SdrRoutesFieldNumber = 2;
  private readonly static pb::ByteString SdrRoutesDefaultValue = pb::ByteString.Empty;

  private pb::ByteString sdrRoutes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SdrRoutes {
    get { return sdrRoutes_ ?? SdrRoutesDefaultValue; }
    set {
      sdrRoutes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sdr_routes" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSdrRoutes {
    get { return sdrRoutes_ != null; }
  }
  /// <summary>Clears the value of the "sdr_routes" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSdrRoutes() {
    sdrRoutes_ = null;
  }

  /// <summary>Field number for the "ack_peer_routes_revision" field.</summary>
  public const int AckPeerRoutesRevisionFieldNumber = 3;
  private readonly static uint AckPeerRoutesRevisionDefaultValue = 0;

  private uint ackPeerRoutesRevision_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AckPeerRoutesRevision {
    get { if ((_hasBits0 & 2) != 0) { return ackPeerRoutesRevision_; } else { return AckPeerRoutesRevisionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      ackPeerRoutesRevision_ = value;
    }
  }
  /// <summary>Gets whether the "ack_peer_routes_revision" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAckPeerRoutesRevision {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ack_peer_routes_revision" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAckPeerRoutesRevision() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ice_enabled" field.</summary>
  public const int IceEnabledFieldNumber = 7;
  private readonly static bool IceEnabledDefaultValue = false;

  private bool iceEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IceEnabled {
    get { if ((_hasBits0 & 4) != 0) { return iceEnabled_; } else { return IceEnabledDefaultValue; } }
    set {
      _hasBits0 |= 4;
      iceEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "ice_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIceEnabled {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "ice_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIceEnabled() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "hosted_server_ticket" field.</summary>
  public const int HostedServerTicketFieldNumber = 14;
  private readonly static pb::ByteString HostedServerTicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString hostedServerTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString HostedServerTicket {
    get { return hostedServerTicket_ ?? HostedServerTicketDefaultValue; }
    set {
      hostedServerTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "hosted_server_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostedServerTicket {
    get { return hostedServerTicket_ != null; }
  }
  /// <summary>Clears the value of the "hosted_server_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostedServerTicket() {
    hostedServerTicket_ = null;
  }

  /// <summary>Field number for the "connect_request" field.</summary>
  public const int ConnectRequestFieldNumber = 4;
  private global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectRequest connectRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectRequest ConnectRequest {
    get { return connectRequest_; }
    set {
      connectRequest_ = value;
    }
  }

  /// <summary>Field number for the "connect_ok" field.</summary>
  public const int ConnectOkFieldNumber = 5;
  private global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectOK connectOk_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectOK ConnectOk {
    get { return connectOk_; }
    set {
      connectOk_ = value;
    }
  }

  /// <summary>Field number for the "connection_closed" field.</summary>
  public const int ConnectionClosedFieldNumber = 6;
  private global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectionClosed connectionClosed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectionClosed ConnectionClosed {
    get { return connectionClosed_; }
    set {
      connectionClosed_ = value;
    }
  }

  /// <summary>Field number for the "ack_reliable_msg" field.</summary>
  public const int AckReliableMsgFieldNumber = 11;
  private readonly static uint AckReliableMsgDefaultValue = 0;

  private uint ackReliableMsg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AckReliableMsg {
    get { if ((_hasBits0 & 16) != 0) { return ackReliableMsg_; } else { return AckReliableMsgDefaultValue; } }
    set {
      _hasBits0 |= 16;
      ackReliableMsg_ = value;
    }
  }
  /// <summary>Gets whether the "ack_reliable_msg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAckReliableMsg {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ack_reliable_msg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAckReliableMsg() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "first_reliable_msg" field.</summary>
  public const int FirstReliableMsgFieldNumber = 12;
  private readonly static uint FirstReliableMsgDefaultValue = 0;

  private uint firstReliableMsg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FirstReliableMsg {
    get { if ((_hasBits0 & 32) != 0) { return firstReliableMsg_; } else { return FirstReliableMsgDefaultValue; } }
    set {
      _hasBits0 |= 32;
      firstReliableMsg_ = value;
    }
  }
  /// <summary>Gets whether the "first_reliable_msg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFirstReliableMsg {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "first_reliable_msg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFirstReliableMsg() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "reliable_messages" field.</summary>
  public const int ReliableMessagesFieldNumber = 13;
  private static readonly pb::FieldCodec<global::CMsgSteamNetworkingP2PRendezvous.Types.ReliableMessage> _repeated_reliableMessages_codec
      = pb::FieldCodec.ForMessage(106, global::CMsgSteamNetworkingP2PRendezvous.Types.ReliableMessage.Parser);
  private readonly pbc::RepeatedField<global::CMsgSteamNetworkingP2PRendezvous.Types.ReliableMessage> reliableMessages_ = new pbc::RepeatedField<global::CMsgSteamNetworkingP2PRendezvous.Types.ReliableMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgSteamNetworkingP2PRendezvous.Types.ReliableMessage> ReliableMessages {
    get { return reliableMessages_; }
  }

  /// <summary>Field number for the "application_messages" field.</summary>
  public const int ApplicationMessagesFieldNumber = 15;
  private static readonly pb::FieldCodec<global::CMsgSteamNetworkingP2PRendezvous.Types.ApplicationMessage> _repeated_applicationMessages_codec
      = pb::FieldCodec.ForMessage(122, global::CMsgSteamNetworkingP2PRendezvous.Types.ApplicationMessage.Parser);
  private readonly pbc::RepeatedField<global::CMsgSteamNetworkingP2PRendezvous.Types.ApplicationMessage> applicationMessages_ = new pbc::RepeatedField<global::CMsgSteamNetworkingP2PRendezvous.Types.ApplicationMessage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgSteamNetworkingP2PRendezvous.Types.ApplicationMessage> ApplicationMessages {
    get { return applicationMessages_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamNetworkingP2PRendezvous);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamNetworkingP2PRendezvous other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FromIdentity != other.FromIdentity) return false;
    if (FromConnectionId != other.FromConnectionId) return false;
    if (ToIdentity != other.ToIdentity) return false;
    if (ToConnectionId != other.ToConnectionId) return false;
    if (SdrRoutes != other.SdrRoutes) return false;
    if (AckPeerRoutesRevision != other.AckPeerRoutesRevision) return false;
    if (IceEnabled != other.IceEnabled) return false;
    if (HostedServerTicket != other.HostedServerTicket) return false;
    if (!object.Equals(ConnectRequest, other.ConnectRequest)) return false;
    if (!object.Equals(ConnectOk, other.ConnectOk)) return false;
    if (!object.Equals(ConnectionClosed, other.ConnectionClosed)) return false;
    if (AckReliableMsg != other.AckReliableMsg) return false;
    if (FirstReliableMsg != other.FirstReliableMsg) return false;
    if(!reliableMessages_.Equals(other.reliableMessages_)) return false;
    if(!applicationMessages_.Equals(other.applicationMessages_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFromIdentity) hash ^= FromIdentity.GetHashCode();
    if (HasFromConnectionId) hash ^= FromConnectionId.GetHashCode();
    if (HasToIdentity) hash ^= ToIdentity.GetHashCode();
    if (HasToConnectionId) hash ^= ToConnectionId.GetHashCode();
    if (HasSdrRoutes) hash ^= SdrRoutes.GetHashCode();
    if (HasAckPeerRoutesRevision) hash ^= AckPeerRoutesRevision.GetHashCode();
    if (HasIceEnabled) hash ^= IceEnabled.GetHashCode();
    if (HasHostedServerTicket) hash ^= HostedServerTicket.GetHashCode();
    if (connectRequest_ != null) hash ^= ConnectRequest.GetHashCode();
    if (connectOk_ != null) hash ^= ConnectOk.GetHashCode();
    if (connectionClosed_ != null) hash ^= ConnectionClosed.GetHashCode();
    if (HasAckReliableMsg) hash ^= AckReliableMsg.GetHashCode();
    if (HasFirstReliableMsg) hash ^= FirstReliableMsg.GetHashCode();
    hash ^= reliableMessages_.GetHashCode();
    hash ^= applicationMessages_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasToConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ToConnectionId);
    }
    if (HasSdrRoutes) {
      output.WriteRawTag(18);
      output.WriteBytes(SdrRoutes);
    }
    if (HasAckPeerRoutesRevision) {
      output.WriteRawTag(24);
      output.WriteUInt32(AckPeerRoutesRevision);
    }
    if (connectRequest_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(ConnectRequest);
    }
    if (connectOk_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(ConnectOk);
    }
    if (connectionClosed_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(ConnectionClosed);
    }
    if (HasIceEnabled) {
      output.WriteRawTag(56);
      output.WriteBool(IceEnabled);
    }
    if (HasFromIdentity) {
      output.WriteRawTag(66);
      output.WriteString(FromIdentity);
    }
    if (HasFromConnectionId) {
      output.WriteRawTag(77);
      output.WriteFixed32(FromConnectionId);
    }
    if (HasToIdentity) {
      output.WriteRawTag(82);
      output.WriteString(ToIdentity);
    }
    if (HasAckReliableMsg) {
      output.WriteRawTag(88);
      output.WriteUInt32(AckReliableMsg);
    }
    if (HasFirstReliableMsg) {
      output.WriteRawTag(96);
      output.WriteUInt32(FirstReliableMsg);
    }
    reliableMessages_.WriteTo(output, _repeated_reliableMessages_codec);
    if (HasHostedServerTicket) {
      output.WriteRawTag(114);
      output.WriteBytes(HostedServerTicket);
    }
    applicationMessages_.WriteTo(output, _repeated_applicationMessages_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasToConnectionId) {
      output.WriteRawTag(13);
      output.WriteFixed32(ToConnectionId);
    }
    if (HasSdrRoutes) {
      output.WriteRawTag(18);
      output.WriteBytes(SdrRoutes);
    }
    if (HasAckPeerRoutesRevision) {
      output.WriteRawTag(24);
      output.WriteUInt32(AckPeerRoutesRevision);
    }
    if (connectRequest_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(ConnectRequest);
    }
    if (connectOk_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(ConnectOk);
    }
    if (connectionClosed_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(ConnectionClosed);
    }
    if (HasIceEnabled) {
      output.WriteRawTag(56);
      output.WriteBool(IceEnabled);
    }
    if (HasFromIdentity) {
      output.WriteRawTag(66);
      output.WriteString(FromIdentity);
    }
    if (HasFromConnectionId) {
      output.WriteRawTag(77);
      output.WriteFixed32(FromConnectionId);
    }
    if (HasToIdentity) {
      output.WriteRawTag(82);
      output.WriteString(ToIdentity);
    }
    if (HasAckReliableMsg) {
      output.WriteRawTag(88);
      output.WriteUInt32(AckReliableMsg);
    }
    if (HasFirstReliableMsg) {
      output.WriteRawTag(96);
      output.WriteUInt32(FirstReliableMsg);
    }
    reliableMessages_.WriteTo(ref output, _repeated_reliableMessages_codec);
    if (HasHostedServerTicket) {
      output.WriteRawTag(114);
      output.WriteBytes(HostedServerTicket);
    }
    applicationMessages_.WriteTo(ref output, _repeated_applicationMessages_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFromIdentity) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FromIdentity);
    }
    if (HasFromConnectionId) {
      size += 1 + 4;
    }
    if (HasToIdentity) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ToIdentity);
    }
    if (HasToConnectionId) {
      size += 1 + 4;
    }
    if (HasSdrRoutes) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SdrRoutes);
    }
    if (HasAckPeerRoutesRevision) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AckPeerRoutesRevision);
    }
    if (HasIceEnabled) {
      size += 1 + 1;
    }
    if (HasHostedServerTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(HostedServerTicket);
    }
    if (connectRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectRequest);
    }
    if (connectOk_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectOk);
    }
    if (connectionClosed_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectionClosed);
    }
    if (HasAckReliableMsg) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AckReliableMsg);
    }
    if (HasFirstReliableMsg) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstReliableMsg);
    }
    size += reliableMessages_.CalculateSize(_repeated_reliableMessages_codec);
    size += applicationMessages_.CalculateSize(_repeated_applicationMessages_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamNetworkingP2PRendezvous other) {
    if (other == null) {
      return;
    }
    if (other.HasFromIdentity) {
      FromIdentity = other.FromIdentity;
    }
    if (other.HasFromConnectionId) {
      FromConnectionId = other.FromConnectionId;
    }
    if (other.HasToIdentity) {
      ToIdentity = other.ToIdentity;
    }
    if (other.HasToConnectionId) {
      ToConnectionId = other.ToConnectionId;
    }
    if (other.HasSdrRoutes) {
      SdrRoutes = other.SdrRoutes;
    }
    if (other.HasAckPeerRoutesRevision) {
      AckPeerRoutesRevision = other.AckPeerRoutesRevision;
    }
    if (other.HasIceEnabled) {
      IceEnabled = other.IceEnabled;
    }
    if (other.HasHostedServerTicket) {
      HostedServerTicket = other.HostedServerTicket;
    }
    if (other.connectRequest_ != null) {
      if (connectRequest_ == null) {
        ConnectRequest = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectRequest();
      }
      ConnectRequest.MergeFrom(other.ConnectRequest);
    }
    if (other.connectOk_ != null) {
      if (connectOk_ == null) {
        ConnectOk = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectOK();
      }
      ConnectOk.MergeFrom(other.ConnectOk);
    }
    if (other.connectionClosed_ != null) {
      if (connectionClosed_ == null) {
        ConnectionClosed = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectionClosed();
      }
      ConnectionClosed.MergeFrom(other.ConnectionClosed);
    }
    if (other.HasAckReliableMsg) {
      AckReliableMsg = other.AckReliableMsg;
    }
    if (other.HasFirstReliableMsg) {
      FirstReliableMsg = other.FirstReliableMsg;
    }
    reliableMessages_.Add(other.reliableMessages_);
    applicationMessages_.Add(other.applicationMessages_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          ToConnectionId = input.ReadFixed32();
          break;
        }
        case 18: {
          SdrRoutes = input.ReadBytes();
          break;
        }
        case 24: {
          AckPeerRoutesRevision = input.ReadUInt32();
          break;
        }
        case 34: {
          if (connectRequest_ == null) {
            ConnectRequest = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectRequest();
          }
          input.ReadMessage(ConnectRequest);
          break;
        }
        case 42: {
          if (connectOk_ == null) {
            ConnectOk = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectOK();
          }
          input.ReadMessage(ConnectOk);
          break;
        }
        case 50: {
          if (connectionClosed_ == null) {
            ConnectionClosed = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectionClosed();
          }
          input.ReadMessage(ConnectionClosed);
          break;
        }
        case 56: {
          IceEnabled = input.ReadBool();
          break;
        }
        case 66: {
          FromIdentity = input.ReadString();
          break;
        }
        case 77: {
          FromConnectionId = input.ReadFixed32();
          break;
        }
        case 82: {
          ToIdentity = input.ReadString();
          break;
        }
        case 88: {
          AckReliableMsg = input.ReadUInt32();
          break;
        }
        case 96: {
          FirstReliableMsg = input.ReadUInt32();
          break;
        }
        case 106: {
          reliableMessages_.AddEntriesFrom(input, _repeated_reliableMessages_codec);
          break;
        }
        case 114: {
          HostedServerTicket = input.ReadBytes();
          break;
        }
        case 122: {
          applicationMessages_.AddEntriesFrom(input, _repeated_applicationMessages_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          ToConnectionId = input.ReadFixed32();
          break;
        }
        case 18: {
          SdrRoutes = input.ReadBytes();
          break;
        }
        case 24: {
          AckPeerRoutesRevision = input.ReadUInt32();
          break;
        }
        case 34: {
          if (connectRequest_ == null) {
            ConnectRequest = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectRequest();
          }
          input.ReadMessage(ConnectRequest);
          break;
        }
        case 42: {
          if (connectOk_ == null) {
            ConnectOk = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectOK();
          }
          input.ReadMessage(ConnectOk);
          break;
        }
        case 50: {
          if (connectionClosed_ == null) {
            ConnectionClosed = new global::CMsgSteamNetworkingP2PRendezvous.Types.ConnectionClosed();
          }
          input.ReadMessage(ConnectionClosed);
          break;
        }
        case 56: {
          IceEnabled = input.ReadBool();
          break;
        }
        case 66: {
          FromIdentity = input.ReadString();
          break;
        }
        case 77: {
          FromConnectionId = input.ReadFixed32();
          break;
        }
        case 82: {
          ToIdentity = input.ReadString();
          break;
        }
        case 88: {
          AckReliableMsg = input.ReadUInt32();
          break;
        }
        case 96: {
          FirstReliableMsg = input.ReadUInt32();
          break;
        }
        case 106: {
          reliableMessages_.AddEntriesFrom(ref input, _repeated_reliableMessages_codec);
          break;
        }
        case 114: {
          HostedServerTicket = input.ReadBytes();
          break;
        }
        case 122: {
          applicationMessages_.AddEntriesFrom(ref input, _repeated_applicationMessages_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgSteamNetworkingP2PRendezvous message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class ConnectRequest : pb::IMessage<ConnectRequest>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ConnectRequest> _parser = new pb::MessageParser<ConnectRequest>(() => new ConnectRequest());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ConnectRequest> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgSteamNetworkingP2PRendezvous.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectRequest() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectRequest(ConnectRequest other) : this() {
        _hasBits0 = other._hasBits0;
        crypt_ = other.crypt_ != null ? other.crypt_.Clone() : null;
        cert_ = other.cert_ != null ? other.cert_.Clone() : null;
        toVirtualPort_ = other.toVirtualPort_;
        fromVirtualPort_ = other.fromVirtualPort_;
        fromFakeip_ = other.fromFakeip_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectRequest Clone() {
        return new ConnectRequest(this);
      }

      /// <summary>Field number for the "crypt" field.</summary>
      public const int CryptFieldNumber = 6;
      private global::CMsgSteamDatagramSessionCryptInfoSigned crypt_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgSteamDatagramSessionCryptInfoSigned Crypt {
        get { return crypt_; }
        set {
          crypt_ = value;
        }
      }

      /// <summary>Field number for the "cert" field.</summary>
      public const int CertFieldNumber = 7;
      private global::CMsgSteamDatagramCertificateSigned cert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgSteamDatagramCertificateSigned Cert {
        get { return cert_; }
        set {
          cert_ = value;
        }
      }

      /// <summary>Field number for the "to_virtual_port" field.</summary>
      public const int ToVirtualPortFieldNumber = 9;
      private readonly static uint ToVirtualPortDefaultValue = 0;

      private uint toVirtualPort_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ToVirtualPort {
        get { if ((_hasBits0 & 1) != 0) { return toVirtualPort_; } else { return ToVirtualPortDefaultValue; } }
        set {
          _hasBits0 |= 1;
          toVirtualPort_ = value;
        }
      }
      /// <summary>Gets whether the "to_virtual_port" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasToVirtualPort {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "to_virtual_port" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearToVirtualPort() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "from_virtual_port" field.</summary>
      public const int FromVirtualPortFieldNumber = 10;
      private readonly static uint FromVirtualPortDefaultValue = 0;

      private uint fromVirtualPort_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint FromVirtualPort {
        get { if ((_hasBits0 & 2) != 0) { return fromVirtualPort_; } else { return FromVirtualPortDefaultValue; } }
        set {
          _hasBits0 |= 2;
          fromVirtualPort_ = value;
        }
      }
      /// <summary>Gets whether the "from_virtual_port" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFromVirtualPort {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "from_virtual_port" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFromVirtualPort() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "from_fakeip" field.</summary>
      public const int FromFakeipFieldNumber = 11;
      private readonly static string FromFakeipDefaultValue = "";

      private string fromFakeip_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string FromFakeip {
        get { return fromFakeip_ ?? FromFakeipDefaultValue; }
        set {
          fromFakeip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "from_fakeip" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFromFakeip {
        get { return fromFakeip_ != null; }
      }
      /// <summary>Clears the value of the "from_fakeip" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFromFakeip() {
        fromFakeip_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ConnectRequest);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ConnectRequest other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(Crypt, other.Crypt)) return false;
        if (!object.Equals(Cert, other.Cert)) return false;
        if (ToVirtualPort != other.ToVirtualPort) return false;
        if (FromVirtualPort != other.FromVirtualPort) return false;
        if (FromFakeip != other.FromFakeip) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (crypt_ != null) hash ^= Crypt.GetHashCode();
        if (cert_ != null) hash ^= Cert.GetHashCode();
        if (HasToVirtualPort) hash ^= ToVirtualPort.GetHashCode();
        if (HasFromVirtualPort) hash ^= FromVirtualPort.GetHashCode();
        if (HasFromFakeip) hash ^= FromFakeip.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (crypt_ != null) {
          output.WriteRawTag(50);
          output.WriteMessage(Crypt);
        }
        if (cert_ != null) {
          output.WriteRawTag(58);
          output.WriteMessage(Cert);
        }
        if (HasToVirtualPort) {
          output.WriteRawTag(72);
          output.WriteUInt32(ToVirtualPort);
        }
        if (HasFromVirtualPort) {
          output.WriteRawTag(80);
          output.WriteUInt32(FromVirtualPort);
        }
        if (HasFromFakeip) {
          output.WriteRawTag(90);
          output.WriteString(FromFakeip);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (crypt_ != null) {
          output.WriteRawTag(50);
          output.WriteMessage(Crypt);
        }
        if (cert_ != null) {
          output.WriteRawTag(58);
          output.WriteMessage(Cert);
        }
        if (HasToVirtualPort) {
          output.WriteRawTag(72);
          output.WriteUInt32(ToVirtualPort);
        }
        if (HasFromVirtualPort) {
          output.WriteRawTag(80);
          output.WriteUInt32(FromVirtualPort);
        }
        if (HasFromFakeip) {
          output.WriteRawTag(90);
          output.WriteString(FromFakeip);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (crypt_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Crypt);
        }
        if (cert_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cert);
        }
        if (HasToVirtualPort) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ToVirtualPort);
        }
        if (HasFromVirtualPort) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FromVirtualPort);
        }
        if (HasFromFakeip) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(FromFakeip);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ConnectRequest other) {
        if (other == null) {
          return;
        }
        if (other.crypt_ != null) {
          if (crypt_ == null) {
            Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
          }
          Crypt.MergeFrom(other.Crypt);
        }
        if (other.cert_ != null) {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          Cert.MergeFrom(other.Cert);
        }
        if (other.HasToVirtualPort) {
          ToVirtualPort = other.ToVirtualPort;
        }
        if (other.HasFromVirtualPort) {
          FromVirtualPort = other.FromVirtualPort;
        }
        if (other.HasFromFakeip) {
          FromFakeip = other.FromFakeip;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 50: {
              if (crypt_ == null) {
                Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
              }
              input.ReadMessage(Crypt);
              break;
            }
            case 58: {
              if (cert_ == null) {
                Cert = new global::CMsgSteamDatagramCertificateSigned();
              }
              input.ReadMessage(Cert);
              break;
            }
            case 72: {
              ToVirtualPort = input.ReadUInt32();
              break;
            }
            case 80: {
              FromVirtualPort = input.ReadUInt32();
              break;
            }
            case 90: {
              FromFakeip = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 50: {
              if (crypt_ == null) {
                Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
              }
              input.ReadMessage(Crypt);
              break;
            }
            case 58: {
              if (cert_ == null) {
                Cert = new global::CMsgSteamDatagramCertificateSigned();
              }
              input.ReadMessage(Cert);
              break;
            }
            case 72: {
              ToVirtualPort = input.ReadUInt32();
              break;
            }
            case 80: {
              FromVirtualPort = input.ReadUInt32();
              break;
            }
            case 90: {
              FromFakeip = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ConnectOK : pb::IMessage<ConnectOK>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ConnectOK> _parser = new pb::MessageParser<ConnectOK>(() => new ConnectOK());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ConnectOK> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgSteamNetworkingP2PRendezvous.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectOK() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectOK(ConnectOK other) : this() {
        crypt_ = other.crypt_ != null ? other.crypt_.Clone() : null;
        cert_ = other.cert_ != null ? other.cert_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectOK Clone() {
        return new ConnectOK(this);
      }

      /// <summary>Field number for the "crypt" field.</summary>
      public const int CryptFieldNumber = 5;
      private global::CMsgSteamDatagramSessionCryptInfoSigned crypt_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgSteamDatagramSessionCryptInfoSigned Crypt {
        get { return crypt_; }
        set {
          crypt_ = value;
        }
      }

      /// <summary>Field number for the "cert" field.</summary>
      public const int CertFieldNumber = 6;
      private global::CMsgSteamDatagramCertificateSigned cert_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgSteamDatagramCertificateSigned Cert {
        get { return cert_; }
        set {
          cert_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ConnectOK);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ConnectOK other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(Crypt, other.Crypt)) return false;
        if (!object.Equals(Cert, other.Cert)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (crypt_ != null) hash ^= Crypt.GetHashCode();
        if (cert_ != null) hash ^= Cert.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (crypt_ != null) {
          output.WriteRawTag(42);
          output.WriteMessage(Crypt);
        }
        if (cert_ != null) {
          output.WriteRawTag(50);
          output.WriteMessage(Cert);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (crypt_ != null) {
          output.WriteRawTag(42);
          output.WriteMessage(Crypt);
        }
        if (cert_ != null) {
          output.WriteRawTag(50);
          output.WriteMessage(Cert);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (crypt_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Crypt);
        }
        if (cert_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cert);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ConnectOK other) {
        if (other == null) {
          return;
        }
        if (other.crypt_ != null) {
          if (crypt_ == null) {
            Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
          }
          Crypt.MergeFrom(other.Crypt);
        }
        if (other.cert_ != null) {
          if (cert_ == null) {
            Cert = new global::CMsgSteamDatagramCertificateSigned();
          }
          Cert.MergeFrom(other.Cert);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 42: {
              if (crypt_ == null) {
                Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
              }
              input.ReadMessage(Crypt);
              break;
            }
            case 50: {
              if (cert_ == null) {
                Cert = new global::CMsgSteamDatagramCertificateSigned();
              }
              input.ReadMessage(Cert);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 42: {
              if (crypt_ == null) {
                Crypt = new global::CMsgSteamDatagramSessionCryptInfoSigned();
              }
              input.ReadMessage(Crypt);
              break;
            }
            case 50: {
              if (cert_ == null) {
                Cert = new global::CMsgSteamDatagramCertificateSigned();
              }
              input.ReadMessage(Cert);
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ConnectionClosed : pb::IMessage<ConnectionClosed>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ConnectionClosed> _parser = new pb::MessageParser<ConnectionClosed>(() => new ConnectionClosed());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ConnectionClosed> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgSteamNetworkingP2PRendezvous.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectionClosed() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectionClosed(ConnectionClosed other) : this() {
        _hasBits0 = other._hasBits0;
        debug_ = other.debug_;
        reasonCode_ = other.reasonCode_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ConnectionClosed Clone() {
        return new ConnectionClosed(this);
      }

      /// <summary>Field number for the "debug" field.</summary>
      public const int DebugFieldNumber = 5;
      private readonly static string DebugDefaultValue = "";

      private string debug_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Debug {
        get { return debug_ ?? DebugDefaultValue; }
        set {
          debug_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "debug" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDebug {
        get { return debug_ != null; }
      }
      /// <summary>Clears the value of the "debug" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDebug() {
        debug_ = null;
      }

      /// <summary>Field number for the "reason_code" field.</summary>
      public const int ReasonCodeFieldNumber = 6;
      private readonly static uint ReasonCodeDefaultValue = 0;

      private uint reasonCode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ReasonCode {
        get { if ((_hasBits0 & 1) != 0) { return reasonCode_; } else { return ReasonCodeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          reasonCode_ = value;
        }
      }
      /// <summary>Gets whether the "reason_code" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasReasonCode {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "reason_code" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearReasonCode() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ConnectionClosed);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ConnectionClosed other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Debug != other.Debug) return false;
        if (ReasonCode != other.ReasonCode) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasDebug) hash ^= Debug.GetHashCode();
        if (HasReasonCode) hash ^= ReasonCode.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasDebug) {
          output.WriteRawTag(42);
          output.WriteString(Debug);
        }
        if (HasReasonCode) {
          output.WriteRawTag(48);
          output.WriteUInt32(ReasonCode);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasDebug) {
          output.WriteRawTag(42);
          output.WriteString(Debug);
        }
        if (HasReasonCode) {
          output.WriteRawTag(48);
          output.WriteUInt32(ReasonCode);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasDebug) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Debug);
        }
        if (HasReasonCode) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReasonCode);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ConnectionClosed other) {
        if (other == null) {
          return;
        }
        if (other.HasDebug) {
          Debug = other.Debug;
        }
        if (other.HasReasonCode) {
          ReasonCode = other.ReasonCode;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 42: {
              Debug = input.ReadString();
              break;
            }
            case 48: {
              ReasonCode = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 42: {
              Debug = input.ReadString();
              break;
            }
            case 48: {
              ReasonCode = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ReliableMessage : pb::IMessage<ReliableMessage>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ReliableMessage> _parser = new pb::MessageParser<ReliableMessage>(() => new ReliableMessage());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ReliableMessage> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgSteamNetworkingP2PRendezvous.Descriptor.NestedTypes[3]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ReliableMessage() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ReliableMessage(ReliableMessage other) : this() {
        ice_ = other.ice_ != null ? other.ice_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ReliableMessage Clone() {
        return new ReliableMessage(this);
      }

      /// <summary>Field number for the "ice" field.</summary>
      public const int IceFieldNumber = 1;
      private global::CMsgICERendezvous ice_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgICERendezvous Ice {
        get { return ice_; }
        set {
          ice_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ReliableMessage);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ReliableMessage other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(Ice, other.Ice)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (ice_ != null) hash ^= Ice.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (ice_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Ice);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (ice_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(Ice);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (ice_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ice);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ReliableMessage other) {
        if (other == null) {
          return;
        }
        if (other.ice_ != null) {
          if (ice_ == null) {
            Ice = new global::CMsgICERendezvous();
          }
          Ice.MergeFrom(other.Ice);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              if (ice_ == null) {
                Ice = new global::CMsgICERendezvous();
              }
              input.ReadMessage(Ice);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              if (ice_ == null) {
                Ice = new global::CMsgICERendezvous();
              }
              input.ReadMessage(Ice);
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class ApplicationMessage : pb::IMessage<ApplicationMessage>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ApplicationMessage> _parser = new pb::MessageParser<ApplicationMessage>(() => new ApplicationMessage());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ApplicationMessage> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgSteamNetworkingP2PRendezvous.Descriptor.NestedTypes[4]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ApplicationMessage() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ApplicationMessage(ApplicationMessage other) : this() {
        _hasBits0 = other._hasBits0;
        data_ = other.data_;
        msgNum_ = other.msgNum_;
        flags_ = other.flags_;
        laneIdx_ = other.laneIdx_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ApplicationMessage Clone() {
        return new ApplicationMessage(this);
      }

      /// <summary>Field number for the "data" field.</summary>
      public const int DataFieldNumber = 1;
      private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

      private pb::ByteString data_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString Data {
        get { return data_ ?? DataDefaultValue; }
        set {
          data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "data" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasData {
        get { return data_ != null; }
      }
      /// <summary>Clears the value of the "data" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearData() {
        data_ = null;
      }

      /// <summary>Field number for the "msg_num" field.</summary>
      public const int MsgNumFieldNumber = 2;
      private readonly static ulong MsgNumDefaultValue = 0UL;

      private ulong msgNum_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong MsgNum {
        get { if ((_hasBits0 & 1) != 0) { return msgNum_; } else { return MsgNumDefaultValue; } }
        set {
          _hasBits0 |= 1;
          msgNum_ = value;
        }
      }
      /// <summary>Gets whether the "msg_num" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMsgNum {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "msg_num" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMsgNum() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "flags" field.</summary>
      public const int FlagsFieldNumber = 3;
      private readonly static uint FlagsDefaultValue = 0;

      private uint flags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Flags {
        get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          flags_ = value;
        }
      }
      /// <summary>Gets whether the "flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFlags {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFlags() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "lane_idx" field.</summary>
      public const int LaneIdxFieldNumber = 4;
      private readonly static uint LaneIdxDefaultValue = 0;

      private uint laneIdx_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LaneIdx {
        get { if ((_hasBits0 & 4) != 0) { return laneIdx_; } else { return LaneIdxDefaultValue; } }
        set {
          _hasBits0 |= 4;
          laneIdx_ = value;
        }
      }
      /// <summary>Gets whether the "lane_idx" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLaneIdx {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "lane_idx" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLaneIdx() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ApplicationMessage);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ApplicationMessage other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Data != other.Data) return false;
        if (MsgNum != other.MsgNum) return false;
        if (Flags != other.Flags) return false;
        if (LaneIdx != other.LaneIdx) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasData) hash ^= Data.GetHashCode();
        if (HasMsgNum) hash ^= MsgNum.GetHashCode();
        if (HasFlags) hash ^= Flags.GetHashCode();
        if (HasLaneIdx) hash ^= LaneIdx.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasData) {
          output.WriteRawTag(10);
          output.WriteBytes(Data);
        }
        if (HasMsgNum) {
          output.WriteRawTag(16);
          output.WriteUInt64(MsgNum);
        }
        if (HasFlags) {
          output.WriteRawTag(24);
          output.WriteUInt32(Flags);
        }
        if (HasLaneIdx) {
          output.WriteRawTag(32);
          output.WriteUInt32(LaneIdx);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasData) {
          output.WriteRawTag(10);
          output.WriteBytes(Data);
        }
        if (HasMsgNum) {
          output.WriteRawTag(16);
          output.WriteUInt64(MsgNum);
        }
        if (HasFlags) {
          output.WriteRawTag(24);
          output.WriteUInt32(Flags);
        }
        if (HasLaneIdx) {
          output.WriteRawTag(32);
          output.WriteUInt32(LaneIdx);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasData) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
        }
        if (HasMsgNum) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MsgNum);
        }
        if (HasFlags) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
        }
        if (HasLaneIdx) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LaneIdx);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ApplicationMessage other) {
        if (other == null) {
          return;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        if (other.HasMsgNum) {
          MsgNum = other.MsgNum;
        }
        if (other.HasFlags) {
          Flags = other.Flags;
        }
        if (other.HasLaneIdx) {
          LaneIdx = other.LaneIdx;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Data = input.ReadBytes();
              break;
            }
            case 16: {
              MsgNum = input.ReadUInt64();
              break;
            }
            case 24: {
              Flags = input.ReadUInt32();
              break;
            }
            case 32: {
              LaneIdx = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Data = input.ReadBytes();
              break;
            }
            case 16: {
              MsgNum = input.ReadUInt64();
              break;
            }
            case 24: {
              Flags = input.ReadUInt32();
              break;
            }
            case 32: {
              LaneIdx = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgSteamNetworkingICESessionSummary : pb::IMessage<CMsgSteamNetworkingICESessionSummary>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSteamNetworkingICESessionSummary> _parser = new pb::MessageParser<CMsgSteamNetworkingICESessionSummary>(() => new CMsgSteamNetworkingICESessionSummary());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSteamNetworkingICESessionSummary> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteamnetworkingsocketsMessagesReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingICESessionSummary() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingICESessionSummary(CMsgSteamNetworkingICESessionSummary other) : this() {
    _hasBits0 = other._hasBits0;
    failureReasonCode_ = other.failureReasonCode_;
    localCandidateTypes_ = other.localCandidateTypes_;
    remoteCandidateTypes_ = other.remoteCandidateTypes_;
    initialRouteKind_ = other.initialRouteKind_;
    initialPing_ = other.initialPing_;
    initialScore_ = other.initialScore_;
    negotiationMs_ = other.negotiationMs_;
    bestRouteKind_ = other.bestRouteKind_;
    bestPing_ = other.bestPing_;
    bestScore_ = other.bestScore_;
    bestTime_ = other.bestTime_;
    selectedSeconds_ = other.selectedSeconds_;
    userSettings_ = other.userSettings_;
    iceEnableVar_ = other.iceEnableVar_;
    localCandidateTypesAllowed_ = other.localCandidateTypesAllowed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSteamNetworkingICESessionSummary Clone() {
    return new CMsgSteamNetworkingICESessionSummary(this);
  }

  /// <summary>Field number for the "failure_reason_code" field.</summary>
  public const int FailureReasonCodeFieldNumber = 7;
  private readonly static uint FailureReasonCodeDefaultValue = 0;

  private uint failureReasonCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FailureReasonCode {
    get { if ((_hasBits0 & 64) != 0) { return failureReasonCode_; } else { return FailureReasonCodeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      failureReasonCode_ = value;
    }
  }
  /// <summary>Gets whether the "failure_reason_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFailureReasonCode {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "failure_reason_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFailureReasonCode() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "local_candidate_types" field.</summary>
  public const int LocalCandidateTypesFieldNumber = 1;
  private readonly static uint LocalCandidateTypesDefaultValue = 0;

  private uint localCandidateTypes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LocalCandidateTypes {
    get { if ((_hasBits0 & 1) != 0) { return localCandidateTypes_; } else { return LocalCandidateTypesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      localCandidateTypes_ = value;
    }
  }
  /// <summary>Gets whether the "local_candidate_types" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLocalCandidateTypes {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "local_candidate_types" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLocalCandidateTypes() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "remote_candidate_types" field.</summary>
  public const int RemoteCandidateTypesFieldNumber = 2;
  private readonly static uint RemoteCandidateTypesDefaultValue = 0;

  private uint remoteCandidateTypes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RemoteCandidateTypes {
    get { if ((_hasBits0 & 2) != 0) { return remoteCandidateTypes_; } else { return RemoteCandidateTypesDefaultValue; } }
    set {
      _hasBits0 |= 2;
      remoteCandidateTypes_ = value;
    }
  }
  /// <summary>Gets whether the "remote_candidate_types" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRemoteCandidateTypes {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "remote_candidate_types" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRemoteCandidateTypes() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "initial_route_kind" field.</summary>
  public const int InitialRouteKindFieldNumber = 3;
  private readonly static uint InitialRouteKindDefaultValue = 0;

  private uint initialRouteKind_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint InitialRouteKind {
    get { if ((_hasBits0 & 4) != 0) { return initialRouteKind_; } else { return InitialRouteKindDefaultValue; } }
    set {
      _hasBits0 |= 4;
      initialRouteKind_ = value;
    }
  }
  /// <summary>Gets whether the "initial_route_kind" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInitialRouteKind {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "initial_route_kind" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInitialRouteKind() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "initial_ping" field.</summary>
  public const int InitialPingFieldNumber = 4;
  private readonly static uint InitialPingDefaultValue = 0;

  private uint initialPing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint InitialPing {
    get { if ((_hasBits0 & 8) != 0) { return initialPing_; } else { return InitialPingDefaultValue; } }
    set {
      _hasBits0 |= 8;
      initialPing_ = value;
    }
  }
  /// <summary>Gets whether the "initial_ping" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInitialPing {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "initial_ping" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInitialPing() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "initial_score" field.</summary>
  public const int InitialScoreFieldNumber = 6;
  private readonly static uint InitialScoreDefaultValue = 0;

  private uint initialScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint InitialScore {
    get { if ((_hasBits0 & 32) != 0) { return initialScore_; } else { return InitialScoreDefaultValue; } }
    set {
      _hasBits0 |= 32;
      initialScore_ = value;
    }
  }
  /// <summary>Gets whether the "initial_score" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInitialScore {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "initial_score" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInitialScore() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "negotiation_ms" field.</summary>
  public const int NegotiationMsFieldNumber = 5;
  private readonly static uint NegotiationMsDefaultValue = 0;

  private uint negotiationMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NegotiationMs {
    get { if ((_hasBits0 & 16) != 0) { return negotiationMs_; } else { return NegotiationMsDefaultValue; } }
    set {
      _hasBits0 |= 16;
      negotiationMs_ = value;
    }
  }
  /// <summary>Gets whether the "negotiation_ms" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNegotiationMs {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "negotiation_ms" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNegotiationMs() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "best_route_kind" field.</summary>
  public const int BestRouteKindFieldNumber = 16;
  private readonly static uint BestRouteKindDefaultValue = 0;

  private uint bestRouteKind_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BestRouteKind {
    get { if ((_hasBits0 & 2048) != 0) { return bestRouteKind_; } else { return BestRouteKindDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      bestRouteKind_ = value;
    }
  }
  /// <summary>Gets whether the "best_route_kind" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBestRouteKind {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "best_route_kind" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBestRouteKind() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "best_ping" field.</summary>
  public const int BestPingFieldNumber = 17;
  private readonly static uint BestPingDefaultValue = 0;

  private uint bestPing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BestPing {
    get { if ((_hasBits0 & 4096) != 0) { return bestPing_; } else { return BestPingDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      bestPing_ = value;
    }
  }
  /// <summary>Gets whether the "best_ping" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBestPing {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "best_ping" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBestPing() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "best_score" field.</summary>
  public const int BestScoreFieldNumber = 18;
  private readonly static uint BestScoreDefaultValue = 0;

  private uint bestScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BestScore {
    get { if ((_hasBits0 & 8192) != 0) { return bestScore_; } else { return BestScoreDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      bestScore_ = value;
    }
  }
  /// <summary>Gets whether the "best_score" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBestScore {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "best_score" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBestScore() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "best_time" field.</summary>
  public const int BestTimeFieldNumber = 19;
  private readonly static uint BestTimeDefaultValue = 0;

  private uint bestTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BestTime {
    get { if ((_hasBits0 & 16384) != 0) { return bestTime_; } else { return BestTimeDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      bestTime_ = value;
    }
  }
  /// <summary>Gets whether the "best_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBestTime {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "best_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBestTime() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "selected_seconds" field.</summary>
  public const int SelectedSecondsFieldNumber = 12;
  private readonly static uint SelectedSecondsDefaultValue = 0;

  private uint selectedSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SelectedSeconds {
    get { if ((_hasBits0 & 128) != 0) { return selectedSeconds_; } else { return SelectedSecondsDefaultValue; } }
    set {
      _hasBits0 |= 128;
      selectedSeconds_ = value;
    }
  }
  /// <summary>Gets whether the "selected_seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSelectedSeconds {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "selected_seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSelectedSeconds() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "user_settings" field.</summary>
  public const int UserSettingsFieldNumber = 13;
  private readonly static uint UserSettingsDefaultValue = 0;

  private uint userSettings_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UserSettings {
    get { if ((_hasBits0 & 256) != 0) { return userSettings_; } else { return UserSettingsDefaultValue; } }
    set {
      _hasBits0 |= 256;
      userSettings_ = value;
    }
  }
  /// <summary>Gets whether the "user_settings" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserSettings {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "user_settings" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserSettings() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "ice_enable_var" field.</summary>
  public const int IceEnableVarFieldNumber = 14;
  private readonly static uint IceEnableVarDefaultValue = 0;

  private uint iceEnableVar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint IceEnableVar {
    get { if ((_hasBits0 & 512) != 0) { return iceEnableVar_; } else { return IceEnableVarDefaultValue; } }
    set {
      _hasBits0 |= 512;
      iceEnableVar_ = value;
    }
  }
  /// <summary>Gets whether the "ice_enable_var" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIceEnableVar {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "ice_enable_var" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIceEnableVar() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "local_candidate_types_allowed" field.</summary>
  public const int LocalCandidateTypesAllowedFieldNumber = 15;
  private readonly static uint LocalCandidateTypesAllowedDefaultValue = 0;

  private uint localCandidateTypesAllowed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LocalCandidateTypesAllowed {
    get { if ((_hasBits0 & 1024) != 0) { return localCandidateTypesAllowed_; } else { return LocalCandidateTypesAllowedDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      localCandidateTypesAllowed_ = value;
    }
  }
  /// <summary>Gets whether the "local_candidate_types_allowed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLocalCandidateTypesAllowed {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "local_candidate_types_allowed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLocalCandidateTypesAllowed() {
    _hasBits0 &= ~1024;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSteamNetworkingICESessionSummary);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSteamNetworkingICESessionSummary other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FailureReasonCode != other.FailureReasonCode) return false;
    if (LocalCandidateTypes != other.LocalCandidateTypes) return false;
    if (RemoteCandidateTypes != other.RemoteCandidateTypes) return false;
    if (InitialRouteKind != other.InitialRouteKind) return false;
    if (InitialPing != other.InitialPing) return false;
    if (InitialScore != other.InitialScore) return false;
    if (NegotiationMs != other.NegotiationMs) return false;
    if (BestRouteKind != other.BestRouteKind) return false;
    if (BestPing != other.BestPing) return false;
    if (BestScore != other.BestScore) return false;
    if (BestTime != other.BestTime) return false;
    if (SelectedSeconds != other.SelectedSeconds) return false;
    if (UserSettings != other.UserSettings) return false;
    if (IceEnableVar != other.IceEnableVar) return false;
    if (LocalCandidateTypesAllowed != other.LocalCandidateTypesAllowed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFailureReasonCode) hash ^= FailureReasonCode.GetHashCode();
    if (HasLocalCandidateTypes) hash ^= LocalCandidateTypes.GetHashCode();
    if (HasRemoteCandidateTypes) hash ^= RemoteCandidateTypes.GetHashCode();
    if (HasInitialRouteKind) hash ^= InitialRouteKind.GetHashCode();
    if (HasInitialPing) hash ^= InitialPing.GetHashCode();
    if (HasInitialScore) hash ^= InitialScore.GetHashCode();
    if (HasNegotiationMs) hash ^= NegotiationMs.GetHashCode();
    if (HasBestRouteKind) hash ^= BestRouteKind.GetHashCode();
    if (HasBestPing) hash ^= BestPing.GetHashCode();
    if (HasBestScore) hash ^= BestScore.GetHashCode();
    if (HasBestTime) hash ^= BestTime.GetHashCode();
    if (HasSelectedSeconds) hash ^= SelectedSeconds.GetHashCode();
    if (HasUserSettings) hash ^= UserSettings.GetHashCode();
    if (HasIceEnableVar) hash ^= IceEnableVar.GetHashCode();
    if (HasLocalCandidateTypesAllowed) hash ^= LocalCandidateTypesAllowed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasLocalCandidateTypes) {
      output.WriteRawTag(8);
      output.WriteUInt32(LocalCandidateTypes);
    }
    if (HasRemoteCandidateTypes) {
      output.WriteRawTag(16);
      output.WriteUInt32(RemoteCandidateTypes);
    }
    if (HasInitialRouteKind) {
      output.WriteRawTag(24);
      output.WriteUInt32(InitialRouteKind);
    }
    if (HasInitialPing) {
      output.WriteRawTag(32);
      output.WriteUInt32(InitialPing);
    }
    if (HasNegotiationMs) {
      output.WriteRawTag(40);
      output.WriteUInt32(NegotiationMs);
    }
    if (HasInitialScore) {
      output.WriteRawTag(48);
      output.WriteUInt32(InitialScore);
    }
    if (HasFailureReasonCode) {
      output.WriteRawTag(56);
      output.WriteUInt32(FailureReasonCode);
    }
    if (HasSelectedSeconds) {
      output.WriteRawTag(96);
      output.WriteUInt32(SelectedSeconds);
    }
    if (HasUserSettings) {
      output.WriteRawTag(104);
      output.WriteUInt32(UserSettings);
    }
    if (HasIceEnableVar) {
      output.WriteRawTag(112);
      output.WriteUInt32(IceEnableVar);
    }
    if (HasLocalCandidateTypesAllowed) {
      output.WriteRawTag(120);
      output.WriteUInt32(LocalCandidateTypesAllowed);
    }
    if (HasBestRouteKind) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(BestRouteKind);
    }
    if (HasBestPing) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(BestPing);
    }
    if (HasBestScore) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(BestScore);
    }
    if (HasBestTime) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(BestTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasLocalCandidateTypes) {
      output.WriteRawTag(8);
      output.WriteUInt32(LocalCandidateTypes);
    }
    if (HasRemoteCandidateTypes) {
      output.WriteRawTag(16);
      output.WriteUInt32(RemoteCandidateTypes);
    }
    if (HasInitialRouteKind) {
      output.WriteRawTag(24);
      output.WriteUInt32(InitialRouteKind);
    }
    if (HasInitialPing) {
      output.WriteRawTag(32);
      output.WriteUInt32(InitialPing);
    }
    if (HasNegotiationMs) {
      output.WriteRawTag(40);
      output.WriteUInt32(NegotiationMs);
    }
    if (HasInitialScore) {
      output.WriteRawTag(48);
      output.WriteUInt32(InitialScore);
    }
    if (HasFailureReasonCode) {
      output.WriteRawTag(56);
      output.WriteUInt32(FailureReasonCode);
    }
    if (HasSelectedSeconds) {
      output.WriteRawTag(96);
      output.WriteUInt32(SelectedSeconds);
    }
    if (HasUserSettings) {
      output.WriteRawTag(104);
      output.WriteUInt32(UserSettings);
    }
    if (HasIceEnableVar) {
      output.WriteRawTag(112);
      output.WriteUInt32(IceEnableVar);
    }
    if (HasLocalCandidateTypesAllowed) {
      output.WriteRawTag(120);
      output.WriteUInt32(LocalCandidateTypesAllowed);
    }
    if (HasBestRouteKind) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(BestRouteKind);
    }
    if (HasBestPing) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(BestPing);
    }
    if (HasBestScore) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(BestScore);
    }
    if (HasBestTime) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(BestTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFailureReasonCode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FailureReasonCode);
    }
    if (HasLocalCandidateTypes) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LocalCandidateTypes);
    }
    if (HasRemoteCandidateTypes) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RemoteCandidateTypes);
    }
    if (HasInitialRouteKind) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialRouteKind);
    }
    if (HasInitialPing) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialPing);
    }
    if (HasInitialScore) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialScore);
    }
    if (HasNegotiationMs) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NegotiationMs);
    }
    if (HasBestRouteKind) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BestRouteKind);
    }
    if (HasBestPing) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BestPing);
    }
    if (HasBestScore) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BestScore);
    }
    if (HasBestTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BestTime);
    }
    if (HasSelectedSeconds) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SelectedSeconds);
    }
    if (HasUserSettings) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserSettings);
    }
    if (HasIceEnableVar) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IceEnableVar);
    }
    if (HasLocalCandidateTypesAllowed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LocalCandidateTypesAllowed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSteamNetworkingICESessionSummary other) {
    if (other == null) {
      return;
    }
    if (other.HasFailureReasonCode) {
      FailureReasonCode = other.FailureReasonCode;
    }
    if (other.HasLocalCandidateTypes) {
      LocalCandidateTypes = other.LocalCandidateTypes;
    }
    if (other.HasRemoteCandidateTypes) {
      RemoteCandidateTypes = other.RemoteCandidateTypes;
    }
    if (other.HasInitialRouteKind) {
      InitialRouteKind = other.InitialRouteKind;
    }
    if (other.HasInitialPing) {
      InitialPing = other.InitialPing;
    }
    if (other.HasInitialScore) {
      InitialScore = other.InitialScore;
    }
    if (other.HasNegotiationMs) {
      NegotiationMs = other.NegotiationMs;
    }
    if (other.HasBestRouteKind) {
      BestRouteKind = other.BestRouteKind;
    }
    if (other.HasBestPing) {
      BestPing = other.BestPing;
    }
    if (other.HasBestScore) {
      BestScore = other.BestScore;
    }
    if (other.HasBestTime) {
      BestTime = other.BestTime;
    }
    if (other.HasSelectedSeconds) {
      SelectedSeconds = other.SelectedSeconds;
    }
    if (other.HasUserSettings) {
      UserSettings = other.UserSettings;
    }
    if (other.HasIceEnableVar) {
      IceEnableVar = other.IceEnableVar;
    }
    if (other.HasLocalCandidateTypesAllowed) {
      LocalCandidateTypesAllowed = other.LocalCandidateTypesAllowed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          LocalCandidateTypes = input.ReadUInt32();
          break;
        }
        case 16: {
          RemoteCandidateTypes = input.ReadUInt32();
          break;
        }
        case 24: {
          InitialRouteKind = input.ReadUInt32();
          break;
        }
        case 32: {
          InitialPing = input.ReadUInt32();
          break;
        }
        case 40: {
          NegotiationMs = input.ReadUInt32();
          break;
        }
        case 48: {
          InitialScore = input.ReadUInt32();
          break;
        }
        case 56: {
          FailureReasonCode = input.ReadUInt32();
          break;
        }
        case 96: {
          SelectedSeconds = input.ReadUInt32();
          break;
        }
        case 104: {
          UserSettings = input.ReadUInt32();
          break;
        }
        case 112: {
          IceEnableVar = input.ReadUInt32();
          break;
        }
        case 120: {
          LocalCandidateTypesAllowed = input.ReadUInt32();
          break;
        }
        case 128: {
          BestRouteKind = input.ReadUInt32();
          break;
        }
        case 136: {
          BestPing = input.ReadUInt32();
          break;
        }
        case 144: {
          BestScore = input.ReadUInt32();
          break;
        }
        case 152: {
          BestTime = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          LocalCandidateTypes = input.ReadUInt32();
          break;
        }
        case 16: {
          RemoteCandidateTypes = input.ReadUInt32();
          break;
        }
        case 24: {
          InitialRouteKind = input.ReadUInt32();
          break;
        }
        case 32: {
          InitialPing = input.ReadUInt32();
          break;
        }
        case 40: {
          NegotiationMs = input.ReadUInt32();
          break;
        }
        case 48: {
          InitialScore = input.ReadUInt32();
          break;
        }
        case 56: {
          FailureReasonCode = input.ReadUInt32();
          break;
        }
        case 96: {
          SelectedSeconds = input.ReadUInt32();
          break;
        }
        case 104: {
          UserSettings = input.ReadUInt32();
          break;
        }
        case 112: {
          IceEnableVar = input.ReadUInt32();
          break;
        }
        case 120: {
          LocalCandidateTypesAllowed = input.ReadUInt32();
          break;
        }
        case 128: {
          BestRouteKind = input.ReadUInt32();
          break;
        }
        case 136: {
          BestPing = input.ReadUInt32();
          break;
        }
        case 144: {
          BestScore = input.ReadUInt32();
          break;
        }
        case 152: {
          BestTime = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

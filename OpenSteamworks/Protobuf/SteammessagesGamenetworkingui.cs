// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_gamenetworkingui.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_gamenetworkingui.proto</summary>
public static partial class SteammessagesGamenetworkinguiReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_gamenetworkingui.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesGamenetworkinguiReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiRzdGVhbW1lc3NhZ2VzX2dhbWVuZXR3b3JraW5ndWkucHJvdG8aJXN0ZWFt",
          "bmV0d29ya2luZ3NvY2tldHNfbWVzc2FnZXMucHJvdG8aIHN0ZWFtZGF0YWdy",
          "YW1fbWVzc2FnZXNfc2RyLnByb3RvIh8KHUNHYW1lTmV0d29ya2luZ1VJX0ds",
          "b2JhbFN0YXRlIs8HCiFDR2FtZU5ldHdvcmtpbmdVSV9Db25uZWN0aW9uU3Rh",
          "dGUSFgoOY29ubmVjdGlvbl9rZXkYASABKAkSDQoFYXBwaWQYAiABKA0SGwoT",
          "Y29ubmVjdGlvbl9pZF9sb2NhbBgDIAEoBxIWCg5pZGVudGl0eV9sb2NhbBgE",
          "IAEoCRIXCg9pZGVudGl0eV9yZW1vdGUYBSABKAkSGAoQY29ubmVjdGlvbl9z",
          "dGF0ZRgKIAEoDRISCgpzdGFydF90aW1lGAwgASgNEhIKCmNsb3NlX3RpbWUY",
          "DSABKA0SFAoMY2xvc2VfcmVhc29uGA4gASgNEhUKDWNsb3NlX21lc3NhZ2UY",
          "DyABKAkSGAoQc3RhdHVzX2xvY190b2tlbhgQIAEoCRIWCg50cmFuc3BvcnRf",
          "a2luZBgUIAEoDRIWCg5zZHJwb3BpZF9sb2NhbBgVIAEoCRIXCg9zZHJwb3Bp",
          "ZF9yZW1vdGUYFiABKAkSFgoOYWRkcmVzc19yZW1vdGUYFyABKAkSOAoLcDJw",
          "X3JvdXRpbmcYGCABKAsyIy5DTXNnU3RlYW1EYXRhZ3JhbVAyUFJvdXRpbmdT",
          "dW1tYXJ5EhUKDXBpbmdfaW50ZXJpb3IYGSABKA0SGQoRcGluZ19yZW1vdGVf",
          "ZnJvbnQYGiABKA0SIwobcGluZ19kZWZhdWx0X2ludGVybmV0X3JvdXRlGBsg",
          "ASgNEj4KEWUyZV9xdWFsaXR5X2xvY2FsGB4gASgLMiMuQ01zZ1N0ZWFtRGF0",
          "YWdyYW1Db25uZWN0aW9uUXVhbGl0eRI/ChJlMmVfcXVhbGl0eV9yZW1vdGUY",
          "HyABKAsyIy5DTXNnU3RlYW1EYXRhZ3JhbUNvbm5lY3Rpb25RdWFsaXR5Ei0K",
          "JWUyZV9xdWFsaXR5X3JlbW90ZV9pbnN0YW50YW5lb3VzX3RpbWUYICABKAQS",
          "KAogZTJlX3F1YWxpdHlfcmVtb3RlX2xpZmV0aW1lX3RpbWUYISABKAQSQAoT",
          "ZnJvbnRfcXVhbGl0eV9sb2NhbBgoIAEoCzIjLkNNc2dTdGVhbURhdGFncmFt",
          "Q29ubmVjdGlvblF1YWxpdHkSQQoUZnJvbnRfcXVhbGl0eV9yZW1vdGUYKSAB",
          "KAsyIy5DTXNnU3RlYW1EYXRhZ3JhbUNvbm5lY3Rpb25RdWFsaXR5Ei8KJ2Zy",
          "b250X3F1YWxpdHlfcmVtb3RlX2luc3RhbnRhbmVvdXNfdGltZRgqIAEoBBIq",
          "CiJmcm9udF9xdWFsaXR5X3JlbW90ZV9saWZldGltZV90aW1lGCsgASgEIlkK",
          "GUNHYW1lTmV0d29ya2luZ1VJX01lc3NhZ2USPAoQY29ubmVjdGlvbl9zdGF0",
          "ZRgBIAMoCzIiLkNHYW1lTmV0d29ya2luZ1VJX0Nvbm5lY3Rpb25TdGF0ZSLm",
          "AQojQ0dhbWVOZXR3b3JraW5nVUlfQ29ubmVjdGlvblN1bW1hcnkSFgoOdHJh",
          "bnNwb3J0X2tpbmQYASABKA0SGAoQY29ubmVjdGlvbl9zdGF0ZRgIIAEoDRIU",
          "CgxzZHJwb3BfbG9jYWwYAiABKAkSFQoNc2RycG9wX3JlbW90ZRgDIAEoCRIP",
          "CgdwaW5nX21zGAQgASgNEhMKC3BhY2tldF9sb3NzGAUgASgCEiMKG3Bpbmdf",
          "ZGVmYXVsdF9pbnRlcm5ldF9yb3V0ZRgGIAEoDRIVCg1pcF93YXNfc2hhcmVk",
          "GAcgASgIIsoBChxDR2FtZU5ldHdvcmtpbmdVSV9BcHBTdW1tYXJ5Eg0KBWFw",
          "cGlkGAEgASgNEiEKGWlwX3dhc19zaGFyZWRfd2l0aF9mcmllbmQYCiABKAgS",
          "JAocaXBfd2FzX3NoYXJlZF93aXRoX25vbmZyaWVuZBgLIAEoCBIaChJhY3Rp",
          "dmVfY29ubmVjdGlvbnMYFCABKA0SNgoIbWFpbl9jeG4YHiABKAsyJC5DR2Ft",
          "ZU5ldHdvcmtpbmdVSV9Db25uZWN0aW9uU3VtbWFyeUIFSAGAAQE="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteamnetworkingsocketsMessagesReflection.Descriptor, global::SteamdatagramMessagesSdrReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNetworkingUI_GlobalState), global::CGameNetworkingUI_GlobalState.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNetworkingUI_ConnectionState), global::CGameNetworkingUI_ConnectionState.Parser, new[]{ "ConnectionKey", "Appid", "ConnectionIdLocal", "IdentityLocal", "IdentityRemote", "ConnectionState", "StartTime", "CloseTime", "CloseReason", "CloseMessage", "StatusLocToken", "TransportKind", "SdrpopidLocal", "SdrpopidRemote", "AddressRemote", "P2PRouting", "PingInterior", "PingRemoteFront", "PingDefaultInternetRoute", "E2EQualityLocal", "E2EQualityRemote", "E2EQualityRemoteInstantaneousTime", "E2EQualityRemoteLifetimeTime", "FrontQualityLocal", "FrontQualityRemote", "FrontQualityRemoteInstantaneousTime", "FrontQualityRemoteLifetimeTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNetworkingUI_Message), global::CGameNetworkingUI_Message.Parser, new[]{ "ConnectionState" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNetworkingUI_ConnectionSummary), global::CGameNetworkingUI_ConnectionSummary.Parser, new[]{ "TransportKind", "ConnectionState", "SdrpopLocal", "SdrpopRemote", "PingMs", "PacketLoss", "PingDefaultInternetRoute", "IpWasShared" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNetworkingUI_AppSummary), global::CGameNetworkingUI_AppSummary.Parser, new[]{ "Appid", "IpWasSharedWithFriend", "IpWasSharedWithNonfriend", "ActiveConnections", "MainCxn" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CGameNetworkingUI_GlobalState : pb::IMessage<CGameNetworkingUI_GlobalState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNetworkingUI_GlobalState> _parser = new pb::MessageParser<CGameNetworkingUI_GlobalState>(() => new CGameNetworkingUI_GlobalState());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNetworkingUI_GlobalState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenetworkinguiReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_GlobalState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_GlobalState(CGameNetworkingUI_GlobalState other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_GlobalState Clone() {
    return new CGameNetworkingUI_GlobalState(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNetworkingUI_GlobalState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNetworkingUI_GlobalState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNetworkingUI_GlobalState other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CGameNetworkingUI_ConnectionState : pb::IMessage<CGameNetworkingUI_ConnectionState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNetworkingUI_ConnectionState> _parser = new pb::MessageParser<CGameNetworkingUI_ConnectionState>(() => new CGameNetworkingUI_ConnectionState());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNetworkingUI_ConnectionState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenetworkinguiReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_ConnectionState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_ConnectionState(CGameNetworkingUI_ConnectionState other) : this() {
    _hasBits0 = other._hasBits0;
    connectionKey_ = other.connectionKey_;
    appid_ = other.appid_;
    connectionIdLocal_ = other.connectionIdLocal_;
    identityLocal_ = other.identityLocal_;
    identityRemote_ = other.identityRemote_;
    connectionState_ = other.connectionState_;
    startTime_ = other.startTime_;
    closeTime_ = other.closeTime_;
    closeReason_ = other.closeReason_;
    closeMessage_ = other.closeMessage_;
    statusLocToken_ = other.statusLocToken_;
    transportKind_ = other.transportKind_;
    sdrpopidLocal_ = other.sdrpopidLocal_;
    sdrpopidRemote_ = other.sdrpopidRemote_;
    addressRemote_ = other.addressRemote_;
    p2PRouting_ = other.p2PRouting_ != null ? other.p2PRouting_.Clone() : null;
    pingInterior_ = other.pingInterior_;
    pingRemoteFront_ = other.pingRemoteFront_;
    pingDefaultInternetRoute_ = other.pingDefaultInternetRoute_;
    e2EQualityLocal_ = other.e2EQualityLocal_ != null ? other.e2EQualityLocal_.Clone() : null;
    e2EQualityRemote_ = other.e2EQualityRemote_ != null ? other.e2EQualityRemote_.Clone() : null;
    e2EQualityRemoteInstantaneousTime_ = other.e2EQualityRemoteInstantaneousTime_;
    e2EQualityRemoteLifetimeTime_ = other.e2EQualityRemoteLifetimeTime_;
    frontQualityLocal_ = other.frontQualityLocal_ != null ? other.frontQualityLocal_.Clone() : null;
    frontQualityRemote_ = other.frontQualityRemote_ != null ? other.frontQualityRemote_.Clone() : null;
    frontQualityRemoteInstantaneousTime_ = other.frontQualityRemoteInstantaneousTime_;
    frontQualityRemoteLifetimeTime_ = other.frontQualityRemoteLifetimeTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_ConnectionState Clone() {
    return new CGameNetworkingUI_ConnectionState(this);
  }

  /// <summary>Field number for the "connection_key" field.</summary>
  public const int ConnectionKeyFieldNumber = 1;
  private readonly static string ConnectionKeyDefaultValue = "";

  private string connectionKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ConnectionKey {
    get { return connectionKey_ ?? ConnectionKeyDefaultValue; }
    set {
      connectionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "connection_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionKey {
    get { return connectionKey_ != null; }
  }
  /// <summary>Clears the value of the "connection_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionKey() {
    connectionKey_ = null;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "connection_id_local" field.</summary>
  public const int ConnectionIdLocalFieldNumber = 3;
  private readonly static uint ConnectionIdLocalDefaultValue = 0;

  private uint connectionIdLocal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ConnectionIdLocal {
    get { if ((_hasBits0 & 2) != 0) { return connectionIdLocal_; } else { return ConnectionIdLocalDefaultValue; } }
    set {
      _hasBits0 |= 2;
      connectionIdLocal_ = value;
    }
  }
  /// <summary>Gets whether the "connection_id_local" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionIdLocal {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "connection_id_local" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionIdLocal() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "identity_local" field.</summary>
  public const int IdentityLocalFieldNumber = 4;
  private readonly static string IdentityLocalDefaultValue = "";

  private string identityLocal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IdentityLocal {
    get { return identityLocal_ ?? IdentityLocalDefaultValue; }
    set {
      identityLocal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "identity_local" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdentityLocal {
    get { return identityLocal_ != null; }
  }
  /// <summary>Clears the value of the "identity_local" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdentityLocal() {
    identityLocal_ = null;
  }

  /// <summary>Field number for the "identity_remote" field.</summary>
  public const int IdentityRemoteFieldNumber = 5;
  private readonly static string IdentityRemoteDefaultValue = "";

  private string identityRemote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IdentityRemote {
    get { return identityRemote_ ?? IdentityRemoteDefaultValue; }
    set {
      identityRemote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "identity_remote" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdentityRemote {
    get { return identityRemote_ != null; }
  }
  /// <summary>Clears the value of the "identity_remote" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdentityRemote() {
    identityRemote_ = null;
  }

  /// <summary>Field number for the "connection_state" field.</summary>
  public const int ConnectionStateFieldNumber = 10;
  private readonly static uint ConnectionStateDefaultValue = 0;

  private uint connectionState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ConnectionState {
    get { if ((_hasBits0 & 4) != 0) { return connectionState_; } else { return ConnectionStateDefaultValue; } }
    set {
      _hasBits0 |= 4;
      connectionState_ = value;
    }
  }
  /// <summary>Gets whether the "connection_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionState {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "connection_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionState() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "start_time" field.</summary>
  public const int StartTimeFieldNumber = 12;
  private readonly static uint StartTimeDefaultValue = 0;

  private uint startTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StartTime {
    get { if ((_hasBits0 & 8) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      startTime_ = value;
    }
  }
  /// <summary>Gets whether the "start_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStartTime {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "start_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStartTime() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "close_time" field.</summary>
  public const int CloseTimeFieldNumber = 13;
  private readonly static uint CloseTimeDefaultValue = 0;

  private uint closeTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CloseTime {
    get { if ((_hasBits0 & 16) != 0) { return closeTime_; } else { return CloseTimeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      closeTime_ = value;
    }
  }
  /// <summary>Gets whether the "close_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCloseTime {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "close_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCloseTime() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "close_reason" field.</summary>
  public const int CloseReasonFieldNumber = 14;
  private readonly static uint CloseReasonDefaultValue = 0;

  private uint closeReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CloseReason {
    get { if ((_hasBits0 & 32) != 0) { return closeReason_; } else { return CloseReasonDefaultValue; } }
    set {
      _hasBits0 |= 32;
      closeReason_ = value;
    }
  }
  /// <summary>Gets whether the "close_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCloseReason {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "close_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCloseReason() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "close_message" field.</summary>
  public const int CloseMessageFieldNumber = 15;
  private readonly static string CloseMessageDefaultValue = "";

  private string closeMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CloseMessage {
    get { return closeMessage_ ?? CloseMessageDefaultValue; }
    set {
      closeMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "close_message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCloseMessage {
    get { return closeMessage_ != null; }
  }
  /// <summary>Clears the value of the "close_message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCloseMessage() {
    closeMessage_ = null;
  }

  /// <summary>Field number for the "status_loc_token" field.</summary>
  public const int StatusLocTokenFieldNumber = 16;
  private readonly static string StatusLocTokenDefaultValue = "";

  private string statusLocToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string StatusLocToken {
    get { return statusLocToken_ ?? StatusLocTokenDefaultValue; }
    set {
      statusLocToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "status_loc_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStatusLocToken {
    get { return statusLocToken_ != null; }
  }
  /// <summary>Clears the value of the "status_loc_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStatusLocToken() {
    statusLocToken_ = null;
  }

  /// <summary>Field number for the "transport_kind" field.</summary>
  public const int TransportKindFieldNumber = 20;
  private readonly static uint TransportKindDefaultValue = 0;

  private uint transportKind_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TransportKind {
    get { if ((_hasBits0 & 64) != 0) { return transportKind_; } else { return TransportKindDefaultValue; } }
    set {
      _hasBits0 |= 64;
      transportKind_ = value;
    }
  }
  /// <summary>Gets whether the "transport_kind" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTransportKind {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "transport_kind" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTransportKind() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "sdrpopid_local" field.</summary>
  public const int SdrpopidLocalFieldNumber = 21;
  private readonly static string SdrpopidLocalDefaultValue = "";

  private string sdrpopidLocal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SdrpopidLocal {
    get { return sdrpopidLocal_ ?? SdrpopidLocalDefaultValue; }
    set {
      sdrpopidLocal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sdrpopid_local" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSdrpopidLocal {
    get { return sdrpopidLocal_ != null; }
  }
  /// <summary>Clears the value of the "sdrpopid_local" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSdrpopidLocal() {
    sdrpopidLocal_ = null;
  }

  /// <summary>Field number for the "sdrpopid_remote" field.</summary>
  public const int SdrpopidRemoteFieldNumber = 22;
  private readonly static string SdrpopidRemoteDefaultValue = "";

  private string sdrpopidRemote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SdrpopidRemote {
    get { return sdrpopidRemote_ ?? SdrpopidRemoteDefaultValue; }
    set {
      sdrpopidRemote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sdrpopid_remote" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSdrpopidRemote {
    get { return sdrpopidRemote_ != null; }
  }
  /// <summary>Clears the value of the "sdrpopid_remote" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSdrpopidRemote() {
    sdrpopidRemote_ = null;
  }

  /// <summary>Field number for the "address_remote" field.</summary>
  public const int AddressRemoteFieldNumber = 23;
  private readonly static string AddressRemoteDefaultValue = "";

  private string addressRemote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AddressRemote {
    get { return addressRemote_ ?? AddressRemoteDefaultValue; }
    set {
      addressRemote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "address_remote" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAddressRemote {
    get { return addressRemote_ != null; }
  }
  /// <summary>Clears the value of the "address_remote" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAddressRemote() {
    addressRemote_ = null;
  }

  /// <summary>Field number for the "p2p_routing" field.</summary>
  public const int P2PRoutingFieldNumber = 24;
  private global::CMsgSteamDatagramP2PRoutingSummary p2PRouting_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramP2PRoutingSummary P2PRouting {
    get { return p2PRouting_; }
    set {
      p2PRouting_ = value;
    }
  }

  /// <summary>Field number for the "ping_interior" field.</summary>
  public const int PingInteriorFieldNumber = 25;
  private readonly static uint PingInteriorDefaultValue = 0;

  private uint pingInterior_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingInterior {
    get { if ((_hasBits0 & 128) != 0) { return pingInterior_; } else { return PingInteriorDefaultValue; } }
    set {
      _hasBits0 |= 128;
      pingInterior_ = value;
    }
  }
  /// <summary>Gets whether the "ping_interior" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingInterior {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "ping_interior" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingInterior() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "ping_remote_front" field.</summary>
  public const int PingRemoteFrontFieldNumber = 26;
  private readonly static uint PingRemoteFrontDefaultValue = 0;

  private uint pingRemoteFront_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingRemoteFront {
    get { if ((_hasBits0 & 256) != 0) { return pingRemoteFront_; } else { return PingRemoteFrontDefaultValue; } }
    set {
      _hasBits0 |= 256;
      pingRemoteFront_ = value;
    }
  }
  /// <summary>Gets whether the "ping_remote_front" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingRemoteFront {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "ping_remote_front" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingRemoteFront() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "ping_default_internet_route" field.</summary>
  public const int PingDefaultInternetRouteFieldNumber = 27;
  private readonly static uint PingDefaultInternetRouteDefaultValue = 0;

  private uint pingDefaultInternetRoute_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingDefaultInternetRoute {
    get { if ((_hasBits0 & 512) != 0) { return pingDefaultInternetRoute_; } else { return PingDefaultInternetRouteDefaultValue; } }
    set {
      _hasBits0 |= 512;
      pingDefaultInternetRoute_ = value;
    }
  }
  /// <summary>Gets whether the "ping_default_internet_route" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingDefaultInternetRoute {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "ping_default_internet_route" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingDefaultInternetRoute() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "e2e_quality_local" field.</summary>
  public const int E2EQualityLocalFieldNumber = 30;
  private global::CMsgSteamDatagramConnectionQuality e2EQualityLocal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramConnectionQuality E2EQualityLocal {
    get { return e2EQualityLocal_; }
    set {
      e2EQualityLocal_ = value;
    }
  }

  /// <summary>Field number for the "e2e_quality_remote" field.</summary>
  public const int E2EQualityRemoteFieldNumber = 31;
  private global::CMsgSteamDatagramConnectionQuality e2EQualityRemote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramConnectionQuality E2EQualityRemote {
    get { return e2EQualityRemote_; }
    set {
      e2EQualityRemote_ = value;
    }
  }

  /// <summary>Field number for the "e2e_quality_remote_instantaneous_time" field.</summary>
  public const int E2EQualityRemoteInstantaneousTimeFieldNumber = 32;
  private readonly static ulong E2EQualityRemoteInstantaneousTimeDefaultValue = 0UL;

  private ulong e2EQualityRemoteInstantaneousTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong E2EQualityRemoteInstantaneousTime {
    get { if ((_hasBits0 & 1024) != 0) { return e2EQualityRemoteInstantaneousTime_; } else { return E2EQualityRemoteInstantaneousTimeDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      e2EQualityRemoteInstantaneousTime_ = value;
    }
  }
  /// <summary>Gets whether the "e2e_quality_remote_instantaneous_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasE2EQualityRemoteInstantaneousTime {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "e2e_quality_remote_instantaneous_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearE2EQualityRemoteInstantaneousTime() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "e2e_quality_remote_lifetime_time" field.</summary>
  public const int E2EQualityRemoteLifetimeTimeFieldNumber = 33;
  private readonly static ulong E2EQualityRemoteLifetimeTimeDefaultValue = 0UL;

  private ulong e2EQualityRemoteLifetimeTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong E2EQualityRemoteLifetimeTime {
    get { if ((_hasBits0 & 2048) != 0) { return e2EQualityRemoteLifetimeTime_; } else { return E2EQualityRemoteLifetimeTimeDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      e2EQualityRemoteLifetimeTime_ = value;
    }
  }
  /// <summary>Gets whether the "e2e_quality_remote_lifetime_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasE2EQualityRemoteLifetimeTime {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "e2e_quality_remote_lifetime_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearE2EQualityRemoteLifetimeTime() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "front_quality_local" field.</summary>
  public const int FrontQualityLocalFieldNumber = 40;
  private global::CMsgSteamDatagramConnectionQuality frontQualityLocal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramConnectionQuality FrontQualityLocal {
    get { return frontQualityLocal_; }
    set {
      frontQualityLocal_ = value;
    }
  }

  /// <summary>Field number for the "front_quality_remote" field.</summary>
  public const int FrontQualityRemoteFieldNumber = 41;
  private global::CMsgSteamDatagramConnectionQuality frontQualityRemote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSteamDatagramConnectionQuality FrontQualityRemote {
    get { return frontQualityRemote_; }
    set {
      frontQualityRemote_ = value;
    }
  }

  /// <summary>Field number for the "front_quality_remote_instantaneous_time" field.</summary>
  public const int FrontQualityRemoteInstantaneousTimeFieldNumber = 42;
  private readonly static ulong FrontQualityRemoteInstantaneousTimeDefaultValue = 0UL;

  private ulong frontQualityRemoteInstantaneousTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong FrontQualityRemoteInstantaneousTime {
    get { if ((_hasBits0 & 4096) != 0) { return frontQualityRemoteInstantaneousTime_; } else { return FrontQualityRemoteInstantaneousTimeDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      frontQualityRemoteInstantaneousTime_ = value;
    }
  }
  /// <summary>Gets whether the "front_quality_remote_instantaneous_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFrontQualityRemoteInstantaneousTime {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "front_quality_remote_instantaneous_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFrontQualityRemoteInstantaneousTime() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "front_quality_remote_lifetime_time" field.</summary>
  public const int FrontQualityRemoteLifetimeTimeFieldNumber = 43;
  private readonly static ulong FrontQualityRemoteLifetimeTimeDefaultValue = 0UL;

  private ulong frontQualityRemoteLifetimeTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong FrontQualityRemoteLifetimeTime {
    get { if ((_hasBits0 & 8192) != 0) { return frontQualityRemoteLifetimeTime_; } else { return FrontQualityRemoteLifetimeTimeDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      frontQualityRemoteLifetimeTime_ = value;
    }
  }
  /// <summary>Gets whether the "front_quality_remote_lifetime_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFrontQualityRemoteLifetimeTime {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "front_quality_remote_lifetime_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFrontQualityRemoteLifetimeTime() {
    _hasBits0 &= ~8192;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNetworkingUI_ConnectionState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNetworkingUI_ConnectionState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ConnectionKey != other.ConnectionKey) return false;
    if (Appid != other.Appid) return false;
    if (ConnectionIdLocal != other.ConnectionIdLocal) return false;
    if (IdentityLocal != other.IdentityLocal) return false;
    if (IdentityRemote != other.IdentityRemote) return false;
    if (ConnectionState != other.ConnectionState) return false;
    if (StartTime != other.StartTime) return false;
    if (CloseTime != other.CloseTime) return false;
    if (CloseReason != other.CloseReason) return false;
    if (CloseMessage != other.CloseMessage) return false;
    if (StatusLocToken != other.StatusLocToken) return false;
    if (TransportKind != other.TransportKind) return false;
    if (SdrpopidLocal != other.SdrpopidLocal) return false;
    if (SdrpopidRemote != other.SdrpopidRemote) return false;
    if (AddressRemote != other.AddressRemote) return false;
    if (!object.Equals(P2PRouting, other.P2PRouting)) return false;
    if (PingInterior != other.PingInterior) return false;
    if (PingRemoteFront != other.PingRemoteFront) return false;
    if (PingDefaultInternetRoute != other.PingDefaultInternetRoute) return false;
    if (!object.Equals(E2EQualityLocal, other.E2EQualityLocal)) return false;
    if (!object.Equals(E2EQualityRemote, other.E2EQualityRemote)) return false;
    if (E2EQualityRemoteInstantaneousTime != other.E2EQualityRemoteInstantaneousTime) return false;
    if (E2EQualityRemoteLifetimeTime != other.E2EQualityRemoteLifetimeTime) return false;
    if (!object.Equals(FrontQualityLocal, other.FrontQualityLocal)) return false;
    if (!object.Equals(FrontQualityRemote, other.FrontQualityRemote)) return false;
    if (FrontQualityRemoteInstantaneousTime != other.FrontQualityRemoteInstantaneousTime) return false;
    if (FrontQualityRemoteLifetimeTime != other.FrontQualityRemoteLifetimeTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasConnectionKey) hash ^= ConnectionKey.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasConnectionIdLocal) hash ^= ConnectionIdLocal.GetHashCode();
    if (HasIdentityLocal) hash ^= IdentityLocal.GetHashCode();
    if (HasIdentityRemote) hash ^= IdentityRemote.GetHashCode();
    if (HasConnectionState) hash ^= ConnectionState.GetHashCode();
    if (HasStartTime) hash ^= StartTime.GetHashCode();
    if (HasCloseTime) hash ^= CloseTime.GetHashCode();
    if (HasCloseReason) hash ^= CloseReason.GetHashCode();
    if (HasCloseMessage) hash ^= CloseMessage.GetHashCode();
    if (HasStatusLocToken) hash ^= StatusLocToken.GetHashCode();
    if (HasTransportKind) hash ^= TransportKind.GetHashCode();
    if (HasSdrpopidLocal) hash ^= SdrpopidLocal.GetHashCode();
    if (HasSdrpopidRemote) hash ^= SdrpopidRemote.GetHashCode();
    if (HasAddressRemote) hash ^= AddressRemote.GetHashCode();
    if (p2PRouting_ != null) hash ^= P2PRouting.GetHashCode();
    if (HasPingInterior) hash ^= PingInterior.GetHashCode();
    if (HasPingRemoteFront) hash ^= PingRemoteFront.GetHashCode();
    if (HasPingDefaultInternetRoute) hash ^= PingDefaultInternetRoute.GetHashCode();
    if (e2EQualityLocal_ != null) hash ^= E2EQualityLocal.GetHashCode();
    if (e2EQualityRemote_ != null) hash ^= E2EQualityRemote.GetHashCode();
    if (HasE2EQualityRemoteInstantaneousTime) hash ^= E2EQualityRemoteInstantaneousTime.GetHashCode();
    if (HasE2EQualityRemoteLifetimeTime) hash ^= E2EQualityRemoteLifetimeTime.GetHashCode();
    if (frontQualityLocal_ != null) hash ^= FrontQualityLocal.GetHashCode();
    if (frontQualityRemote_ != null) hash ^= FrontQualityRemote.GetHashCode();
    if (HasFrontQualityRemoteInstantaneousTime) hash ^= FrontQualityRemoteInstantaneousTime.GetHashCode();
    if (HasFrontQualityRemoteLifetimeTime) hash ^= FrontQualityRemoteLifetimeTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasConnectionKey) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionKey);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasConnectionIdLocal) {
      output.WriteRawTag(29);
      output.WriteFixed32(ConnectionIdLocal);
    }
    if (HasIdentityLocal) {
      output.WriteRawTag(34);
      output.WriteString(IdentityLocal);
    }
    if (HasIdentityRemote) {
      output.WriteRawTag(42);
      output.WriteString(IdentityRemote);
    }
    if (HasConnectionState) {
      output.WriteRawTag(80);
      output.WriteUInt32(ConnectionState);
    }
    if (HasStartTime) {
      output.WriteRawTag(96);
      output.WriteUInt32(StartTime);
    }
    if (HasCloseTime) {
      output.WriteRawTag(104);
      output.WriteUInt32(CloseTime);
    }
    if (HasCloseReason) {
      output.WriteRawTag(112);
      output.WriteUInt32(CloseReason);
    }
    if (HasCloseMessage) {
      output.WriteRawTag(122);
      output.WriteString(CloseMessage);
    }
    if (HasStatusLocToken) {
      output.WriteRawTag(130, 1);
      output.WriteString(StatusLocToken);
    }
    if (HasTransportKind) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(TransportKind);
    }
    if (HasSdrpopidLocal) {
      output.WriteRawTag(170, 1);
      output.WriteString(SdrpopidLocal);
    }
    if (HasSdrpopidRemote) {
      output.WriteRawTag(178, 1);
      output.WriteString(SdrpopidRemote);
    }
    if (HasAddressRemote) {
      output.WriteRawTag(186, 1);
      output.WriteString(AddressRemote);
    }
    if (p2PRouting_ != null) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(P2PRouting);
    }
    if (HasPingInterior) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(PingInterior);
    }
    if (HasPingRemoteFront) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(PingRemoteFront);
    }
    if (HasPingDefaultInternetRoute) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(PingDefaultInternetRoute);
    }
    if (e2EQualityLocal_ != null) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(E2EQualityLocal);
    }
    if (e2EQualityRemote_ != null) {
      output.WriteRawTag(250, 1);
      output.WriteMessage(E2EQualityRemote);
    }
    if (HasE2EQualityRemoteInstantaneousTime) {
      output.WriteRawTag(128, 2);
      output.WriteUInt64(E2EQualityRemoteInstantaneousTime);
    }
    if (HasE2EQualityRemoteLifetimeTime) {
      output.WriteRawTag(136, 2);
      output.WriteUInt64(E2EQualityRemoteLifetimeTime);
    }
    if (frontQualityLocal_ != null) {
      output.WriteRawTag(194, 2);
      output.WriteMessage(FrontQualityLocal);
    }
    if (frontQualityRemote_ != null) {
      output.WriteRawTag(202, 2);
      output.WriteMessage(FrontQualityRemote);
    }
    if (HasFrontQualityRemoteInstantaneousTime) {
      output.WriteRawTag(208, 2);
      output.WriteUInt64(FrontQualityRemoteInstantaneousTime);
    }
    if (HasFrontQualityRemoteLifetimeTime) {
      output.WriteRawTag(216, 2);
      output.WriteUInt64(FrontQualityRemoteLifetimeTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasConnectionKey) {
      output.WriteRawTag(10);
      output.WriteString(ConnectionKey);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasConnectionIdLocal) {
      output.WriteRawTag(29);
      output.WriteFixed32(ConnectionIdLocal);
    }
    if (HasIdentityLocal) {
      output.WriteRawTag(34);
      output.WriteString(IdentityLocal);
    }
    if (HasIdentityRemote) {
      output.WriteRawTag(42);
      output.WriteString(IdentityRemote);
    }
    if (HasConnectionState) {
      output.WriteRawTag(80);
      output.WriteUInt32(ConnectionState);
    }
    if (HasStartTime) {
      output.WriteRawTag(96);
      output.WriteUInt32(StartTime);
    }
    if (HasCloseTime) {
      output.WriteRawTag(104);
      output.WriteUInt32(CloseTime);
    }
    if (HasCloseReason) {
      output.WriteRawTag(112);
      output.WriteUInt32(CloseReason);
    }
    if (HasCloseMessage) {
      output.WriteRawTag(122);
      output.WriteString(CloseMessage);
    }
    if (HasStatusLocToken) {
      output.WriteRawTag(130, 1);
      output.WriteString(StatusLocToken);
    }
    if (HasTransportKind) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(TransportKind);
    }
    if (HasSdrpopidLocal) {
      output.WriteRawTag(170, 1);
      output.WriteString(SdrpopidLocal);
    }
    if (HasSdrpopidRemote) {
      output.WriteRawTag(178, 1);
      output.WriteString(SdrpopidRemote);
    }
    if (HasAddressRemote) {
      output.WriteRawTag(186, 1);
      output.WriteString(AddressRemote);
    }
    if (p2PRouting_ != null) {
      output.WriteRawTag(194, 1);
      output.WriteMessage(P2PRouting);
    }
    if (HasPingInterior) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(PingInterior);
    }
    if (HasPingRemoteFront) {
      output.WriteRawTag(208, 1);
      output.WriteUInt32(PingRemoteFront);
    }
    if (HasPingDefaultInternetRoute) {
      output.WriteRawTag(216, 1);
      output.WriteUInt32(PingDefaultInternetRoute);
    }
    if (e2EQualityLocal_ != null) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(E2EQualityLocal);
    }
    if (e2EQualityRemote_ != null) {
      output.WriteRawTag(250, 1);
      output.WriteMessage(E2EQualityRemote);
    }
    if (HasE2EQualityRemoteInstantaneousTime) {
      output.WriteRawTag(128, 2);
      output.WriteUInt64(E2EQualityRemoteInstantaneousTime);
    }
    if (HasE2EQualityRemoteLifetimeTime) {
      output.WriteRawTag(136, 2);
      output.WriteUInt64(E2EQualityRemoteLifetimeTime);
    }
    if (frontQualityLocal_ != null) {
      output.WriteRawTag(194, 2);
      output.WriteMessage(FrontQualityLocal);
    }
    if (frontQualityRemote_ != null) {
      output.WriteRawTag(202, 2);
      output.WriteMessage(FrontQualityRemote);
    }
    if (HasFrontQualityRemoteInstantaneousTime) {
      output.WriteRawTag(208, 2);
      output.WriteUInt64(FrontQualityRemoteInstantaneousTime);
    }
    if (HasFrontQualityRemoteLifetimeTime) {
      output.WriteRawTag(216, 2);
      output.WriteUInt64(FrontQualityRemoteLifetimeTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasConnectionKey) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionKey);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasConnectionIdLocal) {
      size += 1 + 4;
    }
    if (HasIdentityLocal) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IdentityLocal);
    }
    if (HasIdentityRemote) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IdentityRemote);
    }
    if (HasConnectionState) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectionState);
    }
    if (HasStartTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartTime);
    }
    if (HasCloseTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CloseTime);
    }
    if (HasCloseReason) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CloseReason);
    }
    if (HasCloseMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CloseMessage);
    }
    if (HasStatusLocToken) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusLocToken);
    }
    if (HasTransportKind) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TransportKind);
    }
    if (HasSdrpopidLocal) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SdrpopidLocal);
    }
    if (HasSdrpopidRemote) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SdrpopidRemote);
    }
    if (HasAddressRemote) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AddressRemote);
    }
    if (p2PRouting_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(P2PRouting);
    }
    if (HasPingInterior) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingInterior);
    }
    if (HasPingRemoteFront) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingRemoteFront);
    }
    if (HasPingDefaultInternetRoute) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PingDefaultInternetRoute);
    }
    if (e2EQualityLocal_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(E2EQualityLocal);
    }
    if (e2EQualityRemote_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(E2EQualityRemote);
    }
    if (HasE2EQualityRemoteInstantaneousTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(E2EQualityRemoteInstantaneousTime);
    }
    if (HasE2EQualityRemoteLifetimeTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(E2EQualityRemoteLifetimeTime);
    }
    if (frontQualityLocal_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(FrontQualityLocal);
    }
    if (frontQualityRemote_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(FrontQualityRemote);
    }
    if (HasFrontQualityRemoteInstantaneousTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(FrontQualityRemoteInstantaneousTime);
    }
    if (HasFrontQualityRemoteLifetimeTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(FrontQualityRemoteLifetimeTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNetworkingUI_ConnectionState other) {
    if (other == null) {
      return;
    }
    if (other.HasConnectionKey) {
      ConnectionKey = other.ConnectionKey;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasConnectionIdLocal) {
      ConnectionIdLocal = other.ConnectionIdLocal;
    }
    if (other.HasIdentityLocal) {
      IdentityLocal = other.IdentityLocal;
    }
    if (other.HasIdentityRemote) {
      IdentityRemote = other.IdentityRemote;
    }
    if (other.HasConnectionState) {
      ConnectionState = other.ConnectionState;
    }
    if (other.HasStartTime) {
      StartTime = other.StartTime;
    }
    if (other.HasCloseTime) {
      CloseTime = other.CloseTime;
    }
    if (other.HasCloseReason) {
      CloseReason = other.CloseReason;
    }
    if (other.HasCloseMessage) {
      CloseMessage = other.CloseMessage;
    }
    if (other.HasStatusLocToken) {
      StatusLocToken = other.StatusLocToken;
    }
    if (other.HasTransportKind) {
      TransportKind = other.TransportKind;
    }
    if (other.HasSdrpopidLocal) {
      SdrpopidLocal = other.SdrpopidLocal;
    }
    if (other.HasSdrpopidRemote) {
      SdrpopidRemote = other.SdrpopidRemote;
    }
    if (other.HasAddressRemote) {
      AddressRemote = other.AddressRemote;
    }
    if (other.p2PRouting_ != null) {
      if (p2PRouting_ == null) {
        P2PRouting = new global::CMsgSteamDatagramP2PRoutingSummary();
      }
      P2PRouting.MergeFrom(other.P2PRouting);
    }
    if (other.HasPingInterior) {
      PingInterior = other.PingInterior;
    }
    if (other.HasPingRemoteFront) {
      PingRemoteFront = other.PingRemoteFront;
    }
    if (other.HasPingDefaultInternetRoute) {
      PingDefaultInternetRoute = other.PingDefaultInternetRoute;
    }
    if (other.e2EQualityLocal_ != null) {
      if (e2EQualityLocal_ == null) {
        E2EQualityLocal = new global::CMsgSteamDatagramConnectionQuality();
      }
      E2EQualityLocal.MergeFrom(other.E2EQualityLocal);
    }
    if (other.e2EQualityRemote_ != null) {
      if (e2EQualityRemote_ == null) {
        E2EQualityRemote = new global::CMsgSteamDatagramConnectionQuality();
      }
      E2EQualityRemote.MergeFrom(other.E2EQualityRemote);
    }
    if (other.HasE2EQualityRemoteInstantaneousTime) {
      E2EQualityRemoteInstantaneousTime = other.E2EQualityRemoteInstantaneousTime;
    }
    if (other.HasE2EQualityRemoteLifetimeTime) {
      E2EQualityRemoteLifetimeTime = other.E2EQualityRemoteLifetimeTime;
    }
    if (other.frontQualityLocal_ != null) {
      if (frontQualityLocal_ == null) {
        FrontQualityLocal = new global::CMsgSteamDatagramConnectionQuality();
      }
      FrontQualityLocal.MergeFrom(other.FrontQualityLocal);
    }
    if (other.frontQualityRemote_ != null) {
      if (frontQualityRemote_ == null) {
        FrontQualityRemote = new global::CMsgSteamDatagramConnectionQuality();
      }
      FrontQualityRemote.MergeFrom(other.FrontQualityRemote);
    }
    if (other.HasFrontQualityRemoteInstantaneousTime) {
      FrontQualityRemoteInstantaneousTime = other.FrontQualityRemoteInstantaneousTime;
    }
    if (other.HasFrontQualityRemoteLifetimeTime) {
      FrontQualityRemoteLifetimeTime = other.FrontQualityRemoteLifetimeTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ConnectionKey = input.ReadString();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 29: {
          ConnectionIdLocal = input.ReadFixed32();
          break;
        }
        case 34: {
          IdentityLocal = input.ReadString();
          break;
        }
        case 42: {
          IdentityRemote = input.ReadString();
          break;
        }
        case 80: {
          ConnectionState = input.ReadUInt32();
          break;
        }
        case 96: {
          StartTime = input.ReadUInt32();
          break;
        }
        case 104: {
          CloseTime = input.ReadUInt32();
          break;
        }
        case 112: {
          CloseReason = input.ReadUInt32();
          break;
        }
        case 122: {
          CloseMessage = input.ReadString();
          break;
        }
        case 130: {
          StatusLocToken = input.ReadString();
          break;
        }
        case 160: {
          TransportKind = input.ReadUInt32();
          break;
        }
        case 170: {
          SdrpopidLocal = input.ReadString();
          break;
        }
        case 178: {
          SdrpopidRemote = input.ReadString();
          break;
        }
        case 186: {
          AddressRemote = input.ReadString();
          break;
        }
        case 194: {
          if (p2PRouting_ == null) {
            P2PRouting = new global::CMsgSteamDatagramP2PRoutingSummary();
          }
          input.ReadMessage(P2PRouting);
          break;
        }
        case 200: {
          PingInterior = input.ReadUInt32();
          break;
        }
        case 208: {
          PingRemoteFront = input.ReadUInt32();
          break;
        }
        case 216: {
          PingDefaultInternetRoute = input.ReadUInt32();
          break;
        }
        case 242: {
          if (e2EQualityLocal_ == null) {
            E2EQualityLocal = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(E2EQualityLocal);
          break;
        }
        case 250: {
          if (e2EQualityRemote_ == null) {
            E2EQualityRemote = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(E2EQualityRemote);
          break;
        }
        case 256: {
          E2EQualityRemoteInstantaneousTime = input.ReadUInt64();
          break;
        }
        case 264: {
          E2EQualityRemoteLifetimeTime = input.ReadUInt64();
          break;
        }
        case 322: {
          if (frontQualityLocal_ == null) {
            FrontQualityLocal = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(FrontQualityLocal);
          break;
        }
        case 330: {
          if (frontQualityRemote_ == null) {
            FrontQualityRemote = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(FrontQualityRemote);
          break;
        }
        case 336: {
          FrontQualityRemoteInstantaneousTime = input.ReadUInt64();
          break;
        }
        case 344: {
          FrontQualityRemoteLifetimeTime = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ConnectionKey = input.ReadString();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 29: {
          ConnectionIdLocal = input.ReadFixed32();
          break;
        }
        case 34: {
          IdentityLocal = input.ReadString();
          break;
        }
        case 42: {
          IdentityRemote = input.ReadString();
          break;
        }
        case 80: {
          ConnectionState = input.ReadUInt32();
          break;
        }
        case 96: {
          StartTime = input.ReadUInt32();
          break;
        }
        case 104: {
          CloseTime = input.ReadUInt32();
          break;
        }
        case 112: {
          CloseReason = input.ReadUInt32();
          break;
        }
        case 122: {
          CloseMessage = input.ReadString();
          break;
        }
        case 130: {
          StatusLocToken = input.ReadString();
          break;
        }
        case 160: {
          TransportKind = input.ReadUInt32();
          break;
        }
        case 170: {
          SdrpopidLocal = input.ReadString();
          break;
        }
        case 178: {
          SdrpopidRemote = input.ReadString();
          break;
        }
        case 186: {
          AddressRemote = input.ReadString();
          break;
        }
        case 194: {
          if (p2PRouting_ == null) {
            P2PRouting = new global::CMsgSteamDatagramP2PRoutingSummary();
          }
          input.ReadMessage(P2PRouting);
          break;
        }
        case 200: {
          PingInterior = input.ReadUInt32();
          break;
        }
        case 208: {
          PingRemoteFront = input.ReadUInt32();
          break;
        }
        case 216: {
          PingDefaultInternetRoute = input.ReadUInt32();
          break;
        }
        case 242: {
          if (e2EQualityLocal_ == null) {
            E2EQualityLocal = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(E2EQualityLocal);
          break;
        }
        case 250: {
          if (e2EQualityRemote_ == null) {
            E2EQualityRemote = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(E2EQualityRemote);
          break;
        }
        case 256: {
          E2EQualityRemoteInstantaneousTime = input.ReadUInt64();
          break;
        }
        case 264: {
          E2EQualityRemoteLifetimeTime = input.ReadUInt64();
          break;
        }
        case 322: {
          if (frontQualityLocal_ == null) {
            FrontQualityLocal = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(FrontQualityLocal);
          break;
        }
        case 330: {
          if (frontQualityRemote_ == null) {
            FrontQualityRemote = new global::CMsgSteamDatagramConnectionQuality();
          }
          input.ReadMessage(FrontQualityRemote);
          break;
        }
        case 336: {
          FrontQualityRemoteInstantaneousTime = input.ReadUInt64();
          break;
        }
        case 344: {
          FrontQualityRemoteLifetimeTime = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNetworkingUI_Message : pb::IMessage<CGameNetworkingUI_Message>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNetworkingUI_Message> _parser = new pb::MessageParser<CGameNetworkingUI_Message>(() => new CGameNetworkingUI_Message());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNetworkingUI_Message> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenetworkinguiReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_Message() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_Message(CGameNetworkingUI_Message other) : this() {
    connectionState_ = other.connectionState_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_Message Clone() {
    return new CGameNetworkingUI_Message(this);
  }

  /// <summary>Field number for the "connection_state" field.</summary>
  public const int ConnectionStateFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CGameNetworkingUI_ConnectionState> _repeated_connectionState_codec
      = pb::FieldCodec.ForMessage(10, global::CGameNetworkingUI_ConnectionState.Parser);
  private readonly pbc::RepeatedField<global::CGameNetworkingUI_ConnectionState> connectionState_ = new pbc::RepeatedField<global::CGameNetworkingUI_ConnectionState>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNetworkingUI_ConnectionState> ConnectionState {
    get { return connectionState_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNetworkingUI_Message);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNetworkingUI_Message other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!connectionState_.Equals(other.connectionState_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= connectionState_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    connectionState_.WriteTo(output, _repeated_connectionState_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    connectionState_.WriteTo(ref output, _repeated_connectionState_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += connectionState_.CalculateSize(_repeated_connectionState_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNetworkingUI_Message other) {
    if (other == null) {
      return;
    }
    connectionState_.Add(other.connectionState_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          connectionState_.AddEntriesFrom(input, _repeated_connectionState_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          connectionState_.AddEntriesFrom(ref input, _repeated_connectionState_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNetworkingUI_ConnectionSummary : pb::IMessage<CGameNetworkingUI_ConnectionSummary>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNetworkingUI_ConnectionSummary> _parser = new pb::MessageParser<CGameNetworkingUI_ConnectionSummary>(() => new CGameNetworkingUI_ConnectionSummary());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNetworkingUI_ConnectionSummary> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenetworkinguiReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_ConnectionSummary() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_ConnectionSummary(CGameNetworkingUI_ConnectionSummary other) : this() {
    _hasBits0 = other._hasBits0;
    transportKind_ = other.transportKind_;
    connectionState_ = other.connectionState_;
    sdrpopLocal_ = other.sdrpopLocal_;
    sdrpopRemote_ = other.sdrpopRemote_;
    pingMs_ = other.pingMs_;
    packetLoss_ = other.packetLoss_;
    pingDefaultInternetRoute_ = other.pingDefaultInternetRoute_;
    ipWasShared_ = other.ipWasShared_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_ConnectionSummary Clone() {
    return new CGameNetworkingUI_ConnectionSummary(this);
  }

  /// <summary>Field number for the "transport_kind" field.</summary>
  public const int TransportKindFieldNumber = 1;
  private readonly static uint TransportKindDefaultValue = 0;

  private uint transportKind_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TransportKind {
    get { if ((_hasBits0 & 1) != 0) { return transportKind_; } else { return TransportKindDefaultValue; } }
    set {
      _hasBits0 |= 1;
      transportKind_ = value;
    }
  }
  /// <summary>Gets whether the "transport_kind" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTransportKind {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "transport_kind" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTransportKind() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "connection_state" field.</summary>
  public const int ConnectionStateFieldNumber = 8;
  private readonly static uint ConnectionStateDefaultValue = 0;

  private uint connectionState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ConnectionState {
    get { if ((_hasBits0 & 32) != 0) { return connectionState_; } else { return ConnectionStateDefaultValue; } }
    set {
      _hasBits0 |= 32;
      connectionState_ = value;
    }
  }
  /// <summary>Gets whether the "connection_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionState {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "connection_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionState() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "sdrpop_local" field.</summary>
  public const int SdrpopLocalFieldNumber = 2;
  private readonly static string SdrpopLocalDefaultValue = "";

  private string sdrpopLocal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SdrpopLocal {
    get { return sdrpopLocal_ ?? SdrpopLocalDefaultValue; }
    set {
      sdrpopLocal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sdrpop_local" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSdrpopLocal {
    get { return sdrpopLocal_ != null; }
  }
  /// <summary>Clears the value of the "sdrpop_local" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSdrpopLocal() {
    sdrpopLocal_ = null;
  }

  /// <summary>Field number for the "sdrpop_remote" field.</summary>
  public const int SdrpopRemoteFieldNumber = 3;
  private readonly static string SdrpopRemoteDefaultValue = "";

  private string sdrpopRemote_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SdrpopRemote {
    get { return sdrpopRemote_ ?? SdrpopRemoteDefaultValue; }
    set {
      sdrpopRemote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sdrpop_remote" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSdrpopRemote {
    get { return sdrpopRemote_ != null; }
  }
  /// <summary>Clears the value of the "sdrpop_remote" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSdrpopRemote() {
    sdrpopRemote_ = null;
  }

  /// <summary>Field number for the "ping_ms" field.</summary>
  public const int PingMsFieldNumber = 4;
  private readonly static uint PingMsDefaultValue = 0;

  private uint pingMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingMs {
    get { if ((_hasBits0 & 2) != 0) { return pingMs_; } else { return PingMsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      pingMs_ = value;
    }
  }
  /// <summary>Gets whether the "ping_ms" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingMs {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ping_ms" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingMs() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "packet_loss" field.</summary>
  public const int PacketLossFieldNumber = 5;
  private readonly static float PacketLossDefaultValue = 0F;

  private float packetLoss_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PacketLoss {
    get { if ((_hasBits0 & 4) != 0) { return packetLoss_; } else { return PacketLossDefaultValue; } }
    set {
      _hasBits0 |= 4;
      packetLoss_ = value;
    }
  }
  /// <summary>Gets whether the "packet_loss" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPacketLoss {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "packet_loss" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPacketLoss() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "ping_default_internet_route" field.</summary>
  public const int PingDefaultInternetRouteFieldNumber = 6;
  private readonly static uint PingDefaultInternetRouteDefaultValue = 0;

  private uint pingDefaultInternetRoute_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PingDefaultInternetRoute {
    get { if ((_hasBits0 & 8) != 0) { return pingDefaultInternetRoute_; } else { return PingDefaultInternetRouteDefaultValue; } }
    set {
      _hasBits0 |= 8;
      pingDefaultInternetRoute_ = value;
    }
  }
  /// <summary>Gets whether the "ping_default_internet_route" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPingDefaultInternetRoute {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "ping_default_internet_route" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPingDefaultInternetRoute() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "ip_was_shared" field.</summary>
  public const int IpWasSharedFieldNumber = 7;
  private readonly static bool IpWasSharedDefaultValue = false;

  private bool ipWasShared_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IpWasShared {
    get { if ((_hasBits0 & 16) != 0) { return ipWasShared_; } else { return IpWasSharedDefaultValue; } }
    set {
      _hasBits0 |= 16;
      ipWasShared_ = value;
    }
  }
  /// <summary>Gets whether the "ip_was_shared" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpWasShared {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ip_was_shared" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpWasShared() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNetworkingUI_ConnectionSummary);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNetworkingUI_ConnectionSummary other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TransportKind != other.TransportKind) return false;
    if (ConnectionState != other.ConnectionState) return false;
    if (SdrpopLocal != other.SdrpopLocal) return false;
    if (SdrpopRemote != other.SdrpopRemote) return false;
    if (PingMs != other.PingMs) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PacketLoss, other.PacketLoss)) return false;
    if (PingDefaultInternetRoute != other.PingDefaultInternetRoute) return false;
    if (IpWasShared != other.IpWasShared) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTransportKind) hash ^= TransportKind.GetHashCode();
    if (HasConnectionState) hash ^= ConnectionState.GetHashCode();
    if (HasSdrpopLocal) hash ^= SdrpopLocal.GetHashCode();
    if (HasSdrpopRemote) hash ^= SdrpopRemote.GetHashCode();
    if (HasPingMs) hash ^= PingMs.GetHashCode();
    if (HasPacketLoss) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PacketLoss);
    if (HasPingDefaultInternetRoute) hash ^= PingDefaultInternetRoute.GetHashCode();
    if (HasIpWasShared) hash ^= IpWasShared.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTransportKind) {
      output.WriteRawTag(8);
      output.WriteUInt32(TransportKind);
    }
    if (HasSdrpopLocal) {
      output.WriteRawTag(18);
      output.WriteString(SdrpopLocal);
    }
    if (HasSdrpopRemote) {
      output.WriteRawTag(26);
      output.WriteString(SdrpopRemote);
    }
    if (HasPingMs) {
      output.WriteRawTag(32);
      output.WriteUInt32(PingMs);
    }
    if (HasPacketLoss) {
      output.WriteRawTag(45);
      output.WriteFloat(PacketLoss);
    }
    if (HasPingDefaultInternetRoute) {
      output.WriteRawTag(48);
      output.WriteUInt32(PingDefaultInternetRoute);
    }
    if (HasIpWasShared) {
      output.WriteRawTag(56);
      output.WriteBool(IpWasShared);
    }
    if (HasConnectionState) {
      output.WriteRawTag(64);
      output.WriteUInt32(ConnectionState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTransportKind) {
      output.WriteRawTag(8);
      output.WriteUInt32(TransportKind);
    }
    if (HasSdrpopLocal) {
      output.WriteRawTag(18);
      output.WriteString(SdrpopLocal);
    }
    if (HasSdrpopRemote) {
      output.WriteRawTag(26);
      output.WriteString(SdrpopRemote);
    }
    if (HasPingMs) {
      output.WriteRawTag(32);
      output.WriteUInt32(PingMs);
    }
    if (HasPacketLoss) {
      output.WriteRawTag(45);
      output.WriteFloat(PacketLoss);
    }
    if (HasPingDefaultInternetRoute) {
      output.WriteRawTag(48);
      output.WriteUInt32(PingDefaultInternetRoute);
    }
    if (HasIpWasShared) {
      output.WriteRawTag(56);
      output.WriteBool(IpWasShared);
    }
    if (HasConnectionState) {
      output.WriteRawTag(64);
      output.WriteUInt32(ConnectionState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTransportKind) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TransportKind);
    }
    if (HasConnectionState) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectionState);
    }
    if (HasSdrpopLocal) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SdrpopLocal);
    }
    if (HasSdrpopRemote) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SdrpopRemote);
    }
    if (HasPingMs) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingMs);
    }
    if (HasPacketLoss) {
      size += 1 + 4;
    }
    if (HasPingDefaultInternetRoute) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingDefaultInternetRoute);
    }
    if (HasIpWasShared) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNetworkingUI_ConnectionSummary other) {
    if (other == null) {
      return;
    }
    if (other.HasTransportKind) {
      TransportKind = other.TransportKind;
    }
    if (other.HasConnectionState) {
      ConnectionState = other.ConnectionState;
    }
    if (other.HasSdrpopLocal) {
      SdrpopLocal = other.SdrpopLocal;
    }
    if (other.HasSdrpopRemote) {
      SdrpopRemote = other.SdrpopRemote;
    }
    if (other.HasPingMs) {
      PingMs = other.PingMs;
    }
    if (other.HasPacketLoss) {
      PacketLoss = other.PacketLoss;
    }
    if (other.HasPingDefaultInternetRoute) {
      PingDefaultInternetRoute = other.PingDefaultInternetRoute;
    }
    if (other.HasIpWasShared) {
      IpWasShared = other.IpWasShared;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TransportKind = input.ReadUInt32();
          break;
        }
        case 18: {
          SdrpopLocal = input.ReadString();
          break;
        }
        case 26: {
          SdrpopRemote = input.ReadString();
          break;
        }
        case 32: {
          PingMs = input.ReadUInt32();
          break;
        }
        case 45: {
          PacketLoss = input.ReadFloat();
          break;
        }
        case 48: {
          PingDefaultInternetRoute = input.ReadUInt32();
          break;
        }
        case 56: {
          IpWasShared = input.ReadBool();
          break;
        }
        case 64: {
          ConnectionState = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TransportKind = input.ReadUInt32();
          break;
        }
        case 18: {
          SdrpopLocal = input.ReadString();
          break;
        }
        case 26: {
          SdrpopRemote = input.ReadString();
          break;
        }
        case 32: {
          PingMs = input.ReadUInt32();
          break;
        }
        case 45: {
          PacketLoss = input.ReadFloat();
          break;
        }
        case 48: {
          PingDefaultInternetRoute = input.ReadUInt32();
          break;
        }
        case 56: {
          IpWasShared = input.ReadBool();
          break;
        }
        case 64: {
          ConnectionState = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNetworkingUI_AppSummary : pb::IMessage<CGameNetworkingUI_AppSummary>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNetworkingUI_AppSummary> _parser = new pb::MessageParser<CGameNetworkingUI_AppSummary>(() => new CGameNetworkingUI_AppSummary());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNetworkingUI_AppSummary> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenetworkinguiReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_AppSummary() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_AppSummary(CGameNetworkingUI_AppSummary other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    ipWasSharedWithFriend_ = other.ipWasSharedWithFriend_;
    ipWasSharedWithNonfriend_ = other.ipWasSharedWithNonfriend_;
    activeConnections_ = other.activeConnections_;
    mainCxn_ = other.mainCxn_ != null ? other.mainCxn_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNetworkingUI_AppSummary Clone() {
    return new CGameNetworkingUI_AppSummary(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ip_was_shared_with_friend" field.</summary>
  public const int IpWasSharedWithFriendFieldNumber = 10;
  private readonly static bool IpWasSharedWithFriendDefaultValue = false;

  private bool ipWasSharedWithFriend_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IpWasSharedWithFriend {
    get { if ((_hasBits0 & 2) != 0) { return ipWasSharedWithFriend_; } else { return IpWasSharedWithFriendDefaultValue; } }
    set {
      _hasBits0 |= 2;
      ipWasSharedWithFriend_ = value;
    }
  }
  /// <summary>Gets whether the "ip_was_shared_with_friend" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpWasSharedWithFriend {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "ip_was_shared_with_friend" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpWasSharedWithFriend() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ip_was_shared_with_nonfriend" field.</summary>
  public const int IpWasSharedWithNonfriendFieldNumber = 11;
  private readonly static bool IpWasSharedWithNonfriendDefaultValue = false;

  private bool ipWasSharedWithNonfriend_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IpWasSharedWithNonfriend {
    get { if ((_hasBits0 & 4) != 0) { return ipWasSharedWithNonfriend_; } else { return IpWasSharedWithNonfriendDefaultValue; } }
    set {
      _hasBits0 |= 4;
      ipWasSharedWithNonfriend_ = value;
    }
  }
  /// <summary>Gets whether the "ip_was_shared_with_nonfriend" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpWasSharedWithNonfriend {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "ip_was_shared_with_nonfriend" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpWasSharedWithNonfriend() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "active_connections" field.</summary>
  public const int ActiveConnectionsFieldNumber = 20;
  private readonly static uint ActiveConnectionsDefaultValue = 0;

  private uint activeConnections_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ActiveConnections {
    get { if ((_hasBits0 & 8) != 0) { return activeConnections_; } else { return ActiveConnectionsDefaultValue; } }
    set {
      _hasBits0 |= 8;
      activeConnections_ = value;
    }
  }
  /// <summary>Gets whether the "active_connections" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActiveConnections {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "active_connections" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActiveConnections() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "main_cxn" field.</summary>
  public const int MainCxnFieldNumber = 30;
  private global::CGameNetworkingUI_ConnectionSummary mainCxn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CGameNetworkingUI_ConnectionSummary MainCxn {
    get { return mainCxn_; }
    set {
      mainCxn_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNetworkingUI_AppSummary);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNetworkingUI_AppSummary other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (IpWasSharedWithFriend != other.IpWasSharedWithFriend) return false;
    if (IpWasSharedWithNonfriend != other.IpWasSharedWithNonfriend) return false;
    if (ActiveConnections != other.ActiveConnections) return false;
    if (!object.Equals(MainCxn, other.MainCxn)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasIpWasSharedWithFriend) hash ^= IpWasSharedWithFriend.GetHashCode();
    if (HasIpWasSharedWithNonfriend) hash ^= IpWasSharedWithNonfriend.GetHashCode();
    if (HasActiveConnections) hash ^= ActiveConnections.GetHashCode();
    if (mainCxn_ != null) hash ^= MainCxn.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasIpWasSharedWithFriend) {
      output.WriteRawTag(80);
      output.WriteBool(IpWasSharedWithFriend);
    }
    if (HasIpWasSharedWithNonfriend) {
      output.WriteRawTag(88);
      output.WriteBool(IpWasSharedWithNonfriend);
    }
    if (HasActiveConnections) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(ActiveConnections);
    }
    if (mainCxn_ != null) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(MainCxn);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasIpWasSharedWithFriend) {
      output.WriteRawTag(80);
      output.WriteBool(IpWasSharedWithFriend);
    }
    if (HasIpWasSharedWithNonfriend) {
      output.WriteRawTag(88);
      output.WriteBool(IpWasSharedWithNonfriend);
    }
    if (HasActiveConnections) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(ActiveConnections);
    }
    if (mainCxn_ != null) {
      output.WriteRawTag(242, 1);
      output.WriteMessage(MainCxn);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasIpWasSharedWithFriend) {
      size += 1 + 1;
    }
    if (HasIpWasSharedWithNonfriend) {
      size += 1 + 1;
    }
    if (HasActiveConnections) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ActiveConnections);
    }
    if (mainCxn_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(MainCxn);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNetworkingUI_AppSummary other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasIpWasSharedWithFriend) {
      IpWasSharedWithFriend = other.IpWasSharedWithFriend;
    }
    if (other.HasIpWasSharedWithNonfriend) {
      IpWasSharedWithNonfriend = other.IpWasSharedWithNonfriend;
    }
    if (other.HasActiveConnections) {
      ActiveConnections = other.ActiveConnections;
    }
    if (other.mainCxn_ != null) {
      if (mainCxn_ == null) {
        MainCxn = new global::CGameNetworkingUI_ConnectionSummary();
      }
      MainCxn.MergeFrom(other.MainCxn);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 80: {
          IpWasSharedWithFriend = input.ReadBool();
          break;
        }
        case 88: {
          IpWasSharedWithNonfriend = input.ReadBool();
          break;
        }
        case 160: {
          ActiveConnections = input.ReadUInt32();
          break;
        }
        case 242: {
          if (mainCxn_ == null) {
            MainCxn = new global::CGameNetworkingUI_ConnectionSummary();
          }
          input.ReadMessage(MainCxn);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 80: {
          IpWasSharedWithFriend = input.ReadBool();
          break;
        }
        case 88: {
          IpWasSharedWithNonfriend = input.ReadBool();
          break;
        }
        case 160: {
          ActiveConnections = input.ReadUInt32();
          break;
        }
        case 242: {
          if (mainCxn_ == null) {
            MainCxn = new global::CGameNetworkingUI_ConnectionSummary();
          }
          input.ReadMessage(MainCxn);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

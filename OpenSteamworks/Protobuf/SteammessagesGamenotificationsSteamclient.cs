// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_gamenotifications.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_gamenotifications.steamclient.proto</summary>
public static partial class SteammessagesGamenotificationsSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_gamenotifications.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesGamenotificationsSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CjFzdGVhbW1lc3NhZ2VzX2dhbWVub3RpZmljYXRpb25zLnN0ZWFtY2xpZW50",
          "LnByb3RvGhhzdGVhbW1lc3NhZ2VzX2Jhc2UucHJvdG8aLHN0ZWFtbWVzc2Fn",
          "ZXNfdW5pZmllZF9iYXNlLnN0ZWFtY2xpZW50LnByb3RvIuACChtDR2FtZU5v",
          "dGlmaWNhdGlvbnNfVmFyaWFibGUSpgEKA2tleRgBIAEoCUKYAYK1GJMBVGhl",
          "IG5hbWUgb2YgdGhlIHZhcmlhYmxlIGluIHRoZSBsb2NhbGl6ZWQgdGV4dCAt",
          "LSBhbnl3aGVyZSB0aGF0ICV2YXJpYWJsZW5hbWUlIGlzIGZvdW5kIHdpdGhp",
          "biB0aGUgdGV4dCBpdCB3aWxsIGJlIHN1YnN0aXR1ZGVkIHdpdGggdGhlIGdp",
          "dmVuIHZhbHVlEpcBCgV2YWx1ZRgCIAEoCUKHAYK1GIIBVGhlIHZhbHVlIG9m",
          "IHRoZSB2YXJpYWJsZSB0byBzdWJzdGl0dXRlIGluIHRoZSBsb2NhbGl6ZWQg",
          "dGV4dCBpbiBwbGFjZSBvZiB0aGUgZ2l2ZW4gdmFyaWFibGUuICBDYW4gaXRz",
          "ZWxmIGJlIGEgbG9jYWxpemF0aW9uIHRva2VuLiKFAwogQ0dhbWVOb3RpZmlj",
          "YXRpb25zX0xvY2FsaXplZFRleHQSSAoFdG9rZW4YASABKAlCOYK1GDVBIGxv",
          "Y2FsaXphdGlvbiB0b2tlbiB0aGF0IG1hcHMgdG8gdGhlIGRlc2lyZWQgc3Ry",
          "aW5nLhKNAQoJdmFyaWFibGVzGAIgAygLMhwuQ0dhbWVOb3RpZmljYXRpb25z",
          "X1ZhcmlhYmxlQlyCtRhYQSBsaXN0IG9mIHZhcmlhYmxlcyB2YWx1ZXMgdG8g",
          "c3Vic3RpdHV0ZSBpbiBhbnkgdmFyaWFibGVzIGZvdW5kIGluIHRoZSBsb2Nh",
          "bGl6ZWQgc3RyaW5nLhKGAQoNcmVuZGVyZWRfdGV4dBgDIAEoCUJvgrUYa1Rl",
          "eHQgcmVuZGVyZWQgaW4gdGhlIHJlcXVlc3RlZCBsYW5ndWFnZSwgY29tcGxl",
          "dGUgd2l0aCB2YXJpYWJsZSBzdWJzdGl0dXRpb25zLCBpZiBhIGxhbmd1YWdl",
          "IHdhcyBzcGVjaWZpZWQuIpUECh1DR2FtZU5vdGlmaWNhdGlvbnNfVXNlclN0",
          "YXR1cxIxCgdzdGVhbWlkGAEgASgGQiCCtRgcVGhlIHNwZWNpZmljIHVzZXIn",
          "cyBzdGVhbWlkLhKkAQoFc3RhdGUYAiABKAlClAGCtRiPAVRoZSB1c2VyJ3Mg",
          "c3RhdGUuICByZWFkeSAtLSB0aGUgdXNlciBpcyByZWFkeSB0byBwbGF5LiAg",
          "d2FpdGluZyAtLSBUaGUgZ2FtZSBpcyB3YWl0aW5nIG9uIGFuIGFjdGlvbiBm",
          "cm9tIHRoZSB1c2VyLiBjb21wbGV0ZWQsIHRoZSBnYW1lIGlzIG92ZXIuEoQB",
          "CgV0aXRsZRgDIAEoCzIhLkNHYW1lTm90aWZpY2F0aW9uc19Mb2NhbGl6ZWRU",
          "ZXh0QlKCtRhOVGl0bGUgb2YgdGhlIHNlc3Npb24gdG8gZGlzcGxheSB0byB0",
          "aGlzIHVzZXIgaW4gdGhlaXIgbGlzdCBvZiBhY3RpdmUgc2Vzc2lvbnMuEpIB",
          "CgdtZXNzYWdlGAQgASgLMiEuQ0dhbWVOb3RpZmljYXRpb25zX0xvY2FsaXpl",
          "ZFRleHRCXoK1GFpTdWJ0aXRsZSBvZiB0aGUgc2Vzc2lvbiB0byBkaXNwbGF5",
          "IHRvIHRoaXMgdXNlciB1c2VyIHdpdGhpbiB0aGVpciBsaXN0IG9mIGFjdGl2",
          "ZSBzZXNzaW9ucy4ikwUKKENHYW1lTm90aWZpY2F0aW9uc19DcmVhdGVTZXNz",
          "aW9uX1JlcXVlc3QSNwoFYXBwaWQYASABKA1CKIK1GCRUaGUgYXBwaWQgdG8g",
          "Y3JlYXRlIHRoZSBzZXNzaW9uIGZvci4SfwoHY29udGV4dBgCIAEoBEJugrUY",
          "akdhbWUtc3BlY2lmaWVkIGNvbnRleHQgdmFsdWUgdGhlIGdhbWUgY2FuIHVz",
          "ZWQgdG8gYXNzb2NpYXRlIHRoZSBzZXNzaW9uIHdpdGggc29tZSBvYmplY3Qg",
          "b24gdGhlaXIgYmFja2VuZC4SgwEKBXRpdGxlGAMgASgLMiEuQ0dhbWVOb3Rp",
          "ZmljYXRpb25zX0xvY2FsaXplZFRleHRCUYK1GE1UaGUgdGl0bGUgb2YgdGhl",
          "IHNlc3Npb24gdG8gYmUgZGlzcGxheWVkIHdpdGhpbiBlYWNoIHVzZXIncyBs",
          "aXN0IG9mIHNlc3Npb25zLhJhCgV1c2VycxgEIAMoCzIeLkNHYW1lTm90aWZp",
          "Y2F0aW9uc19Vc2VyU3RhdHVzQjKCtRguVGhlIGluaXRpYWwgc3RhdGUgb2Yg",
          "YWxsIHVzZXJzIGluIHRoZSBzZXNzaW9uLhLDAQoHc3RlYW1pZBgFIAEoBkKx",
          "AYK1GKwBKE9wdGlvbmFsKSBzdGVhbWlkIHRvIG1ha2UgdGhlIHJlcXVlc3Qg",
          "b24gYmVoYWxmIG9mIC0tIGlmIHNwZWNpZmllZCwgdGhlIHVzZXIgbXVzdCBi",
          "ZSBpbiB0aGUgc2Vzc2lvbiBhbmQgYWxsIHVzZXJzIGJlaW5nIGFkZGVkIHRv",
          "IHRoZSBzZXNzaW9uIG11c3QgYmUgZnJpZW5kcyB3aXRoIHRoZSB1c2VyLiJp",
          "CilDR2FtZU5vdGlmaWNhdGlvbnNfQ3JlYXRlU2Vzc2lvbl9SZXNwb25zZRI8",
          "CglzZXNzaW9uaWQYASABKARCKYK1GCVUaGUgc2Vzc2lvbmlkIG9mIHRoZSBj",
          "cmVhdGVkIHNlc3Npb24uIo8CCihDR2FtZU5vdGlmaWNhdGlvbnNfRGVsZXRl",
          "U2Vzc2lvbl9SZXF1ZXN0Ei8KCXNlc3Npb25pZBgBIAEoBEIcgrUYGFRoZSBz",
          "ZXNzaW9uaWQgdG8gZGVsZXRlLhI2CgVhcHBpZBgCIAEoDUIngrUYI1RoZSBh",
          "cHBpZCBvZiB0aGUgc2Vzc2lvbiB0byBkZWxldGUuEnoKB3N0ZWFtaWQYAyAB",
          "KAZCaYK1GGUoT3B0aW9uYWwpIHN0ZWFtaWQgdG8gbWFrZSB0aGUgcmVxdWVz",
          "dCBvbiBiZWhhbGYgb2YgLS0gaWYgc3BlY2lmaWVkLCB0aGUgdXNlciBtdXN0",
          "IGJlIGluIHRoZSBzZXNzaW9uLiIrCilDR2FtZU5vdGlmaWNhdGlvbnNfRGVs",
          "ZXRlU2Vzc2lvbl9SZXNwb25zZSK9BQooQ0dhbWVOb3RpZmljYXRpb25zX1Vw",
          "ZGF0ZVNlc3Npb25fUmVxdWVzdBIvCglzZXNzaW9uaWQYASABKARCHIK1GBhU",
          "aGUgc2Vzc2lvbmlkIHRvIHVwZGF0ZS4SNgoFYXBwaWQYAiABKA1CJ4K1GCNU",
          "aGUgYXBwaWQgb2YgdGhlIHNlc3Npb24gdG8gdXBkYXRlLhKQAQoFdGl0bGUY",
          "AyABKAsyIS5DR2FtZU5vdGlmaWNhdGlvbnNfTG9jYWxpemVkVGV4dEJegrUY",
          "WihPcHRpb25hbCkgVGhlIG5ldyB0aXRsZSBvZiB0aGUgc2Vzc2lvbi4gIElm",
          "IG5vdCBzcGVjaWZpZWQsIHRoZSB0aXRsZSB3aWxsIG5vdCBiZSBjaGFuZ2Vk",
          "LhLOAQoFdXNlcnMYBCADKAsyHi5DR2FtZU5vdGlmaWNhdGlvbnNfVXNlclN0",
          "YXR1c0KeAYK1GJkBKE9wdGlvbmFsKSBBIGxpc3Qgb2YgdXNlcnMgd2hvc2Ug",
          "c3RhdGUgd2lsbCBiZSB1cGRhdGVkIHRvIHJlZmxlY3QgdGhlIGdpdmVuIHN0",
          "YXRlLiBJZiB0aGUgdXNlcnMgYXJlIG5vdCBhbHJlYWR5IGluIHRoZSBzZXNz",
          "aW9uLCB0aGV5IHdpbGwgYmUgYWRkZWQgdG8gaXQuEsMBCgdzdGVhbWlkGAYg",
          "ASgGQrEBgrUYrAEoT3B0aW9uYWwpIHN0ZWFtaWQgdG8gbWFrZSB0aGUgcmVx",
          "dWVzdCBvbiBiZWhhbGYgb2YgLS0gaWYgc3BlY2lmaWVkLCB0aGUgdXNlciBt",
          "dXN0IGJlIGluIHRoZSBzZXNzaW9uIGFuZCBhbGwgdXNlcnMgYmVpbmcgYWRk",
          "ZWQgdG8gdGhlIHNlc3Npb24gbXVzdCBiZSBmcmllbmRzIHdpdGggdGhlIHVz",
          "ZXIuIisKKUNHYW1lTm90aWZpY2F0aW9uc19VcGRhdGVTZXNzaW9uX1Jlc3Bv",
          "bnNlIqEECixDR2FtZU5vdGlmaWNhdGlvbnNfRW51bWVyYXRlU2Vzc2lvbnNf",
          "UmVxdWVzdBJ+CgVhcHBpZBgBIAEoDUJvgrUYa1RoZSBzZXNzaW9uaWQgdG8g",
          "cmVxdWVzdCBkZXRhaWxzIGZvci4gT3B0aW9uYWwuIElmIG5vdCBzcGVjaWZp",
          "ZWQsIGFsbCB0aGUgdXNlcidzIHNlc3Npb25zIHdpbGwgYmUgcmV0dXJuZWQu",
          "Eo4BChlpbmNsdWRlX2FsbF91c2VyX21lc3NhZ2VzGAMgASgIQmuCtRhnKE9w",
          "dGlvbmFsKSBCb29sZWFuIGRldGVybWluaW5nIHdoZXRoZXIgdGhlIG1lc3Nh",
          "Z2UgZm9yIGFsbCB1c2VycyBzaG91bGQgYmUgaW5jbHVkZWQuIERlZmF1bHRz",
          "IHRvIGZhbHNlLhKbAQoZaW5jbHVkZV9hdXRoX3VzZXJfbWVzc2FnZRgEIAEo",
          "CEJ4grUYdChPcHRpb25hbCkgQm9vbGVhbiBkZXRlcm1pbmluZyB3aGV0aGVy",
          "IHRoZSBtZXNzYWdlIGZvciB0aGUgYXV0aGVudGljYXRlZCB1c2VyIHNob3Vs",
          "ZCBiZSBpbmNsdWRlZC4gRGVmYXVsdHMgdG8gZmFsc2UuEkIKCGxhbmd1YWdl",
          "GAUgASgJQjCCtRgsKE9wdGlvbmFsKSBMYW5ndWFnZSB0byBsb2NhbGl6ZSB0",
          "aGUgdGV4dCBpbi4iwwQKGkNHYW1lTm90aWZpY2F0aW9uc19TZXNzaW9uEjYK",
          "CXNlc3Npb25pZBgBIAEoBEIjgrUYH1RoZSBzZXNzaW9uaWQgZm9yIHRoaXMg",
          "c2Vzc2lvbi4SLQoFYXBwaWQYAiABKARCHoK1GBpUaGUgYXBwaWQgZm9yIHRo",
          "ZSBzZXNzaW9uLhJ/Cgdjb250ZXh0GAMgASgEQm6CtRhqR2FtZS1zcGVjaWZp",
          "ZWQgY29udGV4dCB2YWx1ZSB0aGUgZ2FtZSBjYW4gdXNlZCB0byBhc3NvY2lh",
          "dGUgdGhlIHNlc3Npb24gd2l0aCBzb21lIG9iamVjdCBvbiB0aGVpciBiYWNr",
          "ZW5kLhJYCgV0aXRsZRgEIAEoCzIhLkNHYW1lTm90aWZpY2F0aW9uc19Mb2Nh",
          "bGl6ZWRUZXh0QiaCtRgiVGhlIGN1cnJlbnQgdGl0bGUgZm9yIHRoZSBzZXNz",
          "aW9uLhI7Cgx0aW1lX2NyZWF0ZWQYBSABKA1CJYK1GCFUaGUgdGltZSB0aGUg",
          "c2Vzc2lvbiB3YXMgY3JlYXRlZC4SQAoMdGltZV91cGRhdGVkGAYgASgNQiqC",
          "tRgmVGhlIGxhc3QgdGltZSB0aGUgc2Vzc2lvbiB3YXMgdXBkYXRlZC4SZAoL",
          "dXNlcl9zdGF0dXMYByADKAsyHi5DR2FtZU5vdGlmaWNhdGlvbnNfVXNlclN0",
          "YXR1c0IvgrUYK1RoZSBzdGF0dXMgb2YgYWxsIHRoZSB1c2VycyBpbiB0aGUg",
          "c2Vzc2lvbi4iggEKLUNHYW1lTm90aWZpY2F0aW9uc19FbnVtZXJhdGVTZXNz",
          "aW9uc19SZXNwb25zZRJRCghzZXNzaW9ucxgBIAMoCzIbLkNHYW1lTm90aWZp",
          "Y2F0aW9uc19TZXNzaW9uQiKCtRgeQSBsaXN0IG9mIHRoZSB1c2VyJ3Mgc2Vz",
          "c2lvbnMuItYDCixDR2FtZU5vdGlmaWNhdGlvbnNfR2V0U2Vzc2lvbkRldGFp",
          "bHNfUmVxdWVzdBJQCghzZXNzaW9ucxgBIAMoCzI+LkNHYW1lTm90aWZpY2F0",
          "aW9uc19HZXRTZXNzaW9uRGV0YWlsc19SZXF1ZXN0LlJlcXVlc3RlZFNlc3Np",
          "b24SLgoFYXBwaWQYAiABKA1CH4K1GBtUaGUgYXBwaWQgZm9yIHRoZSBzZXNz",
          "aW9ucy4SNwoIbGFuZ3VhZ2UYAyABKAlCJYK1GCFMYW5ndWFnZSB0byBsb2Nh",
          "bGl6ZSB0aGUgdGV4dCBpbi4a6gEKEFJlcXVlc3RlZFNlc3Npb24SOAoJc2Vz",
          "c2lvbmlkGAEgASgEQiWCtRghVGhlIHNlc3Npb25pZCB0byBnZXQgZGV0YWls",
          "cyBmb3IuEpsBChlpbmNsdWRlX2F1dGhfdXNlcl9tZXNzYWdlGAMgASgIQniC",
          "tRh0KE9wdGlvbmFsKSBCb29sZWFuIGRldGVybWluaW5nIHdoZXRoZXIgdGhl",
          "IG1lc3NhZ2UgZm9yIHRoZSBhdXRoZW50aWNhdGVkIHVzZXIgc2hvdWxkIGJl",
          "IGluY2x1ZGVkLiBEZWZhdWx0cyB0byBmYWxzZS4ifwotQ0dhbWVOb3RpZmlj",
          "YXRpb25zX0dldFNlc3Npb25EZXRhaWxzX1Jlc3BvbnNlEk4KCHNlc3Npb25z",
          "GAEgAygLMhsuQ0dhbWVOb3RpZmljYXRpb25zX1Nlc3Npb25CH4K1GBtUaGUg",
          "ZGV0YWlscyBvZiB0aGUgc2Vzc2lvbi4iqAEKGEdhbWVOb3RpZmljYXRpb25T",
          "ZXR0aW5ncxI3CgVhcHBpZBgBIAEoDUIogrUYJFRoZSBhcHBpZCB0byBjcmVh",
          "dGUgdGhlIHNlc3Npb24gZm9yLhJTChNhbGxvd19ub3RpZmljYXRpb25zGAIg",
          "ASgIQjaCtRgyV2hldGhlciB0aGUgdXNlciBhbGxvd3Mgbm90aWZpY2F0aW9u",
          "IGZvciB0aGlzIGFwcC4idgo1Q0dhbWVOb3RpZmljYXRpb25zX1VwZGF0ZU5v",
          "dGlmaWNhdGlvblNldHRpbmdzX1JlcXVlc3QSPQoaZ2FtZV9ub3RpZmljYXRp",
          "b25fc2V0dGluZ3MYASADKAsyGS5HYW1lTm90aWZpY2F0aW9uU2V0dGluZ3Mi",
          "OAo2Q0dhbWVOb3RpZmljYXRpb25zX1VwZGF0ZU5vdGlmaWNhdGlvblNldHRp",
          "bmdzX1Jlc3BvbnNlIsYBCjhDR2FtZU5vdGlmaWNhdGlvbnNfT25Ob3RpZmlj",
          "YXRpb25zUmVxdWVzdGVkX05vdGlmaWNhdGlvbhJOCgdzdGVhbWlkGAEgASgG",
          "Qj2CtRg5c3RlYW1pZCBvZiB0aGUgdXNlciB3aG8gbm90aWZpY2F0aW9ucyB3",
          "ZXJlIHJlcXVlc3RlZCBmb3IuEjoKBWFwcGlkGAIgASgNQiuCtRgnVGhlIGFw",
          "cGlkIHRoYXQgcmVxdWVzdGVkIG5vdGlmaWNhdGlvbnMuIr4DCjNDR2FtZU5v",
          "dGlmaWNhdGlvbnNfT25Vc2VyU3RhdHVzQ2hhbmdlZF9Ob3RpZmljYXRpb24S",
          "PgoHc3RlYW1pZBgBIAEoBkItgrUYKXN0ZWFtaWQgb2YgdGhlIHVzZXIgd2hv",
          "c2Ugc3RhdHVzIGNoYW5nZWQuElgKCXNlc3Npb25pZBgCIAEoBEJFgrUYQVRo",
          "ZSBzZXNzaW9uaWQgb2YgdGhlIHNlc3Npb24gd2hlcmUgdGhlIHVzZXIncyBz",
          "dGF0dXMgd2FzIGNoYW5nZWQuEkwKBWFwcGlkGAMgASgNQj2CtRg5VGhlIGFw",
          "cGlkIG9mIHRoZSBzZXNzaW9uIHdoZXJlIHRoZSB1c2VyJ3Mgc3RhdHVzIGNo",
          "YW5nZWQuElYKBnN0YXR1cxgEIAEoCzIeLkNHYW1lTm90aWZpY2F0aW9uc19V",
          "c2VyU3RhdHVzQiaCtRgiKE9wdGlvbmFsKSBOZXcgc3RhdHVzIG9mIHRoZSB1",
          "c2VyLhJHCgdyZW1vdmVkGAUgASgIQjaCtRgyKE9wdGlvbmFsKSBVc2VyIGhh",
          "cyBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgc2Vzc2lvbi4ypggKEUdhbWVOb3Rp",
          "ZmljYXRpb25zEo0BChFVc2VyQ3JlYXRlU2Vzc2lvbhIpLkNHYW1lTm90aWZp",
          "Y2F0aW9uc19DcmVhdGVTZXNzaW9uX1JlcXVlc3QaKi5DR2FtZU5vdGlmaWNh",
          "dGlvbnNfQ3JlYXRlU2Vzc2lvbl9SZXNwb25zZSIhgrUYHUNyZWF0ZXMgYW4g",
          "YXN5bmMgZ2FtZSBzZXNzaW9uEo0BChFVc2VyRGVsZXRlU2Vzc2lvbhIpLkNH",
          "YW1lTm90aWZpY2F0aW9uc19EZWxldGVTZXNzaW9uX1JlcXVlc3QaKi5DR2Ft",
          "ZU5vdGlmaWNhdGlvbnNfRGVsZXRlU2Vzc2lvbl9SZXNwb25zZSIhgrUYHURl",
          "bGV0ZXMgYW4gYXN5bmMgZ2FtZSBzZXNzaW9uEo0BChFVc2VyVXBkYXRlU2Vz",
          "c2lvbhIpLkNHYW1lTm90aWZpY2F0aW9uc19VcGRhdGVTZXNzaW9uX1JlcXVl",
          "c3QaKi5DR2FtZU5vdGlmaWNhdGlvbnNfVXBkYXRlU2Vzc2lvbl9SZXNwb25z",
          "ZSIhgrUYHVVwZGF0ZXMgYW4gYXN5bmMgZ2FtZSBzZXNzaW9uEpQBChFFbnVt",
          "ZXJhdGVTZXNzaW9ucxItLkNHYW1lTm90aWZpY2F0aW9uc19FbnVtZXJhdGVT",
          "ZXNzaW9uc19SZXF1ZXN0Gi4uQ0dhbWVOb3RpZmljYXRpb25zX0VudW1lcmF0",
          "ZVNlc3Npb25zX1Jlc3BvbnNlIiCCtRgcRW51bWVyYXRlcyBhIHVzZXIncyBz",
          "ZXNzaW9ucxKeAQoRR2V0U2Vzc2lvbkRldGFpbHMSLS5DR2FtZU5vdGlmaWNh",
          "dGlvbnNfR2V0U2Vzc2lvbkRldGFpbHNfUmVxdWVzdBouLkNHYW1lTm90aWZp",
          "Y2F0aW9uc19HZXRTZXNzaW9uRGV0YWlsc19SZXNwb25zZSIqgrUYJkdldCB0",
          "aGUgZGV0YWlscyBmb3IgYSBzcGVjaWZpYyBzZXNzaW9uEtYBChpVcGRhdGVO",
          "b3RpZmljYXRpb25TZXR0aW5ncxI2LkNHYW1lTm90aWZpY2F0aW9uc19VcGRh",
          "dGVOb3RpZmljYXRpb25TZXR0aW5nc19SZXF1ZXN0GjcuQ0dhbWVOb3RpZmlj",
          "YXRpb25zX1VwZGF0ZU5vdGlmaWNhdGlvblNldHRpbmdzX1Jlc3BvbnNlIkeC",
          "tRhDVXBkYXRlcyB3aGV0aGVyIGEgdXNlciBhbGxvd3MgZ2FtZSBub3RpZmlj",
          "YXRpb25zIGZvciBhIHNwZWNpZmljIGFwcBpQgrUYTEEgc2VydmljZSBmb3Ig",
          "ZnVuY3Rpb25zIHJlbGF0ZWQgdG8gdGhlIGFzeW5jcm9ub3VzIGdhbWUgbm90",
          "aWZpY2F0aW9uIHNlcnZlci4y3wIKF0dhbWVOb3RpZmljYXRpb25zQ2xpZW50",
          "EpUBChhPbk5vdGlmaWNhdGlvbnNSZXF1ZXN0ZWQSOS5DR2FtZU5vdGlmaWNh",
          "dGlvbnNfT25Ob3RpZmljYXRpb25zUmVxdWVzdGVkX05vdGlmaWNhdGlvbhoL",
          "Lk5vUmVzcG9uc2UiMYK1GC1SZXF1ZXN0cyB0aGF0IHRoZSB1c2VyIG9wdCBp",
          "bnRvIG5vdGlmaWNhdGlvbnMSjQEKE09uVXNlclN0YXR1c0NoYW5nZWQSNC5D",
          "R2FtZU5vdGlmaWNhdGlvbnNfT25Vc2VyU3RhdHVzQ2hhbmdlZF9Ob3RpZmlj",
          "YXRpb24aCy5Ob1Jlc3BvbnNlIjOCtRgvTm90aWZpY2F0aW9uIHRoYXQgdGhl",
          "IHVzZXIncyBzdGF0dXMgaGFzIGNoYW5nZWQaHIK1GBRDbGllbnQgbm90aWZp",
          "Y2F0aW9uc8C1GAJCA4ABAQ=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_Variable), global::CGameNotifications_Variable.Parser, new[]{ "Key", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_LocalizedText), global::CGameNotifications_LocalizedText.Parser, new[]{ "Token", "Variables", "RenderedText" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_UserStatus), global::CGameNotifications_UserStatus.Parser, new[]{ "Steamid", "State", "Title", "Message" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_CreateSession_Request), global::CGameNotifications_CreateSession_Request.Parser, new[]{ "Appid", "Context", "Title", "Users", "Steamid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_CreateSession_Response), global::CGameNotifications_CreateSession_Response.Parser, new[]{ "Sessionid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_DeleteSession_Request), global::CGameNotifications_DeleteSession_Request.Parser, new[]{ "Sessionid", "Appid", "Steamid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_DeleteSession_Response), global::CGameNotifications_DeleteSession_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_UpdateSession_Request), global::CGameNotifications_UpdateSession_Request.Parser, new[]{ "Sessionid", "Appid", "Title", "Users", "Steamid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_UpdateSession_Response), global::CGameNotifications_UpdateSession_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_EnumerateSessions_Request), global::CGameNotifications_EnumerateSessions_Request.Parser, new[]{ "Appid", "IncludeAllUserMessages", "IncludeAuthUserMessage", "Language" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_Session), global::CGameNotifications_Session.Parser, new[]{ "Sessionid", "Appid", "Context", "Title", "TimeCreated", "TimeUpdated", "UserStatus" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_EnumerateSessions_Response), global::CGameNotifications_EnumerateSessions_Response.Parser, new[]{ "Sessions" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_GetSessionDetails_Request), global::CGameNotifications_GetSessionDetails_Request.Parser, new[]{ "Sessions", "Appid", "Language" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_GetSessionDetails_Request.Types.RequestedSession), global::CGameNotifications_GetSessionDetails_Request.Types.RequestedSession.Parser, new[]{ "Sessionid", "IncludeAuthUserMessage" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_GetSessionDetails_Response), global::CGameNotifications_GetSessionDetails_Response.Parser, new[]{ "Sessions" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameNotificationSettings), global::GameNotificationSettings.Parser, new[]{ "Appid", "AllowNotifications" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_UpdateNotificationSettings_Request), global::CGameNotifications_UpdateNotificationSettings_Request.Parser, new[]{ "GameNotificationSettings" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_UpdateNotificationSettings_Response), global::CGameNotifications_UpdateNotificationSettings_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_OnNotificationsRequested_Notification), global::CGameNotifications_OnNotificationsRequested_Notification.Parser, new[]{ "Steamid", "Appid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGameNotifications_OnUserStatusChanged_Notification), global::CGameNotifications_OnUserStatusChanged_Notification.Parser, new[]{ "Steamid", "Sessionid", "Appid", "Status", "Removed" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CGameNotifications_Variable : pb::IMessage<CGameNotifications_Variable>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_Variable> _parser = new pb::MessageParser<CGameNotifications_Variable>(() => new CGameNotifications_Variable());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_Variable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_Variable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_Variable(CGameNotifications_Variable other) : this() {
    key_ = other.key_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_Variable Clone() {
    return new CGameNotifications_Variable(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private readonly static string KeyDefaultValue = "";

  private string key_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Key {
    get { return key_ ?? KeyDefaultValue; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKey {
    get { return key_ != null; }
  }
  /// <summary>Clears the value of the "key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKey() {
    key_ = null;
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 2;
  private readonly static string ValueDefaultValue = "";

  private string value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Value {
    get { return value_ ?? ValueDefaultValue; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValue {
    get { return value_ != null; }
  }
  /// <summary>Clears the value of the "value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValue() {
    value_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_Variable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_Variable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasKey) hash ^= Key.GetHashCode();
    if (HasValue) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasKey) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (HasValue) {
      output.WriteRawTag(18);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasKey) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (HasValue) {
      output.WriteRawTag(18);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasKey) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (HasValue) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_Variable other) {
    if (other == null) {
      return;
    }
    if (other.HasKey) {
      Key = other.Key;
    }
    if (other.HasValue) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 18: {
          Value = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 18: {
          Value = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_LocalizedText : pb::IMessage<CGameNotifications_LocalizedText>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_LocalizedText> _parser = new pb::MessageParser<CGameNotifications_LocalizedText>(() => new CGameNotifications_LocalizedText());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_LocalizedText> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_LocalizedText() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_LocalizedText(CGameNotifications_LocalizedText other) : this() {
    token_ = other.token_;
    variables_ = other.variables_.Clone();
    renderedText_ = other.renderedText_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_LocalizedText Clone() {
    return new CGameNotifications_LocalizedText(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private readonly static string TokenDefaultValue = "";

  private string token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Token {
    get { return token_ ?? TokenDefaultValue; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return token_ != null; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    token_ = null;
  }

  /// <summary>Field number for the "variables" field.</summary>
  public const int VariablesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CGameNotifications_Variable> _repeated_variables_codec
      = pb::FieldCodec.ForMessage(18, global::CGameNotifications_Variable.Parser);
  private readonly pbc::RepeatedField<global::CGameNotifications_Variable> variables_ = new pbc::RepeatedField<global::CGameNotifications_Variable>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNotifications_Variable> Variables {
    get { return variables_; }
  }

  /// <summary>Field number for the "rendered_text" field.</summary>
  public const int RenderedTextFieldNumber = 3;
  private readonly static string RenderedTextDefaultValue = "";

  private string renderedText_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string RenderedText {
    get { return renderedText_ ?? RenderedTextDefaultValue; }
    set {
      renderedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "rendered_text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRenderedText {
    get { return renderedText_ != null; }
  }
  /// <summary>Clears the value of the "rendered_text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRenderedText() {
    renderedText_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_LocalizedText);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_LocalizedText other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    if(!variables_.Equals(other.variables_)) return false;
    if (RenderedText != other.RenderedText) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasToken) hash ^= Token.GetHashCode();
    hash ^= variables_.GetHashCode();
    if (HasRenderedText) hash ^= RenderedText.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteString(Token);
    }
    variables_.WriteTo(output, _repeated_variables_codec);
    if (HasRenderedText) {
      output.WriteRawTag(26);
      output.WriteString(RenderedText);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteString(Token);
    }
    variables_.WriteTo(ref output, _repeated_variables_codec);
    if (HasRenderedText) {
      output.WriteRawTag(26);
      output.WriteString(RenderedText);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    size += variables_.CalculateSize(_repeated_variables_codec);
    if (HasRenderedText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RenderedText);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_LocalizedText other) {
    if (other == null) {
      return;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    variables_.Add(other.variables_);
    if (other.HasRenderedText) {
      RenderedText = other.RenderedText;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Token = input.ReadString();
          break;
        }
        case 18: {
          variables_.AddEntriesFrom(input, _repeated_variables_codec);
          break;
        }
        case 26: {
          RenderedText = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Token = input.ReadString();
          break;
        }
        case 18: {
          variables_.AddEntriesFrom(ref input, _repeated_variables_codec);
          break;
        }
        case 26: {
          RenderedText = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_UserStatus : pb::IMessage<CGameNotifications_UserStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_UserStatus> _parser = new pb::MessageParser<CGameNotifications_UserStatus>(() => new CGameNotifications_UserStatus());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_UserStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UserStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UserStatus(CGameNotifications_UserStatus other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    state_ = other.state_;
    title_ = other.title_ != null ? other.title_.Clone() : null;
    message_ = other.message_ != null ? other.message_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UserStatus Clone() {
    return new CGameNotifications_UserStatus(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 2;
  private readonly static string StateDefaultValue = "";

  private string state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string State {
    get { return state_ ?? StateDefaultValue; }
    set {
      state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasState {
    get { return state_ != null; }
  }
  /// <summary>Clears the value of the "state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearState() {
    state_ = null;
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 3;
  private global::CGameNotifications_LocalizedText title_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CGameNotifications_LocalizedText Title {
    get { return title_; }
    set {
      title_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 4;
  private global::CGameNotifications_LocalizedText message_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CGameNotifications_LocalizedText Message {
    get { return message_; }
    set {
      message_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_UserStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_UserStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (State != other.State) return false;
    if (!object.Equals(Title, other.Title)) return false;
    if (!object.Equals(Message, other.Message)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasState) hash ^= State.GetHashCode();
    if (title_ != null) hash ^= Title.GetHashCode();
    if (message_ != null) hash ^= Message.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasState) {
      output.WriteRawTag(18);
      output.WriteString(State);
    }
    if (title_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Title);
    }
    if (message_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasState) {
      output.WriteRawTag(18);
      output.WriteString(State);
    }
    if (title_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Title);
    }
    if (message_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasState) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
    }
    if (title_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
    }
    if (message_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_UserStatus other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasState) {
      State = other.State;
    }
    if (other.title_ != null) {
      if (title_ == null) {
        Title = new global::CGameNotifications_LocalizedText();
      }
      Title.MergeFrom(other.Title);
    }
    if (other.message_ != null) {
      if (message_ == null) {
        Message = new global::CGameNotifications_LocalizedText();
      }
      Message.MergeFrom(other.Message);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 18: {
          State = input.ReadString();
          break;
        }
        case 26: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 34: {
          if (message_ == null) {
            Message = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Message);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 18: {
          State = input.ReadString();
          break;
        }
        case 26: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 34: {
          if (message_ == null) {
            Message = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Message);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_CreateSession_Request : pb::IMessage<CGameNotifications_CreateSession_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_CreateSession_Request> _parser = new pb::MessageParser<CGameNotifications_CreateSession_Request>(() => new CGameNotifications_CreateSession_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_CreateSession_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_CreateSession_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_CreateSession_Request(CGameNotifications_CreateSession_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    context_ = other.context_;
    title_ = other.title_ != null ? other.title_.Clone() : null;
    users_ = other.users_.Clone();
    steamid_ = other.steamid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_CreateSession_Request Clone() {
    return new CGameNotifications_CreateSession_Request(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "context" field.</summary>
  public const int ContextFieldNumber = 2;
  private readonly static ulong ContextDefaultValue = 0UL;

  private ulong context_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Context {
    get { if ((_hasBits0 & 2) != 0) { return context_; } else { return ContextDefaultValue; } }
    set {
      _hasBits0 |= 2;
      context_ = value;
    }
  }
  /// <summary>Gets whether the "context" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasContext {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "context" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearContext() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 3;
  private global::CGameNotifications_LocalizedText title_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CGameNotifications_LocalizedText Title {
    get { return title_; }
    set {
      title_ = value;
    }
  }

  /// <summary>Field number for the "users" field.</summary>
  public const int UsersFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CGameNotifications_UserStatus> _repeated_users_codec
      = pb::FieldCodec.ForMessage(34, global::CGameNotifications_UserStatus.Parser);
  private readonly pbc::RepeatedField<global::CGameNotifications_UserStatus> users_ = new pbc::RepeatedField<global::CGameNotifications_UserStatus>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNotifications_UserStatus> Users {
    get { return users_; }
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 5;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_CreateSession_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_CreateSession_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Context != other.Context) return false;
    if (!object.Equals(Title, other.Title)) return false;
    if(!users_.Equals(other.users_)) return false;
    if (Steamid != other.Steamid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasContext) hash ^= Context.GetHashCode();
    if (title_ != null) hash ^= Title.GetHashCode();
    hash ^= users_.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasContext) {
      output.WriteRawTag(16);
      output.WriteUInt64(Context);
    }
    if (title_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Title);
    }
    users_.WriteTo(output, _repeated_users_codec);
    if (HasSteamid) {
      output.WriteRawTag(41);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasContext) {
      output.WriteRawTag(16);
      output.WriteUInt64(Context);
    }
    if (title_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Title);
    }
    users_.WriteTo(ref output, _repeated_users_codec);
    if (HasSteamid) {
      output.WriteRawTag(41);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasContext) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Context);
    }
    if (title_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
    }
    size += users_.CalculateSize(_repeated_users_codec);
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_CreateSession_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasContext) {
      Context = other.Context;
    }
    if (other.title_ != null) {
      if (title_ == null) {
        Title = new global::CGameNotifications_LocalizedText();
      }
      Title.MergeFrom(other.Title);
    }
    users_.Add(other.users_);
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Context = input.ReadUInt64();
          break;
        }
        case 26: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 34: {
          users_.AddEntriesFrom(input, _repeated_users_codec);
          break;
        }
        case 41: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Context = input.ReadUInt64();
          break;
        }
        case 26: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 34: {
          users_.AddEntriesFrom(ref input, _repeated_users_codec);
          break;
        }
        case 41: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_CreateSession_Response : pb::IMessage<CGameNotifications_CreateSession_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_CreateSession_Response> _parser = new pb::MessageParser<CGameNotifications_CreateSession_Response>(() => new CGameNotifications_CreateSession_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_CreateSession_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_CreateSession_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_CreateSession_Response(CGameNotifications_CreateSession_Response other) : this() {
    _hasBits0 = other._hasBits0;
    sessionid_ = other.sessionid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_CreateSession_Response Clone() {
    return new CGameNotifications_CreateSession_Response(this);
  }

  /// <summary>Field number for the "sessionid" field.</summary>
  public const int SessionidFieldNumber = 1;
  private readonly static ulong SessionidDefaultValue = 0UL;

  private ulong sessionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Sessionid {
    get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sessionid_ = value;
    }
  }
  /// <summary>Gets whether the "sessionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSessionid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "sessionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSessionid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_CreateSession_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_CreateSession_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sessionid != other.Sessionid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSessionid) hash ^= Sessionid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSessionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_CreateSession_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasSessionid) {
      Sessionid = other.Sessionid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_DeleteSession_Request : pb::IMessage<CGameNotifications_DeleteSession_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_DeleteSession_Request> _parser = new pb::MessageParser<CGameNotifications_DeleteSession_Request>(() => new CGameNotifications_DeleteSession_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_DeleteSession_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_DeleteSession_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_DeleteSession_Request(CGameNotifications_DeleteSession_Request other) : this() {
    _hasBits0 = other._hasBits0;
    sessionid_ = other.sessionid_;
    appid_ = other.appid_;
    steamid_ = other.steamid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_DeleteSession_Request Clone() {
    return new CGameNotifications_DeleteSession_Request(this);
  }

  /// <summary>Field number for the "sessionid" field.</summary>
  public const int SessionidFieldNumber = 1;
  private readonly static ulong SessionidDefaultValue = 0UL;

  private ulong sessionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Sessionid {
    get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sessionid_ = value;
    }
  }
  /// <summary>Gets whether the "sessionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSessionid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "sessionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSessionid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 3;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_DeleteSession_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_DeleteSession_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sessionid != other.Sessionid) return false;
    if (Appid != other.Appid) return false;
    if (Steamid != other.Steamid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSessionid) hash ^= Sessionid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasSteamid) {
      output.WriteRawTag(25);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasSteamid) {
      output.WriteRawTag(25);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSessionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_DeleteSession_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSessionid) {
      Sessionid = other.Sessionid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 25: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 25: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_DeleteSession_Response : pb::IMessage<CGameNotifications_DeleteSession_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_DeleteSession_Response> _parser = new pb::MessageParser<CGameNotifications_DeleteSession_Response>(() => new CGameNotifications_DeleteSession_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_DeleteSession_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_DeleteSession_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_DeleteSession_Response(CGameNotifications_DeleteSession_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_DeleteSession_Response Clone() {
    return new CGameNotifications_DeleteSession_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_DeleteSession_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_DeleteSession_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_DeleteSession_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_UpdateSession_Request : pb::IMessage<CGameNotifications_UpdateSession_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_UpdateSession_Request> _parser = new pb::MessageParser<CGameNotifications_UpdateSession_Request>(() => new CGameNotifications_UpdateSession_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_UpdateSession_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateSession_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateSession_Request(CGameNotifications_UpdateSession_Request other) : this() {
    _hasBits0 = other._hasBits0;
    sessionid_ = other.sessionid_;
    appid_ = other.appid_;
    title_ = other.title_ != null ? other.title_.Clone() : null;
    users_ = other.users_.Clone();
    steamid_ = other.steamid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateSession_Request Clone() {
    return new CGameNotifications_UpdateSession_Request(this);
  }

  /// <summary>Field number for the "sessionid" field.</summary>
  public const int SessionidFieldNumber = 1;
  private readonly static ulong SessionidDefaultValue = 0UL;

  private ulong sessionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Sessionid {
    get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sessionid_ = value;
    }
  }
  /// <summary>Gets whether the "sessionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSessionid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "sessionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSessionid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 3;
  private global::CGameNotifications_LocalizedText title_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CGameNotifications_LocalizedText Title {
    get { return title_; }
    set {
      title_ = value;
    }
  }

  /// <summary>Field number for the "users" field.</summary>
  public const int UsersFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CGameNotifications_UserStatus> _repeated_users_codec
      = pb::FieldCodec.ForMessage(34, global::CGameNotifications_UserStatus.Parser);
  private readonly pbc::RepeatedField<global::CGameNotifications_UserStatus> users_ = new pbc::RepeatedField<global::CGameNotifications_UserStatus>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNotifications_UserStatus> Users {
    get { return users_; }
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 6;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_UpdateSession_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_UpdateSession_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sessionid != other.Sessionid) return false;
    if (Appid != other.Appid) return false;
    if (!object.Equals(Title, other.Title)) return false;
    if(!users_.Equals(other.users_)) return false;
    if (Steamid != other.Steamid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSessionid) hash ^= Sessionid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (title_ != null) hash ^= Title.GetHashCode();
    hash ^= users_.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (title_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Title);
    }
    users_.WriteTo(output, _repeated_users_codec);
    if (HasSteamid) {
      output.WriteRawTag(49);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (title_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Title);
    }
    users_.WriteTo(ref output, _repeated_users_codec);
    if (HasSteamid) {
      output.WriteRawTag(49);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSessionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (title_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
    }
    size += users_.CalculateSize(_repeated_users_codec);
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_UpdateSession_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSessionid) {
      Sessionid = other.Sessionid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.title_ != null) {
      if (title_ == null) {
        Title = new global::CGameNotifications_LocalizedText();
      }
      Title.MergeFrom(other.Title);
    }
    users_.Add(other.users_);
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 26: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 34: {
          users_.AddEntriesFrom(input, _repeated_users_codec);
          break;
        }
        case 49: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 26: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 34: {
          users_.AddEntriesFrom(ref input, _repeated_users_codec);
          break;
        }
        case 49: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_UpdateSession_Response : pb::IMessage<CGameNotifications_UpdateSession_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_UpdateSession_Response> _parser = new pb::MessageParser<CGameNotifications_UpdateSession_Response>(() => new CGameNotifications_UpdateSession_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_UpdateSession_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateSession_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateSession_Response(CGameNotifications_UpdateSession_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateSession_Response Clone() {
    return new CGameNotifications_UpdateSession_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_UpdateSession_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_UpdateSession_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_UpdateSession_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_EnumerateSessions_Request : pb::IMessage<CGameNotifications_EnumerateSessions_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_EnumerateSessions_Request> _parser = new pb::MessageParser<CGameNotifications_EnumerateSessions_Request>(() => new CGameNotifications_EnumerateSessions_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_EnumerateSessions_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_EnumerateSessions_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_EnumerateSessions_Request(CGameNotifications_EnumerateSessions_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    includeAllUserMessages_ = other.includeAllUserMessages_;
    includeAuthUserMessage_ = other.includeAuthUserMessage_;
    language_ = other.language_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_EnumerateSessions_Request Clone() {
    return new CGameNotifications_EnumerateSessions_Request(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "include_all_user_messages" field.</summary>
  public const int IncludeAllUserMessagesFieldNumber = 3;
  private readonly static bool IncludeAllUserMessagesDefaultValue = false;

  private bool includeAllUserMessages_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IncludeAllUserMessages {
    get { if ((_hasBits0 & 2) != 0) { return includeAllUserMessages_; } else { return IncludeAllUserMessagesDefaultValue; } }
    set {
      _hasBits0 |= 2;
      includeAllUserMessages_ = value;
    }
  }
  /// <summary>Gets whether the "include_all_user_messages" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncludeAllUserMessages {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "include_all_user_messages" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncludeAllUserMessages() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "include_auth_user_message" field.</summary>
  public const int IncludeAuthUserMessageFieldNumber = 4;
  private readonly static bool IncludeAuthUserMessageDefaultValue = false;

  private bool includeAuthUserMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IncludeAuthUserMessage {
    get { if ((_hasBits0 & 4) != 0) { return includeAuthUserMessage_; } else { return IncludeAuthUserMessageDefaultValue; } }
    set {
      _hasBits0 |= 4;
      includeAuthUserMessage_ = value;
    }
  }
  /// <summary>Gets whether the "include_auth_user_message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncludeAuthUserMessage {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "include_auth_user_message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncludeAuthUserMessage() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "language" field.</summary>
  public const int LanguageFieldNumber = 5;
  private readonly static string LanguageDefaultValue = "";

  private string language_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Language {
    get { return language_ ?? LanguageDefaultValue; }
    set {
      language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "language" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLanguage {
    get { return language_ != null; }
  }
  /// <summary>Clears the value of the "language" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLanguage() {
    language_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_EnumerateSessions_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_EnumerateSessions_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (IncludeAllUserMessages != other.IncludeAllUserMessages) return false;
    if (IncludeAuthUserMessage != other.IncludeAuthUserMessage) return false;
    if (Language != other.Language) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasIncludeAllUserMessages) hash ^= IncludeAllUserMessages.GetHashCode();
    if (HasIncludeAuthUserMessage) hash ^= IncludeAuthUserMessage.GetHashCode();
    if (HasLanguage) hash ^= Language.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasIncludeAllUserMessages) {
      output.WriteRawTag(24);
      output.WriteBool(IncludeAllUserMessages);
    }
    if (HasIncludeAuthUserMessage) {
      output.WriteRawTag(32);
      output.WriteBool(IncludeAuthUserMessage);
    }
    if (HasLanguage) {
      output.WriteRawTag(42);
      output.WriteString(Language);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasIncludeAllUserMessages) {
      output.WriteRawTag(24);
      output.WriteBool(IncludeAllUserMessages);
    }
    if (HasIncludeAuthUserMessage) {
      output.WriteRawTag(32);
      output.WriteBool(IncludeAuthUserMessage);
    }
    if (HasLanguage) {
      output.WriteRawTag(42);
      output.WriteString(Language);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasIncludeAllUserMessages) {
      size += 1 + 1;
    }
    if (HasIncludeAuthUserMessage) {
      size += 1 + 1;
    }
    if (HasLanguage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_EnumerateSessions_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasIncludeAllUserMessages) {
      IncludeAllUserMessages = other.IncludeAllUserMessages;
    }
    if (other.HasIncludeAuthUserMessage) {
      IncludeAuthUserMessage = other.IncludeAuthUserMessage;
    }
    if (other.HasLanguage) {
      Language = other.Language;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 24: {
          IncludeAllUserMessages = input.ReadBool();
          break;
        }
        case 32: {
          IncludeAuthUserMessage = input.ReadBool();
          break;
        }
        case 42: {
          Language = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 24: {
          IncludeAllUserMessages = input.ReadBool();
          break;
        }
        case 32: {
          IncludeAuthUserMessage = input.ReadBool();
          break;
        }
        case 42: {
          Language = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_Session : pb::IMessage<CGameNotifications_Session>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_Session> _parser = new pb::MessageParser<CGameNotifications_Session>(() => new CGameNotifications_Session());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_Session> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_Session() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_Session(CGameNotifications_Session other) : this() {
    _hasBits0 = other._hasBits0;
    sessionid_ = other.sessionid_;
    appid_ = other.appid_;
    context_ = other.context_;
    title_ = other.title_ != null ? other.title_.Clone() : null;
    timeCreated_ = other.timeCreated_;
    timeUpdated_ = other.timeUpdated_;
    userStatus_ = other.userStatus_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_Session Clone() {
    return new CGameNotifications_Session(this);
  }

  /// <summary>Field number for the "sessionid" field.</summary>
  public const int SessionidFieldNumber = 1;
  private readonly static ulong SessionidDefaultValue = 0UL;

  private ulong sessionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Sessionid {
    get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sessionid_ = value;
    }
  }
  /// <summary>Gets whether the "sessionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSessionid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "sessionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSessionid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static ulong AppidDefaultValue = 0UL;

  private ulong appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "context" field.</summary>
  public const int ContextFieldNumber = 3;
  private readonly static ulong ContextDefaultValue = 0UL;

  private ulong context_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Context {
    get { if ((_hasBits0 & 4) != 0) { return context_; } else { return ContextDefaultValue; } }
    set {
      _hasBits0 |= 4;
      context_ = value;
    }
  }
  /// <summary>Gets whether the "context" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasContext {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "context" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearContext() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 4;
  private global::CGameNotifications_LocalizedText title_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CGameNotifications_LocalizedText Title {
    get { return title_; }
    set {
      title_ = value;
    }
  }

  /// <summary>Field number for the "time_created" field.</summary>
  public const int TimeCreatedFieldNumber = 5;
  private readonly static uint TimeCreatedDefaultValue = 0;

  private uint timeCreated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeCreated {
    get { if ((_hasBits0 & 8) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      timeCreated_ = value;
    }
  }
  /// <summary>Gets whether the "time_created" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeCreated {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "time_created" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeCreated() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "time_updated" field.</summary>
  public const int TimeUpdatedFieldNumber = 6;
  private readonly static uint TimeUpdatedDefaultValue = 0;

  private uint timeUpdated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeUpdated {
    get { if ((_hasBits0 & 16) != 0) { return timeUpdated_; } else { return TimeUpdatedDefaultValue; } }
    set {
      _hasBits0 |= 16;
      timeUpdated_ = value;
    }
  }
  /// <summary>Gets whether the "time_updated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimeUpdated {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "time_updated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimeUpdated() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "user_status" field.</summary>
  public const int UserStatusFieldNumber = 7;
  private static readonly pb::FieldCodec<global::CGameNotifications_UserStatus> _repeated_userStatus_codec
      = pb::FieldCodec.ForMessage(58, global::CGameNotifications_UserStatus.Parser);
  private readonly pbc::RepeatedField<global::CGameNotifications_UserStatus> userStatus_ = new pbc::RepeatedField<global::CGameNotifications_UserStatus>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNotifications_UserStatus> UserStatus {
    get { return userStatus_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_Session);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_Session other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Sessionid != other.Sessionid) return false;
    if (Appid != other.Appid) return false;
    if (Context != other.Context) return false;
    if (!object.Equals(Title, other.Title)) return false;
    if (TimeCreated != other.TimeCreated) return false;
    if (TimeUpdated != other.TimeUpdated) return false;
    if(!userStatus_.Equals(other.userStatus_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSessionid) hash ^= Sessionid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasContext) hash ^= Context.GetHashCode();
    if (title_ != null) hash ^= Title.GetHashCode();
    if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
    if (HasTimeUpdated) hash ^= TimeUpdated.GetHashCode();
    hash ^= userStatus_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Appid);
    }
    if (HasContext) {
      output.WriteRawTag(24);
      output.WriteUInt64(Context);
    }
    if (title_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Title);
    }
    if (HasTimeCreated) {
      output.WriteRawTag(40);
      output.WriteUInt32(TimeCreated);
    }
    if (HasTimeUpdated) {
      output.WriteRawTag(48);
      output.WriteUInt32(TimeUpdated);
    }
    userStatus_.WriteTo(output, _repeated_userStatus_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSessionid) {
      output.WriteRawTag(8);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Appid);
    }
    if (HasContext) {
      output.WriteRawTag(24);
      output.WriteUInt64(Context);
    }
    if (title_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Title);
    }
    if (HasTimeCreated) {
      output.WriteRawTag(40);
      output.WriteUInt32(TimeCreated);
    }
    if (HasTimeUpdated) {
      output.WriteRawTag(48);
      output.WriteUInt32(TimeUpdated);
    }
    userStatus_.WriteTo(ref output, _repeated_userStatus_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSessionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Appid);
    }
    if (HasContext) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Context);
    }
    if (title_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
    }
    if (HasTimeCreated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCreated);
    }
    if (HasTimeUpdated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeUpdated);
    }
    size += userStatus_.CalculateSize(_repeated_userStatus_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_Session other) {
    if (other == null) {
      return;
    }
    if (other.HasSessionid) {
      Sessionid = other.Sessionid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasContext) {
      Context = other.Context;
    }
    if (other.title_ != null) {
      if (title_ == null) {
        Title = new global::CGameNotifications_LocalizedText();
      }
      Title.MergeFrom(other.Title);
    }
    if (other.HasTimeCreated) {
      TimeCreated = other.TimeCreated;
    }
    if (other.HasTimeUpdated) {
      TimeUpdated = other.TimeUpdated;
    }
    userStatus_.Add(other.userStatus_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt64();
          break;
        }
        case 24: {
          Context = input.ReadUInt64();
          break;
        }
        case 34: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 40: {
          TimeCreated = input.ReadUInt32();
          break;
        }
        case 48: {
          TimeUpdated = input.ReadUInt32();
          break;
        }
        case 58: {
          userStatus_.AddEntriesFrom(input, _repeated_userStatus_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt64();
          break;
        }
        case 24: {
          Context = input.ReadUInt64();
          break;
        }
        case 34: {
          if (title_ == null) {
            Title = new global::CGameNotifications_LocalizedText();
          }
          input.ReadMessage(Title);
          break;
        }
        case 40: {
          TimeCreated = input.ReadUInt32();
          break;
        }
        case 48: {
          TimeUpdated = input.ReadUInt32();
          break;
        }
        case 58: {
          userStatus_.AddEntriesFrom(ref input, _repeated_userStatus_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_EnumerateSessions_Response : pb::IMessage<CGameNotifications_EnumerateSessions_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_EnumerateSessions_Response> _parser = new pb::MessageParser<CGameNotifications_EnumerateSessions_Response>(() => new CGameNotifications_EnumerateSessions_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_EnumerateSessions_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_EnumerateSessions_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_EnumerateSessions_Response(CGameNotifications_EnumerateSessions_Response other) : this() {
    sessions_ = other.sessions_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_EnumerateSessions_Response Clone() {
    return new CGameNotifications_EnumerateSessions_Response(this);
  }

  /// <summary>Field number for the "sessions" field.</summary>
  public const int SessionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CGameNotifications_Session> _repeated_sessions_codec
      = pb::FieldCodec.ForMessage(10, global::CGameNotifications_Session.Parser);
  private readonly pbc::RepeatedField<global::CGameNotifications_Session> sessions_ = new pbc::RepeatedField<global::CGameNotifications_Session>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNotifications_Session> Sessions {
    get { return sessions_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_EnumerateSessions_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_EnumerateSessions_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!sessions_.Equals(other.sessions_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= sessions_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    sessions_.WriteTo(output, _repeated_sessions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    sessions_.WriteTo(ref output, _repeated_sessions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += sessions_.CalculateSize(_repeated_sessions_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_EnumerateSessions_Response other) {
    if (other == null) {
      return;
    }
    sessions_.Add(other.sessions_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_GetSessionDetails_Request : pb::IMessage<CGameNotifications_GetSessionDetails_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_GetSessionDetails_Request> _parser = new pb::MessageParser<CGameNotifications_GetSessionDetails_Request>(() => new CGameNotifications_GetSessionDetails_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_GetSessionDetails_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_GetSessionDetails_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_GetSessionDetails_Request(CGameNotifications_GetSessionDetails_Request other) : this() {
    _hasBits0 = other._hasBits0;
    sessions_ = other.sessions_.Clone();
    appid_ = other.appid_;
    language_ = other.language_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_GetSessionDetails_Request Clone() {
    return new CGameNotifications_GetSessionDetails_Request(this);
  }

  /// <summary>Field number for the "sessions" field.</summary>
  public const int SessionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CGameNotifications_GetSessionDetails_Request.Types.RequestedSession> _repeated_sessions_codec
      = pb::FieldCodec.ForMessage(10, global::CGameNotifications_GetSessionDetails_Request.Types.RequestedSession.Parser);
  private readonly pbc::RepeatedField<global::CGameNotifications_GetSessionDetails_Request.Types.RequestedSession> sessions_ = new pbc::RepeatedField<global::CGameNotifications_GetSessionDetails_Request.Types.RequestedSession>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNotifications_GetSessionDetails_Request.Types.RequestedSession> Sessions {
    get { return sessions_; }
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "language" field.</summary>
  public const int LanguageFieldNumber = 3;
  private readonly static string LanguageDefaultValue = "";

  private string language_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Language {
    get { return language_ ?? LanguageDefaultValue; }
    set {
      language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "language" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLanguage {
    get { return language_ != null; }
  }
  /// <summary>Clears the value of the "language" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLanguage() {
    language_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_GetSessionDetails_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_GetSessionDetails_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!sessions_.Equals(other.sessions_)) return false;
    if (Appid != other.Appid) return false;
    if (Language != other.Language) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= sessions_.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasLanguage) hash ^= Language.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    sessions_.WriteTo(output, _repeated_sessions_codec);
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasLanguage) {
      output.WriteRawTag(26);
      output.WriteString(Language);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    sessions_.WriteTo(ref output, _repeated_sessions_codec);
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasLanguage) {
      output.WriteRawTag(26);
      output.WriteString(Language);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += sessions_.CalculateSize(_repeated_sessions_codec);
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasLanguage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_GetSessionDetails_Request other) {
    if (other == null) {
      return;
    }
    sessions_.Add(other.sessions_);
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasLanguage) {
      Language = other.Language;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 26: {
          Language = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 26: {
          Language = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CGameNotifications_GetSessionDetails_Request message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class RequestedSession : pb::IMessage<RequestedSession>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<RequestedSession> _parser = new pb::MessageParser<RequestedSession>(() => new RequestedSession());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<RequestedSession> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CGameNotifications_GetSessionDetails_Request.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public RequestedSession() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public RequestedSession(RequestedSession other) : this() {
        _hasBits0 = other._hasBits0;
        sessionid_ = other.sessionid_;
        includeAuthUserMessage_ = other.includeAuthUserMessage_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public RequestedSession Clone() {
        return new RequestedSession(this);
      }

      /// <summary>Field number for the "sessionid" field.</summary>
      public const int SessionidFieldNumber = 1;
      private readonly static ulong SessionidDefaultValue = 0UL;

      private ulong sessionid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Sessionid {
        get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          sessionid_ = value;
        }
      }
      /// <summary>Gets whether the "sessionid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSessionid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "sessionid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSessionid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "include_auth_user_message" field.</summary>
      public const int IncludeAuthUserMessageFieldNumber = 3;
      private readonly static bool IncludeAuthUserMessageDefaultValue = false;

      private bool includeAuthUserMessage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IncludeAuthUserMessage {
        get { if ((_hasBits0 & 2) != 0) { return includeAuthUserMessage_; } else { return IncludeAuthUserMessageDefaultValue; } }
        set {
          _hasBits0 |= 2;
          includeAuthUserMessage_ = value;
        }
      }
      /// <summary>Gets whether the "include_auth_user_message" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIncludeAuthUserMessage {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "include_auth_user_message" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIncludeAuthUserMessage() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as RequestedSession);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(RequestedSession other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Sessionid != other.Sessionid) return false;
        if (IncludeAuthUserMessage != other.IncludeAuthUserMessage) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSessionid) hash ^= Sessionid.GetHashCode();
        if (HasIncludeAuthUserMessage) hash ^= IncludeAuthUserMessage.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSessionid) {
          output.WriteRawTag(8);
          output.WriteUInt64(Sessionid);
        }
        if (HasIncludeAuthUserMessage) {
          output.WriteRawTag(24);
          output.WriteBool(IncludeAuthUserMessage);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSessionid) {
          output.WriteRawTag(8);
          output.WriteUInt64(Sessionid);
        }
        if (HasIncludeAuthUserMessage) {
          output.WriteRawTag(24);
          output.WriteBool(IncludeAuthUserMessage);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSessionid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
        }
        if (HasIncludeAuthUserMessage) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(RequestedSession other) {
        if (other == null) {
          return;
        }
        if (other.HasSessionid) {
          Sessionid = other.Sessionid;
        }
        if (other.HasIncludeAuthUserMessage) {
          IncludeAuthUserMessage = other.IncludeAuthUserMessage;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Sessionid = input.ReadUInt64();
              break;
            }
            case 24: {
              IncludeAuthUserMessage = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Sessionid = input.ReadUInt64();
              break;
            }
            case 24: {
              IncludeAuthUserMessage = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CGameNotifications_GetSessionDetails_Response : pb::IMessage<CGameNotifications_GetSessionDetails_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_GetSessionDetails_Response> _parser = new pb::MessageParser<CGameNotifications_GetSessionDetails_Response>(() => new CGameNotifications_GetSessionDetails_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_GetSessionDetails_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_GetSessionDetails_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_GetSessionDetails_Response(CGameNotifications_GetSessionDetails_Response other) : this() {
    sessions_ = other.sessions_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_GetSessionDetails_Response Clone() {
    return new CGameNotifications_GetSessionDetails_Response(this);
  }

  /// <summary>Field number for the "sessions" field.</summary>
  public const int SessionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CGameNotifications_Session> _repeated_sessions_codec
      = pb::FieldCodec.ForMessage(10, global::CGameNotifications_Session.Parser);
  private readonly pbc::RepeatedField<global::CGameNotifications_Session> sessions_ = new pbc::RepeatedField<global::CGameNotifications_Session>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CGameNotifications_Session> Sessions {
    get { return sessions_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_GetSessionDetails_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_GetSessionDetails_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!sessions_.Equals(other.sessions_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= sessions_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    sessions_.WriteTo(output, _repeated_sessions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    sessions_.WriteTo(ref output, _repeated_sessions_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += sessions_.CalculateSize(_repeated_sessions_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_GetSessionDetails_Response other) {
    if (other == null) {
      return;
    }
    sessions_.Add(other.sessions_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class GameNotificationSettings : pb::IMessage<GameNotificationSettings>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameNotificationSettings> _parser = new pb::MessageParser<GameNotificationSettings>(() => new GameNotificationSettings());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameNotificationSettings> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameNotificationSettings() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameNotificationSettings(GameNotificationSettings other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    allowNotifications_ = other.allowNotifications_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameNotificationSettings Clone() {
    return new GameNotificationSettings(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "allow_notifications" field.</summary>
  public const int AllowNotificationsFieldNumber = 2;
  private readonly static bool AllowNotificationsDefaultValue = false;

  private bool allowNotifications_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AllowNotifications {
    get { if ((_hasBits0 & 2) != 0) { return allowNotifications_; } else { return AllowNotificationsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      allowNotifications_ = value;
    }
  }
  /// <summary>Gets whether the "allow_notifications" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAllowNotifications {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "allow_notifications" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAllowNotifications() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameNotificationSettings);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameNotificationSettings other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (AllowNotifications != other.AllowNotifications) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasAllowNotifications) hash ^= AllowNotifications.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasAllowNotifications) {
      output.WriteRawTag(16);
      output.WriteBool(AllowNotifications);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasAllowNotifications) {
      output.WriteRawTag(16);
      output.WriteBool(AllowNotifications);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasAllowNotifications) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameNotificationSettings other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasAllowNotifications) {
      AllowNotifications = other.AllowNotifications;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          AllowNotifications = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          AllowNotifications = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_UpdateNotificationSettings_Request : pb::IMessage<CGameNotifications_UpdateNotificationSettings_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Request> _parser = new pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Request>(() => new CGameNotifications_UpdateNotificationSettings_Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateNotificationSettings_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateNotificationSettings_Request(CGameNotifications_UpdateNotificationSettings_Request other) : this() {
    gameNotificationSettings_ = other.gameNotificationSettings_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateNotificationSettings_Request Clone() {
    return new CGameNotifications_UpdateNotificationSettings_Request(this);
  }

  /// <summary>Field number for the "game_notification_settings" field.</summary>
  public const int GameNotificationSettingsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GameNotificationSettings> _repeated_gameNotificationSettings_codec
      = pb::FieldCodec.ForMessage(10, global::GameNotificationSettings.Parser);
  private readonly pbc::RepeatedField<global::GameNotificationSettings> gameNotificationSettings_ = new pbc::RepeatedField<global::GameNotificationSettings>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::GameNotificationSettings> GameNotificationSettings {
    get { return gameNotificationSettings_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_UpdateNotificationSettings_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_UpdateNotificationSettings_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!gameNotificationSettings_.Equals(other.gameNotificationSettings_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= gameNotificationSettings_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    gameNotificationSettings_.WriteTo(output, _repeated_gameNotificationSettings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    gameNotificationSettings_.WriteTo(ref output, _repeated_gameNotificationSettings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += gameNotificationSettings_.CalculateSize(_repeated_gameNotificationSettings_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_UpdateNotificationSettings_Request other) {
    if (other == null) {
      return;
    }
    gameNotificationSettings_.Add(other.gameNotificationSettings_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          gameNotificationSettings_.AddEntriesFrom(input, _repeated_gameNotificationSettings_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          gameNotificationSettings_.AddEntriesFrom(ref input, _repeated_gameNotificationSettings_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_UpdateNotificationSettings_Response : pb::IMessage<CGameNotifications_UpdateNotificationSettings_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Response> _parser = new pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Response>(() => new CGameNotifications_UpdateNotificationSettings_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateNotificationSettings_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateNotificationSettings_Response(CGameNotifications_UpdateNotificationSettings_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_UpdateNotificationSettings_Response Clone() {
    return new CGameNotifications_UpdateNotificationSettings_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_UpdateNotificationSettings_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_UpdateNotificationSettings_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_UpdateNotificationSettings_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_OnNotificationsRequested_Notification : pb::IMessage<CGameNotifications_OnNotificationsRequested_Notification>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_OnNotificationsRequested_Notification> _parser = new pb::MessageParser<CGameNotifications_OnNotificationsRequested_Notification>(() => new CGameNotifications_OnNotificationsRequested_Notification());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_OnNotificationsRequested_Notification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_OnNotificationsRequested_Notification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_OnNotificationsRequested_Notification(CGameNotifications_OnNotificationsRequested_Notification other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    appid_ = other.appid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_OnNotificationsRequested_Notification Clone() {
    return new CGameNotifications_OnNotificationsRequested_Notification(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_OnNotificationsRequested_Notification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_OnNotificationsRequested_Notification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Appid != other.Appid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_OnNotificationsRequested_Notification other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CGameNotifications_OnUserStatusChanged_Notification : pb::IMessage<CGameNotifications_OnUserStatusChanged_Notification>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGameNotifications_OnUserStatusChanged_Notification> _parser = new pb::MessageParser<CGameNotifications_OnUserStatusChanged_Notification>(() => new CGameNotifications_OnUserStatusChanged_Notification());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGameNotifications_OnUserStatusChanged_Notification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_OnUserStatusChanged_Notification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_OnUserStatusChanged_Notification(CGameNotifications_OnUserStatusChanged_Notification other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    sessionid_ = other.sessionid_;
    appid_ = other.appid_;
    status_ = other.status_ != null ? other.status_.Clone() : null;
    removed_ = other.removed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGameNotifications_OnUserStatusChanged_Notification Clone() {
    return new CGameNotifications_OnUserStatusChanged_Notification(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "sessionid" field.</summary>
  public const int SessionidFieldNumber = 2;
  private readonly static ulong SessionidDefaultValue = 0UL;

  private ulong sessionid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Sessionid {
    get { if ((_hasBits0 & 2) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      sessionid_ = value;
    }
  }
  /// <summary>Gets whether the "sessionid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSessionid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "sessionid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSessionid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 3;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 4) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 4;
  private global::CGameNotifications_UserStatus status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CGameNotifications_UserStatus Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "removed" field.</summary>
  public const int RemovedFieldNumber = 5;
  private readonly static bool RemovedDefaultValue = false;

  private bool removed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Removed {
    get { if ((_hasBits0 & 8) != 0) { return removed_; } else { return RemovedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      removed_ = value;
    }
  }
  /// <summary>Gets whether the "removed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRemoved {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "removed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRemoved() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGameNotifications_OnUserStatusChanged_Notification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGameNotifications_OnUserStatusChanged_Notification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Sessionid != other.Sessionid) return false;
    if (Appid != other.Appid) return false;
    if (!object.Equals(Status, other.Status)) return false;
    if (Removed != other.Removed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasSessionid) hash ^= Sessionid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (status_ != null) hash ^= Status.GetHashCode();
    if (HasRemoved) hash ^= Removed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasSessionid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Appid);
    }
    if (status_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Status);
    }
    if (HasRemoved) {
      output.WriteRawTag(40);
      output.WriteBool(Removed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasSessionid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Sessionid);
    }
    if (HasAppid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Appid);
    }
    if (status_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Status);
    }
    if (HasRemoved) {
      output.WriteRawTag(40);
      output.WriteBool(Removed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasSessionid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (status_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
    }
    if (HasRemoved) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGameNotifications_OnUserStatusChanged_Notification other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasSessionid) {
      Sessionid = other.Sessionid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.status_ != null) {
      if (status_ == null) {
        Status = new global::CGameNotifications_UserStatus();
      }
      Status.MergeFrom(other.Status);
    }
    if (other.HasRemoved) {
      Removed = other.Removed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 24: {
          Appid = input.ReadUInt32();
          break;
        }
        case 34: {
          if (status_ == null) {
            Status = new global::CGameNotifications_UserStatus();
          }
          input.ReadMessage(Status);
          break;
        }
        case 40: {
          Removed = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Sessionid = input.ReadUInt64();
          break;
        }
        case 24: {
          Appid = input.ReadUInt32();
          break;
        }
        case 34: {
          if (status_ == null) {
            Status = new global::CGameNotifications_UserStatus();
          }
          input.ReadMessage(Status);
          break;
        }
        case 40: {
          Removed = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

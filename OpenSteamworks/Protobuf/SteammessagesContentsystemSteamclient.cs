// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_contentsystem.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_contentsystem.steamclient.proto</summary>
public static partial class SteammessagesContentsystemSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_contentsystem.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesContentsystemSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ci1zdGVhbW1lc3NhZ2VzX2NvbnRlbnRzeXN0ZW0uc3RlYW1jbGllbnQucHJv",
          "dG8aGHN0ZWFtbWVzc2FnZXNfYmFzZS5wcm90bxosc3RlYW1tZXNzYWdlc191",
          "bmlmaWVkX2Jhc2Uuc3RlYW1jbGllbnQucHJvdG8itQIKNkNDb250ZW50U2Vy",
          "dmVyRGlyZWN0b3J5X0dldFNlcnZlcnNGb3JTdGVhbVBpcGVfUmVxdWVzdBIj",
          "CgdjZWxsX2lkGAEgASgNQhKCtRgOY2xpZW50IENlbGwgSUQSOQoLbWF4X3Nl",
          "cnZlcnMYAiABKA06AjIwQiCCtRgcbWF4IHNlcnZlcnMgaW4gcmVzcG9uc2Ug",
          "bGlzdBIqCgtpcF9vdmVycmlkZRgDIAEoCUIVgrUYEWNsaWVudCBJUCBhZGRy",
          "ZXNzEisKDWxhdW5jaGVyX3R5cGUYBCABKAU6ATBCEYK1GA1sYXVuY2hlciB0",
          "eXBlEkIKC2lwdjZfcHVibGljGAUgASgJQi2CtRgpY2xpZW50IHB1YmxpYyBp",
          "cHY2IGFkZHJlc3MgaWYgaXQga25vd3MgaXQi2wIKIkNDb250ZW50U2VydmVy",
          "RGlyZWN0b3J5X1NlcnZlckluZm8SDAoEdHlwZRgBIAEoCRIRCglzb3VyY2Vf",
          "aWQYAiABKAUSDwoHY2VsbF9pZBgDIAEoBRIMCgRsb2FkGAQgASgFEhUKDXdl",
          "aWdodGVkX2xvYWQYBSABKAISIgoabnVtX2VudHJpZXNfaW5fY2xpZW50X2xp",
          "c3QYBiABKAUSGAoQc3RlYW1fY2hpbmFfb25seRgHIAEoCBIMCgRob3N0GAgg",
          "ASgJEg0KBXZob3N0GAkgASgJEhQKDHVzZV9hc19wcm94eRgKIAEoCBIjChtw",
          "cm94eV9yZXF1ZXN0X3BhdGhfdGVtcGxhdGUYCyABKAkSFQoNaHR0cHNfc3Vw",
          "cG9ydBgMIAEoCRIXCg9hbGxvd2VkX2FwcF9pZHMYDSADKA0SGAoQcHJlZmVy",
          "cmVkX3NlcnZlchgOIAEoCCJvCjdDQ29udGVudFNlcnZlckRpcmVjdG9yeV9H",
          "ZXRTZXJ2ZXJzRm9yU3RlYW1QaXBlX1Jlc3BvbnNlEjQKB3NlcnZlcnMYASAD",
          "KAsyIy5DQ29udGVudFNlcnZlckRpcmVjdG9yeV9TZXJ2ZXJJbmZvIokBCjFD",
          "Q29udGVudFNlcnZlckRpcmVjdG9yeV9HZXREZXBvdFBhdGNoSW5mb19SZXF1",
          "ZXN0Eg0KBWFwcGlkGAEgASgNEg8KB2RlcG90aWQYAiABKA0SGQoRc291cmNl",
          "X21hbmlmZXN0aWQYAyABKAQSGQoRdGFyZ2V0X21hbmlmZXN0aWQYBCABKAQi",
          "ewoyQ0NvbnRlbnRTZXJ2ZXJEaXJlY3RvcnlfR2V0RGVwb3RQYXRjaEluZm9f",
          "UmVzcG9uc2USFAoMaXNfYXZhaWxhYmxlGAEgASgIEhIKCnBhdGNoX3NpemUY",
          "AiABKAQSGwoTcGF0Y2hlZF9jaHVua3Nfc2l6ZRgDIAEoBCJQCjRDQ29udGVu",
          "dFNlcnZlckRpcmVjdG9yeV9HZXRDbGllbnRVcGRhdGVIb3N0c19SZXF1ZXN0",
          "EhgKEGNhY2hlZF9zaWduYXR1cmUYASABKAkidwo1Q0NvbnRlbnRTZXJ2ZXJE",
          "aXJlY3RvcnlfR2V0Q2xpZW50VXBkYXRlSG9zdHNfUmVzcG9uc2USEAoIaG9z",
          "dHNfa3YYASABKAkSGAoQdmFsaWRfdW50aWxfdGltZRgCIAEoBBISCgppcF9j",
          "b3VudHJ5GAMgASgJIqEBCjZDQ29udGVudFNlcnZlckRpcmVjdG9yeV9HZXRN",
          "YW5pZmVzdFJlcXVlc3RDb2RlX1JlcXVlc3QSDgoGYXBwX2lkGAEgASgNEhAK",
          "CGRlcG90X2lkGAIgASgNEhMKC21hbmlmZXN0X2lkGAMgASgEEhIKCmFwcF9i",
          "cmFuY2gYBCABKAkSHAoUYnJhbmNoX3Bhc3N3b3JkX2hhc2gYBSABKAkiWAo3",
          "Q0NvbnRlbnRTZXJ2ZXJEaXJlY3RvcnlfR2V0TWFuaWZlc3RSZXF1ZXN0Q29k",
          "ZV9SZXNwb25zZRIdChVtYW5pZmVzdF9yZXF1ZXN0X2NvZGUYASABKAQiZgov",
          "Q0NvbnRlbnRTZXJ2ZXJEaXJlY3RvcnlfR2V0Q0ROQXV0aFRva2VuX1JlcXVl",
          "c3QSEAoIZGVwb3RfaWQYASABKA0SEQoJaG9zdF9uYW1lGAIgASgJEg4KBmFw",
          "cF9pZBgDIAEoDSJaCjBDQ29udGVudFNlcnZlckRpcmVjdG9yeV9HZXRDRE5B",
          "dXRoVG9rZW5fUmVzcG9uc2USDQoFdG9rZW4YASABKAkSFwoPZXhwaXJhdGlv",
          "bl90aW1lGAIgASgNIrABCjhDQ29udGVudFNlcnZlckRpcmVjdG9yeV9SZXF1",
          "ZXN0UGVlckNvbnRlbnRTZXJ2ZXJfUmVxdWVzdBIYChByZW1vdGVfY2xpZW50",
          "X2lkGAEgASgEEg8KB3N0ZWFtaWQYAiABKAQSHwoXc2VydmVyX3JlbW90ZV9j",
          "bGllbnRfaWQYAyABKAQSDgoGYXBwX2lkGAQgASgNEhgKEGN1cnJlbnRfYnVp",
          "bGRfaWQYBSABKA0iago5Q0NvbnRlbnRTZXJ2ZXJEaXJlY3RvcnlfUmVxdWVz",
          "dFBlZXJDb250ZW50U2VydmVyX1Jlc3BvbnNlEhMKC3NlcnZlcl9wb3J0GAEg",
          "ASgNEhgKEGluc3RhbGxlZF9kZXBvdHMYAiADKA0igAEKMkNDb250ZW50U2Vy",
          "dmVyRGlyZWN0b3J5X0dldFBlZXJDb250ZW50SW5mb19SZXF1ZXN0EhgKEHJl",
          "bW90ZV9jbGllbnRfaWQYASABKAQSDwoHc3RlYW1pZBgCIAEoBBIfChdzZXJ2",
          "ZXJfcmVtb3RlX2NsaWVudF9pZBgDIAEoBCJYCjNDQ29udGVudFNlcnZlckRp",
          "cmVjdG9yeV9HZXRQZWVyQ29udGVudEluZm9fUmVzcG9uc2USDgoGYXBwaWRz",
          "GAEgAygNEhEKCWlwX3B1YmxpYxgCIAEoCTLtBwoWQ29udGVudFNlcnZlckRp",
          "cmVjdG9yeRKLAQoWR2V0U2VydmVyc0ZvclN0ZWFtUGlwZRI3LkNDb250ZW50",
          "U2VydmVyRGlyZWN0b3J5X0dldFNlcnZlcnNGb3JTdGVhbVBpcGVfUmVxdWVz",
          "dBo4LkNDb250ZW50U2VydmVyRGlyZWN0b3J5X0dldFNlcnZlcnNGb3JTdGVh",
          "bVBpcGVfUmVzcG9uc2USfAoRR2V0RGVwb3RQYXRjaEluZm8SMi5DQ29udGVu",
          "dFNlcnZlckRpcmVjdG9yeV9HZXREZXBvdFBhdGNoSW5mb19SZXF1ZXN0GjMu",
          "Q0NvbnRlbnRTZXJ2ZXJEaXJlY3RvcnlfR2V0RGVwb3RQYXRjaEluZm9fUmVz",
          "cG9uc2UShQEKFEdldENsaWVudFVwZGF0ZUhvc3RzEjUuQ0NvbnRlbnRTZXJ2",
          "ZXJEaXJlY3RvcnlfR2V0Q2xpZW50VXBkYXRlSG9zdHNfUmVxdWVzdBo2LkND",
          "b250ZW50U2VydmVyRGlyZWN0b3J5X0dldENsaWVudFVwZGF0ZUhvc3RzX1Jl",
          "c3BvbnNlEosBChZHZXRNYW5pZmVzdFJlcXVlc3RDb2RlEjcuQ0NvbnRlbnRT",
          "ZXJ2ZXJEaXJlY3RvcnlfR2V0TWFuaWZlc3RSZXF1ZXN0Q29kZV9SZXF1ZXN0",
          "GjguQ0NvbnRlbnRTZXJ2ZXJEaXJlY3RvcnlfR2V0TWFuaWZlc3RSZXF1ZXN0",
          "Q29kZV9SZXNwb25zZRJ2Cg9HZXRDRE5BdXRoVG9rZW4SMC5DQ29udGVudFNl",
          "cnZlckRpcmVjdG9yeV9HZXRDRE5BdXRoVG9rZW5fUmVxdWVzdBoxLkNDb250",
          "ZW50U2VydmVyRGlyZWN0b3J5X0dldENETkF1dGhUb2tlbl9SZXNwb25zZRKR",
          "AQoYUmVxdWVzdFBlZXJDb250ZW50U2VydmVyEjkuQ0NvbnRlbnRTZXJ2ZXJE",
          "aXJlY3RvcnlfUmVxdWVzdFBlZXJDb250ZW50U2VydmVyX1JlcXVlc3QaOi5D",
          "Q29udGVudFNlcnZlckRpcmVjdG9yeV9SZXF1ZXN0UGVlckNvbnRlbnRTZXJ2",
          "ZXJfUmVzcG9uc2USfwoSR2V0UGVlckNvbnRlbnRJbmZvEjMuQ0NvbnRlbnRT",
          "ZXJ2ZXJEaXJlY3RvcnlfR2V0UGVlckNvbnRlbnRJbmZvX1JlcXVlc3QaNC5D",
          "Q29udGVudFNlcnZlckRpcmVjdG9yeV9HZXRQZWVyQ29udGVudEluZm9fUmVz",
          "cG9uc2UaJIK1GCBDb250ZW50IFNlcnZlciBhbmQgQ0ROIGRpcmVjdG9yeUID",
          "gAEB"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetServersForSteamPipe_Request), global::CContentServerDirectory_GetServersForSteamPipe_Request.Parser, new[]{ "CellId", "MaxServers", "IpOverride", "LauncherType", "Ipv6Public" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_ServerInfo), global::CContentServerDirectory_ServerInfo.Parser, new[]{ "Type", "SourceId", "CellId", "Load", "WeightedLoad", "NumEntriesInClientList", "SteamChinaOnly", "Host", "Vhost", "UseAsProxy", "ProxyRequestPathTemplate", "HttpsSupport", "AllowedAppIds", "PreferredServer" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetServersForSteamPipe_Response), global::CContentServerDirectory_GetServersForSteamPipe_Response.Parser, new[]{ "Servers" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetDepotPatchInfo_Request), global::CContentServerDirectory_GetDepotPatchInfo_Request.Parser, new[]{ "Appid", "Depotid", "SourceManifestid", "TargetManifestid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetDepotPatchInfo_Response), global::CContentServerDirectory_GetDepotPatchInfo_Response.Parser, new[]{ "IsAvailable", "PatchSize", "PatchedChunksSize" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetClientUpdateHosts_Request), global::CContentServerDirectory_GetClientUpdateHosts_Request.Parser, new[]{ "CachedSignature" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetClientUpdateHosts_Response), global::CContentServerDirectory_GetClientUpdateHosts_Response.Parser, new[]{ "HostsKv", "ValidUntilTime", "IpCountry" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetManifestRequestCode_Request), global::CContentServerDirectory_GetManifestRequestCode_Request.Parser, new[]{ "AppId", "DepotId", "ManifestId", "AppBranch", "BranchPasswordHash" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetManifestRequestCode_Response), global::CContentServerDirectory_GetManifestRequestCode_Response.Parser, new[]{ "ManifestRequestCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetCDNAuthToken_Request), global::CContentServerDirectory_GetCDNAuthToken_Request.Parser, new[]{ "DepotId", "HostName", "AppId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetCDNAuthToken_Response), global::CContentServerDirectory_GetCDNAuthToken_Response.Parser, new[]{ "Token", "ExpirationTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_RequestPeerContentServer_Request), global::CContentServerDirectory_RequestPeerContentServer_Request.Parser, new[]{ "RemoteClientId", "Steamid", "ServerRemoteClientId", "AppId", "CurrentBuildId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_RequestPeerContentServer_Response), global::CContentServerDirectory_RequestPeerContentServer_Response.Parser, new[]{ "ServerPort", "InstalledDepots" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetPeerContentInfo_Request), global::CContentServerDirectory_GetPeerContentInfo_Request.Parser, new[]{ "RemoteClientId", "Steamid", "ServerRemoteClientId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CContentServerDirectory_GetPeerContentInfo_Response), global::CContentServerDirectory_GetPeerContentInfo_Response.Parser, new[]{ "Appids", "IpPublic" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CContentServerDirectory_GetServersForSteamPipe_Request : pb::IMessage<CContentServerDirectory_GetServersForSteamPipe_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetServersForSteamPipe_Request> _parser = new pb::MessageParser<CContentServerDirectory_GetServersForSteamPipe_Request>(() => new CContentServerDirectory_GetServersForSteamPipe_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetServersForSteamPipe_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetServersForSteamPipe_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetServersForSteamPipe_Request(CContentServerDirectory_GetServersForSteamPipe_Request other) : this() {
    _hasBits0 = other._hasBits0;
    cellId_ = other.cellId_;
    maxServers_ = other.maxServers_;
    ipOverride_ = other.ipOverride_;
    launcherType_ = other.launcherType_;
    ipv6Public_ = other.ipv6Public_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetServersForSteamPipe_Request Clone() {
    return new CContentServerDirectory_GetServersForSteamPipe_Request(this);
  }

  /// <summary>Field number for the "cell_id" field.</summary>
  public const int CellIdFieldNumber = 1;
  private readonly static uint CellIdDefaultValue = 0;

  private uint cellId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CellId {
    get { if ((_hasBits0 & 1) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cellId_ = value;
    }
  }
  /// <summary>Gets whether the "cell_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCellId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "cell_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCellId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "max_servers" field.</summary>
  public const int MaxServersFieldNumber = 2;
  private readonly static uint MaxServersDefaultValue = 20;

  private uint maxServers_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MaxServers {
    get { if ((_hasBits0 & 2) != 0) { return maxServers_; } else { return MaxServersDefaultValue; } }
    set {
      _hasBits0 |= 2;
      maxServers_ = value;
    }
  }
  /// <summary>Gets whether the "max_servers" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxServers {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "max_servers" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxServers() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ip_override" field.</summary>
  public const int IpOverrideFieldNumber = 3;
  private readonly static string IpOverrideDefaultValue = "";

  private string ipOverride_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IpOverride {
    get { return ipOverride_ ?? IpOverrideDefaultValue; }
    set {
      ipOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ip_override" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpOverride {
    get { return ipOverride_ != null; }
  }
  /// <summary>Clears the value of the "ip_override" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpOverride() {
    ipOverride_ = null;
  }

  /// <summary>Field number for the "launcher_type" field.</summary>
  public const int LauncherTypeFieldNumber = 4;
  private readonly static int LauncherTypeDefaultValue = 0;

  private int launcherType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int LauncherType {
    get { if ((_hasBits0 & 4) != 0) { return launcherType_; } else { return LauncherTypeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      launcherType_ = value;
    }
  }
  /// <summary>Gets whether the "launcher_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLauncherType {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "launcher_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLauncherType() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "ipv6_public" field.</summary>
  public const int Ipv6PublicFieldNumber = 5;
  private readonly static string Ipv6PublicDefaultValue = "";

  private string ipv6Public_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Ipv6Public {
    get { return ipv6Public_ ?? Ipv6PublicDefaultValue; }
    set {
      ipv6Public_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ipv6_public" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpv6Public {
    get { return ipv6Public_ != null; }
  }
  /// <summary>Clears the value of the "ipv6_public" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpv6Public() {
    ipv6Public_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetServersForSteamPipe_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetServersForSteamPipe_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CellId != other.CellId) return false;
    if (MaxServers != other.MaxServers) return false;
    if (IpOverride != other.IpOverride) return false;
    if (LauncherType != other.LauncherType) return false;
    if (Ipv6Public != other.Ipv6Public) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCellId) hash ^= CellId.GetHashCode();
    if (HasMaxServers) hash ^= MaxServers.GetHashCode();
    if (HasIpOverride) hash ^= IpOverride.GetHashCode();
    if (HasLauncherType) hash ^= LauncherType.GetHashCode();
    if (HasIpv6Public) hash ^= Ipv6Public.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCellId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CellId);
    }
    if (HasMaxServers) {
      output.WriteRawTag(16);
      output.WriteUInt32(MaxServers);
    }
    if (HasIpOverride) {
      output.WriteRawTag(26);
      output.WriteString(IpOverride);
    }
    if (HasLauncherType) {
      output.WriteRawTag(32);
      output.WriteInt32(LauncherType);
    }
    if (HasIpv6Public) {
      output.WriteRawTag(42);
      output.WriteString(Ipv6Public);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCellId) {
      output.WriteRawTag(8);
      output.WriteUInt32(CellId);
    }
    if (HasMaxServers) {
      output.WriteRawTag(16);
      output.WriteUInt32(MaxServers);
    }
    if (HasIpOverride) {
      output.WriteRawTag(26);
      output.WriteString(IpOverride);
    }
    if (HasLauncherType) {
      output.WriteRawTag(32);
      output.WriteInt32(LauncherType);
    }
    if (HasIpv6Public) {
      output.WriteRawTag(42);
      output.WriteString(Ipv6Public);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCellId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
    }
    if (HasMaxServers) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxServers);
    }
    if (HasIpOverride) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IpOverride);
    }
    if (HasLauncherType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LauncherType);
    }
    if (HasIpv6Public) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipv6Public);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetServersForSteamPipe_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasCellId) {
      CellId = other.CellId;
    }
    if (other.HasMaxServers) {
      MaxServers = other.MaxServers;
    }
    if (other.HasIpOverride) {
      IpOverride = other.IpOverride;
    }
    if (other.HasLauncherType) {
      LauncherType = other.LauncherType;
    }
    if (other.HasIpv6Public) {
      Ipv6Public = other.Ipv6Public;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CellId = input.ReadUInt32();
          break;
        }
        case 16: {
          MaxServers = input.ReadUInt32();
          break;
        }
        case 26: {
          IpOverride = input.ReadString();
          break;
        }
        case 32: {
          LauncherType = input.ReadInt32();
          break;
        }
        case 42: {
          Ipv6Public = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CellId = input.ReadUInt32();
          break;
        }
        case 16: {
          MaxServers = input.ReadUInt32();
          break;
        }
        case 26: {
          IpOverride = input.ReadString();
          break;
        }
        case 32: {
          LauncherType = input.ReadInt32();
          break;
        }
        case 42: {
          Ipv6Public = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_ServerInfo : pb::IMessage<CContentServerDirectory_ServerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_ServerInfo> _parser = new pb::MessageParser<CContentServerDirectory_ServerInfo>(() => new CContentServerDirectory_ServerInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_ServerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_ServerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_ServerInfo(CContentServerDirectory_ServerInfo other) : this() {
    _hasBits0 = other._hasBits0;
    type_ = other.type_;
    sourceId_ = other.sourceId_;
    cellId_ = other.cellId_;
    load_ = other.load_;
    weightedLoad_ = other.weightedLoad_;
    numEntriesInClientList_ = other.numEntriesInClientList_;
    steamChinaOnly_ = other.steamChinaOnly_;
    host_ = other.host_;
    vhost_ = other.vhost_;
    useAsProxy_ = other.useAsProxy_;
    proxyRequestPathTemplate_ = other.proxyRequestPathTemplate_;
    httpsSupport_ = other.httpsSupport_;
    allowedAppIds_ = other.allowedAppIds_.Clone();
    preferredServer_ = other.preferredServer_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_ServerInfo Clone() {
    return new CContentServerDirectory_ServerInfo(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private readonly static string TypeDefaultValue = "";

  private string type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Type {
    get { return type_ ?? TypeDefaultValue; }
    set {
      type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return type_ != null; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    type_ = null;
  }

  /// <summary>Field number for the "source_id" field.</summary>
  public const int SourceIdFieldNumber = 2;
  private readonly static int SourceIdDefaultValue = 0;

  private int sourceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SourceId {
    get { if ((_hasBits0 & 1) != 0) { return sourceId_; } else { return SourceIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sourceId_ = value;
    }
  }
  /// <summary>Gets whether the "source_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSourceId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "source_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSourceId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "cell_id" field.</summary>
  public const int CellIdFieldNumber = 3;
  private readonly static int CellIdDefaultValue = 0;

  private int cellId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CellId {
    get { if ((_hasBits0 & 2) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      cellId_ = value;
    }
  }
  /// <summary>Gets whether the "cell_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCellId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "cell_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCellId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "load" field.</summary>
  public const int LoadFieldNumber = 4;
  private readonly static int LoadDefaultValue = 0;

  private int load_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Load {
    get { if ((_hasBits0 & 4) != 0) { return load_; } else { return LoadDefaultValue; } }
    set {
      _hasBits0 |= 4;
      load_ = value;
    }
  }
  /// <summary>Gets whether the "load" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLoad {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "load" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLoad() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "weighted_load" field.</summary>
  public const int WeightedLoadFieldNumber = 5;
  private readonly static float WeightedLoadDefaultValue = 0F;

  private float weightedLoad_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float WeightedLoad {
    get { if ((_hasBits0 & 8) != 0) { return weightedLoad_; } else { return WeightedLoadDefaultValue; } }
    set {
      _hasBits0 |= 8;
      weightedLoad_ = value;
    }
  }
  /// <summary>Gets whether the "weighted_load" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWeightedLoad {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "weighted_load" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWeightedLoad() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "num_entries_in_client_list" field.</summary>
  public const int NumEntriesInClientListFieldNumber = 6;
  private readonly static int NumEntriesInClientListDefaultValue = 0;

  private int numEntriesInClientList_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumEntriesInClientList {
    get { if ((_hasBits0 & 16) != 0) { return numEntriesInClientList_; } else { return NumEntriesInClientListDefaultValue; } }
    set {
      _hasBits0 |= 16;
      numEntriesInClientList_ = value;
    }
  }
  /// <summary>Gets whether the "num_entries_in_client_list" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumEntriesInClientList {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "num_entries_in_client_list" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumEntriesInClientList() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "steam_china_only" field.</summary>
  public const int SteamChinaOnlyFieldNumber = 7;
  private readonly static bool SteamChinaOnlyDefaultValue = false;

  private bool steamChinaOnly_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool SteamChinaOnly {
    get { if ((_hasBits0 & 32) != 0) { return steamChinaOnly_; } else { return SteamChinaOnlyDefaultValue; } }
    set {
      _hasBits0 |= 32;
      steamChinaOnly_ = value;
    }
  }
  /// <summary>Gets whether the "steam_china_only" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamChinaOnly {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "steam_china_only" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamChinaOnly() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "host" field.</summary>
  public const int HostFieldNumber = 8;
  private readonly static string HostDefaultValue = "";

  private string host_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Host {
    get { return host_ ?? HostDefaultValue; }
    set {
      host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "host" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHost {
    get { return host_ != null; }
  }
  /// <summary>Clears the value of the "host" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHost() {
    host_ = null;
  }

  /// <summary>Field number for the "vhost" field.</summary>
  public const int VhostFieldNumber = 9;
  private readonly static string VhostDefaultValue = "";

  private string vhost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Vhost {
    get { return vhost_ ?? VhostDefaultValue; }
    set {
      vhost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "vhost" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVhost {
    get { return vhost_ != null; }
  }
  /// <summary>Clears the value of the "vhost" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVhost() {
    vhost_ = null;
  }

  /// <summary>Field number for the "use_as_proxy" field.</summary>
  public const int UseAsProxyFieldNumber = 10;
  private readonly static bool UseAsProxyDefaultValue = false;

  private bool useAsProxy_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool UseAsProxy {
    get { if ((_hasBits0 & 64) != 0) { return useAsProxy_; } else { return UseAsProxyDefaultValue; } }
    set {
      _hasBits0 |= 64;
      useAsProxy_ = value;
    }
  }
  /// <summary>Gets whether the "use_as_proxy" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUseAsProxy {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "use_as_proxy" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUseAsProxy() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "proxy_request_path_template" field.</summary>
  public const int ProxyRequestPathTemplateFieldNumber = 11;
  private readonly static string ProxyRequestPathTemplateDefaultValue = "";

  private string proxyRequestPathTemplate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ProxyRequestPathTemplate {
    get { return proxyRequestPathTemplate_ ?? ProxyRequestPathTemplateDefaultValue; }
    set {
      proxyRequestPathTemplate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "proxy_request_path_template" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProxyRequestPathTemplate {
    get { return proxyRequestPathTemplate_ != null; }
  }
  /// <summary>Clears the value of the "proxy_request_path_template" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProxyRequestPathTemplate() {
    proxyRequestPathTemplate_ = null;
  }

  /// <summary>Field number for the "https_support" field.</summary>
  public const int HttpsSupportFieldNumber = 12;
  private readonly static string HttpsSupportDefaultValue = "";

  private string httpsSupport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HttpsSupport {
    get { return httpsSupport_ ?? HttpsSupportDefaultValue; }
    set {
      httpsSupport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "https_support" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHttpsSupport {
    get { return httpsSupport_ != null; }
  }
  /// <summary>Clears the value of the "https_support" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHttpsSupport() {
    httpsSupport_ = null;
  }

  /// <summary>Field number for the "allowed_app_ids" field.</summary>
  public const int AllowedAppIdsFieldNumber = 13;
  private static readonly pb::FieldCodec<uint> _repeated_allowedAppIds_codec
      = pb::FieldCodec.ForUInt32(104);
  private readonly pbc::RepeatedField<uint> allowedAppIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AllowedAppIds {
    get { return allowedAppIds_; }
  }

  /// <summary>Field number for the "preferred_server" field.</summary>
  public const int PreferredServerFieldNumber = 14;
  private readonly static bool PreferredServerDefaultValue = false;

  private bool preferredServer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool PreferredServer {
    get { if ((_hasBits0 & 128) != 0) { return preferredServer_; } else { return PreferredServerDefaultValue; } }
    set {
      _hasBits0 |= 128;
      preferredServer_ = value;
    }
  }
  /// <summary>Gets whether the "preferred_server" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPreferredServer {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "preferred_server" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPreferredServer() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_ServerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_ServerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (SourceId != other.SourceId) return false;
    if (CellId != other.CellId) return false;
    if (Load != other.Load) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WeightedLoad, other.WeightedLoad)) return false;
    if (NumEntriesInClientList != other.NumEntriesInClientList) return false;
    if (SteamChinaOnly != other.SteamChinaOnly) return false;
    if (Host != other.Host) return false;
    if (Vhost != other.Vhost) return false;
    if (UseAsProxy != other.UseAsProxy) return false;
    if (ProxyRequestPathTemplate != other.ProxyRequestPathTemplate) return false;
    if (HttpsSupport != other.HttpsSupport) return false;
    if(!allowedAppIds_.Equals(other.allowedAppIds_)) return false;
    if (PreferredServer != other.PreferredServer) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    if (HasSourceId) hash ^= SourceId.GetHashCode();
    if (HasCellId) hash ^= CellId.GetHashCode();
    if (HasLoad) hash ^= Load.GetHashCode();
    if (HasWeightedLoad) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WeightedLoad);
    if (HasNumEntriesInClientList) hash ^= NumEntriesInClientList.GetHashCode();
    if (HasSteamChinaOnly) hash ^= SteamChinaOnly.GetHashCode();
    if (HasHost) hash ^= Host.GetHashCode();
    if (HasVhost) hash ^= Vhost.GetHashCode();
    if (HasUseAsProxy) hash ^= UseAsProxy.GetHashCode();
    if (HasProxyRequestPathTemplate) hash ^= ProxyRequestPathTemplate.GetHashCode();
    if (HasHttpsSupport) hash ^= HttpsSupport.GetHashCode();
    hash ^= allowedAppIds_.GetHashCode();
    if (HasPreferredServer) hash ^= PreferredServer.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasType) {
      output.WriteRawTag(10);
      output.WriteString(Type);
    }
    if (HasSourceId) {
      output.WriteRawTag(16);
      output.WriteInt32(SourceId);
    }
    if (HasCellId) {
      output.WriteRawTag(24);
      output.WriteInt32(CellId);
    }
    if (HasLoad) {
      output.WriteRawTag(32);
      output.WriteInt32(Load);
    }
    if (HasWeightedLoad) {
      output.WriteRawTag(45);
      output.WriteFloat(WeightedLoad);
    }
    if (HasNumEntriesInClientList) {
      output.WriteRawTag(48);
      output.WriteInt32(NumEntriesInClientList);
    }
    if (HasSteamChinaOnly) {
      output.WriteRawTag(56);
      output.WriteBool(SteamChinaOnly);
    }
    if (HasHost) {
      output.WriteRawTag(66);
      output.WriteString(Host);
    }
    if (HasVhost) {
      output.WriteRawTag(74);
      output.WriteString(Vhost);
    }
    if (HasUseAsProxy) {
      output.WriteRawTag(80);
      output.WriteBool(UseAsProxy);
    }
    if (HasProxyRequestPathTemplate) {
      output.WriteRawTag(90);
      output.WriteString(ProxyRequestPathTemplate);
    }
    if (HasHttpsSupport) {
      output.WriteRawTag(98);
      output.WriteString(HttpsSupport);
    }
    allowedAppIds_.WriteTo(output, _repeated_allowedAppIds_codec);
    if (HasPreferredServer) {
      output.WriteRawTag(112);
      output.WriteBool(PreferredServer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasType) {
      output.WriteRawTag(10);
      output.WriteString(Type);
    }
    if (HasSourceId) {
      output.WriteRawTag(16);
      output.WriteInt32(SourceId);
    }
    if (HasCellId) {
      output.WriteRawTag(24);
      output.WriteInt32(CellId);
    }
    if (HasLoad) {
      output.WriteRawTag(32);
      output.WriteInt32(Load);
    }
    if (HasWeightedLoad) {
      output.WriteRawTag(45);
      output.WriteFloat(WeightedLoad);
    }
    if (HasNumEntriesInClientList) {
      output.WriteRawTag(48);
      output.WriteInt32(NumEntriesInClientList);
    }
    if (HasSteamChinaOnly) {
      output.WriteRawTag(56);
      output.WriteBool(SteamChinaOnly);
    }
    if (HasHost) {
      output.WriteRawTag(66);
      output.WriteString(Host);
    }
    if (HasVhost) {
      output.WriteRawTag(74);
      output.WriteString(Vhost);
    }
    if (HasUseAsProxy) {
      output.WriteRawTag(80);
      output.WriteBool(UseAsProxy);
    }
    if (HasProxyRequestPathTemplate) {
      output.WriteRawTag(90);
      output.WriteString(ProxyRequestPathTemplate);
    }
    if (HasHttpsSupport) {
      output.WriteRawTag(98);
      output.WriteString(HttpsSupport);
    }
    allowedAppIds_.WriteTo(ref output, _repeated_allowedAppIds_codec);
    if (HasPreferredServer) {
      output.WriteRawTag(112);
      output.WriteBool(PreferredServer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
    }
    if (HasSourceId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceId);
    }
    if (HasCellId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CellId);
    }
    if (HasLoad) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Load);
    }
    if (HasWeightedLoad) {
      size += 1 + 4;
    }
    if (HasNumEntriesInClientList) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumEntriesInClientList);
    }
    if (HasSteamChinaOnly) {
      size += 1 + 1;
    }
    if (HasHost) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
    }
    if (HasVhost) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Vhost);
    }
    if (HasUseAsProxy) {
      size += 1 + 1;
    }
    if (HasProxyRequestPathTemplate) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyRequestPathTemplate);
    }
    if (HasHttpsSupport) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HttpsSupport);
    }
    size += allowedAppIds_.CalculateSize(_repeated_allowedAppIds_codec);
    if (HasPreferredServer) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_ServerInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasSourceId) {
      SourceId = other.SourceId;
    }
    if (other.HasCellId) {
      CellId = other.CellId;
    }
    if (other.HasLoad) {
      Load = other.Load;
    }
    if (other.HasWeightedLoad) {
      WeightedLoad = other.WeightedLoad;
    }
    if (other.HasNumEntriesInClientList) {
      NumEntriesInClientList = other.NumEntriesInClientList;
    }
    if (other.HasSteamChinaOnly) {
      SteamChinaOnly = other.SteamChinaOnly;
    }
    if (other.HasHost) {
      Host = other.Host;
    }
    if (other.HasVhost) {
      Vhost = other.Vhost;
    }
    if (other.HasUseAsProxy) {
      UseAsProxy = other.UseAsProxy;
    }
    if (other.HasProxyRequestPathTemplate) {
      ProxyRequestPathTemplate = other.ProxyRequestPathTemplate;
    }
    if (other.HasHttpsSupport) {
      HttpsSupport = other.HttpsSupport;
    }
    allowedAppIds_.Add(other.allowedAppIds_);
    if (other.HasPreferredServer) {
      PreferredServer = other.PreferredServer;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Type = input.ReadString();
          break;
        }
        case 16: {
          SourceId = input.ReadInt32();
          break;
        }
        case 24: {
          CellId = input.ReadInt32();
          break;
        }
        case 32: {
          Load = input.ReadInt32();
          break;
        }
        case 45: {
          WeightedLoad = input.ReadFloat();
          break;
        }
        case 48: {
          NumEntriesInClientList = input.ReadInt32();
          break;
        }
        case 56: {
          SteamChinaOnly = input.ReadBool();
          break;
        }
        case 66: {
          Host = input.ReadString();
          break;
        }
        case 74: {
          Vhost = input.ReadString();
          break;
        }
        case 80: {
          UseAsProxy = input.ReadBool();
          break;
        }
        case 90: {
          ProxyRequestPathTemplate = input.ReadString();
          break;
        }
        case 98: {
          HttpsSupport = input.ReadString();
          break;
        }
        case 106:
        case 104: {
          allowedAppIds_.AddEntriesFrom(input, _repeated_allowedAppIds_codec);
          break;
        }
        case 112: {
          PreferredServer = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Type = input.ReadString();
          break;
        }
        case 16: {
          SourceId = input.ReadInt32();
          break;
        }
        case 24: {
          CellId = input.ReadInt32();
          break;
        }
        case 32: {
          Load = input.ReadInt32();
          break;
        }
        case 45: {
          WeightedLoad = input.ReadFloat();
          break;
        }
        case 48: {
          NumEntriesInClientList = input.ReadInt32();
          break;
        }
        case 56: {
          SteamChinaOnly = input.ReadBool();
          break;
        }
        case 66: {
          Host = input.ReadString();
          break;
        }
        case 74: {
          Vhost = input.ReadString();
          break;
        }
        case 80: {
          UseAsProxy = input.ReadBool();
          break;
        }
        case 90: {
          ProxyRequestPathTemplate = input.ReadString();
          break;
        }
        case 98: {
          HttpsSupport = input.ReadString();
          break;
        }
        case 106:
        case 104: {
          allowedAppIds_.AddEntriesFrom(ref input, _repeated_allowedAppIds_codec);
          break;
        }
        case 112: {
          PreferredServer = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetServersForSteamPipe_Response : pb::IMessage<CContentServerDirectory_GetServersForSteamPipe_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetServersForSteamPipe_Response> _parser = new pb::MessageParser<CContentServerDirectory_GetServersForSteamPipe_Response>(() => new CContentServerDirectory_GetServersForSteamPipe_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetServersForSteamPipe_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetServersForSteamPipe_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetServersForSteamPipe_Response(CContentServerDirectory_GetServersForSteamPipe_Response other) : this() {
    servers_ = other.servers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetServersForSteamPipe_Response Clone() {
    return new CContentServerDirectory_GetServersForSteamPipe_Response(this);
  }

  /// <summary>Field number for the "servers" field.</summary>
  public const int ServersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CContentServerDirectory_ServerInfo> _repeated_servers_codec
      = pb::FieldCodec.ForMessage(10, global::CContentServerDirectory_ServerInfo.Parser);
  private readonly pbc::RepeatedField<global::CContentServerDirectory_ServerInfo> servers_ = new pbc::RepeatedField<global::CContentServerDirectory_ServerInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CContentServerDirectory_ServerInfo> Servers {
    get { return servers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetServersForSteamPipe_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetServersForSteamPipe_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!servers_.Equals(other.servers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= servers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    servers_.WriteTo(output, _repeated_servers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    servers_.WriteTo(ref output, _repeated_servers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += servers_.CalculateSize(_repeated_servers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetServersForSteamPipe_Response other) {
    if (other == null) {
      return;
    }
    servers_.Add(other.servers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          servers_.AddEntriesFrom(input, _repeated_servers_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          servers_.AddEntriesFrom(ref input, _repeated_servers_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetDepotPatchInfo_Request : pb::IMessage<CContentServerDirectory_GetDepotPatchInfo_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetDepotPatchInfo_Request> _parser = new pb::MessageParser<CContentServerDirectory_GetDepotPatchInfo_Request>(() => new CContentServerDirectory_GetDepotPatchInfo_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetDepotPatchInfo_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetDepotPatchInfo_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetDepotPatchInfo_Request(CContentServerDirectory_GetDepotPatchInfo_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    depotid_ = other.depotid_;
    sourceManifestid_ = other.sourceManifestid_;
    targetManifestid_ = other.targetManifestid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetDepotPatchInfo_Request Clone() {
    return new CContentServerDirectory_GetDepotPatchInfo_Request(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "depotid" field.</summary>
  public const int DepotidFieldNumber = 2;
  private readonly static uint DepotidDefaultValue = 0;

  private uint depotid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Depotid {
    get { if ((_hasBits0 & 2) != 0) { return depotid_; } else { return DepotidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      depotid_ = value;
    }
  }
  /// <summary>Gets whether the "depotid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDepotid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "depotid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDepotid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "source_manifestid" field.</summary>
  public const int SourceManifestidFieldNumber = 3;
  private readonly static ulong SourceManifestidDefaultValue = 0UL;

  private ulong sourceManifestid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SourceManifestid {
    get { if ((_hasBits0 & 4) != 0) { return sourceManifestid_; } else { return SourceManifestidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      sourceManifestid_ = value;
    }
  }
  /// <summary>Gets whether the "source_manifestid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSourceManifestid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "source_manifestid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSourceManifestid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "target_manifestid" field.</summary>
  public const int TargetManifestidFieldNumber = 4;
  private readonly static ulong TargetManifestidDefaultValue = 0UL;

  private ulong targetManifestid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TargetManifestid {
    get { if ((_hasBits0 & 8) != 0) { return targetManifestid_; } else { return TargetManifestidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      targetManifestid_ = value;
    }
  }
  /// <summary>Gets whether the "target_manifestid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTargetManifestid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "target_manifestid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTargetManifestid() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetDepotPatchInfo_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetDepotPatchInfo_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (Depotid != other.Depotid) return false;
    if (SourceManifestid != other.SourceManifestid) return false;
    if (TargetManifestid != other.TargetManifestid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasDepotid) hash ^= Depotid.GetHashCode();
    if (HasSourceManifestid) hash ^= SourceManifestid.GetHashCode();
    if (HasTargetManifestid) hash ^= TargetManifestid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasDepotid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Depotid);
    }
    if (HasSourceManifestid) {
      output.WriteRawTag(24);
      output.WriteUInt64(SourceManifestid);
    }
    if (HasTargetManifestid) {
      output.WriteRawTag(32);
      output.WriteUInt64(TargetManifestid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasDepotid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Depotid);
    }
    if (HasSourceManifestid) {
      output.WriteRawTag(24);
      output.WriteUInt64(SourceManifestid);
    }
    if (HasTargetManifestid) {
      output.WriteRawTag(32);
      output.WriteUInt64(TargetManifestid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasDepotid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Depotid);
    }
    if (HasSourceManifestid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SourceManifestid);
    }
    if (HasTargetManifestid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetManifestid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetDepotPatchInfo_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasDepotid) {
      Depotid = other.Depotid;
    }
    if (other.HasSourceManifestid) {
      SourceManifestid = other.SourceManifestid;
    }
    if (other.HasTargetManifestid) {
      TargetManifestid = other.TargetManifestid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Depotid = input.ReadUInt32();
          break;
        }
        case 24: {
          SourceManifestid = input.ReadUInt64();
          break;
        }
        case 32: {
          TargetManifestid = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 16: {
          Depotid = input.ReadUInt32();
          break;
        }
        case 24: {
          SourceManifestid = input.ReadUInt64();
          break;
        }
        case 32: {
          TargetManifestid = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetDepotPatchInfo_Response : pb::IMessage<CContentServerDirectory_GetDepotPatchInfo_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetDepotPatchInfo_Response> _parser = new pb::MessageParser<CContentServerDirectory_GetDepotPatchInfo_Response>(() => new CContentServerDirectory_GetDepotPatchInfo_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetDepotPatchInfo_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetDepotPatchInfo_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetDepotPatchInfo_Response(CContentServerDirectory_GetDepotPatchInfo_Response other) : this() {
    _hasBits0 = other._hasBits0;
    isAvailable_ = other.isAvailable_;
    patchSize_ = other.patchSize_;
    patchedChunksSize_ = other.patchedChunksSize_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetDepotPatchInfo_Response Clone() {
    return new CContentServerDirectory_GetDepotPatchInfo_Response(this);
  }

  /// <summary>Field number for the "is_available" field.</summary>
  public const int IsAvailableFieldNumber = 1;
  private readonly static bool IsAvailableDefaultValue = false;

  private bool isAvailable_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsAvailable {
    get { if ((_hasBits0 & 1) != 0) { return isAvailable_; } else { return IsAvailableDefaultValue; } }
    set {
      _hasBits0 |= 1;
      isAvailable_ = value;
    }
  }
  /// <summary>Gets whether the "is_available" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsAvailable {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "is_available" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsAvailable() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "patch_size" field.</summary>
  public const int PatchSizeFieldNumber = 2;
  private readonly static ulong PatchSizeDefaultValue = 0UL;

  private ulong patchSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PatchSize {
    get { if ((_hasBits0 & 2) != 0) { return patchSize_; } else { return PatchSizeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      patchSize_ = value;
    }
  }
  /// <summary>Gets whether the "patch_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPatchSize {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "patch_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPatchSize() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "patched_chunks_size" field.</summary>
  public const int PatchedChunksSizeFieldNumber = 3;
  private readonly static ulong PatchedChunksSizeDefaultValue = 0UL;

  private ulong patchedChunksSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PatchedChunksSize {
    get { if ((_hasBits0 & 4) != 0) { return patchedChunksSize_; } else { return PatchedChunksSizeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      patchedChunksSize_ = value;
    }
  }
  /// <summary>Gets whether the "patched_chunks_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPatchedChunksSize {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "patched_chunks_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPatchedChunksSize() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetDepotPatchInfo_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetDepotPatchInfo_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsAvailable != other.IsAvailable) return false;
    if (PatchSize != other.PatchSize) return false;
    if (PatchedChunksSize != other.PatchedChunksSize) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasIsAvailable) hash ^= IsAvailable.GetHashCode();
    if (HasPatchSize) hash ^= PatchSize.GetHashCode();
    if (HasPatchedChunksSize) hash ^= PatchedChunksSize.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasIsAvailable) {
      output.WriteRawTag(8);
      output.WriteBool(IsAvailable);
    }
    if (HasPatchSize) {
      output.WriteRawTag(16);
      output.WriteUInt64(PatchSize);
    }
    if (HasPatchedChunksSize) {
      output.WriteRawTag(24);
      output.WriteUInt64(PatchedChunksSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasIsAvailable) {
      output.WriteRawTag(8);
      output.WriteBool(IsAvailable);
    }
    if (HasPatchSize) {
      output.WriteRawTag(16);
      output.WriteUInt64(PatchSize);
    }
    if (HasPatchedChunksSize) {
      output.WriteRawTag(24);
      output.WriteUInt64(PatchedChunksSize);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasIsAvailable) {
      size += 1 + 1;
    }
    if (HasPatchSize) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PatchSize);
    }
    if (HasPatchedChunksSize) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PatchedChunksSize);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetDepotPatchInfo_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasIsAvailable) {
      IsAvailable = other.IsAvailable;
    }
    if (other.HasPatchSize) {
      PatchSize = other.PatchSize;
    }
    if (other.HasPatchedChunksSize) {
      PatchedChunksSize = other.PatchedChunksSize;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsAvailable = input.ReadBool();
          break;
        }
        case 16: {
          PatchSize = input.ReadUInt64();
          break;
        }
        case 24: {
          PatchedChunksSize = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          IsAvailable = input.ReadBool();
          break;
        }
        case 16: {
          PatchSize = input.ReadUInt64();
          break;
        }
        case 24: {
          PatchedChunksSize = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetClientUpdateHosts_Request : pb::IMessage<CContentServerDirectory_GetClientUpdateHosts_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetClientUpdateHosts_Request> _parser = new pb::MessageParser<CContentServerDirectory_GetClientUpdateHosts_Request>(() => new CContentServerDirectory_GetClientUpdateHosts_Request());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetClientUpdateHosts_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetClientUpdateHosts_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetClientUpdateHosts_Request(CContentServerDirectory_GetClientUpdateHosts_Request other) : this() {
    cachedSignature_ = other.cachedSignature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetClientUpdateHosts_Request Clone() {
    return new CContentServerDirectory_GetClientUpdateHosts_Request(this);
  }

  /// <summary>Field number for the "cached_signature" field.</summary>
  public const int CachedSignatureFieldNumber = 1;
  private readonly static string CachedSignatureDefaultValue = "";

  private string cachedSignature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CachedSignature {
    get { return cachedSignature_ ?? CachedSignatureDefaultValue; }
    set {
      cachedSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cached_signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCachedSignature {
    get { return cachedSignature_ != null; }
  }
  /// <summary>Clears the value of the "cached_signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCachedSignature() {
    cachedSignature_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetClientUpdateHosts_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetClientUpdateHosts_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CachedSignature != other.CachedSignature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCachedSignature) hash ^= CachedSignature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCachedSignature) {
      output.WriteRawTag(10);
      output.WriteString(CachedSignature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCachedSignature) {
      output.WriteRawTag(10);
      output.WriteString(CachedSignature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCachedSignature) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CachedSignature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetClientUpdateHosts_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasCachedSignature) {
      CachedSignature = other.CachedSignature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CachedSignature = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          CachedSignature = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetClientUpdateHosts_Response : pb::IMessage<CContentServerDirectory_GetClientUpdateHosts_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetClientUpdateHosts_Response> _parser = new pb::MessageParser<CContentServerDirectory_GetClientUpdateHosts_Response>(() => new CContentServerDirectory_GetClientUpdateHosts_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetClientUpdateHosts_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetClientUpdateHosts_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetClientUpdateHosts_Response(CContentServerDirectory_GetClientUpdateHosts_Response other) : this() {
    _hasBits0 = other._hasBits0;
    hostsKv_ = other.hostsKv_;
    validUntilTime_ = other.validUntilTime_;
    ipCountry_ = other.ipCountry_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetClientUpdateHosts_Response Clone() {
    return new CContentServerDirectory_GetClientUpdateHosts_Response(this);
  }

  /// <summary>Field number for the "hosts_kv" field.</summary>
  public const int HostsKvFieldNumber = 1;
  private readonly static string HostsKvDefaultValue = "";

  private string hostsKv_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HostsKv {
    get { return hostsKv_ ?? HostsKvDefaultValue; }
    set {
      hostsKv_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "hosts_kv" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostsKv {
    get { return hostsKv_ != null; }
  }
  /// <summary>Clears the value of the "hosts_kv" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostsKv() {
    hostsKv_ = null;
  }

  /// <summary>Field number for the "valid_until_time" field.</summary>
  public const int ValidUntilTimeFieldNumber = 2;
  private readonly static ulong ValidUntilTimeDefaultValue = 0UL;

  private ulong validUntilTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ValidUntilTime {
    get { if ((_hasBits0 & 1) != 0) { return validUntilTime_; } else { return ValidUntilTimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      validUntilTime_ = value;
    }
  }
  /// <summary>Gets whether the "valid_until_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValidUntilTime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "valid_until_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValidUntilTime() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ip_country" field.</summary>
  public const int IpCountryFieldNumber = 3;
  private readonly static string IpCountryDefaultValue = "";

  private string ipCountry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IpCountry {
    get { return ipCountry_ ?? IpCountryDefaultValue; }
    set {
      ipCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ip_country" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpCountry {
    get { return ipCountry_ != null; }
  }
  /// <summary>Clears the value of the "ip_country" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpCountry() {
    ipCountry_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetClientUpdateHosts_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetClientUpdateHosts_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HostsKv != other.HostsKv) return false;
    if (ValidUntilTime != other.ValidUntilTime) return false;
    if (IpCountry != other.IpCountry) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasHostsKv) hash ^= HostsKv.GetHashCode();
    if (HasValidUntilTime) hash ^= ValidUntilTime.GetHashCode();
    if (HasIpCountry) hash ^= IpCountry.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasHostsKv) {
      output.WriteRawTag(10);
      output.WriteString(HostsKv);
    }
    if (HasValidUntilTime) {
      output.WriteRawTag(16);
      output.WriteUInt64(ValidUntilTime);
    }
    if (HasIpCountry) {
      output.WriteRawTag(26);
      output.WriteString(IpCountry);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasHostsKv) {
      output.WriteRawTag(10);
      output.WriteString(HostsKv);
    }
    if (HasValidUntilTime) {
      output.WriteRawTag(16);
      output.WriteUInt64(ValidUntilTime);
    }
    if (HasIpCountry) {
      output.WriteRawTag(26);
      output.WriteString(IpCountry);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasHostsKv) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HostsKv);
    }
    if (HasValidUntilTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ValidUntilTime);
    }
    if (HasIpCountry) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IpCountry);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetClientUpdateHosts_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasHostsKv) {
      HostsKv = other.HostsKv;
    }
    if (other.HasValidUntilTime) {
      ValidUntilTime = other.ValidUntilTime;
    }
    if (other.HasIpCountry) {
      IpCountry = other.IpCountry;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          HostsKv = input.ReadString();
          break;
        }
        case 16: {
          ValidUntilTime = input.ReadUInt64();
          break;
        }
        case 26: {
          IpCountry = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          HostsKv = input.ReadString();
          break;
        }
        case 16: {
          ValidUntilTime = input.ReadUInt64();
          break;
        }
        case 26: {
          IpCountry = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetManifestRequestCode_Request : pb::IMessage<CContentServerDirectory_GetManifestRequestCode_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetManifestRequestCode_Request> _parser = new pb::MessageParser<CContentServerDirectory_GetManifestRequestCode_Request>(() => new CContentServerDirectory_GetManifestRequestCode_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetManifestRequestCode_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetManifestRequestCode_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetManifestRequestCode_Request(CContentServerDirectory_GetManifestRequestCode_Request other) : this() {
    _hasBits0 = other._hasBits0;
    appId_ = other.appId_;
    depotId_ = other.depotId_;
    manifestId_ = other.manifestId_;
    appBranch_ = other.appBranch_;
    branchPasswordHash_ = other.branchPasswordHash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetManifestRequestCode_Request Clone() {
    return new CContentServerDirectory_GetManifestRequestCode_Request(this);
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 1;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 1) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "depot_id" field.</summary>
  public const int DepotIdFieldNumber = 2;
  private readonly static uint DepotIdDefaultValue = 0;

  private uint depotId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DepotId {
    get { if ((_hasBits0 & 2) != 0) { return depotId_; } else { return DepotIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      depotId_ = value;
    }
  }
  /// <summary>Gets whether the "depot_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDepotId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "depot_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDepotId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "manifest_id" field.</summary>
  public const int ManifestIdFieldNumber = 3;
  private readonly static ulong ManifestIdDefaultValue = 0UL;

  private ulong manifestId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ManifestId {
    get { if ((_hasBits0 & 4) != 0) { return manifestId_; } else { return ManifestIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      manifestId_ = value;
    }
  }
  /// <summary>Gets whether the "manifest_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifestId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "manifest_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifestId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "app_branch" field.</summary>
  public const int AppBranchFieldNumber = 4;
  private readonly static string AppBranchDefaultValue = "";

  private string appBranch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AppBranch {
    get { return appBranch_ ?? AppBranchDefaultValue; }
    set {
      appBranch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "app_branch" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppBranch {
    get { return appBranch_ != null; }
  }
  /// <summary>Clears the value of the "app_branch" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppBranch() {
    appBranch_ = null;
  }

  /// <summary>Field number for the "branch_password_hash" field.</summary>
  public const int BranchPasswordHashFieldNumber = 5;
  private readonly static string BranchPasswordHashDefaultValue = "";

  private string branchPasswordHash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string BranchPasswordHash {
    get { return branchPasswordHash_ ?? BranchPasswordHashDefaultValue; }
    set {
      branchPasswordHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "branch_password_hash" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBranchPasswordHash {
    get { return branchPasswordHash_ != null; }
  }
  /// <summary>Clears the value of the "branch_password_hash" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBranchPasswordHash() {
    branchPasswordHash_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetManifestRequestCode_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetManifestRequestCode_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppId != other.AppId) return false;
    if (DepotId != other.DepotId) return false;
    if (ManifestId != other.ManifestId) return false;
    if (AppBranch != other.AppBranch) return false;
    if (BranchPasswordHash != other.BranchPasswordHash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasDepotId) hash ^= DepotId.GetHashCode();
    if (HasManifestId) hash ^= ManifestId.GetHashCode();
    if (HasAppBranch) hash ^= AppBranch.GetHashCode();
    if (HasBranchPasswordHash) hash ^= BranchPasswordHash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (HasDepotId) {
      output.WriteRawTag(16);
      output.WriteUInt32(DepotId);
    }
    if (HasManifestId) {
      output.WriteRawTag(24);
      output.WriteUInt64(ManifestId);
    }
    if (HasAppBranch) {
      output.WriteRawTag(34);
      output.WriteString(AppBranch);
    }
    if (HasBranchPasswordHash) {
      output.WriteRawTag(42);
      output.WriteString(BranchPasswordHash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (HasDepotId) {
      output.WriteRawTag(16);
      output.WriteUInt32(DepotId);
    }
    if (HasManifestId) {
      output.WriteRawTag(24);
      output.WriteUInt64(ManifestId);
    }
    if (HasAppBranch) {
      output.WriteRawTag(34);
      output.WriteString(AppBranch);
    }
    if (HasBranchPasswordHash) {
      output.WriteRawTag(42);
      output.WriteString(BranchPasswordHash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasDepotId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DepotId);
    }
    if (HasManifestId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ManifestId);
    }
    if (HasAppBranch) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AppBranch);
    }
    if (HasBranchPasswordHash) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(BranchPasswordHash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetManifestRequestCode_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasDepotId) {
      DepotId = other.DepotId;
    }
    if (other.HasManifestId) {
      ManifestId = other.ManifestId;
    }
    if (other.HasAppBranch) {
      AppBranch = other.AppBranch;
    }
    if (other.HasBranchPasswordHash) {
      BranchPasswordHash = other.BranchPasswordHash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
        case 16: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 24: {
          ManifestId = input.ReadUInt64();
          break;
        }
        case 34: {
          AppBranch = input.ReadString();
          break;
        }
        case 42: {
          BranchPasswordHash = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
        case 16: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 24: {
          ManifestId = input.ReadUInt64();
          break;
        }
        case 34: {
          AppBranch = input.ReadString();
          break;
        }
        case 42: {
          BranchPasswordHash = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetManifestRequestCode_Response : pb::IMessage<CContentServerDirectory_GetManifestRequestCode_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetManifestRequestCode_Response> _parser = new pb::MessageParser<CContentServerDirectory_GetManifestRequestCode_Response>(() => new CContentServerDirectory_GetManifestRequestCode_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetManifestRequestCode_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetManifestRequestCode_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetManifestRequestCode_Response(CContentServerDirectory_GetManifestRequestCode_Response other) : this() {
    _hasBits0 = other._hasBits0;
    manifestRequestCode_ = other.manifestRequestCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetManifestRequestCode_Response Clone() {
    return new CContentServerDirectory_GetManifestRequestCode_Response(this);
  }

  /// <summary>Field number for the "manifest_request_code" field.</summary>
  public const int ManifestRequestCodeFieldNumber = 1;
  private readonly static ulong ManifestRequestCodeDefaultValue = 0UL;

  private ulong manifestRequestCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ManifestRequestCode {
    get { if ((_hasBits0 & 1) != 0) { return manifestRequestCode_; } else { return ManifestRequestCodeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      manifestRequestCode_ = value;
    }
  }
  /// <summary>Gets whether the "manifest_request_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifestRequestCode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "manifest_request_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifestRequestCode() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetManifestRequestCode_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetManifestRequestCode_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ManifestRequestCode != other.ManifestRequestCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasManifestRequestCode) hash ^= ManifestRequestCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasManifestRequestCode) {
      output.WriteRawTag(8);
      output.WriteUInt64(ManifestRequestCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasManifestRequestCode) {
      output.WriteRawTag(8);
      output.WriteUInt64(ManifestRequestCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasManifestRequestCode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ManifestRequestCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetManifestRequestCode_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasManifestRequestCode) {
      ManifestRequestCode = other.ManifestRequestCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ManifestRequestCode = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ManifestRequestCode = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetCDNAuthToken_Request : pb::IMessage<CContentServerDirectory_GetCDNAuthToken_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetCDNAuthToken_Request> _parser = new pb::MessageParser<CContentServerDirectory_GetCDNAuthToken_Request>(() => new CContentServerDirectory_GetCDNAuthToken_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetCDNAuthToken_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetCDNAuthToken_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetCDNAuthToken_Request(CContentServerDirectory_GetCDNAuthToken_Request other) : this() {
    _hasBits0 = other._hasBits0;
    depotId_ = other.depotId_;
    hostName_ = other.hostName_;
    appId_ = other.appId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetCDNAuthToken_Request Clone() {
    return new CContentServerDirectory_GetCDNAuthToken_Request(this);
  }

  /// <summary>Field number for the "depot_id" field.</summary>
  public const int DepotIdFieldNumber = 1;
  private readonly static uint DepotIdDefaultValue = 0;

  private uint depotId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DepotId {
    get { if ((_hasBits0 & 1) != 0) { return depotId_; } else { return DepotIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      depotId_ = value;
    }
  }
  /// <summary>Gets whether the "depot_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDepotId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "depot_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDepotId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "host_name" field.</summary>
  public const int HostNameFieldNumber = 2;
  private readonly static string HostNameDefaultValue = "";

  private string hostName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HostName {
    get { return hostName_ ?? HostNameDefaultValue; }
    set {
      hostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "host_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostName {
    get { return hostName_ != null; }
  }
  /// <summary>Clears the value of the "host_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostName() {
    hostName_ = null;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 3;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 2) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetCDNAuthToken_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetCDNAuthToken_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DepotId != other.DepotId) return false;
    if (HostName != other.HostName) return false;
    if (AppId != other.AppId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDepotId) hash ^= DepotId.GetHashCode();
    if (HasHostName) hash ^= HostName.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDepotId) {
      output.WriteRawTag(8);
      output.WriteUInt32(DepotId);
    }
    if (HasHostName) {
      output.WriteRawTag(18);
      output.WriteString(HostName);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDepotId) {
      output.WriteRawTag(8);
      output.WriteUInt32(DepotId);
    }
    if (HasHostName) {
      output.WriteRawTag(18);
      output.WriteString(HostName);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDepotId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DepotId);
    }
    if (HasHostName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HostName);
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetCDNAuthToken_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasDepotId) {
      DepotId = other.DepotId;
    }
    if (other.HasHostName) {
      HostName = other.HostName;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 18: {
          HostName = input.ReadString();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          DepotId = input.ReadUInt32();
          break;
        }
        case 18: {
          HostName = input.ReadString();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetCDNAuthToken_Response : pb::IMessage<CContentServerDirectory_GetCDNAuthToken_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetCDNAuthToken_Response> _parser = new pb::MessageParser<CContentServerDirectory_GetCDNAuthToken_Response>(() => new CContentServerDirectory_GetCDNAuthToken_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetCDNAuthToken_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetCDNAuthToken_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetCDNAuthToken_Response(CContentServerDirectory_GetCDNAuthToken_Response other) : this() {
    _hasBits0 = other._hasBits0;
    token_ = other.token_;
    expirationTime_ = other.expirationTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetCDNAuthToken_Response Clone() {
    return new CContentServerDirectory_GetCDNAuthToken_Response(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private readonly static string TokenDefaultValue = "";

  private string token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Token {
    get { return token_ ?? TokenDefaultValue; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return token_ != null; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    token_ = null;
  }

  /// <summary>Field number for the "expiration_time" field.</summary>
  public const int ExpirationTimeFieldNumber = 2;
  private readonly static uint ExpirationTimeDefaultValue = 0;

  private uint expirationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExpirationTime {
    get { if ((_hasBits0 & 1) != 0) { return expirationTime_; } else { return ExpirationTimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      expirationTime_ = value;
    }
  }
  /// <summary>Gets whether the "expiration_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExpirationTime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "expiration_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExpirationTime() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetCDNAuthToken_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetCDNAuthToken_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    if (ExpirationTime != other.ExpirationTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasToken) hash ^= Token.GetHashCode();
    if (HasExpirationTime) hash ^= ExpirationTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteString(Token);
    }
    if (HasExpirationTime) {
      output.WriteRawTag(16);
      output.WriteUInt32(ExpirationTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteString(Token);
    }
    if (HasExpirationTime) {
      output.WriteRawTag(16);
      output.WriteUInt32(ExpirationTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (HasExpirationTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpirationTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetCDNAuthToken_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    if (other.HasExpirationTime) {
      ExpirationTime = other.ExpirationTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Token = input.ReadString();
          break;
        }
        case 16: {
          ExpirationTime = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Token = input.ReadString();
          break;
        }
        case 16: {
          ExpirationTime = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_RequestPeerContentServer_Request : pb::IMessage<CContentServerDirectory_RequestPeerContentServer_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_RequestPeerContentServer_Request> _parser = new pb::MessageParser<CContentServerDirectory_RequestPeerContentServer_Request>(() => new CContentServerDirectory_RequestPeerContentServer_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_RequestPeerContentServer_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_RequestPeerContentServer_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_RequestPeerContentServer_Request(CContentServerDirectory_RequestPeerContentServer_Request other) : this() {
    _hasBits0 = other._hasBits0;
    remoteClientId_ = other.remoteClientId_;
    steamid_ = other.steamid_;
    serverRemoteClientId_ = other.serverRemoteClientId_;
    appId_ = other.appId_;
    currentBuildId_ = other.currentBuildId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_RequestPeerContentServer_Request Clone() {
    return new CContentServerDirectory_RequestPeerContentServer_Request(this);
  }

  /// <summary>Field number for the "remote_client_id" field.</summary>
  public const int RemoteClientIdFieldNumber = 1;
  private readonly static ulong RemoteClientIdDefaultValue = 0UL;

  private ulong remoteClientId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong RemoteClientId {
    get { if ((_hasBits0 & 1) != 0) { return remoteClientId_; } else { return RemoteClientIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      remoteClientId_ = value;
    }
  }
  /// <summary>Gets whether the "remote_client_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRemoteClientId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "remote_client_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRemoteClientId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 2;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_remote_client_id" field.</summary>
  public const int ServerRemoteClientIdFieldNumber = 3;
  private readonly static ulong ServerRemoteClientIdDefaultValue = 0UL;

  private ulong serverRemoteClientId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ServerRemoteClientId {
    get { if ((_hasBits0 & 4) != 0) { return serverRemoteClientId_; } else { return ServerRemoteClientIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverRemoteClientId_ = value;
    }
  }
  /// <summary>Gets whether the "server_remote_client_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerRemoteClientId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "server_remote_client_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerRemoteClientId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 4;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 8) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "current_build_id" field.</summary>
  public const int CurrentBuildIdFieldNumber = 5;
  private readonly static uint CurrentBuildIdDefaultValue = 0;

  private uint currentBuildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CurrentBuildId {
    get { if ((_hasBits0 & 16) != 0) { return currentBuildId_; } else { return CurrentBuildIdDefaultValue; } }
    set {
      _hasBits0 |= 16;
      currentBuildId_ = value;
    }
  }
  /// <summary>Gets whether the "current_build_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrentBuildId {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "current_build_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrentBuildId() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_RequestPeerContentServer_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_RequestPeerContentServer_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteClientId != other.RemoteClientId) return false;
    if (Steamid != other.Steamid) return false;
    if (ServerRemoteClientId != other.ServerRemoteClientId) return false;
    if (AppId != other.AppId) return false;
    if (CurrentBuildId != other.CurrentBuildId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRemoteClientId) hash ^= RemoteClientId.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasServerRemoteClientId) hash ^= ServerRemoteClientId.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasCurrentBuildId) hash ^= CurrentBuildId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRemoteClientId) {
      output.WriteRawTag(8);
      output.WriteUInt64(RemoteClientId);
    }
    if (HasSteamid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Steamid);
    }
    if (HasServerRemoteClientId) {
      output.WriteRawTag(24);
      output.WriteUInt64(ServerRemoteClientId);
    }
    if (HasAppId) {
      output.WriteRawTag(32);
      output.WriteUInt32(AppId);
    }
    if (HasCurrentBuildId) {
      output.WriteRawTag(40);
      output.WriteUInt32(CurrentBuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRemoteClientId) {
      output.WriteRawTag(8);
      output.WriteUInt64(RemoteClientId);
    }
    if (HasSteamid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Steamid);
    }
    if (HasServerRemoteClientId) {
      output.WriteRawTag(24);
      output.WriteUInt64(ServerRemoteClientId);
    }
    if (HasAppId) {
      output.WriteRawTag(32);
      output.WriteUInt32(AppId);
    }
    if (HasCurrentBuildId) {
      output.WriteRawTag(40);
      output.WriteUInt32(CurrentBuildId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRemoteClientId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RemoteClientId);
    }
    if (HasSteamid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
    }
    if (HasServerRemoteClientId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerRemoteClientId);
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasCurrentBuildId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentBuildId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_RequestPeerContentServer_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasRemoteClientId) {
      RemoteClientId = other.RemoteClientId;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasServerRemoteClientId) {
      ServerRemoteClientId = other.ServerRemoteClientId;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasCurrentBuildId) {
      CurrentBuildId = other.CurrentBuildId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RemoteClientId = input.ReadUInt64();
          break;
        }
        case 16: {
          Steamid = input.ReadUInt64();
          break;
        }
        case 24: {
          ServerRemoteClientId = input.ReadUInt64();
          break;
        }
        case 32: {
          AppId = input.ReadUInt32();
          break;
        }
        case 40: {
          CurrentBuildId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RemoteClientId = input.ReadUInt64();
          break;
        }
        case 16: {
          Steamid = input.ReadUInt64();
          break;
        }
        case 24: {
          ServerRemoteClientId = input.ReadUInt64();
          break;
        }
        case 32: {
          AppId = input.ReadUInt32();
          break;
        }
        case 40: {
          CurrentBuildId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_RequestPeerContentServer_Response : pb::IMessage<CContentServerDirectory_RequestPeerContentServer_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_RequestPeerContentServer_Response> _parser = new pb::MessageParser<CContentServerDirectory_RequestPeerContentServer_Response>(() => new CContentServerDirectory_RequestPeerContentServer_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_RequestPeerContentServer_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_RequestPeerContentServer_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_RequestPeerContentServer_Response(CContentServerDirectory_RequestPeerContentServer_Response other) : this() {
    _hasBits0 = other._hasBits0;
    serverPort_ = other.serverPort_;
    installedDepots_ = other.installedDepots_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_RequestPeerContentServer_Response Clone() {
    return new CContentServerDirectory_RequestPeerContentServer_Response(this);
  }

  /// <summary>Field number for the "server_port" field.</summary>
  public const int ServerPortFieldNumber = 1;
  private readonly static uint ServerPortDefaultValue = 0;

  private uint serverPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerPort {
    get { if ((_hasBits0 & 1) != 0) { return serverPort_; } else { return ServerPortDefaultValue; } }
    set {
      _hasBits0 |= 1;
      serverPort_ = value;
    }
  }
  /// <summary>Gets whether the "server_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerPort {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "server_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerPort() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "installed_depots" field.</summary>
  public const int InstalledDepotsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_installedDepots_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> installedDepots_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> InstalledDepots {
    get { return installedDepots_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_RequestPeerContentServer_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_RequestPeerContentServer_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerPort != other.ServerPort) return false;
    if(!installedDepots_.Equals(other.installedDepots_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasServerPort) hash ^= ServerPort.GetHashCode();
    hash ^= installedDepots_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasServerPort) {
      output.WriteRawTag(8);
      output.WriteUInt32(ServerPort);
    }
    installedDepots_.WriteTo(output, _repeated_installedDepots_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasServerPort) {
      output.WriteRawTag(8);
      output.WriteUInt32(ServerPort);
    }
    installedDepots_.WriteTo(ref output, _repeated_installedDepots_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasServerPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerPort);
    }
    size += installedDepots_.CalculateSize(_repeated_installedDepots_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_RequestPeerContentServer_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasServerPort) {
      ServerPort = other.ServerPort;
    }
    installedDepots_.Add(other.installedDepots_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          installedDepots_.AddEntriesFrom(input, _repeated_installedDepots_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          installedDepots_.AddEntriesFrom(ref input, _repeated_installedDepots_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetPeerContentInfo_Request : pb::IMessage<CContentServerDirectory_GetPeerContentInfo_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetPeerContentInfo_Request> _parser = new pb::MessageParser<CContentServerDirectory_GetPeerContentInfo_Request>(() => new CContentServerDirectory_GetPeerContentInfo_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetPeerContentInfo_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetPeerContentInfo_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetPeerContentInfo_Request(CContentServerDirectory_GetPeerContentInfo_Request other) : this() {
    _hasBits0 = other._hasBits0;
    remoteClientId_ = other.remoteClientId_;
    steamid_ = other.steamid_;
    serverRemoteClientId_ = other.serverRemoteClientId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetPeerContentInfo_Request Clone() {
    return new CContentServerDirectory_GetPeerContentInfo_Request(this);
  }

  /// <summary>Field number for the "remote_client_id" field.</summary>
  public const int RemoteClientIdFieldNumber = 1;
  private readonly static ulong RemoteClientIdDefaultValue = 0UL;

  private ulong remoteClientId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong RemoteClientId {
    get { if ((_hasBits0 & 1) != 0) { return remoteClientId_; } else { return RemoteClientIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      remoteClientId_ = value;
    }
  }
  /// <summary>Gets whether the "remote_client_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRemoteClientId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "remote_client_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRemoteClientId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 2;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_remote_client_id" field.</summary>
  public const int ServerRemoteClientIdFieldNumber = 3;
  private readonly static ulong ServerRemoteClientIdDefaultValue = 0UL;

  private ulong serverRemoteClientId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ServerRemoteClientId {
    get { if ((_hasBits0 & 4) != 0) { return serverRemoteClientId_; } else { return ServerRemoteClientIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverRemoteClientId_ = value;
    }
  }
  /// <summary>Gets whether the "server_remote_client_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerRemoteClientId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "server_remote_client_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerRemoteClientId() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetPeerContentInfo_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetPeerContentInfo_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemoteClientId != other.RemoteClientId) return false;
    if (Steamid != other.Steamid) return false;
    if (ServerRemoteClientId != other.ServerRemoteClientId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRemoteClientId) hash ^= RemoteClientId.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasServerRemoteClientId) hash ^= ServerRemoteClientId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRemoteClientId) {
      output.WriteRawTag(8);
      output.WriteUInt64(RemoteClientId);
    }
    if (HasSteamid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Steamid);
    }
    if (HasServerRemoteClientId) {
      output.WriteRawTag(24);
      output.WriteUInt64(ServerRemoteClientId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRemoteClientId) {
      output.WriteRawTag(8);
      output.WriteUInt64(RemoteClientId);
    }
    if (HasSteamid) {
      output.WriteRawTag(16);
      output.WriteUInt64(Steamid);
    }
    if (HasServerRemoteClientId) {
      output.WriteRawTag(24);
      output.WriteUInt64(ServerRemoteClientId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRemoteClientId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RemoteClientId);
    }
    if (HasSteamid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
    }
    if (HasServerRemoteClientId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerRemoteClientId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetPeerContentInfo_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasRemoteClientId) {
      RemoteClientId = other.RemoteClientId;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasServerRemoteClientId) {
      ServerRemoteClientId = other.ServerRemoteClientId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RemoteClientId = input.ReadUInt64();
          break;
        }
        case 16: {
          Steamid = input.ReadUInt64();
          break;
        }
        case 24: {
          ServerRemoteClientId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RemoteClientId = input.ReadUInt64();
          break;
        }
        case 16: {
          Steamid = input.ReadUInt64();
          break;
        }
        case 24: {
          ServerRemoteClientId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CContentServerDirectory_GetPeerContentInfo_Response : pb::IMessage<CContentServerDirectory_GetPeerContentInfo_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CContentServerDirectory_GetPeerContentInfo_Response> _parser = new pb::MessageParser<CContentServerDirectory_GetPeerContentInfo_Response>(() => new CContentServerDirectory_GetPeerContentInfo_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CContentServerDirectory_GetPeerContentInfo_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesContentsystemSteamclientReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetPeerContentInfo_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetPeerContentInfo_Response(CContentServerDirectory_GetPeerContentInfo_Response other) : this() {
    appids_ = other.appids_.Clone();
    ipPublic_ = other.ipPublic_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CContentServerDirectory_GetPeerContentInfo_Response Clone() {
    return new CContentServerDirectory_GetPeerContentInfo_Response(this);
  }

  /// <summary>Field number for the "appids" field.</summary>
  public const int AppidsFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_appids_codec
      = pb::FieldCodec.ForUInt32(8);
  private readonly pbc::RepeatedField<uint> appids_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> Appids {
    get { return appids_; }
  }

  /// <summary>Field number for the "ip_public" field.</summary>
  public const int IpPublicFieldNumber = 2;
  private readonly static string IpPublicDefaultValue = "";

  private string ipPublic_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IpPublic {
    get { return ipPublic_ ?? IpPublicDefaultValue; }
    set {
      ipPublic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ip_public" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpPublic {
    get { return ipPublic_ != null; }
  }
  /// <summary>Clears the value of the "ip_public" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpPublic() {
    ipPublic_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CContentServerDirectory_GetPeerContentInfo_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CContentServerDirectory_GetPeerContentInfo_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!appids_.Equals(other.appids_)) return false;
    if (IpPublic != other.IpPublic) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= appids_.GetHashCode();
    if (HasIpPublic) hash ^= IpPublic.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    appids_.WriteTo(output, _repeated_appids_codec);
    if (HasIpPublic) {
      output.WriteRawTag(18);
      output.WriteString(IpPublic);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    appids_.WriteTo(ref output, _repeated_appids_codec);
    if (HasIpPublic) {
      output.WriteRawTag(18);
      output.WriteString(IpPublic);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += appids_.CalculateSize(_repeated_appids_codec);
    if (HasIpPublic) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IpPublic);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CContentServerDirectory_GetPeerContentInfo_Response other) {
    if (other == null) {
      return;
    }
    appids_.Add(other.appids_);
    if (other.HasIpPublic) {
      IpPublic = other.IpPublic;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          appids_.AddEntriesFrom(input, _repeated_appids_codec);
          break;
        }
        case 18: {
          IpPublic = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          appids_.AddEntriesFrom(ref input, _repeated_appids_codec);
          break;
        }
        case 18: {
          IpPublic = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_vac.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_vac.steamclient.proto</summary>
public static partial class SteammessagesVacSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_vac.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesVacSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiNzdGVhbW1lc3NhZ2VzX3ZhYy5zdGVhbWNsaWVudC5wcm90bxoYc3RlYW1t",
          "ZXNzYWdlc19iYXNlLnByb3RvGixzdGVhbW1lc3NhZ2VzX3VuaWZpZWRfYmFz",
          "ZS5zdGVhbWNsaWVudC5wcm90byLsAQooQ0ZpbGVWZXJpZmljYXRpb25fU2ln",
          "bmF0dXJlQ2hlY2tfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGEg0KBWFwcGlk",
          "GAIgASgNEhEKCWZpbGVfc2l6ZRgDIAEoBBIWCg5maWxlX3RpbWVzdGFtcBgE",
          "IAEoDRIXCg9maWxlX3RpbWVzdGFtcDIYBSABKA0SGAoQc2lnbmF0dXJlX3Jl",
          "c3VsdBgGIAEoDRIQCghmaWxlbmFtZRgHIAEoCRIeChZjbGllbnRfcGFja2Fn",
          "ZV92ZXJzaW9uGAggASgNEhAKCHNoYTFoYXNoGAkgASgMIkMKKUNGaWxlVmVy",
          "aWZpY2F0aW9uX1NpZ25hdHVyZUNoZWNrX1Jlc3BvbnNlEhYKDmRlbnlfb3Bl",
          "cmF0aW9uGAEgASgIIqUBCitDRmlsZVZlcmlmaWNhdGlvbl9TdGVhbVNlcnZp",
          "Y2VDaGVja19SZXF1ZXN0EhYKDnNlcnZpY2Vfc3RhdHVzGAIgASgNEh4KFmNs",
          "aWVudF9wYWNrYWdlX3ZlcnNpb24YAyABKA0SFQoNbGF1bmNoZXJfdHlwZRgE",
          "IAEoDRIPCgdvc190eXBlGAUgASgNEhYKDnNlcnZpY2VfcmVwYWlyGAYgASgN",
          "IkYKLENGaWxlVmVyaWZpY2F0aW9uX1N0ZWFtU2VydmljZUNoZWNrX1Jlc3Bv",
          "bnNlEhYKDmF0dGVtcHRfcmVwYWlyGAEgASgIMt4CChBGaWxlVmVyaWZpY2F0",
          "aW9uEo8BCg5TaWduYXR1cmVDaGVjaxIpLkNGaWxlVmVyaWZpY2F0aW9uX1Np",
          "Z25hdHVyZUNoZWNrX1JlcXVlc3QaKi5DRmlsZVZlcmlmaWNhdGlvbl9TaWdu",
          "YXR1cmVDaGVja19SZXNwb25zZSImgrUYIkZpbGUgc2lnbmF0dXJlIGNoZWNr",
          "IHdhcyBwZXJmb3JtZWQSlwEKEVN0ZWFtU2VydmljZUNoZWNrEiwuQ0ZpbGVW",
          "ZXJpZmljYXRpb25fU3RlYW1TZXJ2aWNlQ2hlY2tfUmVxdWVzdBotLkNGaWxl",
          "VmVyaWZpY2F0aW9uX1N0ZWFtU2VydmljZUNoZWNrX1Jlc3BvbnNlIiWCtRgh",
          "U3RlYW0gU2VydmljZSBjaGVjayB3YXMgcGVyZm9ybWVkGh6CtRgaRmlsZSB2",
          "ZXJpZmljYXRpb24gc2VydmljZXNCA4ABAQ=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CFileVerification_SignatureCheck_Request), global::CFileVerification_SignatureCheck_Request.Parser, new[]{ "Steamid", "Appid", "FileSize", "FileTimestamp", "FileTimestamp2", "SignatureResult", "Filename", "ClientPackageVersion", "Sha1Hash" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CFileVerification_SignatureCheck_Response), global::CFileVerification_SignatureCheck_Response.Parser, new[]{ "DenyOperation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CFileVerification_SteamServiceCheck_Request), global::CFileVerification_SteamServiceCheck_Request.Parser, new[]{ "ServiceStatus", "ClientPackageVersion", "LauncherType", "OsType", "ServiceRepair" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CFileVerification_SteamServiceCheck_Response), global::CFileVerification_SteamServiceCheck_Response.Parser, new[]{ "AttemptRepair" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CFileVerification_SignatureCheck_Request : pb::IMessage<CFileVerification_SignatureCheck_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CFileVerification_SignatureCheck_Request> _parser = new pb::MessageParser<CFileVerification_SignatureCheck_Request>(() => new CFileVerification_SignatureCheck_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CFileVerification_SignatureCheck_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVacSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SignatureCheck_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SignatureCheck_Request(CFileVerification_SignatureCheck_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    appid_ = other.appid_;
    fileSize_ = other.fileSize_;
    fileTimestamp_ = other.fileTimestamp_;
    fileTimestamp2_ = other.fileTimestamp2_;
    signatureResult_ = other.signatureResult_;
    filename_ = other.filename_;
    clientPackageVersion_ = other.clientPackageVersion_;
    sha1Hash_ = other.sha1Hash_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SignatureCheck_Request Clone() {
    return new CFileVerification_SignatureCheck_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "file_size" field.</summary>
  public const int FileSizeFieldNumber = 3;
  private readonly static ulong FileSizeDefaultValue = 0UL;

  private ulong fileSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong FileSize {
    get { if ((_hasBits0 & 4) != 0) { return fileSize_; } else { return FileSizeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      fileSize_ = value;
    }
  }
  /// <summary>Gets whether the "file_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFileSize {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "file_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFileSize() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "file_timestamp" field.</summary>
  public const int FileTimestampFieldNumber = 4;
  private readonly static uint FileTimestampDefaultValue = 0;

  private uint fileTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FileTimestamp {
    get { if ((_hasBits0 & 8) != 0) { return fileTimestamp_; } else { return FileTimestampDefaultValue; } }
    set {
      _hasBits0 |= 8;
      fileTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "file_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFileTimestamp {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "file_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFileTimestamp() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "file_timestamp2" field.</summary>
  public const int FileTimestamp2FieldNumber = 5;
  private readonly static uint FileTimestamp2DefaultValue = 0;

  private uint fileTimestamp2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FileTimestamp2 {
    get { if ((_hasBits0 & 16) != 0) { return fileTimestamp2_; } else { return FileTimestamp2DefaultValue; } }
    set {
      _hasBits0 |= 16;
      fileTimestamp2_ = value;
    }
  }
  /// <summary>Gets whether the "file_timestamp2" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFileTimestamp2 {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "file_timestamp2" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFileTimestamp2() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "signature_result" field.</summary>
  public const int SignatureResultFieldNumber = 6;
  private readonly static uint SignatureResultDefaultValue = 0;

  private uint signatureResult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SignatureResult {
    get { if ((_hasBits0 & 32) != 0) { return signatureResult_; } else { return SignatureResultDefaultValue; } }
    set {
      _hasBits0 |= 32;
      signatureResult_ = value;
    }
  }
  /// <summary>Gets whether the "signature_result" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignatureResult {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "signature_result" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignatureResult() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "filename" field.</summary>
  public const int FilenameFieldNumber = 7;
  private readonly static string FilenameDefaultValue = "";

  private string filename_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Filename {
    get { return filename_ ?? FilenameDefaultValue; }
    set {
      filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "filename" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFilename {
    get { return filename_ != null; }
  }
  /// <summary>Clears the value of the "filename" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFilename() {
    filename_ = null;
  }

  /// <summary>Field number for the "client_package_version" field.</summary>
  public const int ClientPackageVersionFieldNumber = 8;
  private readonly static uint ClientPackageVersionDefaultValue = 0;

  private uint clientPackageVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientPackageVersion {
    get { if ((_hasBits0 & 64) != 0) { return clientPackageVersion_; } else { return ClientPackageVersionDefaultValue; } }
    set {
      _hasBits0 |= 64;
      clientPackageVersion_ = value;
    }
  }
  /// <summary>Gets whether the "client_package_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientPackageVersion {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "client_package_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientPackageVersion() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "sha1hash" field.</summary>
  public const int Sha1HashFieldNumber = 9;
  private readonly static pb::ByteString Sha1HashDefaultValue = pb::ByteString.Empty;

  private pb::ByteString sha1Hash_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Sha1Hash {
    get { return sha1Hash_ ?? Sha1HashDefaultValue; }
    set {
      sha1Hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sha1hash" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSha1Hash {
    get { return sha1Hash_ != null; }
  }
  /// <summary>Clears the value of the "sha1hash" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSha1Hash() {
    sha1Hash_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CFileVerification_SignatureCheck_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CFileVerification_SignatureCheck_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Appid != other.Appid) return false;
    if (FileSize != other.FileSize) return false;
    if (FileTimestamp != other.FileTimestamp) return false;
    if (FileTimestamp2 != other.FileTimestamp2) return false;
    if (SignatureResult != other.SignatureResult) return false;
    if (Filename != other.Filename) return false;
    if (ClientPackageVersion != other.ClientPackageVersion) return false;
    if (Sha1Hash != other.Sha1Hash) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasFileSize) hash ^= FileSize.GetHashCode();
    if (HasFileTimestamp) hash ^= FileTimestamp.GetHashCode();
    if (HasFileTimestamp2) hash ^= FileTimestamp2.GetHashCode();
    if (HasSignatureResult) hash ^= SignatureResult.GetHashCode();
    if (HasFilename) hash ^= Filename.GetHashCode();
    if (HasClientPackageVersion) hash ^= ClientPackageVersion.GetHashCode();
    if (HasSha1Hash) hash ^= Sha1Hash.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasFileSize) {
      output.WriteRawTag(24);
      output.WriteUInt64(FileSize);
    }
    if (HasFileTimestamp) {
      output.WriteRawTag(32);
      output.WriteUInt32(FileTimestamp);
    }
    if (HasFileTimestamp2) {
      output.WriteRawTag(40);
      output.WriteUInt32(FileTimestamp2);
    }
    if (HasSignatureResult) {
      output.WriteRawTag(48);
      output.WriteUInt32(SignatureResult);
    }
    if (HasFilename) {
      output.WriteRawTag(58);
      output.WriteString(Filename);
    }
    if (HasClientPackageVersion) {
      output.WriteRawTag(64);
      output.WriteUInt32(ClientPackageVersion);
    }
    if (HasSha1Hash) {
      output.WriteRawTag(74);
      output.WriteBytes(Sha1Hash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasFileSize) {
      output.WriteRawTag(24);
      output.WriteUInt64(FileSize);
    }
    if (HasFileTimestamp) {
      output.WriteRawTag(32);
      output.WriteUInt32(FileTimestamp);
    }
    if (HasFileTimestamp2) {
      output.WriteRawTag(40);
      output.WriteUInt32(FileTimestamp2);
    }
    if (HasSignatureResult) {
      output.WriteRawTag(48);
      output.WriteUInt32(SignatureResult);
    }
    if (HasFilename) {
      output.WriteRawTag(58);
      output.WriteString(Filename);
    }
    if (HasClientPackageVersion) {
      output.WriteRawTag(64);
      output.WriteUInt32(ClientPackageVersion);
    }
    if (HasSha1Hash) {
      output.WriteRawTag(74);
      output.WriteBytes(Sha1Hash);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasFileSize) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileSize);
    }
    if (HasFileTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FileTimestamp);
    }
    if (HasFileTimestamp2) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FileTimestamp2);
    }
    if (HasSignatureResult) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SignatureResult);
    }
    if (HasFilename) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
    }
    if (HasClientPackageVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientPackageVersion);
    }
    if (HasSha1Hash) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sha1Hash);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CFileVerification_SignatureCheck_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasFileSize) {
      FileSize = other.FileSize;
    }
    if (other.HasFileTimestamp) {
      FileTimestamp = other.FileTimestamp;
    }
    if (other.HasFileTimestamp2) {
      FileTimestamp2 = other.FileTimestamp2;
    }
    if (other.HasSignatureResult) {
      SignatureResult = other.SignatureResult;
    }
    if (other.HasFilename) {
      Filename = other.Filename;
    }
    if (other.HasClientPackageVersion) {
      ClientPackageVersion = other.ClientPackageVersion;
    }
    if (other.HasSha1Hash) {
      Sha1Hash = other.Sha1Hash;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 24: {
          FileSize = input.ReadUInt64();
          break;
        }
        case 32: {
          FileTimestamp = input.ReadUInt32();
          break;
        }
        case 40: {
          FileTimestamp2 = input.ReadUInt32();
          break;
        }
        case 48: {
          SignatureResult = input.ReadUInt32();
          break;
        }
        case 58: {
          Filename = input.ReadString();
          break;
        }
        case 64: {
          ClientPackageVersion = input.ReadUInt32();
          break;
        }
        case 74: {
          Sha1Hash = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 24: {
          FileSize = input.ReadUInt64();
          break;
        }
        case 32: {
          FileTimestamp = input.ReadUInt32();
          break;
        }
        case 40: {
          FileTimestamp2 = input.ReadUInt32();
          break;
        }
        case 48: {
          SignatureResult = input.ReadUInt32();
          break;
        }
        case 58: {
          Filename = input.ReadString();
          break;
        }
        case 64: {
          ClientPackageVersion = input.ReadUInt32();
          break;
        }
        case 74: {
          Sha1Hash = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CFileVerification_SignatureCheck_Response : pb::IMessage<CFileVerification_SignatureCheck_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CFileVerification_SignatureCheck_Response> _parser = new pb::MessageParser<CFileVerification_SignatureCheck_Response>(() => new CFileVerification_SignatureCheck_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CFileVerification_SignatureCheck_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVacSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SignatureCheck_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SignatureCheck_Response(CFileVerification_SignatureCheck_Response other) : this() {
    _hasBits0 = other._hasBits0;
    denyOperation_ = other.denyOperation_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SignatureCheck_Response Clone() {
    return new CFileVerification_SignatureCheck_Response(this);
  }

  /// <summary>Field number for the "deny_operation" field.</summary>
  public const int DenyOperationFieldNumber = 1;
  private readonly static bool DenyOperationDefaultValue = false;

  private bool denyOperation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool DenyOperation {
    get { if ((_hasBits0 & 1) != 0) { return denyOperation_; } else { return DenyOperationDefaultValue; } }
    set {
      _hasBits0 |= 1;
      denyOperation_ = value;
    }
  }
  /// <summary>Gets whether the "deny_operation" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDenyOperation {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "deny_operation" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDenyOperation() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CFileVerification_SignatureCheck_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CFileVerification_SignatureCheck_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DenyOperation != other.DenyOperation) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDenyOperation) hash ^= DenyOperation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDenyOperation) {
      output.WriteRawTag(8);
      output.WriteBool(DenyOperation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDenyOperation) {
      output.WriteRawTag(8);
      output.WriteBool(DenyOperation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDenyOperation) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CFileVerification_SignatureCheck_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasDenyOperation) {
      DenyOperation = other.DenyOperation;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DenyOperation = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          DenyOperation = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CFileVerification_SteamServiceCheck_Request : pb::IMessage<CFileVerification_SteamServiceCheck_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CFileVerification_SteamServiceCheck_Request> _parser = new pb::MessageParser<CFileVerification_SteamServiceCheck_Request>(() => new CFileVerification_SteamServiceCheck_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CFileVerification_SteamServiceCheck_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVacSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SteamServiceCheck_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SteamServiceCheck_Request(CFileVerification_SteamServiceCheck_Request other) : this() {
    _hasBits0 = other._hasBits0;
    serviceStatus_ = other.serviceStatus_;
    clientPackageVersion_ = other.clientPackageVersion_;
    launcherType_ = other.launcherType_;
    osType_ = other.osType_;
    serviceRepair_ = other.serviceRepair_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SteamServiceCheck_Request Clone() {
    return new CFileVerification_SteamServiceCheck_Request(this);
  }

  /// <summary>Field number for the "service_status" field.</summary>
  public const int ServiceStatusFieldNumber = 2;
  private readonly static uint ServiceStatusDefaultValue = 0;

  private uint serviceStatus_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServiceStatus {
    get { if ((_hasBits0 & 1) != 0) { return serviceStatus_; } else { return ServiceStatusDefaultValue; } }
    set {
      _hasBits0 |= 1;
      serviceStatus_ = value;
    }
  }
  /// <summary>Gets whether the "service_status" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServiceStatus {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "service_status" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServiceStatus() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "client_package_version" field.</summary>
  public const int ClientPackageVersionFieldNumber = 3;
  private readonly static uint ClientPackageVersionDefaultValue = 0;

  private uint clientPackageVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientPackageVersion {
    get { if ((_hasBits0 & 2) != 0) { return clientPackageVersion_; } else { return ClientPackageVersionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clientPackageVersion_ = value;
    }
  }
  /// <summary>Gets whether the "client_package_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientPackageVersion {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "client_package_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientPackageVersion() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "launcher_type" field.</summary>
  public const int LauncherTypeFieldNumber = 4;
  private readonly static uint LauncherTypeDefaultValue = 0;

  private uint launcherType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LauncherType {
    get { if ((_hasBits0 & 4) != 0) { return launcherType_; } else { return LauncherTypeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      launcherType_ = value;
    }
  }
  /// <summary>Gets whether the "launcher_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLauncherType {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "launcher_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLauncherType() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "os_type" field.</summary>
  public const int OsTypeFieldNumber = 5;
  private readonly static uint OsTypeDefaultValue = 0;

  private uint osType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OsType {
    get { if ((_hasBits0 & 8) != 0) { return osType_; } else { return OsTypeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      osType_ = value;
    }
  }
  /// <summary>Gets whether the "os_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOsType {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "os_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOsType() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "service_repair" field.</summary>
  public const int ServiceRepairFieldNumber = 6;
  private readonly static uint ServiceRepairDefaultValue = 0;

  private uint serviceRepair_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServiceRepair {
    get { if ((_hasBits0 & 16) != 0) { return serviceRepair_; } else { return ServiceRepairDefaultValue; } }
    set {
      _hasBits0 |= 16;
      serviceRepair_ = value;
    }
  }
  /// <summary>Gets whether the "service_repair" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServiceRepair {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "service_repair" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServiceRepair() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CFileVerification_SteamServiceCheck_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CFileVerification_SteamServiceCheck_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServiceStatus != other.ServiceStatus) return false;
    if (ClientPackageVersion != other.ClientPackageVersion) return false;
    if (LauncherType != other.LauncherType) return false;
    if (OsType != other.OsType) return false;
    if (ServiceRepair != other.ServiceRepair) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasServiceStatus) hash ^= ServiceStatus.GetHashCode();
    if (HasClientPackageVersion) hash ^= ClientPackageVersion.GetHashCode();
    if (HasLauncherType) hash ^= LauncherType.GetHashCode();
    if (HasOsType) hash ^= OsType.GetHashCode();
    if (HasServiceRepair) hash ^= ServiceRepair.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasServiceStatus) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServiceStatus);
    }
    if (HasClientPackageVersion) {
      output.WriteRawTag(24);
      output.WriteUInt32(ClientPackageVersion);
    }
    if (HasLauncherType) {
      output.WriteRawTag(32);
      output.WriteUInt32(LauncherType);
    }
    if (HasOsType) {
      output.WriteRawTag(40);
      output.WriteUInt32(OsType);
    }
    if (HasServiceRepair) {
      output.WriteRawTag(48);
      output.WriteUInt32(ServiceRepair);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasServiceStatus) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServiceStatus);
    }
    if (HasClientPackageVersion) {
      output.WriteRawTag(24);
      output.WriteUInt32(ClientPackageVersion);
    }
    if (HasLauncherType) {
      output.WriteRawTag(32);
      output.WriteUInt32(LauncherType);
    }
    if (HasOsType) {
      output.WriteRawTag(40);
      output.WriteUInt32(OsType);
    }
    if (HasServiceRepair) {
      output.WriteRawTag(48);
      output.WriteUInt32(ServiceRepair);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasServiceStatus) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServiceStatus);
    }
    if (HasClientPackageVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientPackageVersion);
    }
    if (HasLauncherType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LauncherType);
    }
    if (HasOsType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OsType);
    }
    if (HasServiceRepair) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServiceRepair);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CFileVerification_SteamServiceCheck_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasServiceStatus) {
      ServiceStatus = other.ServiceStatus;
    }
    if (other.HasClientPackageVersion) {
      ClientPackageVersion = other.ClientPackageVersion;
    }
    if (other.HasLauncherType) {
      LauncherType = other.LauncherType;
    }
    if (other.HasOsType) {
      OsType = other.OsType;
    }
    if (other.HasServiceRepair) {
      ServiceRepair = other.ServiceRepair;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          ServiceStatus = input.ReadUInt32();
          break;
        }
        case 24: {
          ClientPackageVersion = input.ReadUInt32();
          break;
        }
        case 32: {
          LauncherType = input.ReadUInt32();
          break;
        }
        case 40: {
          OsType = input.ReadUInt32();
          break;
        }
        case 48: {
          ServiceRepair = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          ServiceStatus = input.ReadUInt32();
          break;
        }
        case 24: {
          ClientPackageVersion = input.ReadUInt32();
          break;
        }
        case 32: {
          LauncherType = input.ReadUInt32();
          break;
        }
        case 40: {
          OsType = input.ReadUInt32();
          break;
        }
        case 48: {
          ServiceRepair = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CFileVerification_SteamServiceCheck_Response : pb::IMessage<CFileVerification_SteamServiceCheck_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CFileVerification_SteamServiceCheck_Response> _parser = new pb::MessageParser<CFileVerification_SteamServiceCheck_Response>(() => new CFileVerification_SteamServiceCheck_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CFileVerification_SteamServiceCheck_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesVacSteamclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SteamServiceCheck_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SteamServiceCheck_Response(CFileVerification_SteamServiceCheck_Response other) : this() {
    _hasBits0 = other._hasBits0;
    attemptRepair_ = other.attemptRepair_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CFileVerification_SteamServiceCheck_Response Clone() {
    return new CFileVerification_SteamServiceCheck_Response(this);
  }

  /// <summary>Field number for the "attempt_repair" field.</summary>
  public const int AttemptRepairFieldNumber = 1;
  private readonly static bool AttemptRepairDefaultValue = false;

  private bool attemptRepair_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AttemptRepair {
    get { if ((_hasBits0 & 1) != 0) { return attemptRepair_; } else { return AttemptRepairDefaultValue; } }
    set {
      _hasBits0 |= 1;
      attemptRepair_ = value;
    }
  }
  /// <summary>Gets whether the "attempt_repair" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAttemptRepair {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "attempt_repair" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAttemptRepair() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CFileVerification_SteamServiceCheck_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CFileVerification_SteamServiceCheck_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AttemptRepair != other.AttemptRepair) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAttemptRepair) hash ^= AttemptRepair.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAttemptRepair) {
      output.WriteRawTag(8);
      output.WriteBool(AttemptRepair);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAttemptRepair) {
      output.WriteRawTag(8);
      output.WriteBool(AttemptRepair);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAttemptRepair) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CFileVerification_SteamServiceCheck_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasAttemptRepair) {
      AttemptRepair = other.AttemptRepair;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AttemptRepair = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AttemptRepair = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code

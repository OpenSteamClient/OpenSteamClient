// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_deviceauth.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_deviceauth.steamclient.proto</summary>
public static partial class SteammessagesDeviceauthSteamclientReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_deviceauth.steamclient.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesDeviceauthSteamclientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CipzdGVhbW1lc3NhZ2VzX2RldmljZWF1dGguc3RlYW1jbGllbnQucHJvdG8a",
          "GHN0ZWFtbWVzc2FnZXNfYmFzZS5wcm90bxosc3RlYW1tZXNzYWdlc191bmlm",
          "aWVkX2Jhc2Uuc3RlYW1jbGllbnQucHJvdG8iWAorQ0RldmljZUF1dGhfR2V0",
          "T3duQXV0aG9yaXplZERldmljZXNfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgG",
          "EhgKEGluY2x1ZGVfY2FuY2VsZWQYAiABKAgiuAIKLENEZXZpY2VBdXRoX0dl",
          "dE93bkF1dGhvcml6ZWREZXZpY2VzX1Jlc3BvbnNlEkUKB2RldmljZXMYASAD",
          "KAsyNC5DRGV2aWNlQXV0aF9HZXRPd25BdXRob3JpemVkRGV2aWNlc19SZXNw",
          "b25zZS5EZXZpY2UawAEKBkRldmljZRIZChFhdXRoX2RldmljZV90b2tlbhgB",
          "IAEoBhITCgtkZXZpY2VfbmFtZRgCIAEoCRISCgppc19wZW5kaW5nGAMgASgI",
          "EhMKC2lzX2NhbmNlbGVkGAQgASgIEhYKDmxhc3RfdGltZV91c2VkGAUgASgN",
          "EhgKEGxhc3RfYm9ycm93ZXJfaWQYBiABKAYSFwoPbGFzdF9hcHBfcGxheWVk",
          "GAcgASgNEhIKCmlzX2xpbWl0ZWQYCCABKAgihQEKLkNEZXZpY2VBdXRoX0Fj",
          "Y2VwdEF1dGhvcml6YXRpb25SZXF1ZXN0X1JlcXVlc3QSDwoHc3RlYW1pZBgB",
          "IAEoBhIZChFhdXRoX2RldmljZV90b2tlbhgCIAEoBhIRCglhdXRoX2NvZGUY",
          "AyABKAYSFAoMZnJvbV9zdGVhbWlkGAQgASgGIjEKL0NEZXZpY2VBdXRoX0Fj",
          "Y2VwdEF1dGhvcml6YXRpb25SZXF1ZXN0X1Jlc3BvbnNlIlcKKUNEZXZpY2VB",
          "dXRoX0F1dGhvcml6ZVJlbW90ZURldmljZV9SZXF1ZXN0Eg8KB3N0ZWFtaWQY",
          "ASABKAYSGQoRYXV0aF9kZXZpY2VfdG9rZW4YAiABKAYiLAoqQ0RldmljZUF1",
          "dGhfQXV0aG9yaXplUmVtb3RlRGV2aWNlX1Jlc3BvbnNlIlkKK0NEZXZpY2VB",
          "dXRoX0RlYXV0aG9yaXplUmVtb3RlRGV2aWNlX1JlcXVlc3QSDwoHc3RlYW1p",
          "ZBgBIAEoBhIZChFhdXRoX2RldmljZV90b2tlbhgCIAEoBiIuCixDRGV2aWNl",
          "QXV0aF9EZWF1dGhvcml6ZVJlbW90ZURldmljZV9SZXNwb25zZSI/CixDRGV2",
          "aWNlQXV0aF9HZXRVc2VkQXV0aG9yaXplZERldmljZXNfUmVxdWVzdBIPCgdz",
          "dGVhbWlkGAEgASgGIvoBCi1DRGV2aWNlQXV0aF9HZXRVc2VkQXV0aG9yaXpl",
          "ZERldmljZXNfUmVzcG9uc2USRgoHZGV2aWNlcxgBIAMoCzI1LkNEZXZpY2VB",
          "dXRoX0dldFVzZWRBdXRob3JpemVkRGV2aWNlc19SZXNwb25zZS5EZXZpY2Ua",
          "gAEKBkRldmljZRIZChFhdXRoX2RldmljZV90b2tlbhgBIAEoBhITCgtkZXZp",
          "Y2VfbmFtZRgCIAEoCRIVCg1vd25lcl9zdGVhbWlkGAMgASgGEhYKDmxhc3Rf",
          "dGltZV91c2VkGAQgASgNEhcKD2xhc3RfYXBwX3BsYXllZBgFIAEoDSJwCipD",
          "RGV2aWNlQXV0aF9HZXRBdXRob3JpemVkQm9ycm93ZXJzX1JlcXVlc3QSDwoH",
          "c3RlYW1pZBgBIAEoBhIYChBpbmNsdWRlX2NhbmNlbGVkGAIgASgIEhcKD2lu",
          "Y2x1ZGVfcGVuZGluZxgDIAEoCCLTAQorQ0RldmljZUF1dGhfR2V0QXV0aG9y",
          "aXplZEJvcnJvd2Vyc19SZXNwb25zZRJICglib3Jyb3dlcnMYASADKAsyNS5D",
          "RGV2aWNlQXV0aF9HZXRBdXRob3JpemVkQm9ycm93ZXJzX1Jlc3BvbnNlLkJv",
          "cnJvd2VyGloKCEJvcnJvd2VyEg8KB3N0ZWFtaWQYASABKAYSEgoKaXNfcGVu",
          "ZGluZxgCIAEoCBITCgtpc19jYW5jZWxlZBgDIAEoCBIUCgx0aW1lX2NyZWF0",
          "ZWQYBCABKA0iVwoqQ0RldmljZUF1dGhfQWRkQXV0aG9yaXplZEJvcnJvd2Vy",
          "c19SZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYSGAoQc3RlYW1pZF9ib3Jyb3dl",
          "chgCIAMoBiJGCitDRGV2aWNlQXV0aF9BZGRBdXRob3JpemVkQm9ycm93ZXJz",
          "X1Jlc3BvbnNlEhcKD3NlY29uZHNfdG9fd2FpdBgBIAEoBSJaCi1DRGV2aWNl",
          "QXV0aF9SZW1vdmVBdXRob3JpemVkQm9ycm93ZXJzX1JlcXVlc3QSDwoHc3Rl",
          "YW1pZBgBIAEoBhIYChBzdGVhbWlkX2JvcnJvd2VyGAIgAygGIjAKLkNEZXZp",
          "Y2VBdXRoX1JlbW92ZUF1dGhvcml6ZWRCb3Jyb3dlcnNfUmVzcG9uc2UicQor",
          "Q0RldmljZUF1dGhfR2V0QXV0aG9yaXplZEFzQm9ycm93ZXJfUmVxdWVzdBIP",
          "CgdzdGVhbWlkGAEgASgGEhgKEGluY2x1ZGVfY2FuY2VsZWQYAiABKAgSFwoP",
          "aW5jbHVkZV9wZW5kaW5nGAMgASgIIosCCixDRGV2aWNlQXV0aF9HZXRBdXRo",
          "b3JpemVkQXNCb3Jyb3dlcl9SZXNwb25zZRJFCgdsZW5kZXJzGAEgAygLMjQu",
          "Q0RldmljZUF1dGhfR2V0QXV0aG9yaXplZEFzQm9ycm93ZXJfUmVzcG9uc2Uu",
          "TGVuZGVyGpMBCgZMZW5kZXISDwoHc3RlYW1pZBgBIAEoBhIUCgx0aW1lX2Ny",
          "ZWF0ZWQYAiABKA0SEgoKaXNfcGVuZGluZxgDIAEoCBITCgtpc19jYW5jZWxl",
          "ZBgEIAEoCBIPCgdpc191c2VkGAUgASgIEhQKDHRpbWVfcmVtb3ZlZBgGIAEo",
          "DRISCgp0aW1lX2ZpcnN0GAcgASgNIkAKLUNEZXZpY2VBdXRoX0dldEV4Y2x1",
          "ZGVkR2FtZXNJbkxpYnJhcnlfUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGIuYB",
          "Ci5DRGV2aWNlQXV0aF9HZXRFeGNsdWRlZEdhbWVzSW5MaWJyYXJ5X1Jlc3Bv",
          "bnNlElQKDmV4Y2x1ZGVkX2dhbWVzGAEgAygLMjwuQ0RldmljZUF1dGhfR2V0",
          "RXhjbHVkZWRHYW1lc0luTGlicmFyeV9SZXNwb25zZS5FeGNsdWRlZEdhbWUa",
          "XgoMRXhjbHVkZWRHYW1lEg0KBWFwcGlkGAEgASgNEhEKCWdhbWVfbmFtZRgC",
          "IAEoCRISCgp2YWNfYmFubmVkGAMgASgIEhgKEHBhY2thZ2VfZXhjbHVkZWQY",
          "BCABKAgiTAoqQ0RldmljZUF1dGhfR2V0Qm9ycm93ZXJQbGF5SGlzdG9yeV9S",
          "ZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYSDQoFYXBwaWQYAiABKA0iuAIKK0NE",
          "ZXZpY2VBdXRoX0dldEJvcnJvd2VyUGxheUhpc3RvcnlfUmVzcG9uc2USUgoO",
          "bGVuZGVyX2hpc3RvcnkYASADKAsyOi5DRGV2aWNlQXV0aF9HZXRCb3Jyb3dl",
          "clBsYXlIaXN0b3J5X1Jlc3BvbnNlLkxlbmRlckhpc3RvcnkaQwoLR2FtZUhp",
          "c3RvcnkSDQoFYXBwaWQYASABKA0SEQoJdGltZV9sYXN0GAIgASgNEhIKCnRp",
          "bWVfdG90YWwYAyABKA0acAoNTGVuZGVySGlzdG9yeRIPCgdzdGVhbWlkGAEg",
          "ASgGEk4KDGdhbWVfaGlzdG9yeRgCIAMoCzI4LkNEZXZpY2VBdXRoX0dldEJv",
          "cnJvd2VyUGxheUhpc3RvcnlfUmVzcG9uc2UuR2FtZUhpc3Rvcnkywg8KCkRl",
          "dmljZUF1dGgSmgEKF0dldE93bkF1dGhvcml6ZWREZXZpY2VzEiwuQ0Rldmlj",
          "ZUF1dGhfR2V0T3duQXV0aG9yaXplZERldmljZXNfUmVxdWVzdBotLkNEZXZp",
          "Y2VBdXRoX0dldE93bkF1dGhvcml6ZWREZXZpY2VzX1Jlc3BvbnNlIiKCtRge",
          "R2V0IGxpc3Qgb2YgYXV0aG9yaXplZCBkZXZpY2VzErUBChpBY2NlcHRBdXRo",
          "b3JpemF0aW9uUmVxdWVzdBIvLkNEZXZpY2VBdXRoX0FjY2VwdEF1dGhvcml6",
          "YXRpb25SZXF1ZXN0X1JlcXVlc3QaMC5DRGV2aWNlQXV0aF9BY2NlcHRBdXRo",
          "b3JpemF0aW9uUmVxdWVzdF9SZXNwb25zZSI0grUYMEFjY2VwdCBhbiBhdXRo",
          "b3JpemF0aW9uIHJlcXVlc3QgYnkgYW5vdGhlciB1c2VycxKqAQoVQXV0aG9y",
          "aXplUmVtb3RlRGV2aWNlEiouQ0RldmljZUF1dGhfQXV0aG9yaXplUmVtb3Rl",
          "RGV2aWNlX1JlcXVlc3QaKy5DRGV2aWNlQXV0aF9BdXRob3JpemVSZW1vdGVE",
          "ZXZpY2VfUmVzcG9uc2UiOIK1GDRBdXRob3JpemUgb3duIHJlbW90ZSBkZXZp",
          "Y2UgdGhhdCBoYXMgcGVuZGluZyByZXF1ZXN0EpsBChdEZWF1dGhvcml6ZVJl",
          "bW90ZURldmljZRIsLkNEZXZpY2VBdXRoX0RlYXV0aG9yaXplUmVtb3RlRGV2",
          "aWNlX1JlcXVlc3QaLS5DRGV2aWNlQXV0aF9EZWF1dGhvcml6ZVJlbW90ZURl",
          "dmljZV9SZXNwb25zZSIjgrUYH1Jldm9rZSBvd24gZGV2aWNlIGF1dGhvcml6",
          "YXRpb24SuwEKGEdldFVzZWRBdXRob3JpemVkRGV2aWNlcxItLkNEZXZpY2VB",
          "dXRoX0dldFVzZWRBdXRob3JpemVkRGV2aWNlc19SZXF1ZXN0Gi4uQ0Rldmlj",
          "ZUF1dGhfR2V0VXNlZEF1dGhvcml6ZWREZXZpY2VzX1Jlc3BvbnNlIkCCtRg8",
          "R2V0IGxpc3Qgb2YgYXV0aG9yaXplZCBkZXZpY2VzIHVzZXIgcGxheWVkIGJv",
          "cnJvd2VkIGdhbWVzIG9uErIBChZHZXRBdXRob3JpemVkQm9ycm93ZXJzEisu",
          "Q0RldmljZUF1dGhfR2V0QXV0aG9yaXplZEJvcnJvd2Vyc19SZXF1ZXN0Giwu",
          "Q0RldmljZUF1dGhfR2V0QXV0aG9yaXplZEJvcnJvd2Vyc19SZXNwb25zZSI9",
          "grUYOUdldCBsaXN0IG9mIHVzZXJzIHRoYXQgY2FuIGJvcnJvdyBvbiBhbiBh",
          "dXRob3JpemVkIGRldmljZRKwAQoWQWRkQXV0aG9yaXplZEJvcnJvd2VycxIr",
          "LkNEZXZpY2VBdXRoX0FkZEF1dGhvcml6ZWRCb3Jyb3dlcnNfUmVxdWVzdBos",
          "LkNEZXZpY2VBdXRoX0FkZEF1dGhvcml6ZWRCb3Jyb3dlcnNfUmVzcG9uc2Ui",
          "O4K1GDdBZGQgdXNlcnMgdGhhdCBjYW4gYm9ycm93IG9uIGxpbWl0ZWQgYXV0",
          "aG9yaXplZCBkZXZpY2VzErwBChlSZW1vdmVBdXRob3JpemVkQm9ycm93ZXJz",
          "Ei4uQ0RldmljZUF1dGhfUmVtb3ZlQXV0aG9yaXplZEJvcnJvd2Vyc19SZXF1",
          "ZXN0Gi8uQ0RldmljZUF1dGhfUmVtb3ZlQXV0aG9yaXplZEJvcnJvd2Vyc19S",
          "ZXNwb25zZSI+grUYOlJlbW92ZSB1c2VycyB0aGF0IGNhbiBib3Jyb3cgb24g",
          "bGltaXRlZCBhdXRob3JpemVkIGRldmljZXMSuQEKF0dldEF1dGhvcml6ZWRB",
          "c0JvcnJvd2VyEiwuQ0RldmljZUF1dGhfR2V0QXV0aG9yaXplZEFzQm9ycm93",
          "ZXJfUmVxdWVzdBotLkNEZXZpY2VBdXRoX0dldEF1dGhvcml6ZWRBc0JvcnJv",
          "d2VyX1Jlc3BvbnNlIkGCtRg9R2V0IGxpc3Qgb2YgbGVuZGVycyB0aGF0IGF1",
          "dGhvcml6ZWQgZ2l2ZW4gYWNjb3VudCBhcyBib3Jyb3dlchKvAQoZR2V0RXhj",
          "bHVkZWRHYW1lc0luTGlicmFyeRIuLkNEZXZpY2VBdXRoX0dldEV4Y2x1ZGVk",
          "R2FtZXNJbkxpYnJhcnlfUmVxdWVzdBovLkNEZXZpY2VBdXRoX0dldEV4Y2x1",
          "ZGVkR2FtZXNJbkxpYnJhcnlfUmVzcG9uc2UiMYK1GC1HZXQgbGlzdCBvZiBl",
          "eGNsdWRlZCBnYW1lcyBpbiBsZW5kZXJzIGxpYnJhcnkSmgEKFkdldEJvcnJv",
          "d2VyUGxheUhpc3RvcnkSKy5DRGV2aWNlQXV0aF9HZXRCb3Jyb3dlclBsYXlI",
          "aXN0b3J5X1JlcXVlc3QaLC5DRGV2aWNlQXV0aF9HZXRCb3Jyb3dlclBsYXlI",
          "aXN0b3J5X1Jlc3BvbnNlIiWCtRghR2V0IGxpc3QgcGxheWVkIGdhbWVzIGFz",
          "IGJvcnJvd2VyGiSCtRggTGlicmFyeSBTaGFyaW5nIHNldHRpbmdzIHNlcnZp",
          "Y2VCA4ABAQ=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetOwnAuthorizedDevices_Request), global::CDeviceAuth_GetOwnAuthorizedDevices_Request.Parser, new[]{ "Steamid", "IncludeCanceled" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetOwnAuthorizedDevices_Response), global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Parser, new[]{ "Devices" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Types.Device), global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Types.Device.Parser, new[]{ "AuthDeviceToken", "DeviceName", "IsPending", "IsCanceled", "LastTimeUsed", "LastBorrowerId", "LastAppPlayed", "IsLimited" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_AcceptAuthorizationRequest_Request), global::CDeviceAuth_AcceptAuthorizationRequest_Request.Parser, new[]{ "Steamid", "AuthDeviceToken", "AuthCode", "FromSteamid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_AcceptAuthorizationRequest_Response), global::CDeviceAuth_AcceptAuthorizationRequest_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_AuthorizeRemoteDevice_Request), global::CDeviceAuth_AuthorizeRemoteDevice_Request.Parser, new[]{ "Steamid", "AuthDeviceToken" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_AuthorizeRemoteDevice_Response), global::CDeviceAuth_AuthorizeRemoteDevice_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_DeauthorizeRemoteDevice_Request), global::CDeviceAuth_DeauthorizeRemoteDevice_Request.Parser, new[]{ "Steamid", "AuthDeviceToken" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_DeauthorizeRemoteDevice_Response), global::CDeviceAuth_DeauthorizeRemoteDevice_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetUsedAuthorizedDevices_Request), global::CDeviceAuth_GetUsedAuthorizedDevices_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetUsedAuthorizedDevices_Response), global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Parser, new[]{ "Devices" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Types.Device), global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Types.Device.Parser, new[]{ "AuthDeviceToken", "DeviceName", "OwnerSteamid", "LastTimeUsed", "LastAppPlayed" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetAuthorizedBorrowers_Request), global::CDeviceAuth_GetAuthorizedBorrowers_Request.Parser, new[]{ "Steamid", "IncludeCanceled", "IncludePending" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetAuthorizedBorrowers_Response), global::CDeviceAuth_GetAuthorizedBorrowers_Response.Parser, new[]{ "Borrowers" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetAuthorizedBorrowers_Response.Types.Borrower), global::CDeviceAuth_GetAuthorizedBorrowers_Response.Types.Borrower.Parser, new[]{ "Steamid", "IsPending", "IsCanceled", "TimeCreated" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_AddAuthorizedBorrowers_Request), global::CDeviceAuth_AddAuthorizedBorrowers_Request.Parser, new[]{ "Steamid", "SteamidBorrower" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_AddAuthorizedBorrowers_Response), global::CDeviceAuth_AddAuthorizedBorrowers_Response.Parser, new[]{ "SecondsToWait" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_RemoveAuthorizedBorrowers_Request), global::CDeviceAuth_RemoveAuthorizedBorrowers_Request.Parser, new[]{ "Steamid", "SteamidBorrower" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_RemoveAuthorizedBorrowers_Response), global::CDeviceAuth_RemoveAuthorizedBorrowers_Response.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetAuthorizedAsBorrower_Request), global::CDeviceAuth_GetAuthorizedAsBorrower_Request.Parser, new[]{ "Steamid", "IncludeCanceled", "IncludePending" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetAuthorizedAsBorrower_Response), global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Parser, new[]{ "Lenders" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Types.Lender), global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Types.Lender.Parser, new[]{ "Steamid", "TimeCreated", "IsPending", "IsCanceled", "IsUsed", "TimeRemoved", "TimeFirst" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetExcludedGamesInLibrary_Request), global::CDeviceAuth_GetExcludedGamesInLibrary_Request.Parser, new[]{ "Steamid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetExcludedGamesInLibrary_Response), global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Parser, new[]{ "ExcludedGames" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Types.ExcludedGame), global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Types.ExcludedGame.Parser, new[]{ "Appid", "GameName", "VacBanned", "PackageExcluded" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetBorrowerPlayHistory_Request), global::CDeviceAuth_GetBorrowerPlayHistory_Request.Parser, new[]{ "Steamid", "Appid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetBorrowerPlayHistory_Response), global::CDeviceAuth_GetBorrowerPlayHistory_Response.Parser, new[]{ "LenderHistory" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.GameHistory), global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.GameHistory.Parser, new[]{ "Appid", "TimeLast", "TimeTotal" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.LenderHistory), global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.LenderHistory.Parser, new[]{ "Steamid", "GameHistory" }, null, null, null, null)})
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CDeviceAuth_GetOwnAuthorizedDevices_Request : pb::IMessage<CDeviceAuth_GetOwnAuthorizedDevices_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetOwnAuthorizedDevices_Request> _parser = new pb::MessageParser<CDeviceAuth_GetOwnAuthorizedDevices_Request>(() => new CDeviceAuth_GetOwnAuthorizedDevices_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetOwnAuthorizedDevices_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetOwnAuthorizedDevices_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetOwnAuthorizedDevices_Request(CDeviceAuth_GetOwnAuthorizedDevices_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    includeCanceled_ = other.includeCanceled_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetOwnAuthorizedDevices_Request Clone() {
    return new CDeviceAuth_GetOwnAuthorizedDevices_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "include_canceled" field.</summary>
  public const int IncludeCanceledFieldNumber = 2;
  private readonly static bool IncludeCanceledDefaultValue = false;

  private bool includeCanceled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IncludeCanceled {
    get { if ((_hasBits0 & 2) != 0) { return includeCanceled_; } else { return IncludeCanceledDefaultValue; } }
    set {
      _hasBits0 |= 2;
      includeCanceled_ = value;
    }
  }
  /// <summary>Gets whether the "include_canceled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncludeCanceled {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "include_canceled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncludeCanceled() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetOwnAuthorizedDevices_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetOwnAuthorizedDevices_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (IncludeCanceled != other.IncludeCanceled) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasIncludeCanceled) hash ^= IncludeCanceled.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasIncludeCanceled) {
      output.WriteRawTag(16);
      output.WriteBool(IncludeCanceled);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasIncludeCanceled) {
      output.WriteRawTag(16);
      output.WriteBool(IncludeCanceled);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasIncludeCanceled) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetOwnAuthorizedDevices_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasIncludeCanceled) {
      IncludeCanceled = other.IncludeCanceled;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          IncludeCanceled = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          IncludeCanceled = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetOwnAuthorizedDevices_Response : pb::IMessage<CDeviceAuth_GetOwnAuthorizedDevices_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetOwnAuthorizedDevices_Response> _parser = new pb::MessageParser<CDeviceAuth_GetOwnAuthorizedDevices_Response>(() => new CDeviceAuth_GetOwnAuthorizedDevices_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetOwnAuthorizedDevices_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetOwnAuthorizedDevices_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetOwnAuthorizedDevices_Response(CDeviceAuth_GetOwnAuthorizedDevices_Response other) : this() {
    devices_ = other.devices_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetOwnAuthorizedDevices_Response Clone() {
    return new CDeviceAuth_GetOwnAuthorizedDevices_Response(this);
  }

  /// <summary>Field number for the "devices" field.</summary>
  public const int DevicesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Types.Device> _repeated_devices_codec
      = pb::FieldCodec.ForMessage(10, global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Types.Device.Parser);
  private readonly pbc::RepeatedField<global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Types.Device> devices_ = new pbc::RepeatedField<global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Types.Device>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Types.Device> Devices {
    get { return devices_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetOwnAuthorizedDevices_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetOwnAuthorizedDevices_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!devices_.Equals(other.devices_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= devices_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    devices_.WriteTo(output, _repeated_devices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    devices_.WriteTo(ref output, _repeated_devices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += devices_.CalculateSize(_repeated_devices_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetOwnAuthorizedDevices_Response other) {
    if (other == null) {
      return;
    }
    devices_.Add(other.devices_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          devices_.AddEntriesFrom(input, _repeated_devices_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDeviceAuth_GetOwnAuthorizedDevices_Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Device : pb::IMessage<Device>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Device> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDeviceAuth_GetOwnAuthorizedDevices_Response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Device() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Device(Device other) : this() {
        _hasBits0 = other._hasBits0;
        authDeviceToken_ = other.authDeviceToken_;
        deviceName_ = other.deviceName_;
        isPending_ = other.isPending_;
        isCanceled_ = other.isCanceled_;
        lastTimeUsed_ = other.lastTimeUsed_;
        lastBorrowerId_ = other.lastBorrowerId_;
        lastAppPlayed_ = other.lastAppPlayed_;
        isLimited_ = other.isLimited_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Device Clone() {
        return new Device(this);
      }

      /// <summary>Field number for the "auth_device_token" field.</summary>
      public const int AuthDeviceTokenFieldNumber = 1;
      private readonly static ulong AuthDeviceTokenDefaultValue = 0UL;

      private ulong authDeviceToken_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong AuthDeviceToken {
        get { if ((_hasBits0 & 1) != 0) { return authDeviceToken_; } else { return AuthDeviceTokenDefaultValue; } }
        set {
          _hasBits0 |= 1;
          authDeviceToken_ = value;
        }
      }
      /// <summary>Gets whether the "auth_device_token" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAuthDeviceToken {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "auth_device_token" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAuthDeviceToken() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "device_name" field.</summary>
      public const int DeviceNameFieldNumber = 2;
      private readonly static string DeviceNameDefaultValue = "";

      private string deviceName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string DeviceName {
        get { return deviceName_ ?? DeviceNameDefaultValue; }
        set {
          deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "device_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDeviceName {
        get { return deviceName_ != null; }
      }
      /// <summary>Clears the value of the "device_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDeviceName() {
        deviceName_ = null;
      }

      /// <summary>Field number for the "is_pending" field.</summary>
      public const int IsPendingFieldNumber = 3;
      private readonly static bool IsPendingDefaultValue = false;

      private bool isPending_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsPending {
        get { if ((_hasBits0 & 2) != 0) { return isPending_; } else { return IsPendingDefaultValue; } }
        set {
          _hasBits0 |= 2;
          isPending_ = value;
        }
      }
      /// <summary>Gets whether the "is_pending" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsPending {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "is_pending" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsPending() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "is_canceled" field.</summary>
      public const int IsCanceledFieldNumber = 4;
      private readonly static bool IsCanceledDefaultValue = false;

      private bool isCanceled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsCanceled {
        get { if ((_hasBits0 & 4) != 0) { return isCanceled_; } else { return IsCanceledDefaultValue; } }
        set {
          _hasBits0 |= 4;
          isCanceled_ = value;
        }
      }
      /// <summary>Gets whether the "is_canceled" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsCanceled {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "is_canceled" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsCanceled() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "last_time_used" field.</summary>
      public const int LastTimeUsedFieldNumber = 5;
      private readonly static uint LastTimeUsedDefaultValue = 0;

      private uint lastTimeUsed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LastTimeUsed {
        get { if ((_hasBits0 & 8) != 0) { return lastTimeUsed_; } else { return LastTimeUsedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          lastTimeUsed_ = value;
        }
      }
      /// <summary>Gets whether the "last_time_used" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLastTimeUsed {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "last_time_used" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLastTimeUsed() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "last_borrower_id" field.</summary>
      public const int LastBorrowerIdFieldNumber = 6;
      private readonly static ulong LastBorrowerIdDefaultValue = 0UL;

      private ulong lastBorrowerId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong LastBorrowerId {
        get { if ((_hasBits0 & 16) != 0) { return lastBorrowerId_; } else { return LastBorrowerIdDefaultValue; } }
        set {
          _hasBits0 |= 16;
          lastBorrowerId_ = value;
        }
      }
      /// <summary>Gets whether the "last_borrower_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLastBorrowerId {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "last_borrower_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLastBorrowerId() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "last_app_played" field.</summary>
      public const int LastAppPlayedFieldNumber = 7;
      private readonly static uint LastAppPlayedDefaultValue = 0;

      private uint lastAppPlayed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LastAppPlayed {
        get { if ((_hasBits0 & 32) != 0) { return lastAppPlayed_; } else { return LastAppPlayedDefaultValue; } }
        set {
          _hasBits0 |= 32;
          lastAppPlayed_ = value;
        }
      }
      /// <summary>Gets whether the "last_app_played" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLastAppPlayed {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "last_app_played" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLastAppPlayed() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "is_limited" field.</summary>
      public const int IsLimitedFieldNumber = 8;
      private readonly static bool IsLimitedDefaultValue = false;

      private bool isLimited_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsLimited {
        get { if ((_hasBits0 & 64) != 0) { return isLimited_; } else { return IsLimitedDefaultValue; } }
        set {
          _hasBits0 |= 64;
          isLimited_ = value;
        }
      }
      /// <summary>Gets whether the "is_limited" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsLimited {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "is_limited" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsLimited() {
        _hasBits0 &= ~64;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Device);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Device other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AuthDeviceToken != other.AuthDeviceToken) return false;
        if (DeviceName != other.DeviceName) return false;
        if (IsPending != other.IsPending) return false;
        if (IsCanceled != other.IsCanceled) return false;
        if (LastTimeUsed != other.LastTimeUsed) return false;
        if (LastBorrowerId != other.LastBorrowerId) return false;
        if (LastAppPlayed != other.LastAppPlayed) return false;
        if (IsLimited != other.IsLimited) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAuthDeviceToken) hash ^= AuthDeviceToken.GetHashCode();
        if (HasDeviceName) hash ^= DeviceName.GetHashCode();
        if (HasIsPending) hash ^= IsPending.GetHashCode();
        if (HasIsCanceled) hash ^= IsCanceled.GetHashCode();
        if (HasLastTimeUsed) hash ^= LastTimeUsed.GetHashCode();
        if (HasLastBorrowerId) hash ^= LastBorrowerId.GetHashCode();
        if (HasLastAppPlayed) hash ^= LastAppPlayed.GetHashCode();
        if (HasIsLimited) hash ^= IsLimited.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAuthDeviceToken) {
          output.WriteRawTag(9);
          output.WriteFixed64(AuthDeviceToken);
        }
        if (HasDeviceName) {
          output.WriteRawTag(18);
          output.WriteString(DeviceName);
        }
        if (HasIsPending) {
          output.WriteRawTag(24);
          output.WriteBool(IsPending);
        }
        if (HasIsCanceled) {
          output.WriteRawTag(32);
          output.WriteBool(IsCanceled);
        }
        if (HasLastTimeUsed) {
          output.WriteRawTag(40);
          output.WriteUInt32(LastTimeUsed);
        }
        if (HasLastBorrowerId) {
          output.WriteRawTag(49);
          output.WriteFixed64(LastBorrowerId);
        }
        if (HasLastAppPlayed) {
          output.WriteRawTag(56);
          output.WriteUInt32(LastAppPlayed);
        }
        if (HasIsLimited) {
          output.WriteRawTag(64);
          output.WriteBool(IsLimited);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAuthDeviceToken) {
          output.WriteRawTag(9);
          output.WriteFixed64(AuthDeviceToken);
        }
        if (HasDeviceName) {
          output.WriteRawTag(18);
          output.WriteString(DeviceName);
        }
        if (HasIsPending) {
          output.WriteRawTag(24);
          output.WriteBool(IsPending);
        }
        if (HasIsCanceled) {
          output.WriteRawTag(32);
          output.WriteBool(IsCanceled);
        }
        if (HasLastTimeUsed) {
          output.WriteRawTag(40);
          output.WriteUInt32(LastTimeUsed);
        }
        if (HasLastBorrowerId) {
          output.WriteRawTag(49);
          output.WriteFixed64(LastBorrowerId);
        }
        if (HasLastAppPlayed) {
          output.WriteRawTag(56);
          output.WriteUInt32(LastAppPlayed);
        }
        if (HasIsLimited) {
          output.WriteRawTag(64);
          output.WriteBool(IsLimited);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAuthDeviceToken) {
          size += 1 + 8;
        }
        if (HasDeviceName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
        }
        if (HasIsPending) {
          size += 1 + 1;
        }
        if (HasIsCanceled) {
          size += 1 + 1;
        }
        if (HasLastTimeUsed) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastTimeUsed);
        }
        if (HasLastBorrowerId) {
          size += 1 + 8;
        }
        if (HasLastAppPlayed) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastAppPlayed);
        }
        if (HasIsLimited) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Device other) {
        if (other == null) {
          return;
        }
        if (other.HasAuthDeviceToken) {
          AuthDeviceToken = other.AuthDeviceToken;
        }
        if (other.HasDeviceName) {
          DeviceName = other.DeviceName;
        }
        if (other.HasIsPending) {
          IsPending = other.IsPending;
        }
        if (other.HasIsCanceled) {
          IsCanceled = other.IsCanceled;
        }
        if (other.HasLastTimeUsed) {
          LastTimeUsed = other.LastTimeUsed;
        }
        if (other.HasLastBorrowerId) {
          LastBorrowerId = other.LastBorrowerId;
        }
        if (other.HasLastAppPlayed) {
          LastAppPlayed = other.LastAppPlayed;
        }
        if (other.HasIsLimited) {
          IsLimited = other.IsLimited;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              AuthDeviceToken = input.ReadFixed64();
              break;
            }
            case 18: {
              DeviceName = input.ReadString();
              break;
            }
            case 24: {
              IsPending = input.ReadBool();
              break;
            }
            case 32: {
              IsCanceled = input.ReadBool();
              break;
            }
            case 40: {
              LastTimeUsed = input.ReadUInt32();
              break;
            }
            case 49: {
              LastBorrowerId = input.ReadFixed64();
              break;
            }
            case 56: {
              LastAppPlayed = input.ReadUInt32();
              break;
            }
            case 64: {
              IsLimited = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              AuthDeviceToken = input.ReadFixed64();
              break;
            }
            case 18: {
              DeviceName = input.ReadString();
              break;
            }
            case 24: {
              IsPending = input.ReadBool();
              break;
            }
            case 32: {
              IsCanceled = input.ReadBool();
              break;
            }
            case 40: {
              LastTimeUsed = input.ReadUInt32();
              break;
            }
            case 49: {
              LastBorrowerId = input.ReadFixed64();
              break;
            }
            case 56: {
              LastAppPlayed = input.ReadUInt32();
              break;
            }
            case 64: {
              IsLimited = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CDeviceAuth_AcceptAuthorizationRequest_Request : pb::IMessage<CDeviceAuth_AcceptAuthorizationRequest_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_AcceptAuthorizationRequest_Request> _parser = new pb::MessageParser<CDeviceAuth_AcceptAuthorizationRequest_Request>(() => new CDeviceAuth_AcceptAuthorizationRequest_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_AcceptAuthorizationRequest_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AcceptAuthorizationRequest_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AcceptAuthorizationRequest_Request(CDeviceAuth_AcceptAuthorizationRequest_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    authDeviceToken_ = other.authDeviceToken_;
    authCode_ = other.authCode_;
    fromSteamid_ = other.fromSteamid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AcceptAuthorizationRequest_Request Clone() {
    return new CDeviceAuth_AcceptAuthorizationRequest_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "auth_device_token" field.</summary>
  public const int AuthDeviceTokenFieldNumber = 2;
  private readonly static ulong AuthDeviceTokenDefaultValue = 0UL;

  private ulong authDeviceToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AuthDeviceToken {
    get { if ((_hasBits0 & 2) != 0) { return authDeviceToken_; } else { return AuthDeviceTokenDefaultValue; } }
    set {
      _hasBits0 |= 2;
      authDeviceToken_ = value;
    }
  }
  /// <summary>Gets whether the "auth_device_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthDeviceToken {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "auth_device_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthDeviceToken() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "auth_code" field.</summary>
  public const int AuthCodeFieldNumber = 3;
  private readonly static ulong AuthCodeDefaultValue = 0UL;

  private ulong authCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AuthCode {
    get { if ((_hasBits0 & 4) != 0) { return authCode_; } else { return AuthCodeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      authCode_ = value;
    }
  }
  /// <summary>Gets whether the "auth_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthCode {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "auth_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthCode() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "from_steamid" field.</summary>
  public const int FromSteamidFieldNumber = 4;
  private readonly static ulong FromSteamidDefaultValue = 0UL;

  private ulong fromSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong FromSteamid {
    get { if ((_hasBits0 & 8) != 0) { return fromSteamid_; } else { return FromSteamidDefaultValue; } }
    set {
      _hasBits0 |= 8;
      fromSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "from_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFromSteamid {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "from_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFromSteamid() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_AcceptAuthorizationRequest_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_AcceptAuthorizationRequest_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (AuthDeviceToken != other.AuthDeviceToken) return false;
    if (AuthCode != other.AuthCode) return false;
    if (FromSteamid != other.FromSteamid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAuthDeviceToken) hash ^= AuthDeviceToken.GetHashCode();
    if (HasAuthCode) hash ^= AuthCode.GetHashCode();
    if (HasFromSteamid) hash ^= FromSteamid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAuthDeviceToken) {
      output.WriteRawTag(17);
      output.WriteFixed64(AuthDeviceToken);
    }
    if (HasAuthCode) {
      output.WriteRawTag(25);
      output.WriteFixed64(AuthCode);
    }
    if (HasFromSteamid) {
      output.WriteRawTag(33);
      output.WriteFixed64(FromSteamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAuthDeviceToken) {
      output.WriteRawTag(17);
      output.WriteFixed64(AuthDeviceToken);
    }
    if (HasAuthCode) {
      output.WriteRawTag(25);
      output.WriteFixed64(AuthCode);
    }
    if (HasFromSteamid) {
      output.WriteRawTag(33);
      output.WriteFixed64(FromSteamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAuthDeviceToken) {
      size += 1 + 8;
    }
    if (HasAuthCode) {
      size += 1 + 8;
    }
    if (HasFromSteamid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_AcceptAuthorizationRequest_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAuthDeviceToken) {
      AuthDeviceToken = other.AuthDeviceToken;
    }
    if (other.HasAuthCode) {
      AuthCode = other.AuthCode;
    }
    if (other.HasFromSteamid) {
      FromSteamid = other.FromSteamid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          AuthDeviceToken = input.ReadFixed64();
          break;
        }
        case 25: {
          AuthCode = input.ReadFixed64();
          break;
        }
        case 33: {
          FromSteamid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          AuthDeviceToken = input.ReadFixed64();
          break;
        }
        case 25: {
          AuthCode = input.ReadFixed64();
          break;
        }
        case 33: {
          FromSteamid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_AcceptAuthorizationRequest_Response : pb::IMessage<CDeviceAuth_AcceptAuthorizationRequest_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_AcceptAuthorizationRequest_Response> _parser = new pb::MessageParser<CDeviceAuth_AcceptAuthorizationRequest_Response>(() => new CDeviceAuth_AcceptAuthorizationRequest_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_AcceptAuthorizationRequest_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AcceptAuthorizationRequest_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AcceptAuthorizationRequest_Response(CDeviceAuth_AcceptAuthorizationRequest_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AcceptAuthorizationRequest_Response Clone() {
    return new CDeviceAuth_AcceptAuthorizationRequest_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_AcceptAuthorizationRequest_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_AcceptAuthorizationRequest_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_AcceptAuthorizationRequest_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_AuthorizeRemoteDevice_Request : pb::IMessage<CDeviceAuth_AuthorizeRemoteDevice_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_AuthorizeRemoteDevice_Request> _parser = new pb::MessageParser<CDeviceAuth_AuthorizeRemoteDevice_Request>(() => new CDeviceAuth_AuthorizeRemoteDevice_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_AuthorizeRemoteDevice_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AuthorizeRemoteDevice_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AuthorizeRemoteDevice_Request(CDeviceAuth_AuthorizeRemoteDevice_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    authDeviceToken_ = other.authDeviceToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AuthorizeRemoteDevice_Request Clone() {
    return new CDeviceAuth_AuthorizeRemoteDevice_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "auth_device_token" field.</summary>
  public const int AuthDeviceTokenFieldNumber = 2;
  private readonly static ulong AuthDeviceTokenDefaultValue = 0UL;

  private ulong authDeviceToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AuthDeviceToken {
    get { if ((_hasBits0 & 2) != 0) { return authDeviceToken_; } else { return AuthDeviceTokenDefaultValue; } }
    set {
      _hasBits0 |= 2;
      authDeviceToken_ = value;
    }
  }
  /// <summary>Gets whether the "auth_device_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthDeviceToken {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "auth_device_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthDeviceToken() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_AuthorizeRemoteDevice_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_AuthorizeRemoteDevice_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (AuthDeviceToken != other.AuthDeviceToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAuthDeviceToken) hash ^= AuthDeviceToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAuthDeviceToken) {
      output.WriteRawTag(17);
      output.WriteFixed64(AuthDeviceToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAuthDeviceToken) {
      output.WriteRawTag(17);
      output.WriteFixed64(AuthDeviceToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAuthDeviceToken) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_AuthorizeRemoteDevice_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAuthDeviceToken) {
      AuthDeviceToken = other.AuthDeviceToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          AuthDeviceToken = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          AuthDeviceToken = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_AuthorizeRemoteDevice_Response : pb::IMessage<CDeviceAuth_AuthorizeRemoteDevice_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_AuthorizeRemoteDevice_Response> _parser = new pb::MessageParser<CDeviceAuth_AuthorizeRemoteDevice_Response>(() => new CDeviceAuth_AuthorizeRemoteDevice_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_AuthorizeRemoteDevice_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AuthorizeRemoteDevice_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AuthorizeRemoteDevice_Response(CDeviceAuth_AuthorizeRemoteDevice_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AuthorizeRemoteDevice_Response Clone() {
    return new CDeviceAuth_AuthorizeRemoteDevice_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_AuthorizeRemoteDevice_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_AuthorizeRemoteDevice_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_AuthorizeRemoteDevice_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_DeauthorizeRemoteDevice_Request : pb::IMessage<CDeviceAuth_DeauthorizeRemoteDevice_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_DeauthorizeRemoteDevice_Request> _parser = new pb::MessageParser<CDeviceAuth_DeauthorizeRemoteDevice_Request>(() => new CDeviceAuth_DeauthorizeRemoteDevice_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_DeauthorizeRemoteDevice_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_DeauthorizeRemoteDevice_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_DeauthorizeRemoteDevice_Request(CDeviceAuth_DeauthorizeRemoteDevice_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    authDeviceToken_ = other.authDeviceToken_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_DeauthorizeRemoteDevice_Request Clone() {
    return new CDeviceAuth_DeauthorizeRemoteDevice_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "auth_device_token" field.</summary>
  public const int AuthDeviceTokenFieldNumber = 2;
  private readonly static ulong AuthDeviceTokenDefaultValue = 0UL;

  private ulong authDeviceToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AuthDeviceToken {
    get { if ((_hasBits0 & 2) != 0) { return authDeviceToken_; } else { return AuthDeviceTokenDefaultValue; } }
    set {
      _hasBits0 |= 2;
      authDeviceToken_ = value;
    }
  }
  /// <summary>Gets whether the "auth_device_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthDeviceToken {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "auth_device_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthDeviceToken() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_DeauthorizeRemoteDevice_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_DeauthorizeRemoteDevice_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (AuthDeviceToken != other.AuthDeviceToken) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAuthDeviceToken) hash ^= AuthDeviceToken.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAuthDeviceToken) {
      output.WriteRawTag(17);
      output.WriteFixed64(AuthDeviceToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAuthDeviceToken) {
      output.WriteRawTag(17);
      output.WriteFixed64(AuthDeviceToken);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAuthDeviceToken) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_DeauthorizeRemoteDevice_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAuthDeviceToken) {
      AuthDeviceToken = other.AuthDeviceToken;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          AuthDeviceToken = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 17: {
          AuthDeviceToken = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_DeauthorizeRemoteDevice_Response : pb::IMessage<CDeviceAuth_DeauthorizeRemoteDevice_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_DeauthorizeRemoteDevice_Response> _parser = new pb::MessageParser<CDeviceAuth_DeauthorizeRemoteDevice_Response>(() => new CDeviceAuth_DeauthorizeRemoteDevice_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_DeauthorizeRemoteDevice_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_DeauthorizeRemoteDevice_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_DeauthorizeRemoteDevice_Response(CDeviceAuth_DeauthorizeRemoteDevice_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_DeauthorizeRemoteDevice_Response Clone() {
    return new CDeviceAuth_DeauthorizeRemoteDevice_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_DeauthorizeRemoteDevice_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_DeauthorizeRemoteDevice_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_DeauthorizeRemoteDevice_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetUsedAuthorizedDevices_Request : pb::IMessage<CDeviceAuth_GetUsedAuthorizedDevices_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetUsedAuthorizedDevices_Request> _parser = new pb::MessageParser<CDeviceAuth_GetUsedAuthorizedDevices_Request>(() => new CDeviceAuth_GetUsedAuthorizedDevices_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetUsedAuthorizedDevices_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetUsedAuthorizedDevices_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetUsedAuthorizedDevices_Request(CDeviceAuth_GetUsedAuthorizedDevices_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetUsedAuthorizedDevices_Request Clone() {
    return new CDeviceAuth_GetUsedAuthorizedDevices_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetUsedAuthorizedDevices_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetUsedAuthorizedDevices_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetUsedAuthorizedDevices_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetUsedAuthorizedDevices_Response : pb::IMessage<CDeviceAuth_GetUsedAuthorizedDevices_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetUsedAuthorizedDevices_Response> _parser = new pb::MessageParser<CDeviceAuth_GetUsedAuthorizedDevices_Response>(() => new CDeviceAuth_GetUsedAuthorizedDevices_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetUsedAuthorizedDevices_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetUsedAuthorizedDevices_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetUsedAuthorizedDevices_Response(CDeviceAuth_GetUsedAuthorizedDevices_Response other) : this() {
    devices_ = other.devices_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetUsedAuthorizedDevices_Response Clone() {
    return new CDeviceAuth_GetUsedAuthorizedDevices_Response(this);
  }

  /// <summary>Field number for the "devices" field.</summary>
  public const int DevicesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Types.Device> _repeated_devices_codec
      = pb::FieldCodec.ForMessage(10, global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Types.Device.Parser);
  private readonly pbc::RepeatedField<global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Types.Device> devices_ = new pbc::RepeatedField<global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Types.Device>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Types.Device> Devices {
    get { return devices_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetUsedAuthorizedDevices_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetUsedAuthorizedDevices_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!devices_.Equals(other.devices_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= devices_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    devices_.WriteTo(output, _repeated_devices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    devices_.WriteTo(ref output, _repeated_devices_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += devices_.CalculateSize(_repeated_devices_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetUsedAuthorizedDevices_Response other) {
    if (other == null) {
      return;
    }
    devices_.Add(other.devices_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          devices_.AddEntriesFrom(input, _repeated_devices_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          devices_.AddEntriesFrom(ref input, _repeated_devices_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDeviceAuth_GetUsedAuthorizedDevices_Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Device : pb::IMessage<Device>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Device> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDeviceAuth_GetUsedAuthorizedDevices_Response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Device() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Device(Device other) : this() {
        _hasBits0 = other._hasBits0;
        authDeviceToken_ = other.authDeviceToken_;
        deviceName_ = other.deviceName_;
        ownerSteamid_ = other.ownerSteamid_;
        lastTimeUsed_ = other.lastTimeUsed_;
        lastAppPlayed_ = other.lastAppPlayed_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Device Clone() {
        return new Device(this);
      }

      /// <summary>Field number for the "auth_device_token" field.</summary>
      public const int AuthDeviceTokenFieldNumber = 1;
      private readonly static ulong AuthDeviceTokenDefaultValue = 0UL;

      private ulong authDeviceToken_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong AuthDeviceToken {
        get { if ((_hasBits0 & 1) != 0) { return authDeviceToken_; } else { return AuthDeviceTokenDefaultValue; } }
        set {
          _hasBits0 |= 1;
          authDeviceToken_ = value;
        }
      }
      /// <summary>Gets whether the "auth_device_token" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAuthDeviceToken {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "auth_device_token" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAuthDeviceToken() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "device_name" field.</summary>
      public const int DeviceNameFieldNumber = 2;
      private readonly static string DeviceNameDefaultValue = "";

      private string deviceName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string DeviceName {
        get { return deviceName_ ?? DeviceNameDefaultValue; }
        set {
          deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "device_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDeviceName {
        get { return deviceName_ != null; }
      }
      /// <summary>Clears the value of the "device_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDeviceName() {
        deviceName_ = null;
      }

      /// <summary>Field number for the "owner_steamid" field.</summary>
      public const int OwnerSteamidFieldNumber = 3;
      private readonly static ulong OwnerSteamidDefaultValue = 0UL;

      private ulong ownerSteamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong OwnerSteamid {
        get { if ((_hasBits0 & 2) != 0) { return ownerSteamid_; } else { return OwnerSteamidDefaultValue; } }
        set {
          _hasBits0 |= 2;
          ownerSteamid_ = value;
        }
      }
      /// <summary>Gets whether the "owner_steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOwnerSteamid {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "owner_steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOwnerSteamid() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "last_time_used" field.</summary>
      public const int LastTimeUsedFieldNumber = 4;
      private readonly static uint LastTimeUsedDefaultValue = 0;

      private uint lastTimeUsed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LastTimeUsed {
        get { if ((_hasBits0 & 4) != 0) { return lastTimeUsed_; } else { return LastTimeUsedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          lastTimeUsed_ = value;
        }
      }
      /// <summary>Gets whether the "last_time_used" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLastTimeUsed {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "last_time_used" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLastTimeUsed() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "last_app_played" field.</summary>
      public const int LastAppPlayedFieldNumber = 5;
      private readonly static uint LastAppPlayedDefaultValue = 0;

      private uint lastAppPlayed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LastAppPlayed {
        get { if ((_hasBits0 & 8) != 0) { return lastAppPlayed_; } else { return LastAppPlayedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          lastAppPlayed_ = value;
        }
      }
      /// <summary>Gets whether the "last_app_played" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLastAppPlayed {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "last_app_played" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLastAppPlayed() {
        _hasBits0 &= ~8;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Device);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Device other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AuthDeviceToken != other.AuthDeviceToken) return false;
        if (DeviceName != other.DeviceName) return false;
        if (OwnerSteamid != other.OwnerSteamid) return false;
        if (LastTimeUsed != other.LastTimeUsed) return false;
        if (LastAppPlayed != other.LastAppPlayed) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAuthDeviceToken) hash ^= AuthDeviceToken.GetHashCode();
        if (HasDeviceName) hash ^= DeviceName.GetHashCode();
        if (HasOwnerSteamid) hash ^= OwnerSteamid.GetHashCode();
        if (HasLastTimeUsed) hash ^= LastTimeUsed.GetHashCode();
        if (HasLastAppPlayed) hash ^= LastAppPlayed.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAuthDeviceToken) {
          output.WriteRawTag(9);
          output.WriteFixed64(AuthDeviceToken);
        }
        if (HasDeviceName) {
          output.WriteRawTag(18);
          output.WriteString(DeviceName);
        }
        if (HasOwnerSteamid) {
          output.WriteRawTag(25);
          output.WriteFixed64(OwnerSteamid);
        }
        if (HasLastTimeUsed) {
          output.WriteRawTag(32);
          output.WriteUInt32(LastTimeUsed);
        }
        if (HasLastAppPlayed) {
          output.WriteRawTag(40);
          output.WriteUInt32(LastAppPlayed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAuthDeviceToken) {
          output.WriteRawTag(9);
          output.WriteFixed64(AuthDeviceToken);
        }
        if (HasDeviceName) {
          output.WriteRawTag(18);
          output.WriteString(DeviceName);
        }
        if (HasOwnerSteamid) {
          output.WriteRawTag(25);
          output.WriteFixed64(OwnerSteamid);
        }
        if (HasLastTimeUsed) {
          output.WriteRawTag(32);
          output.WriteUInt32(LastTimeUsed);
        }
        if (HasLastAppPlayed) {
          output.WriteRawTag(40);
          output.WriteUInt32(LastAppPlayed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAuthDeviceToken) {
          size += 1 + 8;
        }
        if (HasDeviceName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
        }
        if (HasOwnerSteamid) {
          size += 1 + 8;
        }
        if (HasLastTimeUsed) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastTimeUsed);
        }
        if (HasLastAppPlayed) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastAppPlayed);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Device other) {
        if (other == null) {
          return;
        }
        if (other.HasAuthDeviceToken) {
          AuthDeviceToken = other.AuthDeviceToken;
        }
        if (other.HasDeviceName) {
          DeviceName = other.DeviceName;
        }
        if (other.HasOwnerSteamid) {
          OwnerSteamid = other.OwnerSteamid;
        }
        if (other.HasLastTimeUsed) {
          LastTimeUsed = other.LastTimeUsed;
        }
        if (other.HasLastAppPlayed) {
          LastAppPlayed = other.LastAppPlayed;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              AuthDeviceToken = input.ReadFixed64();
              break;
            }
            case 18: {
              DeviceName = input.ReadString();
              break;
            }
            case 25: {
              OwnerSteamid = input.ReadFixed64();
              break;
            }
            case 32: {
              LastTimeUsed = input.ReadUInt32();
              break;
            }
            case 40: {
              LastAppPlayed = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              AuthDeviceToken = input.ReadFixed64();
              break;
            }
            case 18: {
              DeviceName = input.ReadString();
              break;
            }
            case 25: {
              OwnerSteamid = input.ReadFixed64();
              break;
            }
            case 32: {
              LastTimeUsed = input.ReadUInt32();
              break;
            }
            case 40: {
              LastAppPlayed = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CDeviceAuth_GetAuthorizedBorrowers_Request : pb::IMessage<CDeviceAuth_GetAuthorizedBorrowers_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetAuthorizedBorrowers_Request> _parser = new pb::MessageParser<CDeviceAuth_GetAuthorizedBorrowers_Request>(() => new CDeviceAuth_GetAuthorizedBorrowers_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetAuthorizedBorrowers_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedBorrowers_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedBorrowers_Request(CDeviceAuth_GetAuthorizedBorrowers_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    includeCanceled_ = other.includeCanceled_;
    includePending_ = other.includePending_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedBorrowers_Request Clone() {
    return new CDeviceAuth_GetAuthorizedBorrowers_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "include_canceled" field.</summary>
  public const int IncludeCanceledFieldNumber = 2;
  private readonly static bool IncludeCanceledDefaultValue = false;

  private bool includeCanceled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IncludeCanceled {
    get { if ((_hasBits0 & 2) != 0) { return includeCanceled_; } else { return IncludeCanceledDefaultValue; } }
    set {
      _hasBits0 |= 2;
      includeCanceled_ = value;
    }
  }
  /// <summary>Gets whether the "include_canceled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncludeCanceled {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "include_canceled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncludeCanceled() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "include_pending" field.</summary>
  public const int IncludePendingFieldNumber = 3;
  private readonly static bool IncludePendingDefaultValue = false;

  private bool includePending_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IncludePending {
    get { if ((_hasBits0 & 4) != 0) { return includePending_; } else { return IncludePendingDefaultValue; } }
    set {
      _hasBits0 |= 4;
      includePending_ = value;
    }
  }
  /// <summary>Gets whether the "include_pending" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncludePending {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "include_pending" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncludePending() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetAuthorizedBorrowers_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetAuthorizedBorrowers_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (IncludeCanceled != other.IncludeCanceled) return false;
    if (IncludePending != other.IncludePending) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasIncludeCanceled) hash ^= IncludeCanceled.GetHashCode();
    if (HasIncludePending) hash ^= IncludePending.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasIncludeCanceled) {
      output.WriteRawTag(16);
      output.WriteBool(IncludeCanceled);
    }
    if (HasIncludePending) {
      output.WriteRawTag(24);
      output.WriteBool(IncludePending);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasIncludeCanceled) {
      output.WriteRawTag(16);
      output.WriteBool(IncludeCanceled);
    }
    if (HasIncludePending) {
      output.WriteRawTag(24);
      output.WriteBool(IncludePending);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasIncludeCanceled) {
      size += 1 + 1;
    }
    if (HasIncludePending) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetAuthorizedBorrowers_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasIncludeCanceled) {
      IncludeCanceled = other.IncludeCanceled;
    }
    if (other.HasIncludePending) {
      IncludePending = other.IncludePending;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          IncludeCanceled = input.ReadBool();
          break;
        }
        case 24: {
          IncludePending = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          IncludeCanceled = input.ReadBool();
          break;
        }
        case 24: {
          IncludePending = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetAuthorizedBorrowers_Response : pb::IMessage<CDeviceAuth_GetAuthorizedBorrowers_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetAuthorizedBorrowers_Response> _parser = new pb::MessageParser<CDeviceAuth_GetAuthorizedBorrowers_Response>(() => new CDeviceAuth_GetAuthorizedBorrowers_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetAuthorizedBorrowers_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedBorrowers_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedBorrowers_Response(CDeviceAuth_GetAuthorizedBorrowers_Response other) : this() {
    borrowers_ = other.borrowers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedBorrowers_Response Clone() {
    return new CDeviceAuth_GetAuthorizedBorrowers_Response(this);
  }

  /// <summary>Field number for the "borrowers" field.</summary>
  public const int BorrowersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CDeviceAuth_GetAuthorizedBorrowers_Response.Types.Borrower> _repeated_borrowers_codec
      = pb::FieldCodec.ForMessage(10, global::CDeviceAuth_GetAuthorizedBorrowers_Response.Types.Borrower.Parser);
  private readonly pbc::RepeatedField<global::CDeviceAuth_GetAuthorizedBorrowers_Response.Types.Borrower> borrowers_ = new pbc::RepeatedField<global::CDeviceAuth_GetAuthorizedBorrowers_Response.Types.Borrower>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDeviceAuth_GetAuthorizedBorrowers_Response.Types.Borrower> Borrowers {
    get { return borrowers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetAuthorizedBorrowers_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetAuthorizedBorrowers_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!borrowers_.Equals(other.borrowers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= borrowers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    borrowers_.WriteTo(output, _repeated_borrowers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    borrowers_.WriteTo(ref output, _repeated_borrowers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += borrowers_.CalculateSize(_repeated_borrowers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetAuthorizedBorrowers_Response other) {
    if (other == null) {
      return;
    }
    borrowers_.Add(other.borrowers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          borrowers_.AddEntriesFrom(input, _repeated_borrowers_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          borrowers_.AddEntriesFrom(ref input, _repeated_borrowers_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDeviceAuth_GetAuthorizedBorrowers_Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Borrower : pb::IMessage<Borrower>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Borrower> _parser = new pb::MessageParser<Borrower>(() => new Borrower());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Borrower> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDeviceAuth_GetAuthorizedBorrowers_Response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Borrower() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Borrower(Borrower other) : this() {
        _hasBits0 = other._hasBits0;
        steamid_ = other.steamid_;
        isPending_ = other.isPending_;
        isCanceled_ = other.isCanceled_;
        timeCreated_ = other.timeCreated_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Borrower Clone() {
        return new Borrower(this);
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 1;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "is_pending" field.</summary>
      public const int IsPendingFieldNumber = 2;
      private readonly static bool IsPendingDefaultValue = false;

      private bool isPending_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsPending {
        get { if ((_hasBits0 & 2) != 0) { return isPending_; } else { return IsPendingDefaultValue; } }
        set {
          _hasBits0 |= 2;
          isPending_ = value;
        }
      }
      /// <summary>Gets whether the "is_pending" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsPending {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "is_pending" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsPending() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "is_canceled" field.</summary>
      public const int IsCanceledFieldNumber = 3;
      private readonly static bool IsCanceledDefaultValue = false;

      private bool isCanceled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsCanceled {
        get { if ((_hasBits0 & 4) != 0) { return isCanceled_; } else { return IsCanceledDefaultValue; } }
        set {
          _hasBits0 |= 4;
          isCanceled_ = value;
        }
      }
      /// <summary>Gets whether the "is_canceled" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsCanceled {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "is_canceled" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsCanceled() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "time_created" field.</summary>
      public const int TimeCreatedFieldNumber = 4;
      private readonly static uint TimeCreatedDefaultValue = 0;

      private uint timeCreated_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeCreated {
        get { if ((_hasBits0 & 8) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          timeCreated_ = value;
        }
      }
      /// <summary>Gets whether the "time_created" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeCreated {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "time_created" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeCreated() {
        _hasBits0 &= ~8;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Borrower);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Borrower other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Steamid != other.Steamid) return false;
        if (IsPending != other.IsPending) return false;
        if (IsCanceled != other.IsCanceled) return false;
        if (TimeCreated != other.TimeCreated) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        if (HasIsPending) hash ^= IsPending.GetHashCode();
        if (HasIsCanceled) hash ^= IsCanceled.GetHashCode();
        if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        if (HasIsPending) {
          output.WriteRawTag(16);
          output.WriteBool(IsPending);
        }
        if (HasIsCanceled) {
          output.WriteRawTag(24);
          output.WriteBool(IsCanceled);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(32);
          output.WriteUInt32(TimeCreated);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        if (HasIsPending) {
          output.WriteRawTag(16);
          output.WriteBool(IsPending);
        }
        if (HasIsCanceled) {
          output.WriteRawTag(24);
          output.WriteBool(IsCanceled);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(32);
          output.WriteUInt32(TimeCreated);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSteamid) {
          size += 1 + 8;
        }
        if (HasIsPending) {
          size += 1 + 1;
        }
        if (HasIsCanceled) {
          size += 1 + 1;
        }
        if (HasTimeCreated) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCreated);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Borrower other) {
        if (other == null) {
          return;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        if (other.HasIsPending) {
          IsPending = other.IsPending;
        }
        if (other.HasIsCanceled) {
          IsCanceled = other.IsCanceled;
        }
        if (other.HasTimeCreated) {
          TimeCreated = other.TimeCreated;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 16: {
              IsPending = input.ReadBool();
              break;
            }
            case 24: {
              IsCanceled = input.ReadBool();
              break;
            }
            case 32: {
              TimeCreated = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 16: {
              IsPending = input.ReadBool();
              break;
            }
            case 24: {
              IsCanceled = input.ReadBool();
              break;
            }
            case 32: {
              TimeCreated = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CDeviceAuth_AddAuthorizedBorrowers_Request : pb::IMessage<CDeviceAuth_AddAuthorizedBorrowers_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_AddAuthorizedBorrowers_Request> _parser = new pb::MessageParser<CDeviceAuth_AddAuthorizedBorrowers_Request>(() => new CDeviceAuth_AddAuthorizedBorrowers_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_AddAuthorizedBorrowers_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AddAuthorizedBorrowers_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AddAuthorizedBorrowers_Request(CDeviceAuth_AddAuthorizedBorrowers_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    steamidBorrower_ = other.steamidBorrower_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AddAuthorizedBorrowers_Request Clone() {
    return new CDeviceAuth_AddAuthorizedBorrowers_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steamid_borrower" field.</summary>
  public const int SteamidBorrowerFieldNumber = 2;
  private static readonly pb::FieldCodec<ulong> _repeated_steamidBorrower_codec
      = pb::FieldCodec.ForFixed64(17);
  private readonly pbc::RepeatedField<ulong> steamidBorrower_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> SteamidBorrower {
    get { return steamidBorrower_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_AddAuthorizedBorrowers_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_AddAuthorizedBorrowers_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if(!steamidBorrower_.Equals(other.steamidBorrower_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    hash ^= steamidBorrower_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    steamidBorrower_.WriteTo(output, _repeated_steamidBorrower_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    steamidBorrower_.WriteTo(ref output, _repeated_steamidBorrower_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    size += steamidBorrower_.CalculateSize(_repeated_steamidBorrower_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_AddAuthorizedBorrowers_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    steamidBorrower_.Add(other.steamidBorrower_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 18:
        case 17: {
          steamidBorrower_.AddEntriesFrom(input, _repeated_steamidBorrower_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 18:
        case 17: {
          steamidBorrower_.AddEntriesFrom(ref input, _repeated_steamidBorrower_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_AddAuthorizedBorrowers_Response : pb::IMessage<CDeviceAuth_AddAuthorizedBorrowers_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_AddAuthorizedBorrowers_Response> _parser = new pb::MessageParser<CDeviceAuth_AddAuthorizedBorrowers_Response>(() => new CDeviceAuth_AddAuthorizedBorrowers_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_AddAuthorizedBorrowers_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AddAuthorizedBorrowers_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AddAuthorizedBorrowers_Response(CDeviceAuth_AddAuthorizedBorrowers_Response other) : this() {
    _hasBits0 = other._hasBits0;
    secondsToWait_ = other.secondsToWait_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_AddAuthorizedBorrowers_Response Clone() {
    return new CDeviceAuth_AddAuthorizedBorrowers_Response(this);
  }

  /// <summary>Field number for the "seconds_to_wait" field.</summary>
  public const int SecondsToWaitFieldNumber = 1;
  private readonly static int SecondsToWaitDefaultValue = 0;

  private int secondsToWait_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SecondsToWait {
    get { if ((_hasBits0 & 1) != 0) { return secondsToWait_; } else { return SecondsToWaitDefaultValue; } }
    set {
      _hasBits0 |= 1;
      secondsToWait_ = value;
    }
  }
  /// <summary>Gets whether the "seconds_to_wait" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSecondsToWait {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "seconds_to_wait" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSecondsToWait() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_AddAuthorizedBorrowers_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_AddAuthorizedBorrowers_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SecondsToWait != other.SecondsToWait) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSecondsToWait) hash ^= SecondsToWait.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSecondsToWait) {
      output.WriteRawTag(8);
      output.WriteInt32(SecondsToWait);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSecondsToWait) {
      output.WriteRawTag(8);
      output.WriteInt32(SecondsToWait);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSecondsToWait) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondsToWait);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_AddAuthorizedBorrowers_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasSecondsToWait) {
      SecondsToWait = other.SecondsToWait;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SecondsToWait = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SecondsToWait = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_RemoveAuthorizedBorrowers_Request : pb::IMessage<CDeviceAuth_RemoveAuthorizedBorrowers_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_RemoveAuthorizedBorrowers_Request> _parser = new pb::MessageParser<CDeviceAuth_RemoveAuthorizedBorrowers_Request>(() => new CDeviceAuth_RemoveAuthorizedBorrowers_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_RemoveAuthorizedBorrowers_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_RemoveAuthorizedBorrowers_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_RemoveAuthorizedBorrowers_Request(CDeviceAuth_RemoveAuthorizedBorrowers_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    steamidBorrower_ = other.steamidBorrower_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_RemoveAuthorizedBorrowers_Request Clone() {
    return new CDeviceAuth_RemoveAuthorizedBorrowers_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steamid_borrower" field.</summary>
  public const int SteamidBorrowerFieldNumber = 2;
  private static readonly pb::FieldCodec<ulong> _repeated_steamidBorrower_codec
      = pb::FieldCodec.ForFixed64(17);
  private readonly pbc::RepeatedField<ulong> steamidBorrower_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> SteamidBorrower {
    get { return steamidBorrower_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_RemoveAuthorizedBorrowers_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_RemoveAuthorizedBorrowers_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if(!steamidBorrower_.Equals(other.steamidBorrower_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    hash ^= steamidBorrower_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    steamidBorrower_.WriteTo(output, _repeated_steamidBorrower_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    steamidBorrower_.WriteTo(ref output, _repeated_steamidBorrower_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    size += steamidBorrower_.CalculateSize(_repeated_steamidBorrower_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_RemoveAuthorizedBorrowers_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    steamidBorrower_.Add(other.steamidBorrower_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 18:
        case 17: {
          steamidBorrower_.AddEntriesFrom(input, _repeated_steamidBorrower_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 18:
        case 17: {
          steamidBorrower_.AddEntriesFrom(ref input, _repeated_steamidBorrower_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_RemoveAuthorizedBorrowers_Response : pb::IMessage<CDeviceAuth_RemoveAuthorizedBorrowers_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_RemoveAuthorizedBorrowers_Response> _parser = new pb::MessageParser<CDeviceAuth_RemoveAuthorizedBorrowers_Response>(() => new CDeviceAuth_RemoveAuthorizedBorrowers_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_RemoveAuthorizedBorrowers_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_RemoveAuthorizedBorrowers_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_RemoveAuthorizedBorrowers_Response(CDeviceAuth_RemoveAuthorizedBorrowers_Response other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_RemoveAuthorizedBorrowers_Response Clone() {
    return new CDeviceAuth_RemoveAuthorizedBorrowers_Response(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_RemoveAuthorizedBorrowers_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_RemoveAuthorizedBorrowers_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_RemoveAuthorizedBorrowers_Response other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetAuthorizedAsBorrower_Request : pb::IMessage<CDeviceAuth_GetAuthorizedAsBorrower_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetAuthorizedAsBorrower_Request> _parser = new pb::MessageParser<CDeviceAuth_GetAuthorizedAsBorrower_Request>(() => new CDeviceAuth_GetAuthorizedAsBorrower_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetAuthorizedAsBorrower_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedAsBorrower_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedAsBorrower_Request(CDeviceAuth_GetAuthorizedAsBorrower_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    includeCanceled_ = other.includeCanceled_;
    includePending_ = other.includePending_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedAsBorrower_Request Clone() {
    return new CDeviceAuth_GetAuthorizedAsBorrower_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "include_canceled" field.</summary>
  public const int IncludeCanceledFieldNumber = 2;
  private readonly static bool IncludeCanceledDefaultValue = false;

  private bool includeCanceled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IncludeCanceled {
    get { if ((_hasBits0 & 2) != 0) { return includeCanceled_; } else { return IncludeCanceledDefaultValue; } }
    set {
      _hasBits0 |= 2;
      includeCanceled_ = value;
    }
  }
  /// <summary>Gets whether the "include_canceled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncludeCanceled {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "include_canceled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncludeCanceled() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "include_pending" field.</summary>
  public const int IncludePendingFieldNumber = 3;
  private readonly static bool IncludePendingDefaultValue = false;

  private bool includePending_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IncludePending {
    get { if ((_hasBits0 & 4) != 0) { return includePending_; } else { return IncludePendingDefaultValue; } }
    set {
      _hasBits0 |= 4;
      includePending_ = value;
    }
  }
  /// <summary>Gets whether the "include_pending" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncludePending {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "include_pending" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncludePending() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetAuthorizedAsBorrower_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetAuthorizedAsBorrower_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (IncludeCanceled != other.IncludeCanceled) return false;
    if (IncludePending != other.IncludePending) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasIncludeCanceled) hash ^= IncludeCanceled.GetHashCode();
    if (HasIncludePending) hash ^= IncludePending.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasIncludeCanceled) {
      output.WriteRawTag(16);
      output.WriteBool(IncludeCanceled);
    }
    if (HasIncludePending) {
      output.WriteRawTag(24);
      output.WriteBool(IncludePending);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasIncludeCanceled) {
      output.WriteRawTag(16);
      output.WriteBool(IncludeCanceled);
    }
    if (HasIncludePending) {
      output.WriteRawTag(24);
      output.WriteBool(IncludePending);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasIncludeCanceled) {
      size += 1 + 1;
    }
    if (HasIncludePending) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetAuthorizedAsBorrower_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasIncludeCanceled) {
      IncludeCanceled = other.IncludeCanceled;
    }
    if (other.HasIncludePending) {
      IncludePending = other.IncludePending;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          IncludeCanceled = input.ReadBool();
          break;
        }
        case 24: {
          IncludePending = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          IncludeCanceled = input.ReadBool();
          break;
        }
        case 24: {
          IncludePending = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetAuthorizedAsBorrower_Response : pb::IMessage<CDeviceAuth_GetAuthorizedAsBorrower_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetAuthorizedAsBorrower_Response> _parser = new pb::MessageParser<CDeviceAuth_GetAuthorizedAsBorrower_Response>(() => new CDeviceAuth_GetAuthorizedAsBorrower_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetAuthorizedAsBorrower_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedAsBorrower_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedAsBorrower_Response(CDeviceAuth_GetAuthorizedAsBorrower_Response other) : this() {
    lenders_ = other.lenders_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetAuthorizedAsBorrower_Response Clone() {
    return new CDeviceAuth_GetAuthorizedAsBorrower_Response(this);
  }

  /// <summary>Field number for the "lenders" field.</summary>
  public const int LendersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Types.Lender> _repeated_lenders_codec
      = pb::FieldCodec.ForMessage(10, global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Types.Lender.Parser);
  private readonly pbc::RepeatedField<global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Types.Lender> lenders_ = new pbc::RepeatedField<global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Types.Lender>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Types.Lender> Lenders {
    get { return lenders_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetAuthorizedAsBorrower_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetAuthorizedAsBorrower_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!lenders_.Equals(other.lenders_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= lenders_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    lenders_.WriteTo(output, _repeated_lenders_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    lenders_.WriteTo(ref output, _repeated_lenders_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += lenders_.CalculateSize(_repeated_lenders_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetAuthorizedAsBorrower_Response other) {
    if (other == null) {
      return;
    }
    lenders_.Add(other.lenders_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          lenders_.AddEntriesFrom(input, _repeated_lenders_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          lenders_.AddEntriesFrom(ref input, _repeated_lenders_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDeviceAuth_GetAuthorizedAsBorrower_Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Lender : pb::IMessage<Lender>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Lender> _parser = new pb::MessageParser<Lender>(() => new Lender());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Lender> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDeviceAuth_GetAuthorizedAsBorrower_Response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Lender() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Lender(Lender other) : this() {
        _hasBits0 = other._hasBits0;
        steamid_ = other.steamid_;
        timeCreated_ = other.timeCreated_;
        isPending_ = other.isPending_;
        isCanceled_ = other.isCanceled_;
        isUsed_ = other.isUsed_;
        timeRemoved_ = other.timeRemoved_;
        timeFirst_ = other.timeFirst_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Lender Clone() {
        return new Lender(this);
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 1;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "time_created" field.</summary>
      public const int TimeCreatedFieldNumber = 2;
      private readonly static uint TimeCreatedDefaultValue = 0;

      private uint timeCreated_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeCreated {
        get { if ((_hasBits0 & 2) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
        set {
          _hasBits0 |= 2;
          timeCreated_ = value;
        }
      }
      /// <summary>Gets whether the "time_created" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeCreated {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "time_created" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeCreated() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "is_pending" field.</summary>
      public const int IsPendingFieldNumber = 3;
      private readonly static bool IsPendingDefaultValue = false;

      private bool isPending_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsPending {
        get { if ((_hasBits0 & 4) != 0) { return isPending_; } else { return IsPendingDefaultValue; } }
        set {
          _hasBits0 |= 4;
          isPending_ = value;
        }
      }
      /// <summary>Gets whether the "is_pending" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsPending {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "is_pending" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsPending() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "is_canceled" field.</summary>
      public const int IsCanceledFieldNumber = 4;
      private readonly static bool IsCanceledDefaultValue = false;

      private bool isCanceled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsCanceled {
        get { if ((_hasBits0 & 8) != 0) { return isCanceled_; } else { return IsCanceledDefaultValue; } }
        set {
          _hasBits0 |= 8;
          isCanceled_ = value;
        }
      }
      /// <summary>Gets whether the "is_canceled" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsCanceled {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "is_canceled" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsCanceled() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "is_used" field.</summary>
      public const int IsUsedFieldNumber = 5;
      private readonly static bool IsUsedDefaultValue = false;

      private bool isUsed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsUsed {
        get { if ((_hasBits0 & 16) != 0) { return isUsed_; } else { return IsUsedDefaultValue; } }
        set {
          _hasBits0 |= 16;
          isUsed_ = value;
        }
      }
      /// <summary>Gets whether the "is_used" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsUsed {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "is_used" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsUsed() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "time_removed" field.</summary>
      public const int TimeRemovedFieldNumber = 6;
      private readonly static uint TimeRemovedDefaultValue = 0;

      private uint timeRemoved_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeRemoved {
        get { if ((_hasBits0 & 32) != 0) { return timeRemoved_; } else { return TimeRemovedDefaultValue; } }
        set {
          _hasBits0 |= 32;
          timeRemoved_ = value;
        }
      }
      /// <summary>Gets whether the "time_removed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeRemoved {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "time_removed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeRemoved() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "time_first" field.</summary>
      public const int TimeFirstFieldNumber = 7;
      private readonly static uint TimeFirstDefaultValue = 0;

      private uint timeFirst_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeFirst {
        get { if ((_hasBits0 & 64) != 0) { return timeFirst_; } else { return TimeFirstDefaultValue; } }
        set {
          _hasBits0 |= 64;
          timeFirst_ = value;
        }
      }
      /// <summary>Gets whether the "time_first" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeFirst {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "time_first" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeFirst() {
        _hasBits0 &= ~64;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Lender);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Lender other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Steamid != other.Steamid) return false;
        if (TimeCreated != other.TimeCreated) return false;
        if (IsPending != other.IsPending) return false;
        if (IsCanceled != other.IsCanceled) return false;
        if (IsUsed != other.IsUsed) return false;
        if (TimeRemoved != other.TimeRemoved) return false;
        if (TimeFirst != other.TimeFirst) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
        if (HasIsPending) hash ^= IsPending.GetHashCode();
        if (HasIsCanceled) hash ^= IsCanceled.GetHashCode();
        if (HasIsUsed) hash ^= IsUsed.GetHashCode();
        if (HasTimeRemoved) hash ^= TimeRemoved.GetHashCode();
        if (HasTimeFirst) hash ^= TimeFirst.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(16);
          output.WriteUInt32(TimeCreated);
        }
        if (HasIsPending) {
          output.WriteRawTag(24);
          output.WriteBool(IsPending);
        }
        if (HasIsCanceled) {
          output.WriteRawTag(32);
          output.WriteBool(IsCanceled);
        }
        if (HasIsUsed) {
          output.WriteRawTag(40);
          output.WriteBool(IsUsed);
        }
        if (HasTimeRemoved) {
          output.WriteRawTag(48);
          output.WriteUInt32(TimeRemoved);
        }
        if (HasTimeFirst) {
          output.WriteRawTag(56);
          output.WriteUInt32(TimeFirst);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(16);
          output.WriteUInt32(TimeCreated);
        }
        if (HasIsPending) {
          output.WriteRawTag(24);
          output.WriteBool(IsPending);
        }
        if (HasIsCanceled) {
          output.WriteRawTag(32);
          output.WriteBool(IsCanceled);
        }
        if (HasIsUsed) {
          output.WriteRawTag(40);
          output.WriteBool(IsUsed);
        }
        if (HasTimeRemoved) {
          output.WriteRawTag(48);
          output.WriteUInt32(TimeRemoved);
        }
        if (HasTimeFirst) {
          output.WriteRawTag(56);
          output.WriteUInt32(TimeFirst);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSteamid) {
          size += 1 + 8;
        }
        if (HasTimeCreated) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCreated);
        }
        if (HasIsPending) {
          size += 1 + 1;
        }
        if (HasIsCanceled) {
          size += 1 + 1;
        }
        if (HasIsUsed) {
          size += 1 + 1;
        }
        if (HasTimeRemoved) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeRemoved);
        }
        if (HasTimeFirst) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeFirst);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Lender other) {
        if (other == null) {
          return;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        if (other.HasTimeCreated) {
          TimeCreated = other.TimeCreated;
        }
        if (other.HasIsPending) {
          IsPending = other.IsPending;
        }
        if (other.HasIsCanceled) {
          IsCanceled = other.IsCanceled;
        }
        if (other.HasIsUsed) {
          IsUsed = other.IsUsed;
        }
        if (other.HasTimeRemoved) {
          TimeRemoved = other.TimeRemoved;
        }
        if (other.HasTimeFirst) {
          TimeFirst = other.TimeFirst;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 16: {
              TimeCreated = input.ReadUInt32();
              break;
            }
            case 24: {
              IsPending = input.ReadBool();
              break;
            }
            case 32: {
              IsCanceled = input.ReadBool();
              break;
            }
            case 40: {
              IsUsed = input.ReadBool();
              break;
            }
            case 48: {
              TimeRemoved = input.ReadUInt32();
              break;
            }
            case 56: {
              TimeFirst = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 16: {
              TimeCreated = input.ReadUInt32();
              break;
            }
            case 24: {
              IsPending = input.ReadBool();
              break;
            }
            case 32: {
              IsCanceled = input.ReadBool();
              break;
            }
            case 40: {
              IsUsed = input.ReadBool();
              break;
            }
            case 48: {
              TimeRemoved = input.ReadUInt32();
              break;
            }
            case 56: {
              TimeFirst = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CDeviceAuth_GetExcludedGamesInLibrary_Request : pb::IMessage<CDeviceAuth_GetExcludedGamesInLibrary_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetExcludedGamesInLibrary_Request> _parser = new pb::MessageParser<CDeviceAuth_GetExcludedGamesInLibrary_Request>(() => new CDeviceAuth_GetExcludedGamesInLibrary_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetExcludedGamesInLibrary_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetExcludedGamesInLibrary_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetExcludedGamesInLibrary_Request(CDeviceAuth_GetExcludedGamesInLibrary_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetExcludedGamesInLibrary_Request Clone() {
    return new CDeviceAuth_GetExcludedGamesInLibrary_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetExcludedGamesInLibrary_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetExcludedGamesInLibrary_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetExcludedGamesInLibrary_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetExcludedGamesInLibrary_Response : pb::IMessage<CDeviceAuth_GetExcludedGamesInLibrary_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetExcludedGamesInLibrary_Response> _parser = new pb::MessageParser<CDeviceAuth_GetExcludedGamesInLibrary_Response>(() => new CDeviceAuth_GetExcludedGamesInLibrary_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetExcludedGamesInLibrary_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetExcludedGamesInLibrary_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetExcludedGamesInLibrary_Response(CDeviceAuth_GetExcludedGamesInLibrary_Response other) : this() {
    excludedGames_ = other.excludedGames_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetExcludedGamesInLibrary_Response Clone() {
    return new CDeviceAuth_GetExcludedGamesInLibrary_Response(this);
  }

  /// <summary>Field number for the "excluded_games" field.</summary>
  public const int ExcludedGamesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Types.ExcludedGame> _repeated_excludedGames_codec
      = pb::FieldCodec.ForMessage(10, global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Types.ExcludedGame.Parser);
  private readonly pbc::RepeatedField<global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Types.ExcludedGame> excludedGames_ = new pbc::RepeatedField<global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Types.ExcludedGame>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Types.ExcludedGame> ExcludedGames {
    get { return excludedGames_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetExcludedGamesInLibrary_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetExcludedGamesInLibrary_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!excludedGames_.Equals(other.excludedGames_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= excludedGames_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    excludedGames_.WriteTo(output, _repeated_excludedGames_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    excludedGames_.WriteTo(ref output, _repeated_excludedGames_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += excludedGames_.CalculateSize(_repeated_excludedGames_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetExcludedGamesInLibrary_Response other) {
    if (other == null) {
      return;
    }
    excludedGames_.Add(other.excludedGames_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          excludedGames_.AddEntriesFrom(input, _repeated_excludedGames_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          excludedGames_.AddEntriesFrom(ref input, _repeated_excludedGames_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDeviceAuth_GetExcludedGamesInLibrary_Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class ExcludedGame : pb::IMessage<ExcludedGame>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ExcludedGame> _parser = new pb::MessageParser<ExcludedGame>(() => new ExcludedGame());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ExcludedGame> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDeviceAuth_GetExcludedGamesInLibrary_Response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ExcludedGame() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ExcludedGame(ExcludedGame other) : this() {
        _hasBits0 = other._hasBits0;
        appid_ = other.appid_;
        gameName_ = other.gameName_;
        vacBanned_ = other.vacBanned_;
        packageExcluded_ = other.packageExcluded_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ExcludedGame Clone() {
        return new ExcludedGame(this);
      }

      /// <summary>Field number for the "appid" field.</summary>
      public const int AppidFieldNumber = 1;
      private readonly static uint AppidDefaultValue = 0;

      private uint appid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Appid {
        get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          appid_ = value;
        }
      }
      /// <summary>Gets whether the "appid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAppid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "appid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAppid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "game_name" field.</summary>
      public const int GameNameFieldNumber = 2;
      private readonly static string GameNameDefaultValue = "";

      private string gameName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string GameName {
        get { return gameName_ ?? GameNameDefaultValue; }
        set {
          gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "game_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameName {
        get { return gameName_ != null; }
      }
      /// <summary>Clears the value of the "game_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameName() {
        gameName_ = null;
      }

      /// <summary>Field number for the "vac_banned" field.</summary>
      public const int VacBannedFieldNumber = 3;
      private readonly static bool VacBannedDefaultValue = false;

      private bool vacBanned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool VacBanned {
        get { if ((_hasBits0 & 2) != 0) { return vacBanned_; } else { return VacBannedDefaultValue; } }
        set {
          _hasBits0 |= 2;
          vacBanned_ = value;
        }
      }
      /// <summary>Gets whether the "vac_banned" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVacBanned {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "vac_banned" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVacBanned() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "package_excluded" field.</summary>
      public const int PackageExcludedFieldNumber = 4;
      private readonly static bool PackageExcludedDefaultValue = false;

      private bool packageExcluded_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool PackageExcluded {
        get { if ((_hasBits0 & 4) != 0) { return packageExcluded_; } else { return PackageExcludedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          packageExcluded_ = value;
        }
      }
      /// <summary>Gets whether the "package_excluded" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPackageExcluded {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "package_excluded" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPackageExcluded() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ExcludedGame);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ExcludedGame other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Appid != other.Appid) return false;
        if (GameName != other.GameName) return false;
        if (VacBanned != other.VacBanned) return false;
        if (PackageExcluded != other.PackageExcluded) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAppid) hash ^= Appid.GetHashCode();
        if (HasGameName) hash ^= GameName.GetHashCode();
        if (HasVacBanned) hash ^= VacBanned.GetHashCode();
        if (HasPackageExcluded) hash ^= PackageExcluded.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAppid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Appid);
        }
        if (HasGameName) {
          output.WriteRawTag(18);
          output.WriteString(GameName);
        }
        if (HasVacBanned) {
          output.WriteRawTag(24);
          output.WriteBool(VacBanned);
        }
        if (HasPackageExcluded) {
          output.WriteRawTag(32);
          output.WriteBool(PackageExcluded);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAppid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Appid);
        }
        if (HasGameName) {
          output.WriteRawTag(18);
          output.WriteString(GameName);
        }
        if (HasVacBanned) {
          output.WriteRawTag(24);
          output.WriteBool(VacBanned);
        }
        if (HasPackageExcluded) {
          output.WriteRawTag(32);
          output.WriteBool(PackageExcluded);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAppid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
        }
        if (HasGameName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
        }
        if (HasVacBanned) {
          size += 1 + 1;
        }
        if (HasPackageExcluded) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ExcludedGame other) {
        if (other == null) {
          return;
        }
        if (other.HasAppid) {
          Appid = other.Appid;
        }
        if (other.HasGameName) {
          GameName = other.GameName;
        }
        if (other.HasVacBanned) {
          VacBanned = other.VacBanned;
        }
        if (other.HasPackageExcluded) {
          PackageExcluded = other.PackageExcluded;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Appid = input.ReadUInt32();
              break;
            }
            case 18: {
              GameName = input.ReadString();
              break;
            }
            case 24: {
              VacBanned = input.ReadBool();
              break;
            }
            case 32: {
              PackageExcluded = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Appid = input.ReadUInt32();
              break;
            }
            case 18: {
              GameName = input.ReadString();
              break;
            }
            case 24: {
              VacBanned = input.ReadBool();
              break;
            }
            case 32: {
              PackageExcluded = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CDeviceAuth_GetBorrowerPlayHistory_Request : pb::IMessage<CDeviceAuth_GetBorrowerPlayHistory_Request>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetBorrowerPlayHistory_Request> _parser = new pb::MessageParser<CDeviceAuth_GetBorrowerPlayHistory_Request>(() => new CDeviceAuth_GetBorrowerPlayHistory_Request());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetBorrowerPlayHistory_Request> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetBorrowerPlayHistory_Request() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetBorrowerPlayHistory_Request(CDeviceAuth_GetBorrowerPlayHistory_Request other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    appid_ = other.appid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetBorrowerPlayHistory_Request Clone() {
    return new CDeviceAuth_GetBorrowerPlayHistory_Request(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetBorrowerPlayHistory_Request);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetBorrowerPlayHistory_Request other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Appid != other.Appid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetBorrowerPlayHistory_Request other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CDeviceAuth_GetBorrowerPlayHistory_Response : pb::IMessage<CDeviceAuth_GetBorrowerPlayHistory_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CDeviceAuth_GetBorrowerPlayHistory_Response> _parser = new pb::MessageParser<CDeviceAuth_GetBorrowerPlayHistory_Response>(() => new CDeviceAuth_GetBorrowerPlayHistory_Response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CDeviceAuth_GetBorrowerPlayHistory_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesDeviceauthSteamclientReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetBorrowerPlayHistory_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetBorrowerPlayHistory_Response(CDeviceAuth_GetBorrowerPlayHistory_Response other) : this() {
    lenderHistory_ = other.lenderHistory_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CDeviceAuth_GetBorrowerPlayHistory_Response Clone() {
    return new CDeviceAuth_GetBorrowerPlayHistory_Response(this);
  }

  /// <summary>Field number for the "lender_history" field.</summary>
  public const int LenderHistoryFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.LenderHistory> _repeated_lenderHistory_codec
      = pb::FieldCodec.ForMessage(10, global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.LenderHistory.Parser);
  private readonly pbc::RepeatedField<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.LenderHistory> lenderHistory_ = new pbc::RepeatedField<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.LenderHistory>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.LenderHistory> LenderHistory {
    get { return lenderHistory_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CDeviceAuth_GetBorrowerPlayHistory_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CDeviceAuth_GetBorrowerPlayHistory_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!lenderHistory_.Equals(other.lenderHistory_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= lenderHistory_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    lenderHistory_.WriteTo(output, _repeated_lenderHistory_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    lenderHistory_.WriteTo(ref output, _repeated_lenderHistory_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += lenderHistory_.CalculateSize(_repeated_lenderHistory_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CDeviceAuth_GetBorrowerPlayHistory_Response other) {
    if (other == null) {
      return;
    }
    lenderHistory_.Add(other.lenderHistory_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          lenderHistory_.AddEntriesFrom(input, _repeated_lenderHistory_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          lenderHistory_.AddEntriesFrom(ref input, _repeated_lenderHistory_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CDeviceAuth_GetBorrowerPlayHistory_Response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class GameHistory : pb::IMessage<GameHistory>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<GameHistory> _parser = new pb::MessageParser<GameHistory>(() => new GameHistory());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<GameHistory> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDeviceAuth_GetBorrowerPlayHistory_Response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GameHistory() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GameHistory(GameHistory other) : this() {
        _hasBits0 = other._hasBits0;
        appid_ = other.appid_;
        timeLast_ = other.timeLast_;
        timeTotal_ = other.timeTotal_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GameHistory Clone() {
        return new GameHistory(this);
      }

      /// <summary>Field number for the "appid" field.</summary>
      public const int AppidFieldNumber = 1;
      private readonly static uint AppidDefaultValue = 0;

      private uint appid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Appid {
        get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          appid_ = value;
        }
      }
      /// <summary>Gets whether the "appid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAppid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "appid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAppid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "time_last" field.</summary>
      public const int TimeLastFieldNumber = 2;
      private readonly static uint TimeLastDefaultValue = 0;

      private uint timeLast_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeLast {
        get { if ((_hasBits0 & 2) != 0) { return timeLast_; } else { return TimeLastDefaultValue; } }
        set {
          _hasBits0 |= 2;
          timeLast_ = value;
        }
      }
      /// <summary>Gets whether the "time_last" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeLast {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "time_last" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeLast() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "time_total" field.</summary>
      public const int TimeTotalFieldNumber = 3;
      private readonly static uint TimeTotalDefaultValue = 0;

      private uint timeTotal_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeTotal {
        get { if ((_hasBits0 & 4) != 0) { return timeTotal_; } else { return TimeTotalDefaultValue; } }
        set {
          _hasBits0 |= 4;
          timeTotal_ = value;
        }
      }
      /// <summary>Gets whether the "time_total" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeTotal {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "time_total" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeTotal() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as GameHistory);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(GameHistory other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Appid != other.Appid) return false;
        if (TimeLast != other.TimeLast) return false;
        if (TimeTotal != other.TimeTotal) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAppid) hash ^= Appid.GetHashCode();
        if (HasTimeLast) hash ^= TimeLast.GetHashCode();
        if (HasTimeTotal) hash ^= TimeTotal.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAppid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Appid);
        }
        if (HasTimeLast) {
          output.WriteRawTag(16);
          output.WriteUInt32(TimeLast);
        }
        if (HasTimeTotal) {
          output.WriteRawTag(24);
          output.WriteUInt32(TimeTotal);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAppid) {
          output.WriteRawTag(8);
          output.WriteUInt32(Appid);
        }
        if (HasTimeLast) {
          output.WriteRawTag(16);
          output.WriteUInt32(TimeLast);
        }
        if (HasTimeTotal) {
          output.WriteRawTag(24);
          output.WriteUInt32(TimeTotal);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAppid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
        }
        if (HasTimeLast) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeLast);
        }
        if (HasTimeTotal) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeTotal);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(GameHistory other) {
        if (other == null) {
          return;
        }
        if (other.HasAppid) {
          Appid = other.Appid;
        }
        if (other.HasTimeLast) {
          TimeLast = other.TimeLast;
        }
        if (other.HasTimeTotal) {
          TimeTotal = other.TimeTotal;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Appid = input.ReadUInt32();
              break;
            }
            case 16: {
              TimeLast = input.ReadUInt32();
              break;
            }
            case 24: {
              TimeTotal = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Appid = input.ReadUInt32();
              break;
            }
            case 16: {
              TimeLast = input.ReadUInt32();
              break;
            }
            case 24: {
              TimeTotal = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class LenderHistory : pb::IMessage<LenderHistory>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<LenderHistory> _parser = new pb::MessageParser<LenderHistory>(() => new LenderHistory());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<LenderHistory> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CDeviceAuth_GetBorrowerPlayHistory_Response.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public LenderHistory() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public LenderHistory(LenderHistory other) : this() {
        _hasBits0 = other._hasBits0;
        steamid_ = other.steamid_;
        gameHistory_ = other.gameHistory_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public LenderHistory Clone() {
        return new LenderHistory(this);
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 1;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "game_history" field.</summary>
      public const int GameHistoryFieldNumber = 2;
      private static readonly pb::FieldCodec<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.GameHistory> _repeated_gameHistory_codec
          = pb::FieldCodec.ForMessage(18, global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.GameHistory.Parser);
      private readonly pbc::RepeatedField<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.GameHistory> gameHistory_ = new pbc::RepeatedField<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.GameHistory>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CDeviceAuth_GetBorrowerPlayHistory_Response.Types.GameHistory> GameHistory {
        get { return gameHistory_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as LenderHistory);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(LenderHistory other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Steamid != other.Steamid) return false;
        if(!gameHistory_.Equals(other.gameHistory_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        hash ^= gameHistory_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        gameHistory_.WriteTo(output, _repeated_gameHistory_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        gameHistory_.WriteTo(ref output, _repeated_gameHistory_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSteamid) {
          size += 1 + 8;
        }
        size += gameHistory_.CalculateSize(_repeated_gameHistory_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(LenderHistory other) {
        if (other == null) {
          return;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        gameHistory_.Add(other.gameHistory_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 18: {
              gameHistory_.AddEntriesFrom(input, _repeated_gameHistory_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 18: {
              gameHistory_.AddEntriesFrom(ref input, _repeated_gameHistory_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code

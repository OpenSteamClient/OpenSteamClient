// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_clientserver.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_clientserver.proto</summary>
public static partial class SteammessagesClientserverReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_clientserver.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesClientserverReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiBzdGVhbW1lc3NhZ2VzX2NsaWVudHNlcnZlci5wcm90bxoYc3RlYW1tZXNz",
          "YWdlc19iYXNlLnByb3RvGhplbmNyeXB0ZWRfYXBwX3RpY2tldC5wcm90byJq",
          "CiJDTXNnQ2xpZW50UmVnaXN0ZXJBdXRoVGlja2V0V2l0aENNEhgKEHByb3Rv",
          "Y29sX3ZlcnNpb24YASABKA0SDgoGdGlja2V0GAMgASgMEhoKEmNsaWVudF9p",
          "bnN0YW5jZV9pZBgEIAEoBCLRAQocQ01zZ0NsaWVudFRpY2tldEF1dGhDb21w",
          "bGV0ZRIQCghzdGVhbV9pZBgBIAEoBhIPCgdnYW1lX2lkGAIgASgGEg4KBmVz",
          "dGF0ZRgDIAEoDRIeChZlYXV0aF9zZXNzaW9uX3Jlc3BvbnNlGAQgASgNEhkK",
          "EURFUFJFQ0FURURfdGlja2V0GAUgASgMEhIKCnRpY2tldF9jcmMYBiABKA0S",
          "FwoPdGlja2V0X3NlcXVlbmNlGAcgASgNEhYKDm93bmVyX3N0ZWFtX2lkGAgg",
          "ASgGIoABChBDTXNnQ2xpZW50Q01MaXN0EhQKDGNtX2FkZHJlc3NlcxgBIAMo",
          "DRIQCghjbV9wb3J0cxgCIAMoDRIeChZjbV93ZWJzb2NrZXRfYWRkcmVzc2Vz",
          "GAMgAygJEiQKHHBlcmNlbnRfZGVmYXVsdF90b193ZWJzb2NrZXQYBCABKA0i",
          "owEKG0NNc2dDbGllbnRQMlBDb25uZWN0aW9uSW5mbxIVCg1zdGVhbV9pZF9k",
          "ZXN0GAEgASgGEhQKDHN0ZWFtX2lkX3NyYxgCIAEoBhIOCgZhcHBfaWQYAyAB",
          "KA0SEQoJY2FuZGlkYXRlGAQgASgMEiAKGGxlZ2FjeV9jb25uZWN0aW9uX2lk",
          "X3NyYxgFIAEoBhISCgpyZW5kZXp2b3VzGAYgASgMIsMBCh9DTXNnQ2xpZW50",
          "UDJQQ29ubmVjdGlvbkZhaWxJbmZvEhUKDXN0ZWFtX2lkX2Rlc3QYASABKAYS",
          "FAoMc3RlYW1faWRfc3JjGAIgASgGEg4KBmFwcF9pZBgDIAEoDRIaChJlcDJw",
          "X3Nlc3Npb25fZXJyb3IYBCABKA0SGgoSY29ubmVjdGlvbl9pZF9kZXN0GAUg",
          "ASgGEhQKDGNsb3NlX3JlYXNvbhgHIAEoDRIVCg1jbG9zZV9tZXNzYWdlGAgg",
          "ASgJIkMKH0NNc2dDbGllbnROZXR3b3JraW5nQ2VydFJlcXVlc3QSEAoIa2V5",
          "X2RhdGEYAiABKAwSDgoGYXBwX2lkGAMgASgNIlYKHUNNc2dDbGllbnROZXR3",
          "b3JraW5nQ2VydFJlcGx5EgwKBGNlcnQYBCABKAwSEQoJY2Ffa2V5X2lkGAUg",
          "ASgGEhQKDGNhX3NpZ25hdHVyZRgGIAEoDCI3CiVDTXNnQ2xpZW50TmV0d29y",
          "a2luZ01vYmlsZUNlcnRSZXF1ZXN0Eg4KBmFwcF9pZBgBIAEoDSI7CiNDTXNn",
          "Q2xpZW50TmV0d29ya2luZ01vYmlsZUNlcnRSZXBseRIUCgxlbmNvZGVkX2Nl",
          "cnQYASABKAkiMQofQ01zZ0NsaWVudEdldEFwcE93bmVyc2hpcFRpY2tldBIO",
          "CgZhcHBfaWQYASABKA0iXQonQ01zZ0NsaWVudEdldEFwcE93bmVyc2hpcFRp",
          "Y2tldFJlc3BvbnNlEhIKB2VyZXN1bHQYASABKA06ATISDgoGYXBwX2lkGAIg",
          "ASgNEg4KBnRpY2tldBgDIAEoDCInChZDTXNnQ2xpZW50U2Vzc2lvblRva2Vu",
          "Eg0KBXRva2VuGAEgASgEIk0KG0NNc2dDbGllbnRHYW1lQ29ubmVjdFRva2Vu",
          "cxIeChJtYXhfdG9rZW5zX3RvX2tlZXAYASABKA06AjEwEg4KBnRva2VucxgC",
          "IAMoDCKZCQoVQ01zZ0NsaWVudEdhbWVzUGxheWVkEjcKDGdhbWVzX3BsYXll",
          "ZBgBIAMoCzIhLkNNc2dDbGllbnRHYW1lc1BsYXllZC5HYW1lUGxheWVkEhYK",
          "DmNsaWVudF9vc190eXBlGAIgASgNEh0KFWNsb3VkX2dhbWluZ19wbGF0Zm9y",
          "bRgDIAEoDRIfChdyZWNlbnRfcmVhdXRoZW50aWNhdGlvbhgEIAEoCBpVCgtQ",
          "cm9jZXNzSW5mbxISCgpwcm9jZXNzX2lkGAEgASgNEhkKEXByb2Nlc3NfaWRf",
          "cGFyZW50GAIgASgNEhcKD3BhcmVudF9pc19zdGVhbRgDIAEoCBqXBwoKR2Ft",
          "ZVBsYXllZBITCgtzdGVhbV9pZF9ncxgBIAEoBBIPCgdnYW1lX2lkGAIgASgG",
          "EiIKGmRlcHJlY2F0ZWRfZ2FtZV9pcF9hZGRyZXNzGAMgASgNEhEKCWdhbWVf",
          "cG9ydBgEIAEoDRIRCglpc19zZWN1cmUYBSABKAgSDQoFdG9rZW4YBiABKAwS",
          "FwoPZ2FtZV9leHRyYV9pbmZvGAcgASgJEhYKDmdhbWVfZGF0YV9ibG9iGAgg",
          "ASgMEhIKCnByb2Nlc3NfaWQYCSABKA0SHQoVc3RyZWFtaW5nX3Byb3ZpZGVy",
          "X2lkGAogASgNEhIKCmdhbWVfZmxhZ3MYCyABKA0SEAoIb3duZXJfaWQYDCAB",
          "KA0SFQoNdnJfaG1kX3ZlbmRvchgNIAEoCRIUCgx2cl9obWRfbW9kZWwYDiAB",
          "KAkSHQoSbGF1bmNoX29wdGlvbl90eXBlGA8gASgNOgEwEiMKF3ByaW1hcnlf",
          "Y29udHJvbGxlcl90eXBlGBAgASgFOgItMRInCh9wcmltYXJ5X3N0ZWFtX2Nv",
          "bnRyb2xsZXJfc2VyaWFsGBEgASgJEicKHHRvdGFsX3N0ZWFtX2NvbnRyb2xs",
          "ZXJfY291bnQYEiABKA06ATASKwogdG90YWxfbm9uX3N0ZWFtX2NvbnRyb2xs",
          "ZXJfY291bnQYEyABKA06ATASJgobY29udHJvbGxlcl93b3Jrc2hvcF9maWxl",
          "X2lkGBQgASgEOgEwEhgKDWxhdW5jaF9zb3VyY2UYFSABKA06ATASFgoOdnJf",
          "aG1kX3J1bnRpbWUYFiABKA0SJwoPZ2FtZV9pcF9hZGRyZXNzGBcgASgLMg4u",
          "Q01zZ0lQQWRkcmVzcxIlChpjb250cm9sbGVyX2Nvbm5lY3Rpb25fdHlwZRgY",
          "IAEoDToBMBIYChBnYW1lX29zX3BsYXRmb3JtGBkgASgFEhUKDWdhbWVfYnVp",
          "bGRfaWQYGiABKA0SGQoOY29tcGF0X3Rvb2xfaWQYGyABKA06ATASFwoPY29t",
          "cGF0X3Rvb2xfY21kGBwgASgJEhwKFGNvbXBhdF90b29sX2J1aWxkX2lkGB0g",
          "ASgNEhEKCWJldGFfbmFtZRgeIAEoCRITCgtkbGNfY29udGV4dBgfIAEoDRI7",
          "Cg9wcm9jZXNzX2lkX2xpc3QYICADKAsyIi5DTXNnQ2xpZW50R2FtZXNQbGF5",
          "ZWQuUHJvY2Vzc0luZm8iOQoNQ01zZ0dTQXBwcm92ZRIQCghzdGVhbV9pZBgB",
          "IAEoBhIWCg5vd25lcl9zdGVhbV9pZBgCIAEoBiJJCgpDTXNnR1NEZW55EhAK",
          "CHN0ZWFtX2lkGAEgASgGEhQKDGVkZW55X3JlYXNvbhgCIAEoBRITCgtkZW55",
          "X3N0cmluZxgDIAEoCSI0CgpDTXNnR1NLaWNrEhAKCHN0ZWFtX2lkGAEgASgG",
          "EhQKDGVkZW55X3JlYXNvbhgCIAEoBSLIAQoSQ01zZ0NsaWVudEF1dGhMaXN0",
          "EhMKC3Rva2Vuc19sZWZ0GAEgASgNEhgKEGxhc3RfcmVxdWVzdF9zZXEYAiAB",
          "KA0SJAocbGFzdF9yZXF1ZXN0X3NlcV9mcm9tX3NlcnZlchgDIAEoDRIgCgd0",
          "aWNrZXRzGAQgAygLMg8uQ01zZ0F1dGhUaWNrZXQSDwoHYXBwX2lkcxgFIAMo",
          "DRIYChBtZXNzYWdlX3NlcXVlbmNlGAYgASgNEhAKCGZpbHRlcmVkGAcgASgI",
          "IlYKFUNNc2dDbGllbnRBdXRoTGlzdEFjaxISCgp0aWNrZXRfY3JjGAEgAygN",
          "Eg8KB2FwcF9pZHMYAiADKA0SGAoQbWVzc2FnZV9zZXF1ZW5jZRgDIAEoDSKO",
          "BAoVQ01zZ0NsaWVudExpY2Vuc2VMaXN0EhIKB2VyZXN1bHQYASABKAU6ATIS",
          "MAoIbGljZW5zZXMYAiADKAsyHi5DTXNnQ2xpZW50TGljZW5zZUxpc3QuTGlj",
          "ZW5zZRquAwoHTGljZW5zZRISCgpwYWNrYWdlX2lkGAEgASgNEhQKDHRpbWVf",
          "Y3JlYXRlZBgCIAEoBxIZChF0aW1lX25leHRfcHJvY2VzcxgDIAEoBxIUCgxt",
          "aW51dGVfbGltaXQYBCABKAUSFAoMbWludXRlc191c2VkGAUgASgFEhYKDnBh",
          "eW1lbnRfbWV0aG9kGAYgASgNEg0KBWZsYWdzGAcgASgNEh0KFXB1cmNoYXNl",
          "X2NvdW50cnlfY29kZRgIIAEoCRIUCgxsaWNlbnNlX3R5cGUYCSABKA0SFgoO",
          "dGVycml0b3J5X2NvZGUYCiABKAUSFQoNY2hhbmdlX251bWJlchgLIAEoBRIQ",
          "Cghvd25lcl9pZBgMIAEoDRIWCg5pbml0aWFsX3BlcmlvZBgNIAEoDRIZChFp",
          "bml0aWFsX3RpbWVfdW5pdBgOIAEoDRIWCg5yZW5ld2FsX3BlcmlvZBgPIAEo",
          "DRIZChFyZW5ld2FsX3RpbWVfdW5pdBgQIAEoDRIUCgxhY2Nlc3NfdG9rZW4Y",
          "ESABKAQSGQoRbWFzdGVyX3BhY2thZ2VfaWQYEiABKA0iqgEKGkNNc2dDbGll",
          "bnRJc0xpbWl0ZWRBY2NvdW50EhsKE2Jpc19saW1pdGVkX2FjY291bnQYASAB",
          "KAgSHAoUYmlzX2NvbW11bml0eV9iYW5uZWQYAiABKAgSGgoSYmlzX2xvY2tl",
          "ZF9hY2NvdW50GAMgASgIEjUKLWJpc19saW1pdGVkX2FjY291bnRfYWxsb3dl",
          "ZF90b19pbnZpdGVfZnJpZW5kcxgEIAEoCCKnAQoeQ01zZ0NsaWVudFJlcXVl",
          "c3RlZENsaWVudFN0YXRzEkIKDXN0YXRzX3RvX3NlbmQYASADKAsyKy5DTXNn",
          "Q2xpZW50UmVxdWVzdGVkQ2xpZW50U3RhdHMuU3RhdHNUb1NlbmQaQQoLU3Rh",
          "dHNUb1NlbmQSEwoLY2xpZW50X3N0YXQYASABKA0SHQoVc3RhdF9hZ2dyZWdh",
          "dGVfbWV0aG9kGAIgASgNIsABCg9DTXNnQ2xpZW50U3RhdDISMAoLc3RhdF9k",
          "ZXRhaWwYASADKAsyGy5DTXNnQ2xpZW50U3RhdDIuU3RhdERldGFpbBp7CgpT",
          "dGF0RGV0YWlsEhMKC2NsaWVudF9zdGF0GAEgASgNEhAKCGxsX3ZhbHVlGAIg",
          "ASgDEhMKC3RpbWVfb2ZfZGF5GAMgASgNEg8KB2NlbGxfaWQYBCABKA0SEAoI",
          "ZGVwb3RfaWQYBSABKA0SDgoGYXBwX2lkGAYgASgNInIKFkNNc2dDbGllbnRJ",
          "bnZpdGVUb0dhbWUSFQoNc3RlYW1faWRfZGVzdBgBIAEoBhIUCgxzdGVhbV9p",
          "ZF9zcmMYAiABKAYSFgoOY29ubmVjdF9zdHJpbmcYAyABKAkSEwoLcmVtb3Rl",
          "X3BsYXkYBCABKAkiuQEKFENNc2dDbGllbnRDaGF0SW52aXRlEhgKEHN0ZWFt",
          "X2lkX2ludml0ZWQYASABKAYSFQoNc3RlYW1faWRfY2hhdBgCIAEoBhIXCg9z",
          "dGVhbV9pZF9wYXRyb24YAyABKAYSFQoNY2hhdHJvb21fdHlwZRgEIAEoBRIc",
          "ChRzdGVhbV9pZF9mcmllbmRfY2hhdBgFIAEoBhIRCgljaGF0X25hbWUYBiAB",
          "KAkSDwoHZ2FtZV9pZBgHIAEoBiL5CAoZQ01zZ0NsaWVudENvbm5lY3Rpb25T",
          "dGF0cxI7CgtzdGF0c19sb2dvbhgBIAEoCzImLkNNc2dDbGllbnRDb25uZWN0",
          "aW9uU3RhdHMuU3RhdHNfTG9nb24SOwoLc3RhdHNfdmNvbm4YAiABKAsyJi5D",
          "TXNnQ2xpZW50Q29ubmVjdGlvblN0YXRzLlN0YXRzX1ZDb25uGtMCCgtTdGF0",
          "c19Mb2dvbhIYChBjb25uZWN0X2F0dGVtcHRzGAEgASgFEhkKEWNvbm5lY3Rf",
          "c3VjY2Vzc2VzGAIgASgFEhgKEGNvbm5lY3RfZmFpbHVyZXMYAyABKAUSGwoT",
          "Y29ubmVjdGlvbnNfZHJvcHBlZBgEIAEoBRIXCg9zZWNvbmRzX3J1bm5pbmcY",
          "BSABKA0SHAoUbXNlY190b2xvZ29udGhpc3RpbWUYBiABKA0SFQoNY291bnRf",
          "YmFkX2NtcxgHIAEoDRIbChNub191ZHBfY29ubmVjdGl2aXR5GAggASgIEhsK",
          "E25vX3RjcF9jb25uZWN0aXZpdHkYCSABKAgSJQodbm9fd2Vic29ja2V0XzQ0",
          "M19jb25uZWN0aXZpdHkYCiABKAgSKQohbm9fd2Vic29ja2V0X25vbl80NDNf",
          "Y29ubmVjdGl2aXR5GAsgASgIGnEKCVN0YXRzX1VEUBIRCglwa3RzX3NlbnQY",
          "ASABKAQSEgoKYnl0ZXNfc2VudBgCIAEoBBIRCglwa3RzX3JlY3YYAyABKAQS",
          "FgoOcGt0c19wcm9jZXNzZWQYBCABKAQSEgoKYnl0ZXNfcmVjdhgFIAEoBBqY",
          "BAoLU3RhdHNfVkNvbm4SFwoPY29ubmVjdGlvbnNfdWRwGAEgASgNEhcKD2Nv",
          "bm5lY3Rpb25zX3RjcBgCIAEoDRI3CglzdGF0c191ZHAYAyABKAsyJC5DTXNn",
          "Q2xpZW50Q29ubmVjdGlvblN0YXRzLlN0YXRzX1VEUBIWCg5wa3RzX2FiYW5k",
          "b25lZBgEIAEoBBIZChFjb25uX3JlcV9yZWNlaXZlZBgFIAEoBBITCgtwa3Rz",
          "X3Jlc2VudBgGIAEoBBIRCgltc2dzX3NlbnQYByABKAQSGAoQbXNnc19zZW50",
          "X2ZhaWxlZBgIIAEoBBIRCgltc2dzX3JlY3YYCSABKAQSFgoOZGF0YWdyYW1z",
          "X3NlbnQYCiABKAQSFgoOZGF0YWdyYW1zX3JlY3YYCyABKAQSFQoNYmFkX3Br",
          "dHNfcmVjdhgMIAEoBBIeChZ1bmtub3duX2Nvbm5fcGt0c19yZWN2GA0gASgE",
          "EhgKEG1pc3NlZF9wa3RzX3JlY3YYDiABKAQSFQoNZHVwX3BrdHNfcmVjdhgP",
          "IAEoBBIhChlmYWlsZWRfY29ubmVjdF9jaGFsbGVuZ2VzGBAgASgEEh0KFW1p",
          "Y3JvX3NlY19hdmdfbGF0ZW5jeRgRIAEoDRIdChVtaWNyb19zZWNfbWluX2xh",
          "dGVuY3kYEiABKA0SHQoVbWljcm9fc2VjX21heF9sYXRlbmN5GBMgASgNItIB",
          "ChpDTXNnQ2xpZW50U2VydmVyc0F2YWlsYWJsZRJSChZzZXJ2ZXJfdHlwZXNf",
          "YXZhaWxhYmxlGAEgAygLMjIuQ01zZ0NsaWVudFNlcnZlcnNBdmFpbGFibGUu",
          "U2VydmVyX1R5cGVzX0F2YWlsYWJsZRIlCh1zZXJ2ZXJfdHlwZV9mb3JfYXV0",
          "aF9zZXJ2aWNlcxgCIAEoDRo5ChZTZXJ2ZXJfVHlwZXNfQXZhaWxhYmxlEg4K",
          "BnNlcnZlchgBIAEoDRIPCgdjaGFuZ2VkGAIgASgIIj8KJENNc2dDbGllbnRS",
          "ZXBvcnRPdmVybGF5RGV0b3VyRmFpbHVyZRIXCg9mYWlsdXJlX3N0cmluZ3MY",
          "ASADKAkiRwojQ01zZ0NsaWVudFJlcXVlc3RFbmNyeXB0ZWRBcHBUaWNrZXQS",
          "DgoGYXBwX2lkGAEgASgNEhAKCHVzZXJkYXRhGAIgASgMIoQBCitDTXNnQ2xp",
          "ZW50UmVxdWVzdEVuY3J5cHRlZEFwcFRpY2tldFJlc3BvbnNlEg4KBmFwcF9p",
          "ZBgBIAEoDRISCgdlcmVzdWx0GAIgASgFOgEyEjEKFGVuY3J5cHRlZF9hcHBf",
          "dGlja2V0GAMgASgLMhMuRW5jcnlwdGVkQXBwVGlja2V0IrUBChpDTXNnQ2xp",
          "ZW50V2FsbGV0SW5mb1VwZGF0ZRISCgpoYXNfd2FsbGV0GAEgASgIEg8KB2Jh",
          "bGFuY2UYAiABKAUSEAoIY3VycmVuY3kYAyABKAUSFwoPYmFsYW5jZV9kZWxh",
          "eWVkGAQgASgFEhcKCWJhbGFuY2U2NBgFIAEoA0IEoLYYARIfChFiYWxhbmNl",
          "NjRfZGVsYXllZBgGIAEoA0IEoLYYARINCgVyZWFsbRgHIAEoBSIzChtDTXNn",
          "Q2xpZW50QU1HZXRDbGFuT2ZmaWNlcnMSFAoMc3RlYW1pZF9jbGFuGAEgASgG",
          "ImYKI0NNc2dDbGllbnRBTUdldENsYW5PZmZpY2Vyc1Jlc3BvbnNlEhIKB2Vy",
          "ZXN1bHQYASABKAU6ATISFAoMc3RlYW1pZF9jbGFuGAIgASgGEhUKDW9mZmlj",
          "ZXJfY291bnQYAyABKAUikAEKIUNNc2dDbGllbnRBTUdldFBlcnNvbmFOYW1l",
          "SGlzdG9yeRIQCghpZF9jb3VudBgBIAEoBRI6CgNJZHMYAiADKAsyLS5DTXNn",
          "Q2xpZW50QU1HZXRQZXJzb25hTmFtZUhpc3RvcnkuSWRJbnN0YW5jZRodCgpJ",
          "ZEluc3RhbmNlEg8KB3N0ZWFtaWQYASABKAYiwwIKKUNNc2dDbGllbnRBTUdl",
          "dFBlcnNvbmFOYW1lSGlzdG9yeVJlc3BvbnNlEk8KCXJlc3BvbnNlcxgCIAMo",
          "CzI8LkNNc2dDbGllbnRBTUdldFBlcnNvbmFOYW1lSGlzdG9yeVJlc3BvbnNl",
          "Lk5hbWVUYWJsZUluc3RhbmNlGsQBChFOYW1lVGFibGVJbnN0YW5jZRISCgdl",
          "cmVzdWx0GAEgASgFOgEyEg8KB3N0ZWFtaWQYAiABKAYSWAoFbmFtZXMYAyAD",
          "KAsySS5DTXNnQ2xpZW50QU1HZXRQZXJzb25hTmFtZUhpc3RvcnlSZXNwb25z",
          "ZS5OYW1lVGFibGVJbnN0YW5jZS5OYW1lSW5zdGFuY2UaMAoMTmFtZUluc3Rh",
          "bmNlEhIKCm5hbWVfc2luY2UYASABKAcSDAoEbmFtZRgCIAEoCSJFCh5DTXNn",
          "Q2xpZW50RGVyZWdpc3RlcldpdGhTZXJ2ZXISEwoLZXNlcnZlcnR5cGUYASAB",
          "KA0SDgoGYXBwX2lkGAIgASgNIqsEChNDTXNnQ2xpZW50Q2xhblN0YXRlEhQK",
          "DHN0ZWFtaWRfY2xhbhgBIAEoBhIaChJjbGFuX2FjY291bnRfZmxhZ3MYAyAB",
          "KA0SMAoJbmFtZV9pbmZvGAQgASgLMh0uQ01zZ0NsaWVudENsYW5TdGF0ZS5O",
          "YW1lSW5mbxI0Cgt1c2VyX2NvdW50cxgFIAEoCzIfLkNNc2dDbGllbnRDbGFu",
          "U3RhdGUuVXNlckNvdW50cxIqCgZldmVudHMYBiADKAsyGi5DTXNnQ2xpZW50",
          "Q2xhblN0YXRlLkV2ZW50EjEKDWFubm91bmNlbWVudHMYByADKAsyGi5DTXNn",
          "Q2xpZW50Q2xhblN0YXRlLkV2ZW50EhkKEWNoYXRfcm9vbV9wcml2YXRlGAgg",
          "ASgIGjEKCE5hbWVJbmZvEhEKCWNsYW5fbmFtZRgBIAEoCRISCgpzaGFfYXZh",
          "dGFyGAIgASgMGmsKClVzZXJDb3VudHMSDwoHbWVtYmVycxgBIAEoDRIOCgZv",
          "bmxpbmUYAiABKA0SEAoIY2hhdHRpbmcYAyABKA0SDwoHaW5fZ2FtZRgEIAEo",
          "DRIZChFjaGF0X3Jvb21fbWVtYmVycxgFIAEoDRpgCgVFdmVudBILCgNnaWQY",
          "ASABKAYSEgoKZXZlbnRfdGltZRgCIAEoDRIQCghoZWFkbGluZRgDIAEoCRIP",
          "CgdnYW1lX2lkGAQgASgGEhMKC2p1c3RfcG9zdGVkGAUgASgIQgVIAYABAA=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, global::EncryptedAppTicketReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientRegisterAuthTicketWithCM), global::CMsgClientRegisterAuthTicketWithCM.Parser, new[]{ "ProtocolVersion", "Ticket", "ClientInstanceId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientTicketAuthComplete), global::CMsgClientTicketAuthComplete.Parser, new[]{ "SteamId", "GameId", "Estate", "EauthSessionResponse", "DEPRECATEDTicket", "TicketCrc", "TicketSequence", "OwnerSteamId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientCMList), global::CMsgClientCMList.Parser, new[]{ "CmAddresses", "CmPorts", "CmWebsocketAddresses", "PercentDefaultToWebsocket" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientP2PConnectionInfo), global::CMsgClientP2PConnectionInfo.Parser, new[]{ "SteamIdDest", "SteamIdSrc", "AppId", "Candidate", "LegacyConnectionIdSrc", "Rendezvous" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientP2PConnectionFailInfo), global::CMsgClientP2PConnectionFailInfo.Parser, new[]{ "SteamIdDest", "SteamIdSrc", "AppId", "Ep2PSessionError", "ConnectionIdDest", "CloseReason", "CloseMessage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientNetworkingCertRequest), global::CMsgClientNetworkingCertRequest.Parser, new[]{ "KeyData", "AppId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientNetworkingCertReply), global::CMsgClientNetworkingCertReply.Parser, new[]{ "Cert", "CaKeyId", "CaSignature" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientNetworkingMobileCertRequest), global::CMsgClientNetworkingMobileCertRequest.Parser, new[]{ "AppId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientNetworkingMobileCertReply), global::CMsgClientNetworkingMobileCertReply.Parser, new[]{ "EncodedCert" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientGetAppOwnershipTicket), global::CMsgClientGetAppOwnershipTicket.Parser, new[]{ "AppId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientGetAppOwnershipTicketResponse), global::CMsgClientGetAppOwnershipTicketResponse.Parser, new[]{ "Eresult", "AppId", "Ticket" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSessionToken), global::CMsgClientSessionToken.Parser, new[]{ "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientGameConnectTokens), global::CMsgClientGameConnectTokens.Parser, new[]{ "MaxTokensToKeep", "Tokens" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientGamesPlayed), global::CMsgClientGamesPlayed.Parser, new[]{ "GamesPlayed", "ClientOsType", "CloudGamingPlatform", "RecentReauthentication" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientGamesPlayed.Types.ProcessInfo), global::CMsgClientGamesPlayed.Types.ProcessInfo.Parser, new[]{ "ProcessId", "ProcessIdParent", "ParentIsSteam" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientGamesPlayed.Types.GamePlayed), global::CMsgClientGamesPlayed.Types.GamePlayed.Parser, new[]{ "SteamIdGs", "GameId", "DeprecatedGameIpAddress", "GamePort", "IsSecure", "Token", "GameExtraInfo", "GameDataBlob", "ProcessId", "StreamingProviderId", "GameFlags", "OwnerId", "VrHmdVendor", "VrHmdModel", "LaunchOptionType", "PrimaryControllerType", "PrimarySteamControllerSerial", "TotalSteamControllerCount", "TotalNonSteamControllerCount", "ControllerWorkshopFileId", "LaunchSource", "VrHmdRuntime", "GameIpAddress", "ControllerConnectionType", "GameOsPlatform", "GameBuildId", "CompatToolId", "CompatToolCmd", "CompatToolBuildId", "BetaName", "DlcContext", "ProcessIdList" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGSApprove), global::CMsgGSApprove.Parser, new[]{ "SteamId", "OwnerSteamId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGSDeny), global::CMsgGSDeny.Parser, new[]{ "SteamId", "EdenyReason", "DenyString" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgGSKick), global::CMsgGSKick.Parser, new[]{ "SteamId", "EdenyReason" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAuthList), global::CMsgClientAuthList.Parser, new[]{ "TokensLeft", "LastRequestSeq", "LastRequestSeqFromServer", "Tickets", "AppIds", "MessageSequence", "Filtered" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAuthListAck), global::CMsgClientAuthListAck.Parser, new[]{ "TicketCrc", "AppIds", "MessageSequence" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientLicenseList), global::CMsgClientLicenseList.Parser, new[]{ "Eresult", "Licenses" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientLicenseList.Types.License), global::CMsgClientLicenseList.Types.License.Parser, new[]{ "PackageId", "TimeCreated", "TimeNextProcess", "MinuteLimit", "MinutesUsed", "PaymentMethod", "Flags", "PurchaseCountryCode", "LicenseType", "TerritoryCode", "ChangeNumber", "OwnerId", "InitialPeriod", "InitialTimeUnit", "RenewalPeriod", "RenewalTimeUnit", "AccessToken", "MasterPackageId" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientIsLimitedAccount), global::CMsgClientIsLimitedAccount.Parser, new[]{ "BisLimitedAccount", "BisCommunityBanned", "BisLockedAccount", "BisLimitedAccountAllowedToInviteFriends" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientRequestedClientStats), global::CMsgClientRequestedClientStats.Parser, new[]{ "StatsToSend" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientRequestedClientStats.Types.StatsToSend), global::CMsgClientRequestedClientStats.Types.StatsToSend.Parser, new[]{ "ClientStat", "StatAggregateMethod" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientStat2), global::CMsgClientStat2.Parser, new[]{ "StatDetail" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientStat2.Types.StatDetail), global::CMsgClientStat2.Types.StatDetail.Parser, new[]{ "ClientStat", "LlValue", "TimeOfDay", "CellId", "DepotId", "AppId" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientInviteToGame), global::CMsgClientInviteToGame.Parser, new[]{ "SteamIdDest", "SteamIdSrc", "ConnectString", "RemotePlay" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientChatInvite), global::CMsgClientChatInvite.Parser, new[]{ "SteamIdInvited", "SteamIdChat", "SteamIdPatron", "ChatroomType", "SteamIdFriendChat", "ChatName", "GameId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientConnectionStats), global::CMsgClientConnectionStats.Parser, new[]{ "StatsLogon", "StatsVconn" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientConnectionStats.Types.Stats_Logon), global::CMsgClientConnectionStats.Types.Stats_Logon.Parser, new[]{ "ConnectAttempts", "ConnectSuccesses", "ConnectFailures", "ConnectionsDropped", "SecondsRunning", "MsecTologonthistime", "CountBadCms", "NoUdpConnectivity", "NoTcpConnectivity", "NoWebsocket443Connectivity", "NoWebsocketNon443Connectivity" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientConnectionStats.Types.Stats_UDP), global::CMsgClientConnectionStats.Types.Stats_UDP.Parser, new[]{ "PktsSent", "BytesSent", "PktsRecv", "PktsProcessed", "BytesRecv" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientConnectionStats.Types.Stats_VConn), global::CMsgClientConnectionStats.Types.Stats_VConn.Parser, new[]{ "ConnectionsUdp", "ConnectionsTcp", "StatsUdp", "PktsAbandoned", "ConnReqReceived", "PktsResent", "MsgsSent", "MsgsSentFailed", "MsgsRecv", "DatagramsSent", "DatagramsRecv", "BadPktsRecv", "UnknownConnPktsRecv", "MissedPktsRecv", "DupPktsRecv", "FailedConnectChallenges", "MicroSecAvgLatency", "MicroSecMinLatency", "MicroSecMaxLatency" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientServersAvailable), global::CMsgClientServersAvailable.Parser, new[]{ "ServerTypesAvailable", "ServerTypeForAuthServices" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientServersAvailable.Types.Server_Types_Available), global::CMsgClientServersAvailable.Types.Server_Types_Available.Parser, new[]{ "Server", "Changed" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientReportOverlayDetourFailure), global::CMsgClientReportOverlayDetourFailure.Parser, new[]{ "FailureStrings" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientRequestEncryptedAppTicket), global::CMsgClientRequestEncryptedAppTicket.Parser, new[]{ "AppId", "Userdata" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientRequestEncryptedAppTicketResponse), global::CMsgClientRequestEncryptedAppTicketResponse.Parser, new[]{ "AppId", "Eresult", "EncryptedAppTicket" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientWalletInfoUpdate), global::CMsgClientWalletInfoUpdate.Parser, new[]{ "HasWallet", "Balance", "Currency", "BalanceDelayed", "Balance64", "Balance64Delayed", "Realm" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAMGetClanOfficers), global::CMsgClientAMGetClanOfficers.Parser, new[]{ "SteamidClan" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAMGetClanOfficersResponse), global::CMsgClientAMGetClanOfficersResponse.Parser, new[]{ "Eresult", "SteamidClan", "OfficerCount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAMGetPersonaNameHistory), global::CMsgClientAMGetPersonaNameHistory.Parser, new[]{ "IdCount", "Ids" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAMGetPersonaNameHistory.Types.IdInstance), global::CMsgClientAMGetPersonaNameHistory.Types.IdInstance.Parser, new[]{ "Steamid" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAMGetPersonaNameHistoryResponse), global::CMsgClientAMGetPersonaNameHistoryResponse.Parser, new[]{ "Responses" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance), global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Parser, new[]{ "Eresult", "Steamid", "Names" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Types.NameInstance), global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Types.NameInstance.Parser, new[]{ "NameSince", "Name" }, null, null, null, null)})}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientDeregisterWithServer), global::CMsgClientDeregisterWithServer.Parser, new[]{ "Eservertype", "AppId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientClanState), global::CMsgClientClanState.Parser, new[]{ "SteamidClan", "ClanAccountFlags", "NameInfo", "UserCounts", "Events", "Announcements", "ChatRoomPrivate" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientClanState.Types.NameInfo), global::CMsgClientClanState.Types.NameInfo.Parser, new[]{ "ClanName", "ShaAvatar" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientClanState.Types.UserCounts), global::CMsgClientClanState.Types.UserCounts.Parser, new[]{ "Members", "Online", "Chatting", "InGame", "ChatRoomMembers" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientClanState.Types.Event), global::CMsgClientClanState.Types.Event.Parser, new[]{ "Gid", "EventTime", "Headline", "GameId", "JustPosted" }, null, null, null, null)})
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CMsgClientRegisterAuthTicketWithCM : pb::IMessage<CMsgClientRegisterAuthTicketWithCM>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientRegisterAuthTicketWithCM> _parser = new pb::MessageParser<CMsgClientRegisterAuthTicketWithCM>(() => new CMsgClientRegisterAuthTicketWithCM());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientRegisterAuthTicketWithCM> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRegisterAuthTicketWithCM() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRegisterAuthTicketWithCM(CMsgClientRegisterAuthTicketWithCM other) : this() {
    _hasBits0 = other._hasBits0;
    protocolVersion_ = other.protocolVersion_;
    ticket_ = other.ticket_;
    clientInstanceId_ = other.clientInstanceId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRegisterAuthTicketWithCM Clone() {
    return new CMsgClientRegisterAuthTicketWithCM(this);
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 1;
  private readonly static uint ProtocolVersionDefaultValue = 0;

  private uint protocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProtocolVersion {
    get { if ((_hasBits0 & 1) != 0) { return protocolVersion_; } else { return ProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      protocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocolVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocolVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 3;
  private readonly static pb::ByteString TicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Ticket {
    get { return ticket_ ?? TicketDefaultValue; }
    set {
      ticket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicket {
    get { return ticket_ != null; }
  }
  /// <summary>Clears the value of the "ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicket() {
    ticket_ = null;
  }

  /// <summary>Field number for the "client_instance_id" field.</summary>
  public const int ClientInstanceIdFieldNumber = 4;
  private readonly static ulong ClientInstanceIdDefaultValue = 0UL;

  private ulong clientInstanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientInstanceId {
    get { if ((_hasBits0 & 2) != 0) { return clientInstanceId_; } else { return ClientInstanceIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clientInstanceId_ = value;
    }
  }
  /// <summary>Gets whether the "client_instance_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientInstanceId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "client_instance_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientInstanceId() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientRegisterAuthTicketWithCM);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientRegisterAuthTicketWithCM other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProtocolVersion != other.ProtocolVersion) return false;
    if (Ticket != other.Ticket) return false;
    if (ClientInstanceId != other.ClientInstanceId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasProtocolVersion) hash ^= ProtocolVersion.GetHashCode();
    if (HasTicket) hash ^= Ticket.GetHashCode();
    if (HasClientInstanceId) hash ^= ClientInstanceId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasProtocolVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(ProtocolVersion);
    }
    if (HasTicket) {
      output.WriteRawTag(26);
      output.WriteBytes(Ticket);
    }
    if (HasClientInstanceId) {
      output.WriteRawTag(32);
      output.WriteUInt64(ClientInstanceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasProtocolVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(ProtocolVersion);
    }
    if (HasTicket) {
      output.WriteRawTag(26);
      output.WriteBytes(Ticket);
    }
    if (HasClientInstanceId) {
      output.WriteRawTag(32);
      output.WriteUInt64(ClientInstanceId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    if (HasTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ticket);
    }
    if (HasClientInstanceId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientInstanceId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientRegisterAuthTicketWithCM other) {
    if (other == null) {
      return;
    }
    if (other.HasProtocolVersion) {
      ProtocolVersion = other.ProtocolVersion;
    }
    if (other.HasTicket) {
      Ticket = other.Ticket;
    }
    if (other.HasClientInstanceId) {
      ClientInstanceId = other.ClientInstanceId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
        case 26: {
          Ticket = input.ReadBytes();
          break;
        }
        case 32: {
          ClientInstanceId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
        case 26: {
          Ticket = input.ReadBytes();
          break;
        }
        case 32: {
          ClientInstanceId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientTicketAuthComplete : pb::IMessage<CMsgClientTicketAuthComplete>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientTicketAuthComplete> _parser = new pb::MessageParser<CMsgClientTicketAuthComplete>(() => new CMsgClientTicketAuthComplete());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientTicketAuthComplete> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientTicketAuthComplete() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientTicketAuthComplete(CMsgClientTicketAuthComplete other) : this() {
    _hasBits0 = other._hasBits0;
    steamId_ = other.steamId_;
    gameId_ = other.gameId_;
    estate_ = other.estate_;
    eauthSessionResponse_ = other.eauthSessionResponse_;
    dEPRECATEDTicket_ = other.dEPRECATEDTicket_;
    ticketCrc_ = other.ticketCrc_;
    ticketSequence_ = other.ticketSequence_;
    ownerSteamId_ = other.ownerSteamId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientTicketAuthComplete Clone() {
    return new CMsgClientTicketAuthComplete(this);
  }

  /// <summary>Field number for the "steam_id" field.</summary>
  public const int SteamIdFieldNumber = 1;
  private readonly static ulong SteamIdDefaultValue = 0UL;

  private ulong steamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamId {
    get { if ((_hasBits0 & 1) != 0) { return steamId_; } else { return SteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamId_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "game_id" field.</summary>
  public const int GameIdFieldNumber = 2;
  private readonly static ulong GameIdDefaultValue = 0UL;

  private ulong gameId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong GameId {
    get { if ((_hasBits0 & 2) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      gameId_ = value;
    }
  }
  /// <summary>Gets whether the "game_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "game_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "estate" field.</summary>
  public const int EstateFieldNumber = 3;
  private readonly static uint EstateDefaultValue = 0;

  private uint estate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Estate {
    get { if ((_hasBits0 & 4) != 0) { return estate_; } else { return EstateDefaultValue; } }
    set {
      _hasBits0 |= 4;
      estate_ = value;
    }
  }
  /// <summary>Gets whether the "estate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEstate {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "estate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEstate() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "eauth_session_response" field.</summary>
  public const int EauthSessionResponseFieldNumber = 4;
  private readonly static uint EauthSessionResponseDefaultValue = 0;

  private uint eauthSessionResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EauthSessionResponse {
    get { if ((_hasBits0 & 8) != 0) { return eauthSessionResponse_; } else { return EauthSessionResponseDefaultValue; } }
    set {
      _hasBits0 |= 8;
      eauthSessionResponse_ = value;
    }
  }
  /// <summary>Gets whether the "eauth_session_response" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEauthSessionResponse {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "eauth_session_response" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEauthSessionResponse() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "DEPRECATED_ticket" field.</summary>
  public const int DEPRECATEDTicketFieldNumber = 5;
  private readonly static pb::ByteString DEPRECATEDTicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString dEPRECATEDTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString DEPRECATEDTicket {
    get { return dEPRECATEDTicket_ ?? DEPRECATEDTicketDefaultValue; }
    set {
      dEPRECATEDTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "DEPRECATED_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDEPRECATEDTicket {
    get { return dEPRECATEDTicket_ != null; }
  }
  /// <summary>Clears the value of the "DEPRECATED_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDEPRECATEDTicket() {
    dEPRECATEDTicket_ = null;
  }

  /// <summary>Field number for the "ticket_crc" field.</summary>
  public const int TicketCrcFieldNumber = 6;
  private readonly static uint TicketCrcDefaultValue = 0;

  private uint ticketCrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TicketCrc {
    get { if ((_hasBits0 & 16) != 0) { return ticketCrc_; } else { return TicketCrcDefaultValue; } }
    set {
      _hasBits0 |= 16;
      ticketCrc_ = value;
    }
  }
  /// <summary>Gets whether the "ticket_crc" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicketCrc {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ticket_crc" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicketCrc() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "ticket_sequence" field.</summary>
  public const int TicketSequenceFieldNumber = 7;
  private readonly static uint TicketSequenceDefaultValue = 0;

  private uint ticketSequence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TicketSequence {
    get { if ((_hasBits0 & 32) != 0) { return ticketSequence_; } else { return TicketSequenceDefaultValue; } }
    set {
      _hasBits0 |= 32;
      ticketSequence_ = value;
    }
  }
  /// <summary>Gets whether the "ticket_sequence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicketSequence {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "ticket_sequence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicketSequence() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "owner_steam_id" field.</summary>
  public const int OwnerSteamIdFieldNumber = 8;
  private readonly static ulong OwnerSteamIdDefaultValue = 0UL;

  private ulong ownerSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong OwnerSteamId {
    get { if ((_hasBits0 & 64) != 0) { return ownerSteamId_; } else { return OwnerSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 64;
      ownerSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "owner_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOwnerSteamId {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "owner_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOwnerSteamId() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientTicketAuthComplete);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientTicketAuthComplete other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamId != other.SteamId) return false;
    if (GameId != other.GameId) return false;
    if (Estate != other.Estate) return false;
    if (EauthSessionResponse != other.EauthSessionResponse) return false;
    if (DEPRECATEDTicket != other.DEPRECATEDTicket) return false;
    if (TicketCrc != other.TicketCrc) return false;
    if (TicketSequence != other.TicketSequence) return false;
    if (OwnerSteamId != other.OwnerSteamId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamId) hash ^= SteamId.GetHashCode();
    if (HasGameId) hash ^= GameId.GetHashCode();
    if (HasEstate) hash ^= Estate.GetHashCode();
    if (HasEauthSessionResponse) hash ^= EauthSessionResponse.GetHashCode();
    if (HasDEPRECATEDTicket) hash ^= DEPRECATEDTicket.GetHashCode();
    if (HasTicketCrc) hash ^= TicketCrc.GetHashCode();
    if (HasTicketSequence) hash ^= TicketSequence.GetHashCode();
    if (HasOwnerSteamId) hash ^= OwnerSteamId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasGameId) {
      output.WriteRawTag(17);
      output.WriteFixed64(GameId);
    }
    if (HasEstate) {
      output.WriteRawTag(24);
      output.WriteUInt32(Estate);
    }
    if (HasEauthSessionResponse) {
      output.WriteRawTag(32);
      output.WriteUInt32(EauthSessionResponse);
    }
    if (HasDEPRECATEDTicket) {
      output.WriteRawTag(42);
      output.WriteBytes(DEPRECATEDTicket);
    }
    if (HasTicketCrc) {
      output.WriteRawTag(48);
      output.WriteUInt32(TicketCrc);
    }
    if (HasTicketSequence) {
      output.WriteRawTag(56);
      output.WriteUInt32(TicketSequence);
    }
    if (HasOwnerSteamId) {
      output.WriteRawTag(65);
      output.WriteFixed64(OwnerSteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasGameId) {
      output.WriteRawTag(17);
      output.WriteFixed64(GameId);
    }
    if (HasEstate) {
      output.WriteRawTag(24);
      output.WriteUInt32(Estate);
    }
    if (HasEauthSessionResponse) {
      output.WriteRawTag(32);
      output.WriteUInt32(EauthSessionResponse);
    }
    if (HasDEPRECATEDTicket) {
      output.WriteRawTag(42);
      output.WriteBytes(DEPRECATEDTicket);
    }
    if (HasTicketCrc) {
      output.WriteRawTag(48);
      output.WriteUInt32(TicketCrc);
    }
    if (HasTicketSequence) {
      output.WriteRawTag(56);
      output.WriteUInt32(TicketSequence);
    }
    if (HasOwnerSteamId) {
      output.WriteRawTag(65);
      output.WriteFixed64(OwnerSteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamId) {
      size += 1 + 8;
    }
    if (HasGameId) {
      size += 1 + 8;
    }
    if (HasEstate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Estate);
    }
    if (HasEauthSessionResponse) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EauthSessionResponse);
    }
    if (HasDEPRECATEDTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(DEPRECATEDTicket);
    }
    if (HasTicketCrc) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TicketCrc);
    }
    if (HasTicketSequence) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TicketSequence);
    }
    if (HasOwnerSteamId) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientTicketAuthComplete other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamId) {
      SteamId = other.SteamId;
    }
    if (other.HasGameId) {
      GameId = other.GameId;
    }
    if (other.HasEstate) {
      Estate = other.Estate;
    }
    if (other.HasEauthSessionResponse) {
      EauthSessionResponse = other.EauthSessionResponse;
    }
    if (other.HasDEPRECATEDTicket) {
      DEPRECATEDTicket = other.DEPRECATEDTicket;
    }
    if (other.HasTicketCrc) {
      TicketCrc = other.TicketCrc;
    }
    if (other.HasTicketSequence) {
      TicketSequence = other.TicketSequence;
    }
    if (other.HasOwnerSteamId) {
      OwnerSteamId = other.OwnerSteamId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 17: {
          GameId = input.ReadFixed64();
          break;
        }
        case 24: {
          Estate = input.ReadUInt32();
          break;
        }
        case 32: {
          EauthSessionResponse = input.ReadUInt32();
          break;
        }
        case 42: {
          DEPRECATEDTicket = input.ReadBytes();
          break;
        }
        case 48: {
          TicketCrc = input.ReadUInt32();
          break;
        }
        case 56: {
          TicketSequence = input.ReadUInt32();
          break;
        }
        case 65: {
          OwnerSteamId = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 17: {
          GameId = input.ReadFixed64();
          break;
        }
        case 24: {
          Estate = input.ReadUInt32();
          break;
        }
        case 32: {
          EauthSessionResponse = input.ReadUInt32();
          break;
        }
        case 42: {
          DEPRECATEDTicket = input.ReadBytes();
          break;
        }
        case 48: {
          TicketCrc = input.ReadUInt32();
          break;
        }
        case 56: {
          TicketSequence = input.ReadUInt32();
          break;
        }
        case 65: {
          OwnerSteamId = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientCMList : pb::IMessage<CMsgClientCMList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientCMList> _parser = new pb::MessageParser<CMsgClientCMList>(() => new CMsgClientCMList());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientCMList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientCMList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientCMList(CMsgClientCMList other) : this() {
    _hasBits0 = other._hasBits0;
    cmAddresses_ = other.cmAddresses_.Clone();
    cmPorts_ = other.cmPorts_.Clone();
    cmWebsocketAddresses_ = other.cmWebsocketAddresses_.Clone();
    percentDefaultToWebsocket_ = other.percentDefaultToWebsocket_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientCMList Clone() {
    return new CMsgClientCMList(this);
  }

  /// <summary>Field number for the "cm_addresses" field.</summary>
  public const int CmAddressesFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_cmAddresses_codec
      = pb::FieldCodec.ForUInt32(8);
  private readonly pbc::RepeatedField<uint> cmAddresses_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> CmAddresses {
    get { return cmAddresses_; }
  }

  /// <summary>Field number for the "cm_ports" field.</summary>
  public const int CmPortsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_cmPorts_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> cmPorts_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> CmPorts {
    get { return cmPorts_; }
  }

  /// <summary>Field number for the "cm_websocket_addresses" field.</summary>
  public const int CmWebsocketAddressesFieldNumber = 3;
  private static readonly pb::FieldCodec<string> _repeated_cmWebsocketAddresses_codec
      = pb::FieldCodec.ForString(26);
  private readonly pbc::RepeatedField<string> cmWebsocketAddresses_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> CmWebsocketAddresses {
    get { return cmWebsocketAddresses_; }
  }

  /// <summary>Field number for the "percent_default_to_websocket" field.</summary>
  public const int PercentDefaultToWebsocketFieldNumber = 4;
  private readonly static uint PercentDefaultToWebsocketDefaultValue = 0;

  private uint percentDefaultToWebsocket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PercentDefaultToWebsocket {
    get { if ((_hasBits0 & 1) != 0) { return percentDefaultToWebsocket_; } else { return PercentDefaultToWebsocketDefaultValue; } }
    set {
      _hasBits0 |= 1;
      percentDefaultToWebsocket_ = value;
    }
  }
  /// <summary>Gets whether the "percent_default_to_websocket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPercentDefaultToWebsocket {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "percent_default_to_websocket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPercentDefaultToWebsocket() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientCMList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientCMList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!cmAddresses_.Equals(other.cmAddresses_)) return false;
    if(!cmPorts_.Equals(other.cmPorts_)) return false;
    if(!cmWebsocketAddresses_.Equals(other.cmWebsocketAddresses_)) return false;
    if (PercentDefaultToWebsocket != other.PercentDefaultToWebsocket) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= cmAddresses_.GetHashCode();
    hash ^= cmPorts_.GetHashCode();
    hash ^= cmWebsocketAddresses_.GetHashCode();
    if (HasPercentDefaultToWebsocket) hash ^= PercentDefaultToWebsocket.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    cmAddresses_.WriteTo(output, _repeated_cmAddresses_codec);
    cmPorts_.WriteTo(output, _repeated_cmPorts_codec);
    cmWebsocketAddresses_.WriteTo(output, _repeated_cmWebsocketAddresses_codec);
    if (HasPercentDefaultToWebsocket) {
      output.WriteRawTag(32);
      output.WriteUInt32(PercentDefaultToWebsocket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    cmAddresses_.WriteTo(ref output, _repeated_cmAddresses_codec);
    cmPorts_.WriteTo(ref output, _repeated_cmPorts_codec);
    cmWebsocketAddresses_.WriteTo(ref output, _repeated_cmWebsocketAddresses_codec);
    if (HasPercentDefaultToWebsocket) {
      output.WriteRawTag(32);
      output.WriteUInt32(PercentDefaultToWebsocket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += cmAddresses_.CalculateSize(_repeated_cmAddresses_codec);
    size += cmPorts_.CalculateSize(_repeated_cmPorts_codec);
    size += cmWebsocketAddresses_.CalculateSize(_repeated_cmWebsocketAddresses_codec);
    if (HasPercentDefaultToWebsocket) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PercentDefaultToWebsocket);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientCMList other) {
    if (other == null) {
      return;
    }
    cmAddresses_.Add(other.cmAddresses_);
    cmPorts_.Add(other.cmPorts_);
    cmWebsocketAddresses_.Add(other.cmWebsocketAddresses_);
    if (other.HasPercentDefaultToWebsocket) {
      PercentDefaultToWebsocket = other.PercentDefaultToWebsocket;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          cmAddresses_.AddEntriesFrom(input, _repeated_cmAddresses_codec);
          break;
        }
        case 18:
        case 16: {
          cmPorts_.AddEntriesFrom(input, _repeated_cmPorts_codec);
          break;
        }
        case 26: {
          cmWebsocketAddresses_.AddEntriesFrom(input, _repeated_cmWebsocketAddresses_codec);
          break;
        }
        case 32: {
          PercentDefaultToWebsocket = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          cmAddresses_.AddEntriesFrom(ref input, _repeated_cmAddresses_codec);
          break;
        }
        case 18:
        case 16: {
          cmPorts_.AddEntriesFrom(ref input, _repeated_cmPorts_codec);
          break;
        }
        case 26: {
          cmWebsocketAddresses_.AddEntriesFrom(ref input, _repeated_cmWebsocketAddresses_codec);
          break;
        }
        case 32: {
          PercentDefaultToWebsocket = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientP2PConnectionInfo : pb::IMessage<CMsgClientP2PConnectionInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientP2PConnectionInfo> _parser = new pb::MessageParser<CMsgClientP2PConnectionInfo>(() => new CMsgClientP2PConnectionInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientP2PConnectionInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientP2PConnectionInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientP2PConnectionInfo(CMsgClientP2PConnectionInfo other) : this() {
    _hasBits0 = other._hasBits0;
    steamIdDest_ = other.steamIdDest_;
    steamIdSrc_ = other.steamIdSrc_;
    appId_ = other.appId_;
    candidate_ = other.candidate_;
    legacyConnectionIdSrc_ = other.legacyConnectionIdSrc_;
    rendezvous_ = other.rendezvous_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientP2PConnectionInfo Clone() {
    return new CMsgClientP2PConnectionInfo(this);
  }

  /// <summary>Field number for the "steam_id_dest" field.</summary>
  public const int SteamIdDestFieldNumber = 1;
  private readonly static ulong SteamIdDestDefaultValue = 0UL;

  private ulong steamIdDest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdDest {
    get { if ((_hasBits0 & 1) != 0) { return steamIdDest_; } else { return SteamIdDestDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamIdDest_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_dest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdDest {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_dest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdDest() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steam_id_src" field.</summary>
  public const int SteamIdSrcFieldNumber = 2;
  private readonly static ulong SteamIdSrcDefaultValue = 0UL;

  private ulong steamIdSrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdSrc {
    get { if ((_hasBits0 & 2) != 0) { return steamIdSrc_; } else { return SteamIdSrcDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamIdSrc_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_src" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdSrc {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_src" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdSrc() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 3;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 4) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "candidate" field.</summary>
  public const int CandidateFieldNumber = 4;
  private readonly static pb::ByteString CandidateDefaultValue = pb::ByteString.Empty;

  private pb::ByteString candidate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Candidate {
    get { return candidate_ ?? CandidateDefaultValue; }
    set {
      candidate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "candidate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCandidate {
    get { return candidate_ != null; }
  }
  /// <summary>Clears the value of the "candidate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCandidate() {
    candidate_ = null;
  }

  /// <summary>Field number for the "legacy_connection_id_src" field.</summary>
  public const int LegacyConnectionIdSrcFieldNumber = 5;
  private readonly static ulong LegacyConnectionIdSrcDefaultValue = 0UL;

  private ulong legacyConnectionIdSrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LegacyConnectionIdSrc {
    get { if ((_hasBits0 & 8) != 0) { return legacyConnectionIdSrc_; } else { return LegacyConnectionIdSrcDefaultValue; } }
    set {
      _hasBits0 |= 8;
      legacyConnectionIdSrc_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_connection_id_src" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyConnectionIdSrc {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "legacy_connection_id_src" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyConnectionIdSrc() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rendezvous" field.</summary>
  public const int RendezvousFieldNumber = 6;
  private readonly static pb::ByteString RendezvousDefaultValue = pb::ByteString.Empty;

  private pb::ByteString rendezvous_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Rendezvous {
    get { return rendezvous_ ?? RendezvousDefaultValue; }
    set {
      rendezvous_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "rendezvous" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRendezvous {
    get { return rendezvous_ != null; }
  }
  /// <summary>Clears the value of the "rendezvous" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRendezvous() {
    rendezvous_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientP2PConnectionInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientP2PConnectionInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamIdDest != other.SteamIdDest) return false;
    if (SteamIdSrc != other.SteamIdSrc) return false;
    if (AppId != other.AppId) return false;
    if (Candidate != other.Candidate) return false;
    if (LegacyConnectionIdSrc != other.LegacyConnectionIdSrc) return false;
    if (Rendezvous != other.Rendezvous) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamIdDest) hash ^= SteamIdDest.GetHashCode();
    if (HasSteamIdSrc) hash ^= SteamIdSrc.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasCandidate) hash ^= Candidate.GetHashCode();
    if (HasLegacyConnectionIdSrc) hash ^= LegacyConnectionIdSrc.GetHashCode();
    if (HasRendezvous) hash ^= Rendezvous.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamIdDest) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdDest);
    }
    if (HasSteamIdSrc) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdSrc);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (HasCandidate) {
      output.WriteRawTag(34);
      output.WriteBytes(Candidate);
    }
    if (HasLegacyConnectionIdSrc) {
      output.WriteRawTag(41);
      output.WriteFixed64(LegacyConnectionIdSrc);
    }
    if (HasRendezvous) {
      output.WriteRawTag(50);
      output.WriteBytes(Rendezvous);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamIdDest) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdDest);
    }
    if (HasSteamIdSrc) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdSrc);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (HasCandidate) {
      output.WriteRawTag(34);
      output.WriteBytes(Candidate);
    }
    if (HasLegacyConnectionIdSrc) {
      output.WriteRawTag(41);
      output.WriteFixed64(LegacyConnectionIdSrc);
    }
    if (HasRendezvous) {
      output.WriteRawTag(50);
      output.WriteBytes(Rendezvous);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamIdDest) {
      size += 1 + 8;
    }
    if (HasSteamIdSrc) {
      size += 1 + 8;
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasCandidate) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Candidate);
    }
    if (HasLegacyConnectionIdSrc) {
      size += 1 + 8;
    }
    if (HasRendezvous) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Rendezvous);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientP2PConnectionInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamIdDest) {
      SteamIdDest = other.SteamIdDest;
    }
    if (other.HasSteamIdSrc) {
      SteamIdSrc = other.SteamIdSrc;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasCandidate) {
      Candidate = other.Candidate;
    }
    if (other.HasLegacyConnectionIdSrc) {
      LegacyConnectionIdSrc = other.LegacyConnectionIdSrc;
    }
    if (other.HasRendezvous) {
      Rendezvous = other.Rendezvous;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamIdDest = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdSrc = input.ReadFixed64();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
        case 34: {
          Candidate = input.ReadBytes();
          break;
        }
        case 41: {
          LegacyConnectionIdSrc = input.ReadFixed64();
          break;
        }
        case 50: {
          Rendezvous = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamIdDest = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdSrc = input.ReadFixed64();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
        case 34: {
          Candidate = input.ReadBytes();
          break;
        }
        case 41: {
          LegacyConnectionIdSrc = input.ReadFixed64();
          break;
        }
        case 50: {
          Rendezvous = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientP2PConnectionFailInfo : pb::IMessage<CMsgClientP2PConnectionFailInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientP2PConnectionFailInfo> _parser = new pb::MessageParser<CMsgClientP2PConnectionFailInfo>(() => new CMsgClientP2PConnectionFailInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientP2PConnectionFailInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientP2PConnectionFailInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientP2PConnectionFailInfo(CMsgClientP2PConnectionFailInfo other) : this() {
    _hasBits0 = other._hasBits0;
    steamIdDest_ = other.steamIdDest_;
    steamIdSrc_ = other.steamIdSrc_;
    appId_ = other.appId_;
    ep2PSessionError_ = other.ep2PSessionError_;
    connectionIdDest_ = other.connectionIdDest_;
    closeReason_ = other.closeReason_;
    closeMessage_ = other.closeMessage_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientP2PConnectionFailInfo Clone() {
    return new CMsgClientP2PConnectionFailInfo(this);
  }

  /// <summary>Field number for the "steam_id_dest" field.</summary>
  public const int SteamIdDestFieldNumber = 1;
  private readonly static ulong SteamIdDestDefaultValue = 0UL;

  private ulong steamIdDest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdDest {
    get { if ((_hasBits0 & 1) != 0) { return steamIdDest_; } else { return SteamIdDestDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamIdDest_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_dest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdDest {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_dest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdDest() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steam_id_src" field.</summary>
  public const int SteamIdSrcFieldNumber = 2;
  private readonly static ulong SteamIdSrcDefaultValue = 0UL;

  private ulong steamIdSrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdSrc {
    get { if ((_hasBits0 & 2) != 0) { return steamIdSrc_; } else { return SteamIdSrcDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamIdSrc_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_src" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdSrc {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_src" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdSrc() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 3;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 4) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "ep2p_session_error" field.</summary>
  public const int Ep2PSessionErrorFieldNumber = 4;
  private readonly static uint Ep2PSessionErrorDefaultValue = 0;

  private uint ep2PSessionError_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ep2PSessionError {
    get { if ((_hasBits0 & 8) != 0) { return ep2PSessionError_; } else { return Ep2PSessionErrorDefaultValue; } }
    set {
      _hasBits0 |= 8;
      ep2PSessionError_ = value;
    }
  }
  /// <summary>Gets whether the "ep2p_session_error" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEp2PSessionError {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "ep2p_session_error" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEp2PSessionError() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "connection_id_dest" field.</summary>
  public const int ConnectionIdDestFieldNumber = 5;
  private readonly static ulong ConnectionIdDestDefaultValue = 0UL;

  private ulong connectionIdDest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ConnectionIdDest {
    get { if ((_hasBits0 & 16) != 0) { return connectionIdDest_; } else { return ConnectionIdDestDefaultValue; } }
    set {
      _hasBits0 |= 16;
      connectionIdDest_ = value;
    }
  }
  /// <summary>Gets whether the "connection_id_dest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectionIdDest {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "connection_id_dest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectionIdDest() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "close_reason" field.</summary>
  public const int CloseReasonFieldNumber = 7;
  private readonly static uint CloseReasonDefaultValue = 0;

  private uint closeReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CloseReason {
    get { if ((_hasBits0 & 32) != 0) { return closeReason_; } else { return CloseReasonDefaultValue; } }
    set {
      _hasBits0 |= 32;
      closeReason_ = value;
    }
  }
  /// <summary>Gets whether the "close_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCloseReason {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "close_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCloseReason() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "close_message" field.</summary>
  public const int CloseMessageFieldNumber = 8;
  private readonly static string CloseMessageDefaultValue = "";

  private string closeMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CloseMessage {
    get { return closeMessage_ ?? CloseMessageDefaultValue; }
    set {
      closeMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "close_message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCloseMessage {
    get { return closeMessage_ != null; }
  }
  /// <summary>Clears the value of the "close_message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCloseMessage() {
    closeMessage_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientP2PConnectionFailInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientP2PConnectionFailInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamIdDest != other.SteamIdDest) return false;
    if (SteamIdSrc != other.SteamIdSrc) return false;
    if (AppId != other.AppId) return false;
    if (Ep2PSessionError != other.Ep2PSessionError) return false;
    if (ConnectionIdDest != other.ConnectionIdDest) return false;
    if (CloseReason != other.CloseReason) return false;
    if (CloseMessage != other.CloseMessage) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamIdDest) hash ^= SteamIdDest.GetHashCode();
    if (HasSteamIdSrc) hash ^= SteamIdSrc.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasEp2PSessionError) hash ^= Ep2PSessionError.GetHashCode();
    if (HasConnectionIdDest) hash ^= ConnectionIdDest.GetHashCode();
    if (HasCloseReason) hash ^= CloseReason.GetHashCode();
    if (HasCloseMessage) hash ^= CloseMessage.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamIdDest) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdDest);
    }
    if (HasSteamIdSrc) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdSrc);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (HasEp2PSessionError) {
      output.WriteRawTag(32);
      output.WriteUInt32(Ep2PSessionError);
    }
    if (HasConnectionIdDest) {
      output.WriteRawTag(41);
      output.WriteFixed64(ConnectionIdDest);
    }
    if (HasCloseReason) {
      output.WriteRawTag(56);
      output.WriteUInt32(CloseReason);
    }
    if (HasCloseMessage) {
      output.WriteRawTag(66);
      output.WriteString(CloseMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamIdDest) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdDest);
    }
    if (HasSteamIdSrc) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdSrc);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (HasEp2PSessionError) {
      output.WriteRawTag(32);
      output.WriteUInt32(Ep2PSessionError);
    }
    if (HasConnectionIdDest) {
      output.WriteRawTag(41);
      output.WriteFixed64(ConnectionIdDest);
    }
    if (HasCloseReason) {
      output.WriteRawTag(56);
      output.WriteUInt32(CloseReason);
    }
    if (HasCloseMessage) {
      output.WriteRawTag(66);
      output.WriteString(CloseMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamIdDest) {
      size += 1 + 8;
    }
    if (HasSteamIdSrc) {
      size += 1 + 8;
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasEp2PSessionError) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ep2PSessionError);
    }
    if (HasConnectionIdDest) {
      size += 1 + 8;
    }
    if (HasCloseReason) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CloseReason);
    }
    if (HasCloseMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CloseMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientP2PConnectionFailInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamIdDest) {
      SteamIdDest = other.SteamIdDest;
    }
    if (other.HasSteamIdSrc) {
      SteamIdSrc = other.SteamIdSrc;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasEp2PSessionError) {
      Ep2PSessionError = other.Ep2PSessionError;
    }
    if (other.HasConnectionIdDest) {
      ConnectionIdDest = other.ConnectionIdDest;
    }
    if (other.HasCloseReason) {
      CloseReason = other.CloseReason;
    }
    if (other.HasCloseMessage) {
      CloseMessage = other.CloseMessage;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamIdDest = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdSrc = input.ReadFixed64();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
        case 32: {
          Ep2PSessionError = input.ReadUInt32();
          break;
        }
        case 41: {
          ConnectionIdDest = input.ReadFixed64();
          break;
        }
        case 56: {
          CloseReason = input.ReadUInt32();
          break;
        }
        case 66: {
          CloseMessage = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamIdDest = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdSrc = input.ReadFixed64();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
        case 32: {
          Ep2PSessionError = input.ReadUInt32();
          break;
        }
        case 41: {
          ConnectionIdDest = input.ReadFixed64();
          break;
        }
        case 56: {
          CloseReason = input.ReadUInt32();
          break;
        }
        case 66: {
          CloseMessage = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientNetworkingCertRequest : pb::IMessage<CMsgClientNetworkingCertRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientNetworkingCertRequest> _parser = new pb::MessageParser<CMsgClientNetworkingCertRequest>(() => new CMsgClientNetworkingCertRequest());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientNetworkingCertRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingCertRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingCertRequest(CMsgClientNetworkingCertRequest other) : this() {
    _hasBits0 = other._hasBits0;
    keyData_ = other.keyData_;
    appId_ = other.appId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingCertRequest Clone() {
    return new CMsgClientNetworkingCertRequest(this);
  }

  /// <summary>Field number for the "key_data" field.</summary>
  public const int KeyDataFieldNumber = 2;
  private readonly static pb::ByteString KeyDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString keyData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString KeyData {
    get { return keyData_ ?? KeyDataDefaultValue; }
    set {
      keyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "key_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasKeyData {
    get { return keyData_ != null; }
  }
  /// <summary>Clears the value of the "key_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearKeyData() {
    keyData_ = null;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 3;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 1) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientNetworkingCertRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientNetworkingCertRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KeyData != other.KeyData) return false;
    if (AppId != other.AppId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasKeyData) hash ^= KeyData.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasKeyData) {
      output.WriteRawTag(18);
      output.WriteBytes(KeyData);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasKeyData) {
      output.WriteRawTag(18);
      output.WriteBytes(KeyData);
    }
    if (HasAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasKeyData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(KeyData);
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientNetworkingCertRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasKeyData) {
      KeyData = other.KeyData;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          KeyData = input.ReadBytes();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 18: {
          KeyData = input.ReadBytes();
          break;
        }
        case 24: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientNetworkingCertReply : pb::IMessage<CMsgClientNetworkingCertReply>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientNetworkingCertReply> _parser = new pb::MessageParser<CMsgClientNetworkingCertReply>(() => new CMsgClientNetworkingCertReply());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientNetworkingCertReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingCertReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingCertReply(CMsgClientNetworkingCertReply other) : this() {
    _hasBits0 = other._hasBits0;
    cert_ = other.cert_;
    caKeyId_ = other.caKeyId_;
    caSignature_ = other.caSignature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingCertReply Clone() {
    return new CMsgClientNetworkingCertReply(this);
  }

  /// <summary>Field number for the "cert" field.</summary>
  public const int CertFieldNumber = 4;
  private readonly static pb::ByteString CertDefaultValue = pb::ByteString.Empty;

  private pb::ByteString cert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Cert {
    get { return cert_ ?? CertDefaultValue; }
    set {
      cert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cert" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCert {
    get { return cert_ != null; }
  }
  /// <summary>Clears the value of the "cert" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCert() {
    cert_ = null;
  }

  /// <summary>Field number for the "ca_key_id" field.</summary>
  public const int CaKeyIdFieldNumber = 5;
  private readonly static ulong CaKeyIdDefaultValue = 0UL;

  private ulong caKeyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong CaKeyId {
    get { if ((_hasBits0 & 1) != 0) { return caKeyId_; } else { return CaKeyIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      caKeyId_ = value;
    }
  }
  /// <summary>Gets whether the "ca_key_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaKeyId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ca_key_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaKeyId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "ca_signature" field.</summary>
  public const int CaSignatureFieldNumber = 6;
  private readonly static pb::ByteString CaSignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString caSignature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString CaSignature {
    get { return caSignature_ ?? CaSignatureDefaultValue; }
    set {
      caSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ca_signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaSignature {
    get { return caSignature_ != null; }
  }
  /// <summary>Clears the value of the "ca_signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaSignature() {
    caSignature_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientNetworkingCertReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientNetworkingCertReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cert != other.Cert) return false;
    if (CaKeyId != other.CaKeyId) return false;
    if (CaSignature != other.CaSignature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCert) hash ^= Cert.GetHashCode();
    if (HasCaKeyId) hash ^= CaKeyId.GetHashCode();
    if (HasCaSignature) hash ^= CaSignature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCert) {
      output.WriteRawTag(34);
      output.WriteBytes(Cert);
    }
    if (HasCaKeyId) {
      output.WriteRawTag(41);
      output.WriteFixed64(CaKeyId);
    }
    if (HasCaSignature) {
      output.WriteRawTag(50);
      output.WriteBytes(CaSignature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCert) {
      output.WriteRawTag(34);
      output.WriteBytes(Cert);
    }
    if (HasCaKeyId) {
      output.WriteRawTag(41);
      output.WriteFixed64(CaKeyId);
    }
    if (HasCaSignature) {
      output.WriteRawTag(50);
      output.WriteBytes(CaSignature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCert) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Cert);
    }
    if (HasCaKeyId) {
      size += 1 + 8;
    }
    if (HasCaSignature) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(CaSignature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientNetworkingCertReply other) {
    if (other == null) {
      return;
    }
    if (other.HasCert) {
      Cert = other.Cert;
    }
    if (other.HasCaKeyId) {
      CaKeyId = other.CaKeyId;
    }
    if (other.HasCaSignature) {
      CaSignature = other.CaSignature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 34: {
          Cert = input.ReadBytes();
          break;
        }
        case 41: {
          CaKeyId = input.ReadFixed64();
          break;
        }
        case 50: {
          CaSignature = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 34: {
          Cert = input.ReadBytes();
          break;
        }
        case 41: {
          CaKeyId = input.ReadFixed64();
          break;
        }
        case 50: {
          CaSignature = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientNetworkingMobileCertRequest : pb::IMessage<CMsgClientNetworkingMobileCertRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientNetworkingMobileCertRequest> _parser = new pb::MessageParser<CMsgClientNetworkingMobileCertRequest>(() => new CMsgClientNetworkingMobileCertRequest());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientNetworkingMobileCertRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingMobileCertRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingMobileCertRequest(CMsgClientNetworkingMobileCertRequest other) : this() {
    _hasBits0 = other._hasBits0;
    appId_ = other.appId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingMobileCertRequest Clone() {
    return new CMsgClientNetworkingMobileCertRequest(this);
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 1;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 1) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientNetworkingMobileCertRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientNetworkingMobileCertRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppId != other.AppId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientNetworkingMobileCertRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientNetworkingMobileCertReply : pb::IMessage<CMsgClientNetworkingMobileCertReply>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientNetworkingMobileCertReply> _parser = new pb::MessageParser<CMsgClientNetworkingMobileCertReply>(() => new CMsgClientNetworkingMobileCertReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientNetworkingMobileCertReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingMobileCertReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingMobileCertReply(CMsgClientNetworkingMobileCertReply other) : this() {
    encodedCert_ = other.encodedCert_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNetworkingMobileCertReply Clone() {
    return new CMsgClientNetworkingMobileCertReply(this);
  }

  /// <summary>Field number for the "encoded_cert" field.</summary>
  public const int EncodedCertFieldNumber = 1;
  private readonly static string EncodedCertDefaultValue = "";

  private string encodedCert_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EncodedCert {
    get { return encodedCert_ ?? EncodedCertDefaultValue; }
    set {
      encodedCert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "encoded_cert" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEncodedCert {
    get { return encodedCert_ != null; }
  }
  /// <summary>Clears the value of the "encoded_cert" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEncodedCert() {
    encodedCert_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientNetworkingMobileCertReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientNetworkingMobileCertReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EncodedCert != other.EncodedCert) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEncodedCert) hash ^= EncodedCert.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEncodedCert) {
      output.WriteRawTag(10);
      output.WriteString(EncodedCert);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEncodedCert) {
      output.WriteRawTag(10);
      output.WriteString(EncodedCert);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEncodedCert) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EncodedCert);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientNetworkingMobileCertReply other) {
    if (other == null) {
      return;
    }
    if (other.HasEncodedCert) {
      EncodedCert = other.EncodedCert;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EncodedCert = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          EncodedCert = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientGetAppOwnershipTicket : pb::IMessage<CMsgClientGetAppOwnershipTicket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientGetAppOwnershipTicket> _parser = new pb::MessageParser<CMsgClientGetAppOwnershipTicket>(() => new CMsgClientGetAppOwnershipTicket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientGetAppOwnershipTicket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGetAppOwnershipTicket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGetAppOwnershipTicket(CMsgClientGetAppOwnershipTicket other) : this() {
    _hasBits0 = other._hasBits0;
    appId_ = other.appId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGetAppOwnershipTicket Clone() {
    return new CMsgClientGetAppOwnershipTicket(this);
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 1;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 1) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientGetAppOwnershipTicket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientGetAppOwnershipTicket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppId != other.AppId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientGetAppOwnershipTicket other) {
    if (other == null) {
      return;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientGetAppOwnershipTicketResponse : pb::IMessage<CMsgClientGetAppOwnershipTicketResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientGetAppOwnershipTicketResponse> _parser = new pb::MessageParser<CMsgClientGetAppOwnershipTicketResponse>(() => new CMsgClientGetAppOwnershipTicketResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientGetAppOwnershipTicketResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGetAppOwnershipTicketResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGetAppOwnershipTicketResponse(CMsgClientGetAppOwnershipTicketResponse other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    appId_ = other.appId_;
    ticket_ = other.ticket_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGetAppOwnershipTicketResponse Clone() {
    return new CMsgClientGetAppOwnershipTicketResponse(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static uint EresultDefaultValue = 2;

  private uint eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 2;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 2) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ticket" field.</summary>
  public const int TicketFieldNumber = 3;
  private readonly static pb::ByteString TicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Ticket {
    get { return ticket_ ?? TicketDefaultValue; }
    set {
      ticket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTicket {
    get { return ticket_ != null; }
  }
  /// <summary>Clears the value of the "ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTicket() {
    ticket_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientGetAppOwnershipTicketResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientGetAppOwnershipTicketResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    if (AppId != other.AppId) return false;
    if (Ticket != other.Ticket) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasTicket) hash ^= Ticket.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eresult);
    }
    if (HasAppId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AppId);
    }
    if (HasTicket) {
      output.WriteRawTag(26);
      output.WriteBytes(Ticket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eresult);
    }
    if (HasAppId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AppId);
    }
    if (HasTicket) {
      output.WriteRawTag(26);
      output.WriteBytes(Ticket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eresult);
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasTicket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ticket);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientGetAppOwnershipTicketResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasTicket) {
      Ticket = other.Ticket;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadUInt32();
          break;
        }
        case 16: {
          AppId = input.ReadUInt32();
          break;
        }
        case 26: {
          Ticket = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadUInt32();
          break;
        }
        case 16: {
          AppId = input.ReadUInt32();
          break;
        }
        case 26: {
          Ticket = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSessionToken : pb::IMessage<CMsgClientSessionToken>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSessionToken> _parser = new pb::MessageParser<CMsgClientSessionToken>(() => new CMsgClientSessionToken());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSessionToken> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSessionToken() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSessionToken(CMsgClientSessionToken other) : this() {
    _hasBits0 = other._hasBits0;
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSessionToken Clone() {
    return new CMsgClientSessionToken(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private readonly static ulong TokenDefaultValue = 0UL;

  private ulong token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Token {
    get { if ((_hasBits0 & 1) != 0) { return token_; } else { return TokenDefaultValue; } }
    set {
      _hasBits0 |= 1;
      token_ = value;
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSessionToken);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSessionToken other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasToken) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasToken) {
      output.WriteRawTag(8);
      output.WriteUInt64(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasToken) {
      output.WriteRawTag(8);
      output.WriteUInt64(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSessionToken other) {
    if (other == null) {
      return;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Token = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Token = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientGameConnectTokens : pb::IMessage<CMsgClientGameConnectTokens>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientGameConnectTokens> _parser = new pb::MessageParser<CMsgClientGameConnectTokens>(() => new CMsgClientGameConnectTokens());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientGameConnectTokens> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGameConnectTokens() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGameConnectTokens(CMsgClientGameConnectTokens other) : this() {
    _hasBits0 = other._hasBits0;
    maxTokensToKeep_ = other.maxTokensToKeep_;
    tokens_ = other.tokens_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGameConnectTokens Clone() {
    return new CMsgClientGameConnectTokens(this);
  }

  /// <summary>Field number for the "max_tokens_to_keep" field.</summary>
  public const int MaxTokensToKeepFieldNumber = 1;
  private readonly static uint MaxTokensToKeepDefaultValue = 10;

  private uint maxTokensToKeep_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MaxTokensToKeep {
    get { if ((_hasBits0 & 1) != 0) { return maxTokensToKeep_; } else { return MaxTokensToKeepDefaultValue; } }
    set {
      _hasBits0 |= 1;
      maxTokensToKeep_ = value;
    }
  }
  /// <summary>Gets whether the "max_tokens_to_keep" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxTokensToKeep {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "max_tokens_to_keep" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxTokensToKeep() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "tokens" field.</summary>
  public const int TokensFieldNumber = 2;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_tokens_codec
      = pb::FieldCodec.ForBytes(18);
  private readonly pbc::RepeatedField<pb::ByteString> tokens_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<pb::ByteString> Tokens {
    get { return tokens_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientGameConnectTokens);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientGameConnectTokens other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MaxTokensToKeep != other.MaxTokensToKeep) return false;
    if(!tokens_.Equals(other.tokens_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMaxTokensToKeep) hash ^= MaxTokensToKeep.GetHashCode();
    hash ^= tokens_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMaxTokensToKeep) {
      output.WriteRawTag(8);
      output.WriteUInt32(MaxTokensToKeep);
    }
    tokens_.WriteTo(output, _repeated_tokens_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMaxTokensToKeep) {
      output.WriteRawTag(8);
      output.WriteUInt32(MaxTokensToKeep);
    }
    tokens_.WriteTo(ref output, _repeated_tokens_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMaxTokensToKeep) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxTokensToKeep);
    }
    size += tokens_.CalculateSize(_repeated_tokens_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientGameConnectTokens other) {
    if (other == null) {
      return;
    }
    if (other.HasMaxTokensToKeep) {
      MaxTokensToKeep = other.MaxTokensToKeep;
    }
    tokens_.Add(other.tokens_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MaxTokensToKeep = input.ReadUInt32();
          break;
        }
        case 18: {
          tokens_.AddEntriesFrom(input, _repeated_tokens_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MaxTokensToKeep = input.ReadUInt32();
          break;
        }
        case 18: {
          tokens_.AddEntriesFrom(ref input, _repeated_tokens_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientGamesPlayed : pb::IMessage<CMsgClientGamesPlayed>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientGamesPlayed> _parser = new pb::MessageParser<CMsgClientGamesPlayed>(() => new CMsgClientGamesPlayed());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientGamesPlayed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGamesPlayed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGamesPlayed(CMsgClientGamesPlayed other) : this() {
    _hasBits0 = other._hasBits0;
    gamesPlayed_ = other.gamesPlayed_.Clone();
    clientOsType_ = other.clientOsType_;
    cloudGamingPlatform_ = other.cloudGamingPlatform_;
    recentReauthentication_ = other.recentReauthentication_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientGamesPlayed Clone() {
    return new CMsgClientGamesPlayed(this);
  }

  /// <summary>Field number for the "games_played" field.</summary>
  public const int GamesPlayedFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgClientGamesPlayed.Types.GamePlayed> _repeated_gamesPlayed_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgClientGamesPlayed.Types.GamePlayed.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientGamesPlayed.Types.GamePlayed> gamesPlayed_ = new pbc::RepeatedField<global::CMsgClientGamesPlayed.Types.GamePlayed>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientGamesPlayed.Types.GamePlayed> GamesPlayed {
    get { return gamesPlayed_; }
  }

  /// <summary>Field number for the "client_os_type" field.</summary>
  public const int ClientOsTypeFieldNumber = 2;
  private readonly static uint ClientOsTypeDefaultValue = 0;

  private uint clientOsType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientOsType {
    get { if ((_hasBits0 & 1) != 0) { return clientOsType_; } else { return ClientOsTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clientOsType_ = value;
    }
  }
  /// <summary>Gets whether the "client_os_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientOsType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "client_os_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientOsType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "cloud_gaming_platform" field.</summary>
  public const int CloudGamingPlatformFieldNumber = 3;
  private readonly static uint CloudGamingPlatformDefaultValue = 0;

  private uint cloudGamingPlatform_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CloudGamingPlatform {
    get { if ((_hasBits0 & 2) != 0) { return cloudGamingPlatform_; } else { return CloudGamingPlatformDefaultValue; } }
    set {
      _hasBits0 |= 2;
      cloudGamingPlatform_ = value;
    }
  }
  /// <summary>Gets whether the "cloud_gaming_platform" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCloudGamingPlatform {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "cloud_gaming_platform" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCloudGamingPlatform() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "recent_reauthentication" field.</summary>
  public const int RecentReauthenticationFieldNumber = 4;
  private readonly static bool RecentReauthenticationDefaultValue = false;

  private bool recentReauthentication_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool RecentReauthentication {
    get { if ((_hasBits0 & 4) != 0) { return recentReauthentication_; } else { return RecentReauthenticationDefaultValue; } }
    set {
      _hasBits0 |= 4;
      recentReauthentication_ = value;
    }
  }
  /// <summary>Gets whether the "recent_reauthentication" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRecentReauthentication {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "recent_reauthentication" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRecentReauthentication() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientGamesPlayed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientGamesPlayed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!gamesPlayed_.Equals(other.gamesPlayed_)) return false;
    if (ClientOsType != other.ClientOsType) return false;
    if (CloudGamingPlatform != other.CloudGamingPlatform) return false;
    if (RecentReauthentication != other.RecentReauthentication) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= gamesPlayed_.GetHashCode();
    if (HasClientOsType) hash ^= ClientOsType.GetHashCode();
    if (HasCloudGamingPlatform) hash ^= CloudGamingPlatform.GetHashCode();
    if (HasRecentReauthentication) hash ^= RecentReauthentication.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    gamesPlayed_.WriteTo(output, _repeated_gamesPlayed_codec);
    if (HasClientOsType) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClientOsType);
    }
    if (HasCloudGamingPlatform) {
      output.WriteRawTag(24);
      output.WriteUInt32(CloudGamingPlatform);
    }
    if (HasRecentReauthentication) {
      output.WriteRawTag(32);
      output.WriteBool(RecentReauthentication);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    gamesPlayed_.WriteTo(ref output, _repeated_gamesPlayed_codec);
    if (HasClientOsType) {
      output.WriteRawTag(16);
      output.WriteUInt32(ClientOsType);
    }
    if (HasCloudGamingPlatform) {
      output.WriteRawTag(24);
      output.WriteUInt32(CloudGamingPlatform);
    }
    if (HasRecentReauthentication) {
      output.WriteRawTag(32);
      output.WriteBool(RecentReauthentication);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += gamesPlayed_.CalculateSize(_repeated_gamesPlayed_codec);
    if (HasClientOsType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientOsType);
    }
    if (HasCloudGamingPlatform) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CloudGamingPlatform);
    }
    if (HasRecentReauthentication) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientGamesPlayed other) {
    if (other == null) {
      return;
    }
    gamesPlayed_.Add(other.gamesPlayed_);
    if (other.HasClientOsType) {
      ClientOsType = other.ClientOsType;
    }
    if (other.HasCloudGamingPlatform) {
      CloudGamingPlatform = other.CloudGamingPlatform;
    }
    if (other.HasRecentReauthentication) {
      RecentReauthentication = other.RecentReauthentication;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          gamesPlayed_.AddEntriesFrom(input, _repeated_gamesPlayed_codec);
          break;
        }
        case 16: {
          ClientOsType = input.ReadUInt32();
          break;
        }
        case 24: {
          CloudGamingPlatform = input.ReadUInt32();
          break;
        }
        case 32: {
          RecentReauthentication = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          gamesPlayed_.AddEntriesFrom(ref input, _repeated_gamesPlayed_codec);
          break;
        }
        case 16: {
          ClientOsType = input.ReadUInt32();
          break;
        }
        case 24: {
          CloudGamingPlatform = input.ReadUInt32();
          break;
        }
        case 32: {
          RecentReauthentication = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientGamesPlayed message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class ProcessInfo : pb::IMessage<ProcessInfo>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ProcessInfo> _parser = new pb::MessageParser<ProcessInfo>(() => new ProcessInfo());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ProcessInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientGamesPlayed.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ProcessInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ProcessInfo(ProcessInfo other) : this() {
        _hasBits0 = other._hasBits0;
        processId_ = other.processId_;
        processIdParent_ = other.processIdParent_;
        parentIsSteam_ = other.parentIsSteam_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ProcessInfo Clone() {
        return new ProcessInfo(this);
      }

      /// <summary>Field number for the "process_id" field.</summary>
      public const int ProcessIdFieldNumber = 1;
      private readonly static uint ProcessIdDefaultValue = 0;

      private uint processId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ProcessId {
        get { if ((_hasBits0 & 1) != 0) { return processId_; } else { return ProcessIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          processId_ = value;
        }
      }
      /// <summary>Gets whether the "process_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasProcessId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "process_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearProcessId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "process_id_parent" field.</summary>
      public const int ProcessIdParentFieldNumber = 2;
      private readonly static uint ProcessIdParentDefaultValue = 0;

      private uint processIdParent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ProcessIdParent {
        get { if ((_hasBits0 & 2) != 0) { return processIdParent_; } else { return ProcessIdParentDefaultValue; } }
        set {
          _hasBits0 |= 2;
          processIdParent_ = value;
        }
      }
      /// <summary>Gets whether the "process_id_parent" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasProcessIdParent {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "process_id_parent" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearProcessIdParent() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "parent_is_steam" field.</summary>
      public const int ParentIsSteamFieldNumber = 3;
      private readonly static bool ParentIsSteamDefaultValue = false;

      private bool parentIsSteam_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool ParentIsSteam {
        get { if ((_hasBits0 & 4) != 0) { return parentIsSteam_; } else { return ParentIsSteamDefaultValue; } }
        set {
          _hasBits0 |= 4;
          parentIsSteam_ = value;
        }
      }
      /// <summary>Gets whether the "parent_is_steam" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasParentIsSteam {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "parent_is_steam" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearParentIsSteam() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ProcessInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ProcessInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ProcessId != other.ProcessId) return false;
        if (ProcessIdParent != other.ProcessIdParent) return false;
        if (ParentIsSteam != other.ParentIsSteam) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasProcessId) hash ^= ProcessId.GetHashCode();
        if (HasProcessIdParent) hash ^= ProcessIdParent.GetHashCode();
        if (HasParentIsSteam) hash ^= ParentIsSteam.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasProcessId) {
          output.WriteRawTag(8);
          output.WriteUInt32(ProcessId);
        }
        if (HasProcessIdParent) {
          output.WriteRawTag(16);
          output.WriteUInt32(ProcessIdParent);
        }
        if (HasParentIsSteam) {
          output.WriteRawTag(24);
          output.WriteBool(ParentIsSteam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasProcessId) {
          output.WriteRawTag(8);
          output.WriteUInt32(ProcessId);
        }
        if (HasProcessIdParent) {
          output.WriteRawTag(16);
          output.WriteUInt32(ProcessIdParent);
        }
        if (HasParentIsSteam) {
          output.WriteRawTag(24);
          output.WriteBool(ParentIsSteam);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasProcessId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessId);
        }
        if (HasProcessIdParent) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessIdParent);
        }
        if (HasParentIsSteam) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ProcessInfo other) {
        if (other == null) {
          return;
        }
        if (other.HasProcessId) {
          ProcessId = other.ProcessId;
        }
        if (other.HasProcessIdParent) {
          ProcessIdParent = other.ProcessIdParent;
        }
        if (other.HasParentIsSteam) {
          ParentIsSteam = other.ParentIsSteam;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ProcessId = input.ReadUInt32();
              break;
            }
            case 16: {
              ProcessIdParent = input.ReadUInt32();
              break;
            }
            case 24: {
              ParentIsSteam = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ProcessId = input.ReadUInt32();
              break;
            }
            case 16: {
              ProcessIdParent = input.ReadUInt32();
              break;
            }
            case 24: {
              ParentIsSteam = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class GamePlayed : pb::IMessage<GamePlayed>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<GamePlayed> _parser = new pb::MessageParser<GamePlayed>(() => new GamePlayed());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<GamePlayed> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientGamesPlayed.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GamePlayed() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GamePlayed(GamePlayed other) : this() {
        _hasBits0 = other._hasBits0;
        steamIdGs_ = other.steamIdGs_;
        gameId_ = other.gameId_;
        deprecatedGameIpAddress_ = other.deprecatedGameIpAddress_;
        gamePort_ = other.gamePort_;
        isSecure_ = other.isSecure_;
        token_ = other.token_;
        gameExtraInfo_ = other.gameExtraInfo_;
        gameDataBlob_ = other.gameDataBlob_;
        processId_ = other.processId_;
        streamingProviderId_ = other.streamingProviderId_;
        gameFlags_ = other.gameFlags_;
        ownerId_ = other.ownerId_;
        vrHmdVendor_ = other.vrHmdVendor_;
        vrHmdModel_ = other.vrHmdModel_;
        launchOptionType_ = other.launchOptionType_;
        primaryControllerType_ = other.primaryControllerType_;
        primarySteamControllerSerial_ = other.primarySteamControllerSerial_;
        totalSteamControllerCount_ = other.totalSteamControllerCount_;
        totalNonSteamControllerCount_ = other.totalNonSteamControllerCount_;
        controllerWorkshopFileId_ = other.controllerWorkshopFileId_;
        launchSource_ = other.launchSource_;
        vrHmdRuntime_ = other.vrHmdRuntime_;
        gameIpAddress_ = other.gameIpAddress_ != null ? other.gameIpAddress_.Clone() : null;
        controllerConnectionType_ = other.controllerConnectionType_;
        gameOsPlatform_ = other.gameOsPlatform_;
        gameBuildId_ = other.gameBuildId_;
        compatToolId_ = other.compatToolId_;
        compatToolCmd_ = other.compatToolCmd_;
        compatToolBuildId_ = other.compatToolBuildId_;
        betaName_ = other.betaName_;
        dlcContext_ = other.dlcContext_;
        processIdList_ = other.processIdList_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GamePlayed Clone() {
        return new GamePlayed(this);
      }

      /// <summary>Field number for the "steam_id_gs" field.</summary>
      public const int SteamIdGsFieldNumber = 1;
      private readonly static ulong SteamIdGsDefaultValue = 0UL;

      private ulong steamIdGs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong SteamIdGs {
        get { if ((_hasBits0 & 1) != 0) { return steamIdGs_; } else { return SteamIdGsDefaultValue; } }
        set {
          _hasBits0 |= 1;
          steamIdGs_ = value;
        }
      }
      /// <summary>Gets whether the "steam_id_gs" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamIdGs {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "steam_id_gs" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamIdGs() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "game_id" field.</summary>
      public const int GameIdFieldNumber = 2;
      private readonly static ulong GameIdDefaultValue = 0UL;

      private ulong gameId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong GameId {
        get { if ((_hasBits0 & 2) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          gameId_ = value;
        }
      }
      /// <summary>Gets whether the "game_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "game_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameId() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "deprecated_game_ip_address" field.</summary>
      public const int DeprecatedGameIpAddressFieldNumber = 3;
      private readonly static uint DeprecatedGameIpAddressDefaultValue = 0;

      private uint deprecatedGameIpAddress_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DeprecatedGameIpAddress {
        get { if ((_hasBits0 & 4) != 0) { return deprecatedGameIpAddress_; } else { return DeprecatedGameIpAddressDefaultValue; } }
        set {
          _hasBits0 |= 4;
          deprecatedGameIpAddress_ = value;
        }
      }
      /// <summary>Gets whether the "deprecated_game_ip_address" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDeprecatedGameIpAddress {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "deprecated_game_ip_address" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDeprecatedGameIpAddress() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "game_port" field.</summary>
      public const int GamePortFieldNumber = 4;
      private readonly static uint GamePortDefaultValue = 0;

      private uint gamePort_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GamePort {
        get { if ((_hasBits0 & 8) != 0) { return gamePort_; } else { return GamePortDefaultValue; } }
        set {
          _hasBits0 |= 8;
          gamePort_ = value;
        }
      }
      /// <summary>Gets whether the "game_port" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGamePort {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "game_port" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGamePort() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "is_secure" field.</summary>
      public const int IsSecureFieldNumber = 5;
      private readonly static bool IsSecureDefaultValue = false;

      private bool isSecure_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsSecure {
        get { if ((_hasBits0 & 16) != 0) { return isSecure_; } else { return IsSecureDefaultValue; } }
        set {
          _hasBits0 |= 16;
          isSecure_ = value;
        }
      }
      /// <summary>Gets whether the "is_secure" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsSecure {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "is_secure" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsSecure() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "token" field.</summary>
      public const int TokenFieldNumber = 6;
      private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

      private pb::ByteString token_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString Token {
        get { return token_ ?? TokenDefaultValue; }
        set {
          token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "token" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasToken {
        get { return token_ != null; }
      }
      /// <summary>Clears the value of the "token" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearToken() {
        token_ = null;
      }

      /// <summary>Field number for the "game_extra_info" field.</summary>
      public const int GameExtraInfoFieldNumber = 7;
      private readonly static string GameExtraInfoDefaultValue = "";

      private string gameExtraInfo_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string GameExtraInfo {
        get { return gameExtraInfo_ ?? GameExtraInfoDefaultValue; }
        set {
          gameExtraInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "game_extra_info" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameExtraInfo {
        get { return gameExtraInfo_ != null; }
      }
      /// <summary>Clears the value of the "game_extra_info" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameExtraInfo() {
        gameExtraInfo_ = null;
      }

      /// <summary>Field number for the "game_data_blob" field.</summary>
      public const int GameDataBlobFieldNumber = 8;
      private readonly static pb::ByteString GameDataBlobDefaultValue = pb::ByteString.Empty;

      private pb::ByteString gameDataBlob_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString GameDataBlob {
        get { return gameDataBlob_ ?? GameDataBlobDefaultValue; }
        set {
          gameDataBlob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "game_data_blob" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameDataBlob {
        get { return gameDataBlob_ != null; }
      }
      /// <summary>Clears the value of the "game_data_blob" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameDataBlob() {
        gameDataBlob_ = null;
      }

      /// <summary>Field number for the "process_id" field.</summary>
      public const int ProcessIdFieldNumber = 9;
      private readonly static uint ProcessIdDefaultValue = 0;

      private uint processId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ProcessId {
        get { if ((_hasBits0 & 32) != 0) { return processId_; } else { return ProcessIdDefaultValue; } }
        set {
          _hasBits0 |= 32;
          processId_ = value;
        }
      }
      /// <summary>Gets whether the "process_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasProcessId {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "process_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearProcessId() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "streaming_provider_id" field.</summary>
      public const int StreamingProviderIdFieldNumber = 10;
      private readonly static uint StreamingProviderIdDefaultValue = 0;

      private uint streamingProviderId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint StreamingProviderId {
        get { if ((_hasBits0 & 64) != 0) { return streamingProviderId_; } else { return StreamingProviderIdDefaultValue; } }
        set {
          _hasBits0 |= 64;
          streamingProviderId_ = value;
        }
      }
      /// <summary>Gets whether the "streaming_provider_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasStreamingProviderId {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "streaming_provider_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearStreamingProviderId() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "game_flags" field.</summary>
      public const int GameFlagsFieldNumber = 11;
      private readonly static uint GameFlagsDefaultValue = 0;

      private uint gameFlags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameFlags {
        get { if ((_hasBits0 & 128) != 0) { return gameFlags_; } else { return GameFlagsDefaultValue; } }
        set {
          _hasBits0 |= 128;
          gameFlags_ = value;
        }
      }
      /// <summary>Gets whether the "game_flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameFlags {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "game_flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameFlags() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "owner_id" field.</summary>
      public const int OwnerIdFieldNumber = 12;
      private readonly static uint OwnerIdDefaultValue = 0;

      private uint ownerId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint OwnerId {
        get { if ((_hasBits0 & 256) != 0) { return ownerId_; } else { return OwnerIdDefaultValue; } }
        set {
          _hasBits0 |= 256;
          ownerId_ = value;
        }
      }
      /// <summary>Gets whether the "owner_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOwnerId {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "owner_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOwnerId() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "vr_hmd_vendor" field.</summary>
      public const int VrHmdVendorFieldNumber = 13;
      private readonly static string VrHmdVendorDefaultValue = "";

      private string vrHmdVendor_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string VrHmdVendor {
        get { return vrHmdVendor_ ?? VrHmdVendorDefaultValue; }
        set {
          vrHmdVendor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "vr_hmd_vendor" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVrHmdVendor {
        get { return vrHmdVendor_ != null; }
      }
      /// <summary>Clears the value of the "vr_hmd_vendor" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVrHmdVendor() {
        vrHmdVendor_ = null;
      }

      /// <summary>Field number for the "vr_hmd_model" field.</summary>
      public const int VrHmdModelFieldNumber = 14;
      private readonly static string VrHmdModelDefaultValue = "";

      private string vrHmdModel_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string VrHmdModel {
        get { return vrHmdModel_ ?? VrHmdModelDefaultValue; }
        set {
          vrHmdModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "vr_hmd_model" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVrHmdModel {
        get { return vrHmdModel_ != null; }
      }
      /// <summary>Clears the value of the "vr_hmd_model" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVrHmdModel() {
        vrHmdModel_ = null;
      }

      /// <summary>Field number for the "launch_option_type" field.</summary>
      public const int LaunchOptionTypeFieldNumber = 15;
      private readonly static uint LaunchOptionTypeDefaultValue = 0;

      private uint launchOptionType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LaunchOptionType {
        get { if ((_hasBits0 & 512) != 0) { return launchOptionType_; } else { return LaunchOptionTypeDefaultValue; } }
        set {
          _hasBits0 |= 512;
          launchOptionType_ = value;
        }
      }
      /// <summary>Gets whether the "launch_option_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLaunchOptionType {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "launch_option_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLaunchOptionType() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "primary_controller_type" field.</summary>
      public const int PrimaryControllerTypeFieldNumber = 16;
      private readonly static int PrimaryControllerTypeDefaultValue = -1;

      private int primaryControllerType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int PrimaryControllerType {
        get { if ((_hasBits0 & 1024) != 0) { return primaryControllerType_; } else { return PrimaryControllerTypeDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          primaryControllerType_ = value;
        }
      }
      /// <summary>Gets whether the "primary_controller_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPrimaryControllerType {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "primary_controller_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPrimaryControllerType() {
        _hasBits0 &= ~1024;
      }

      /// <summary>Field number for the "primary_steam_controller_serial" field.</summary>
      public const int PrimarySteamControllerSerialFieldNumber = 17;
      private readonly static string PrimarySteamControllerSerialDefaultValue = "";

      private string primarySteamControllerSerial_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string PrimarySteamControllerSerial {
        get { return primarySteamControllerSerial_ ?? PrimarySteamControllerSerialDefaultValue; }
        set {
          primarySteamControllerSerial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "primary_steam_controller_serial" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPrimarySteamControllerSerial {
        get { return primarySteamControllerSerial_ != null; }
      }
      /// <summary>Clears the value of the "primary_steam_controller_serial" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPrimarySteamControllerSerial() {
        primarySteamControllerSerial_ = null;
      }

      /// <summary>Field number for the "total_steam_controller_count" field.</summary>
      public const int TotalSteamControllerCountFieldNumber = 18;
      private readonly static uint TotalSteamControllerCountDefaultValue = 0;

      private uint totalSteamControllerCount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TotalSteamControllerCount {
        get { if ((_hasBits0 & 2048) != 0) { return totalSteamControllerCount_; } else { return TotalSteamControllerCountDefaultValue; } }
        set {
          _hasBits0 |= 2048;
          totalSteamControllerCount_ = value;
        }
      }
      /// <summary>Gets whether the "total_steam_controller_count" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTotalSteamControllerCount {
        get { return (_hasBits0 & 2048) != 0; }
      }
      /// <summary>Clears the value of the "total_steam_controller_count" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTotalSteamControllerCount() {
        _hasBits0 &= ~2048;
      }

      /// <summary>Field number for the "total_non_steam_controller_count" field.</summary>
      public const int TotalNonSteamControllerCountFieldNumber = 19;
      private readonly static uint TotalNonSteamControllerCountDefaultValue = 0;

      private uint totalNonSteamControllerCount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TotalNonSteamControllerCount {
        get { if ((_hasBits0 & 4096) != 0) { return totalNonSteamControllerCount_; } else { return TotalNonSteamControllerCountDefaultValue; } }
        set {
          _hasBits0 |= 4096;
          totalNonSteamControllerCount_ = value;
        }
      }
      /// <summary>Gets whether the "total_non_steam_controller_count" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTotalNonSteamControllerCount {
        get { return (_hasBits0 & 4096) != 0; }
      }
      /// <summary>Clears the value of the "total_non_steam_controller_count" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTotalNonSteamControllerCount() {
        _hasBits0 &= ~4096;
      }

      /// <summary>Field number for the "controller_workshop_file_id" field.</summary>
      public const int ControllerWorkshopFileIdFieldNumber = 20;
      private readonly static ulong ControllerWorkshopFileIdDefaultValue = 0UL;

      private ulong controllerWorkshopFileId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong ControllerWorkshopFileId {
        get { if ((_hasBits0 & 8192) != 0) { return controllerWorkshopFileId_; } else { return ControllerWorkshopFileIdDefaultValue; } }
        set {
          _hasBits0 |= 8192;
          controllerWorkshopFileId_ = value;
        }
      }
      /// <summary>Gets whether the "controller_workshop_file_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControllerWorkshopFileId {
        get { return (_hasBits0 & 8192) != 0; }
      }
      /// <summary>Clears the value of the "controller_workshop_file_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControllerWorkshopFileId() {
        _hasBits0 &= ~8192;
      }

      /// <summary>Field number for the "launch_source" field.</summary>
      public const int LaunchSourceFieldNumber = 21;
      private readonly static uint LaunchSourceDefaultValue = 0;

      private uint launchSource_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LaunchSource {
        get { if ((_hasBits0 & 16384) != 0) { return launchSource_; } else { return LaunchSourceDefaultValue; } }
        set {
          _hasBits0 |= 16384;
          launchSource_ = value;
        }
      }
      /// <summary>Gets whether the "launch_source" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLaunchSource {
        get { return (_hasBits0 & 16384) != 0; }
      }
      /// <summary>Clears the value of the "launch_source" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLaunchSource() {
        _hasBits0 &= ~16384;
      }

      /// <summary>Field number for the "vr_hmd_runtime" field.</summary>
      public const int VrHmdRuntimeFieldNumber = 22;
      private readonly static uint VrHmdRuntimeDefaultValue = 0;

      private uint vrHmdRuntime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint VrHmdRuntime {
        get { if ((_hasBits0 & 32768) != 0) { return vrHmdRuntime_; } else { return VrHmdRuntimeDefaultValue; } }
        set {
          _hasBits0 |= 32768;
          vrHmdRuntime_ = value;
        }
      }
      /// <summary>Gets whether the "vr_hmd_runtime" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVrHmdRuntime {
        get { return (_hasBits0 & 32768) != 0; }
      }
      /// <summary>Clears the value of the "vr_hmd_runtime" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVrHmdRuntime() {
        _hasBits0 &= ~32768;
      }

      /// <summary>Field number for the "game_ip_address" field.</summary>
      public const int GameIpAddressFieldNumber = 23;
      private global::CMsgIPAddress gameIpAddress_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgIPAddress GameIpAddress {
        get { return gameIpAddress_; }
        set {
          gameIpAddress_ = value;
        }
      }

      /// <summary>Field number for the "controller_connection_type" field.</summary>
      public const int ControllerConnectionTypeFieldNumber = 24;
      private readonly static uint ControllerConnectionTypeDefaultValue = 0;

      private uint controllerConnectionType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ControllerConnectionType {
        get { if ((_hasBits0 & 65536) != 0) { return controllerConnectionType_; } else { return ControllerConnectionTypeDefaultValue; } }
        set {
          _hasBits0 |= 65536;
          controllerConnectionType_ = value;
        }
      }
      /// <summary>Gets whether the "controller_connection_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControllerConnectionType {
        get { return (_hasBits0 & 65536) != 0; }
      }
      /// <summary>Clears the value of the "controller_connection_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControllerConnectionType() {
        _hasBits0 &= ~65536;
      }

      /// <summary>Field number for the "game_os_platform" field.</summary>
      public const int GameOsPlatformFieldNumber = 25;
      private readonly static int GameOsPlatformDefaultValue = 0;

      private int gameOsPlatform_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int GameOsPlatform {
        get { if ((_hasBits0 & 131072) != 0) { return gameOsPlatform_; } else { return GameOsPlatformDefaultValue; } }
        set {
          _hasBits0 |= 131072;
          gameOsPlatform_ = value;
        }
      }
      /// <summary>Gets whether the "game_os_platform" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameOsPlatform {
        get { return (_hasBits0 & 131072) != 0; }
      }
      /// <summary>Clears the value of the "game_os_platform" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameOsPlatform() {
        _hasBits0 &= ~131072;
      }

      /// <summary>Field number for the "game_build_id" field.</summary>
      public const int GameBuildIdFieldNumber = 26;
      private readonly static uint GameBuildIdDefaultValue = 0;

      private uint gameBuildId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameBuildId {
        get { if ((_hasBits0 & 262144) != 0) { return gameBuildId_; } else { return GameBuildIdDefaultValue; } }
        set {
          _hasBits0 |= 262144;
          gameBuildId_ = value;
        }
      }
      /// <summary>Gets whether the "game_build_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameBuildId {
        get { return (_hasBits0 & 262144) != 0; }
      }
      /// <summary>Clears the value of the "game_build_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameBuildId() {
        _hasBits0 &= ~262144;
      }

      /// <summary>Field number for the "compat_tool_id" field.</summary>
      public const int CompatToolIdFieldNumber = 27;
      private readonly static uint CompatToolIdDefaultValue = 0;

      private uint compatToolId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CompatToolId {
        get { if ((_hasBits0 & 524288) != 0) { return compatToolId_; } else { return CompatToolIdDefaultValue; } }
        set {
          _hasBits0 |= 524288;
          compatToolId_ = value;
        }
      }
      /// <summary>Gets whether the "compat_tool_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCompatToolId {
        get { return (_hasBits0 & 524288) != 0; }
      }
      /// <summary>Clears the value of the "compat_tool_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCompatToolId() {
        _hasBits0 &= ~524288;
      }

      /// <summary>Field number for the "compat_tool_cmd" field.</summary>
      public const int CompatToolCmdFieldNumber = 28;
      private readonly static string CompatToolCmdDefaultValue = "";

      private string compatToolCmd_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string CompatToolCmd {
        get { return compatToolCmd_ ?? CompatToolCmdDefaultValue; }
        set {
          compatToolCmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "compat_tool_cmd" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCompatToolCmd {
        get { return compatToolCmd_ != null; }
      }
      /// <summary>Clears the value of the "compat_tool_cmd" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCompatToolCmd() {
        compatToolCmd_ = null;
      }

      /// <summary>Field number for the "compat_tool_build_id" field.</summary>
      public const int CompatToolBuildIdFieldNumber = 29;
      private readonly static uint CompatToolBuildIdDefaultValue = 0;

      private uint compatToolBuildId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CompatToolBuildId {
        get { if ((_hasBits0 & 1048576) != 0) { return compatToolBuildId_; } else { return CompatToolBuildIdDefaultValue; } }
        set {
          _hasBits0 |= 1048576;
          compatToolBuildId_ = value;
        }
      }
      /// <summary>Gets whether the "compat_tool_build_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCompatToolBuildId {
        get { return (_hasBits0 & 1048576) != 0; }
      }
      /// <summary>Clears the value of the "compat_tool_build_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCompatToolBuildId() {
        _hasBits0 &= ~1048576;
      }

      /// <summary>Field number for the "beta_name" field.</summary>
      public const int BetaNameFieldNumber = 30;
      private readonly static string BetaNameDefaultValue = "";

      private string betaName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string BetaName {
        get { return betaName_ ?? BetaNameDefaultValue; }
        set {
          betaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "beta_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBetaName {
        get { return betaName_ != null; }
      }
      /// <summary>Clears the value of the "beta_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBetaName() {
        betaName_ = null;
      }

      /// <summary>Field number for the "dlc_context" field.</summary>
      public const int DlcContextFieldNumber = 31;
      private readonly static uint DlcContextDefaultValue = 0;

      private uint dlcContext_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DlcContext {
        get { if ((_hasBits0 & 2097152) != 0) { return dlcContext_; } else { return DlcContextDefaultValue; } }
        set {
          _hasBits0 |= 2097152;
          dlcContext_ = value;
        }
      }
      /// <summary>Gets whether the "dlc_context" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDlcContext {
        get { return (_hasBits0 & 2097152) != 0; }
      }
      /// <summary>Clears the value of the "dlc_context" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDlcContext() {
        _hasBits0 &= ~2097152;
      }

      /// <summary>Field number for the "process_id_list" field.</summary>
      public const int ProcessIdListFieldNumber = 32;
      private static readonly pb::FieldCodec<global::CMsgClientGamesPlayed.Types.ProcessInfo> _repeated_processIdList_codec
          = pb::FieldCodec.ForMessage(258, global::CMsgClientGamesPlayed.Types.ProcessInfo.Parser);
      private readonly pbc::RepeatedField<global::CMsgClientGamesPlayed.Types.ProcessInfo> processIdList_ = new pbc::RepeatedField<global::CMsgClientGamesPlayed.Types.ProcessInfo>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgClientGamesPlayed.Types.ProcessInfo> ProcessIdList {
        get { return processIdList_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as GamePlayed);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(GamePlayed other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (SteamIdGs != other.SteamIdGs) return false;
        if (GameId != other.GameId) return false;
        if (DeprecatedGameIpAddress != other.DeprecatedGameIpAddress) return false;
        if (GamePort != other.GamePort) return false;
        if (IsSecure != other.IsSecure) return false;
        if (Token != other.Token) return false;
        if (GameExtraInfo != other.GameExtraInfo) return false;
        if (GameDataBlob != other.GameDataBlob) return false;
        if (ProcessId != other.ProcessId) return false;
        if (StreamingProviderId != other.StreamingProviderId) return false;
        if (GameFlags != other.GameFlags) return false;
        if (OwnerId != other.OwnerId) return false;
        if (VrHmdVendor != other.VrHmdVendor) return false;
        if (VrHmdModel != other.VrHmdModel) return false;
        if (LaunchOptionType != other.LaunchOptionType) return false;
        if (PrimaryControllerType != other.PrimaryControllerType) return false;
        if (PrimarySteamControllerSerial != other.PrimarySteamControllerSerial) return false;
        if (TotalSteamControllerCount != other.TotalSteamControllerCount) return false;
        if (TotalNonSteamControllerCount != other.TotalNonSteamControllerCount) return false;
        if (ControllerWorkshopFileId != other.ControllerWorkshopFileId) return false;
        if (LaunchSource != other.LaunchSource) return false;
        if (VrHmdRuntime != other.VrHmdRuntime) return false;
        if (!object.Equals(GameIpAddress, other.GameIpAddress)) return false;
        if (ControllerConnectionType != other.ControllerConnectionType) return false;
        if (GameOsPlatform != other.GameOsPlatform) return false;
        if (GameBuildId != other.GameBuildId) return false;
        if (CompatToolId != other.CompatToolId) return false;
        if (CompatToolCmd != other.CompatToolCmd) return false;
        if (CompatToolBuildId != other.CompatToolBuildId) return false;
        if (BetaName != other.BetaName) return false;
        if (DlcContext != other.DlcContext) return false;
        if(!processIdList_.Equals(other.processIdList_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSteamIdGs) hash ^= SteamIdGs.GetHashCode();
        if (HasGameId) hash ^= GameId.GetHashCode();
        if (HasDeprecatedGameIpAddress) hash ^= DeprecatedGameIpAddress.GetHashCode();
        if (HasGamePort) hash ^= GamePort.GetHashCode();
        if (HasIsSecure) hash ^= IsSecure.GetHashCode();
        if (HasToken) hash ^= Token.GetHashCode();
        if (HasGameExtraInfo) hash ^= GameExtraInfo.GetHashCode();
        if (HasGameDataBlob) hash ^= GameDataBlob.GetHashCode();
        if (HasProcessId) hash ^= ProcessId.GetHashCode();
        if (HasStreamingProviderId) hash ^= StreamingProviderId.GetHashCode();
        if (HasGameFlags) hash ^= GameFlags.GetHashCode();
        if (HasOwnerId) hash ^= OwnerId.GetHashCode();
        if (HasVrHmdVendor) hash ^= VrHmdVendor.GetHashCode();
        if (HasVrHmdModel) hash ^= VrHmdModel.GetHashCode();
        if (HasLaunchOptionType) hash ^= LaunchOptionType.GetHashCode();
        if (HasPrimaryControllerType) hash ^= PrimaryControllerType.GetHashCode();
        if (HasPrimarySteamControllerSerial) hash ^= PrimarySteamControllerSerial.GetHashCode();
        if (HasTotalSteamControllerCount) hash ^= TotalSteamControllerCount.GetHashCode();
        if (HasTotalNonSteamControllerCount) hash ^= TotalNonSteamControllerCount.GetHashCode();
        if (HasControllerWorkshopFileId) hash ^= ControllerWorkshopFileId.GetHashCode();
        if (HasLaunchSource) hash ^= LaunchSource.GetHashCode();
        if (HasVrHmdRuntime) hash ^= VrHmdRuntime.GetHashCode();
        if (gameIpAddress_ != null) hash ^= GameIpAddress.GetHashCode();
        if (HasControllerConnectionType) hash ^= ControllerConnectionType.GetHashCode();
        if (HasGameOsPlatform) hash ^= GameOsPlatform.GetHashCode();
        if (HasGameBuildId) hash ^= GameBuildId.GetHashCode();
        if (HasCompatToolId) hash ^= CompatToolId.GetHashCode();
        if (HasCompatToolCmd) hash ^= CompatToolCmd.GetHashCode();
        if (HasCompatToolBuildId) hash ^= CompatToolBuildId.GetHashCode();
        if (HasBetaName) hash ^= BetaName.GetHashCode();
        if (HasDlcContext) hash ^= DlcContext.GetHashCode();
        hash ^= processIdList_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSteamIdGs) {
          output.WriteRawTag(8);
          output.WriteUInt64(SteamIdGs);
        }
        if (HasGameId) {
          output.WriteRawTag(17);
          output.WriteFixed64(GameId);
        }
        if (HasDeprecatedGameIpAddress) {
          output.WriteRawTag(24);
          output.WriteUInt32(DeprecatedGameIpAddress);
        }
        if (HasGamePort) {
          output.WriteRawTag(32);
          output.WriteUInt32(GamePort);
        }
        if (HasIsSecure) {
          output.WriteRawTag(40);
          output.WriteBool(IsSecure);
        }
        if (HasToken) {
          output.WriteRawTag(50);
          output.WriteBytes(Token);
        }
        if (HasGameExtraInfo) {
          output.WriteRawTag(58);
          output.WriteString(GameExtraInfo);
        }
        if (HasGameDataBlob) {
          output.WriteRawTag(66);
          output.WriteBytes(GameDataBlob);
        }
        if (HasProcessId) {
          output.WriteRawTag(72);
          output.WriteUInt32(ProcessId);
        }
        if (HasStreamingProviderId) {
          output.WriteRawTag(80);
          output.WriteUInt32(StreamingProviderId);
        }
        if (HasGameFlags) {
          output.WriteRawTag(88);
          output.WriteUInt32(GameFlags);
        }
        if (HasOwnerId) {
          output.WriteRawTag(96);
          output.WriteUInt32(OwnerId);
        }
        if (HasVrHmdVendor) {
          output.WriteRawTag(106);
          output.WriteString(VrHmdVendor);
        }
        if (HasVrHmdModel) {
          output.WriteRawTag(114);
          output.WriteString(VrHmdModel);
        }
        if (HasLaunchOptionType) {
          output.WriteRawTag(120);
          output.WriteUInt32(LaunchOptionType);
        }
        if (HasPrimaryControllerType) {
          output.WriteRawTag(128, 1);
          output.WriteInt32(PrimaryControllerType);
        }
        if (HasPrimarySteamControllerSerial) {
          output.WriteRawTag(138, 1);
          output.WriteString(PrimarySteamControllerSerial);
        }
        if (HasTotalSteamControllerCount) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(TotalSteamControllerCount);
        }
        if (HasTotalNonSteamControllerCount) {
          output.WriteRawTag(152, 1);
          output.WriteUInt32(TotalNonSteamControllerCount);
        }
        if (HasControllerWorkshopFileId) {
          output.WriteRawTag(160, 1);
          output.WriteUInt64(ControllerWorkshopFileId);
        }
        if (HasLaunchSource) {
          output.WriteRawTag(168, 1);
          output.WriteUInt32(LaunchSource);
        }
        if (HasVrHmdRuntime) {
          output.WriteRawTag(176, 1);
          output.WriteUInt32(VrHmdRuntime);
        }
        if (gameIpAddress_ != null) {
          output.WriteRawTag(186, 1);
          output.WriteMessage(GameIpAddress);
        }
        if (HasControllerConnectionType) {
          output.WriteRawTag(192, 1);
          output.WriteUInt32(ControllerConnectionType);
        }
        if (HasGameOsPlatform) {
          output.WriteRawTag(200, 1);
          output.WriteInt32(GameOsPlatform);
        }
        if (HasGameBuildId) {
          output.WriteRawTag(208, 1);
          output.WriteUInt32(GameBuildId);
        }
        if (HasCompatToolId) {
          output.WriteRawTag(216, 1);
          output.WriteUInt32(CompatToolId);
        }
        if (HasCompatToolCmd) {
          output.WriteRawTag(226, 1);
          output.WriteString(CompatToolCmd);
        }
        if (HasCompatToolBuildId) {
          output.WriteRawTag(232, 1);
          output.WriteUInt32(CompatToolBuildId);
        }
        if (HasBetaName) {
          output.WriteRawTag(242, 1);
          output.WriteString(BetaName);
        }
        if (HasDlcContext) {
          output.WriteRawTag(248, 1);
          output.WriteUInt32(DlcContext);
        }
        processIdList_.WriteTo(output, _repeated_processIdList_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSteamIdGs) {
          output.WriteRawTag(8);
          output.WriteUInt64(SteamIdGs);
        }
        if (HasGameId) {
          output.WriteRawTag(17);
          output.WriteFixed64(GameId);
        }
        if (HasDeprecatedGameIpAddress) {
          output.WriteRawTag(24);
          output.WriteUInt32(DeprecatedGameIpAddress);
        }
        if (HasGamePort) {
          output.WriteRawTag(32);
          output.WriteUInt32(GamePort);
        }
        if (HasIsSecure) {
          output.WriteRawTag(40);
          output.WriteBool(IsSecure);
        }
        if (HasToken) {
          output.WriteRawTag(50);
          output.WriteBytes(Token);
        }
        if (HasGameExtraInfo) {
          output.WriteRawTag(58);
          output.WriteString(GameExtraInfo);
        }
        if (HasGameDataBlob) {
          output.WriteRawTag(66);
          output.WriteBytes(GameDataBlob);
        }
        if (HasProcessId) {
          output.WriteRawTag(72);
          output.WriteUInt32(ProcessId);
        }
        if (HasStreamingProviderId) {
          output.WriteRawTag(80);
          output.WriteUInt32(StreamingProviderId);
        }
        if (HasGameFlags) {
          output.WriteRawTag(88);
          output.WriteUInt32(GameFlags);
        }
        if (HasOwnerId) {
          output.WriteRawTag(96);
          output.WriteUInt32(OwnerId);
        }
        if (HasVrHmdVendor) {
          output.WriteRawTag(106);
          output.WriteString(VrHmdVendor);
        }
        if (HasVrHmdModel) {
          output.WriteRawTag(114);
          output.WriteString(VrHmdModel);
        }
        if (HasLaunchOptionType) {
          output.WriteRawTag(120);
          output.WriteUInt32(LaunchOptionType);
        }
        if (HasPrimaryControllerType) {
          output.WriteRawTag(128, 1);
          output.WriteInt32(PrimaryControllerType);
        }
        if (HasPrimarySteamControllerSerial) {
          output.WriteRawTag(138, 1);
          output.WriteString(PrimarySteamControllerSerial);
        }
        if (HasTotalSteamControllerCount) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(TotalSteamControllerCount);
        }
        if (HasTotalNonSteamControllerCount) {
          output.WriteRawTag(152, 1);
          output.WriteUInt32(TotalNonSteamControllerCount);
        }
        if (HasControllerWorkshopFileId) {
          output.WriteRawTag(160, 1);
          output.WriteUInt64(ControllerWorkshopFileId);
        }
        if (HasLaunchSource) {
          output.WriteRawTag(168, 1);
          output.WriteUInt32(LaunchSource);
        }
        if (HasVrHmdRuntime) {
          output.WriteRawTag(176, 1);
          output.WriteUInt32(VrHmdRuntime);
        }
        if (gameIpAddress_ != null) {
          output.WriteRawTag(186, 1);
          output.WriteMessage(GameIpAddress);
        }
        if (HasControllerConnectionType) {
          output.WriteRawTag(192, 1);
          output.WriteUInt32(ControllerConnectionType);
        }
        if (HasGameOsPlatform) {
          output.WriteRawTag(200, 1);
          output.WriteInt32(GameOsPlatform);
        }
        if (HasGameBuildId) {
          output.WriteRawTag(208, 1);
          output.WriteUInt32(GameBuildId);
        }
        if (HasCompatToolId) {
          output.WriteRawTag(216, 1);
          output.WriteUInt32(CompatToolId);
        }
        if (HasCompatToolCmd) {
          output.WriteRawTag(226, 1);
          output.WriteString(CompatToolCmd);
        }
        if (HasCompatToolBuildId) {
          output.WriteRawTag(232, 1);
          output.WriteUInt32(CompatToolBuildId);
        }
        if (HasBetaName) {
          output.WriteRawTag(242, 1);
          output.WriteString(BetaName);
        }
        if (HasDlcContext) {
          output.WriteRawTag(248, 1);
          output.WriteUInt32(DlcContext);
        }
        processIdList_.WriteTo(ref output, _repeated_processIdList_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSteamIdGs) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SteamIdGs);
        }
        if (HasGameId) {
          size += 1 + 8;
        }
        if (HasDeprecatedGameIpAddress) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeprecatedGameIpAddress);
        }
        if (HasGamePort) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GamePort);
        }
        if (HasIsSecure) {
          size += 1 + 1;
        }
        if (HasToken) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
        }
        if (HasGameExtraInfo) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(GameExtraInfo);
        }
        if (HasGameDataBlob) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(GameDataBlob);
        }
        if (HasProcessId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessId);
        }
        if (HasStreamingProviderId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StreamingProviderId);
        }
        if (HasGameFlags) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameFlags);
        }
        if (HasOwnerId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwnerId);
        }
        if (HasVrHmdVendor) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(VrHmdVendor);
        }
        if (HasVrHmdModel) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(VrHmdModel);
        }
        if (HasLaunchOptionType) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LaunchOptionType);
        }
        if (HasPrimaryControllerType) {
          size += 2 + pb::CodedOutputStream.ComputeInt32Size(PrimaryControllerType);
        }
        if (HasPrimarySteamControllerSerial) {
          size += 2 + pb::CodedOutputStream.ComputeStringSize(PrimarySteamControllerSerial);
        }
        if (HasTotalSteamControllerCount) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalSteamControllerCount);
        }
        if (HasTotalNonSteamControllerCount) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TotalNonSteamControllerCount);
        }
        if (HasControllerWorkshopFileId) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ControllerWorkshopFileId);
        }
        if (HasLaunchSource) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LaunchSource);
        }
        if (HasVrHmdRuntime) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(VrHmdRuntime);
        }
        if (gameIpAddress_ != null) {
          size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameIpAddress);
        }
        if (HasControllerConnectionType) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ControllerConnectionType);
        }
        if (HasGameOsPlatform) {
          size += 2 + pb::CodedOutputStream.ComputeInt32Size(GameOsPlatform);
        }
        if (HasGameBuildId) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GameBuildId);
        }
        if (HasCompatToolId) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CompatToolId);
        }
        if (HasCompatToolCmd) {
          size += 2 + pb::CodedOutputStream.ComputeStringSize(CompatToolCmd);
        }
        if (HasCompatToolBuildId) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CompatToolBuildId);
        }
        if (HasBetaName) {
          size += 2 + pb::CodedOutputStream.ComputeStringSize(BetaName);
        }
        if (HasDlcContext) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DlcContext);
        }
        size += processIdList_.CalculateSize(_repeated_processIdList_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(GamePlayed other) {
        if (other == null) {
          return;
        }
        if (other.HasSteamIdGs) {
          SteamIdGs = other.SteamIdGs;
        }
        if (other.HasGameId) {
          GameId = other.GameId;
        }
        if (other.HasDeprecatedGameIpAddress) {
          DeprecatedGameIpAddress = other.DeprecatedGameIpAddress;
        }
        if (other.HasGamePort) {
          GamePort = other.GamePort;
        }
        if (other.HasIsSecure) {
          IsSecure = other.IsSecure;
        }
        if (other.HasToken) {
          Token = other.Token;
        }
        if (other.HasGameExtraInfo) {
          GameExtraInfo = other.GameExtraInfo;
        }
        if (other.HasGameDataBlob) {
          GameDataBlob = other.GameDataBlob;
        }
        if (other.HasProcessId) {
          ProcessId = other.ProcessId;
        }
        if (other.HasStreamingProviderId) {
          StreamingProviderId = other.StreamingProviderId;
        }
        if (other.HasGameFlags) {
          GameFlags = other.GameFlags;
        }
        if (other.HasOwnerId) {
          OwnerId = other.OwnerId;
        }
        if (other.HasVrHmdVendor) {
          VrHmdVendor = other.VrHmdVendor;
        }
        if (other.HasVrHmdModel) {
          VrHmdModel = other.VrHmdModel;
        }
        if (other.HasLaunchOptionType) {
          LaunchOptionType = other.LaunchOptionType;
        }
        if (other.HasPrimaryControllerType) {
          PrimaryControllerType = other.PrimaryControllerType;
        }
        if (other.HasPrimarySteamControllerSerial) {
          PrimarySteamControllerSerial = other.PrimarySteamControllerSerial;
        }
        if (other.HasTotalSteamControllerCount) {
          TotalSteamControllerCount = other.TotalSteamControllerCount;
        }
        if (other.HasTotalNonSteamControllerCount) {
          TotalNonSteamControllerCount = other.TotalNonSteamControllerCount;
        }
        if (other.HasControllerWorkshopFileId) {
          ControllerWorkshopFileId = other.ControllerWorkshopFileId;
        }
        if (other.HasLaunchSource) {
          LaunchSource = other.LaunchSource;
        }
        if (other.HasVrHmdRuntime) {
          VrHmdRuntime = other.VrHmdRuntime;
        }
        if (other.gameIpAddress_ != null) {
          if (gameIpAddress_ == null) {
            GameIpAddress = new global::CMsgIPAddress();
          }
          GameIpAddress.MergeFrom(other.GameIpAddress);
        }
        if (other.HasControllerConnectionType) {
          ControllerConnectionType = other.ControllerConnectionType;
        }
        if (other.HasGameOsPlatform) {
          GameOsPlatform = other.GameOsPlatform;
        }
        if (other.HasGameBuildId) {
          GameBuildId = other.GameBuildId;
        }
        if (other.HasCompatToolId) {
          CompatToolId = other.CompatToolId;
        }
        if (other.HasCompatToolCmd) {
          CompatToolCmd = other.CompatToolCmd;
        }
        if (other.HasCompatToolBuildId) {
          CompatToolBuildId = other.CompatToolBuildId;
        }
        if (other.HasBetaName) {
          BetaName = other.BetaName;
        }
        if (other.HasDlcContext) {
          DlcContext = other.DlcContext;
        }
        processIdList_.Add(other.processIdList_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              SteamIdGs = input.ReadUInt64();
              break;
            }
            case 17: {
              GameId = input.ReadFixed64();
              break;
            }
            case 24: {
              DeprecatedGameIpAddress = input.ReadUInt32();
              break;
            }
            case 32: {
              GamePort = input.ReadUInt32();
              break;
            }
            case 40: {
              IsSecure = input.ReadBool();
              break;
            }
            case 50: {
              Token = input.ReadBytes();
              break;
            }
            case 58: {
              GameExtraInfo = input.ReadString();
              break;
            }
            case 66: {
              GameDataBlob = input.ReadBytes();
              break;
            }
            case 72: {
              ProcessId = input.ReadUInt32();
              break;
            }
            case 80: {
              StreamingProviderId = input.ReadUInt32();
              break;
            }
            case 88: {
              GameFlags = input.ReadUInt32();
              break;
            }
            case 96: {
              OwnerId = input.ReadUInt32();
              break;
            }
            case 106: {
              VrHmdVendor = input.ReadString();
              break;
            }
            case 114: {
              VrHmdModel = input.ReadString();
              break;
            }
            case 120: {
              LaunchOptionType = input.ReadUInt32();
              break;
            }
            case 128: {
              PrimaryControllerType = input.ReadInt32();
              break;
            }
            case 138: {
              PrimarySteamControllerSerial = input.ReadString();
              break;
            }
            case 144: {
              TotalSteamControllerCount = input.ReadUInt32();
              break;
            }
            case 152: {
              TotalNonSteamControllerCount = input.ReadUInt32();
              break;
            }
            case 160: {
              ControllerWorkshopFileId = input.ReadUInt64();
              break;
            }
            case 168: {
              LaunchSource = input.ReadUInt32();
              break;
            }
            case 176: {
              VrHmdRuntime = input.ReadUInt32();
              break;
            }
            case 186: {
              if (gameIpAddress_ == null) {
                GameIpAddress = new global::CMsgIPAddress();
              }
              input.ReadMessage(GameIpAddress);
              break;
            }
            case 192: {
              ControllerConnectionType = input.ReadUInt32();
              break;
            }
            case 200: {
              GameOsPlatform = input.ReadInt32();
              break;
            }
            case 208: {
              GameBuildId = input.ReadUInt32();
              break;
            }
            case 216: {
              CompatToolId = input.ReadUInt32();
              break;
            }
            case 226: {
              CompatToolCmd = input.ReadString();
              break;
            }
            case 232: {
              CompatToolBuildId = input.ReadUInt32();
              break;
            }
            case 242: {
              BetaName = input.ReadString();
              break;
            }
            case 248: {
              DlcContext = input.ReadUInt32();
              break;
            }
            case 258: {
              processIdList_.AddEntriesFrom(input, _repeated_processIdList_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              SteamIdGs = input.ReadUInt64();
              break;
            }
            case 17: {
              GameId = input.ReadFixed64();
              break;
            }
            case 24: {
              DeprecatedGameIpAddress = input.ReadUInt32();
              break;
            }
            case 32: {
              GamePort = input.ReadUInt32();
              break;
            }
            case 40: {
              IsSecure = input.ReadBool();
              break;
            }
            case 50: {
              Token = input.ReadBytes();
              break;
            }
            case 58: {
              GameExtraInfo = input.ReadString();
              break;
            }
            case 66: {
              GameDataBlob = input.ReadBytes();
              break;
            }
            case 72: {
              ProcessId = input.ReadUInt32();
              break;
            }
            case 80: {
              StreamingProviderId = input.ReadUInt32();
              break;
            }
            case 88: {
              GameFlags = input.ReadUInt32();
              break;
            }
            case 96: {
              OwnerId = input.ReadUInt32();
              break;
            }
            case 106: {
              VrHmdVendor = input.ReadString();
              break;
            }
            case 114: {
              VrHmdModel = input.ReadString();
              break;
            }
            case 120: {
              LaunchOptionType = input.ReadUInt32();
              break;
            }
            case 128: {
              PrimaryControllerType = input.ReadInt32();
              break;
            }
            case 138: {
              PrimarySteamControllerSerial = input.ReadString();
              break;
            }
            case 144: {
              TotalSteamControllerCount = input.ReadUInt32();
              break;
            }
            case 152: {
              TotalNonSteamControllerCount = input.ReadUInt32();
              break;
            }
            case 160: {
              ControllerWorkshopFileId = input.ReadUInt64();
              break;
            }
            case 168: {
              LaunchSource = input.ReadUInt32();
              break;
            }
            case 176: {
              VrHmdRuntime = input.ReadUInt32();
              break;
            }
            case 186: {
              if (gameIpAddress_ == null) {
                GameIpAddress = new global::CMsgIPAddress();
              }
              input.ReadMessage(GameIpAddress);
              break;
            }
            case 192: {
              ControllerConnectionType = input.ReadUInt32();
              break;
            }
            case 200: {
              GameOsPlatform = input.ReadInt32();
              break;
            }
            case 208: {
              GameBuildId = input.ReadUInt32();
              break;
            }
            case 216: {
              CompatToolId = input.ReadUInt32();
              break;
            }
            case 226: {
              CompatToolCmd = input.ReadString();
              break;
            }
            case 232: {
              CompatToolBuildId = input.ReadUInt32();
              break;
            }
            case 242: {
              BetaName = input.ReadString();
              break;
            }
            case 248: {
              DlcContext = input.ReadUInt32();
              break;
            }
            case 258: {
              processIdList_.AddEntriesFrom(ref input, _repeated_processIdList_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgGSApprove : pb::IMessage<CMsgGSApprove>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGSApprove> _parser = new pb::MessageParser<CMsgGSApprove>(() => new CMsgGSApprove());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGSApprove> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSApprove() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSApprove(CMsgGSApprove other) : this() {
    _hasBits0 = other._hasBits0;
    steamId_ = other.steamId_;
    ownerSteamId_ = other.ownerSteamId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSApprove Clone() {
    return new CMsgGSApprove(this);
  }

  /// <summary>Field number for the "steam_id" field.</summary>
  public const int SteamIdFieldNumber = 1;
  private readonly static ulong SteamIdDefaultValue = 0UL;

  private ulong steamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamId {
    get { if ((_hasBits0 & 1) != 0) { return steamId_; } else { return SteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamId_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "owner_steam_id" field.</summary>
  public const int OwnerSteamIdFieldNumber = 2;
  private readonly static ulong OwnerSteamIdDefaultValue = 0UL;

  private ulong ownerSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong OwnerSteamId {
    get { if ((_hasBits0 & 2) != 0) { return ownerSteamId_; } else { return OwnerSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      ownerSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "owner_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOwnerSteamId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "owner_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOwnerSteamId() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGSApprove);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGSApprove other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamId != other.SteamId) return false;
    if (OwnerSteamId != other.OwnerSteamId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamId) hash ^= SteamId.GetHashCode();
    if (HasOwnerSteamId) hash ^= OwnerSteamId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasOwnerSteamId) {
      output.WriteRawTag(17);
      output.WriteFixed64(OwnerSteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasOwnerSteamId) {
      output.WriteRawTag(17);
      output.WriteFixed64(OwnerSteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamId) {
      size += 1 + 8;
    }
    if (HasOwnerSteamId) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGSApprove other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamId) {
      SteamId = other.SteamId;
    }
    if (other.HasOwnerSteamId) {
      OwnerSteamId = other.OwnerSteamId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 17: {
          OwnerSteamId = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 17: {
          OwnerSteamId = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGSDeny : pb::IMessage<CMsgGSDeny>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGSDeny> _parser = new pb::MessageParser<CMsgGSDeny>(() => new CMsgGSDeny());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGSDeny> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSDeny() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSDeny(CMsgGSDeny other) : this() {
    _hasBits0 = other._hasBits0;
    steamId_ = other.steamId_;
    edenyReason_ = other.edenyReason_;
    denyString_ = other.denyString_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSDeny Clone() {
    return new CMsgGSDeny(this);
  }

  /// <summary>Field number for the "steam_id" field.</summary>
  public const int SteamIdFieldNumber = 1;
  private readonly static ulong SteamIdDefaultValue = 0UL;

  private ulong steamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamId {
    get { if ((_hasBits0 & 1) != 0) { return steamId_; } else { return SteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamId_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "edeny_reason" field.</summary>
  public const int EdenyReasonFieldNumber = 2;
  private readonly static int EdenyReasonDefaultValue = 0;

  private int edenyReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EdenyReason {
    get { if ((_hasBits0 & 2) != 0) { return edenyReason_; } else { return EdenyReasonDefaultValue; } }
    set {
      _hasBits0 |= 2;
      edenyReason_ = value;
    }
  }
  /// <summary>Gets whether the "edeny_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEdenyReason {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "edeny_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEdenyReason() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "deny_string" field.</summary>
  public const int DenyStringFieldNumber = 3;
  private readonly static string DenyStringDefaultValue = "";

  private string denyString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DenyString {
    get { return denyString_ ?? DenyStringDefaultValue; }
    set {
      denyString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "deny_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDenyString {
    get { return denyString_ != null; }
  }
  /// <summary>Clears the value of the "deny_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDenyString() {
    denyString_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGSDeny);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGSDeny other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamId != other.SteamId) return false;
    if (EdenyReason != other.EdenyReason) return false;
    if (DenyString != other.DenyString) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamId) hash ^= SteamId.GetHashCode();
    if (HasEdenyReason) hash ^= EdenyReason.GetHashCode();
    if (HasDenyString) hash ^= DenyString.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasEdenyReason) {
      output.WriteRawTag(16);
      output.WriteInt32(EdenyReason);
    }
    if (HasDenyString) {
      output.WriteRawTag(26);
      output.WriteString(DenyString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasEdenyReason) {
      output.WriteRawTag(16);
      output.WriteInt32(EdenyReason);
    }
    if (HasDenyString) {
      output.WriteRawTag(26);
      output.WriteString(DenyString);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamId) {
      size += 1 + 8;
    }
    if (HasEdenyReason) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EdenyReason);
    }
    if (HasDenyString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DenyString);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGSDeny other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamId) {
      SteamId = other.SteamId;
    }
    if (other.HasEdenyReason) {
      EdenyReason = other.EdenyReason;
    }
    if (other.HasDenyString) {
      DenyString = other.DenyString;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 16: {
          EdenyReason = input.ReadInt32();
          break;
        }
        case 26: {
          DenyString = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 16: {
          EdenyReason = input.ReadInt32();
          break;
        }
        case 26: {
          DenyString = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgGSKick : pb::IMessage<CMsgGSKick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgGSKick> _parser = new pb::MessageParser<CMsgGSKick>(() => new CMsgGSKick());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgGSKick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSKick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSKick(CMsgGSKick other) : this() {
    _hasBits0 = other._hasBits0;
    steamId_ = other.steamId_;
    edenyReason_ = other.edenyReason_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgGSKick Clone() {
    return new CMsgGSKick(this);
  }

  /// <summary>Field number for the "steam_id" field.</summary>
  public const int SteamIdFieldNumber = 1;
  private readonly static ulong SteamIdDefaultValue = 0UL;

  private ulong steamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamId {
    get { if ((_hasBits0 & 1) != 0) { return steamId_; } else { return SteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamId_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "edeny_reason" field.</summary>
  public const int EdenyReasonFieldNumber = 2;
  private readonly static int EdenyReasonDefaultValue = 0;

  private int edenyReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EdenyReason {
    get { if ((_hasBits0 & 2) != 0) { return edenyReason_; } else { return EdenyReasonDefaultValue; } }
    set {
      _hasBits0 |= 2;
      edenyReason_ = value;
    }
  }
  /// <summary>Gets whether the "edeny_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEdenyReason {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "edeny_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEdenyReason() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgGSKick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgGSKick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamId != other.SteamId) return false;
    if (EdenyReason != other.EdenyReason) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamId) hash ^= SteamId.GetHashCode();
    if (HasEdenyReason) hash ^= EdenyReason.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasEdenyReason) {
      output.WriteRawTag(16);
      output.WriteInt32(EdenyReason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamId);
    }
    if (HasEdenyReason) {
      output.WriteRawTag(16);
      output.WriteInt32(EdenyReason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamId) {
      size += 1 + 8;
    }
    if (HasEdenyReason) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EdenyReason);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgGSKick other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamId) {
      SteamId = other.SteamId;
    }
    if (other.HasEdenyReason) {
      EdenyReason = other.EdenyReason;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 16: {
          EdenyReason = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamId = input.ReadFixed64();
          break;
        }
        case 16: {
          EdenyReason = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientAuthList : pb::IMessage<CMsgClientAuthList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientAuthList> _parser = new pb::MessageParser<CMsgClientAuthList>(() => new CMsgClientAuthList());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientAuthList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAuthList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAuthList(CMsgClientAuthList other) : this() {
    _hasBits0 = other._hasBits0;
    tokensLeft_ = other.tokensLeft_;
    lastRequestSeq_ = other.lastRequestSeq_;
    lastRequestSeqFromServer_ = other.lastRequestSeqFromServer_;
    tickets_ = other.tickets_.Clone();
    appIds_ = other.appIds_.Clone();
    messageSequence_ = other.messageSequence_;
    filtered_ = other.filtered_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAuthList Clone() {
    return new CMsgClientAuthList(this);
  }

  /// <summary>Field number for the "tokens_left" field.</summary>
  public const int TokensLeftFieldNumber = 1;
  private readonly static uint TokensLeftDefaultValue = 0;

  private uint tokensLeft_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TokensLeft {
    get { if ((_hasBits0 & 1) != 0) { return tokensLeft_; } else { return TokensLeftDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tokensLeft_ = value;
    }
  }
  /// <summary>Gets whether the "tokens_left" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokensLeft {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "tokens_left" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokensLeft() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "last_request_seq" field.</summary>
  public const int LastRequestSeqFieldNumber = 2;
  private readonly static uint LastRequestSeqDefaultValue = 0;

  private uint lastRequestSeq_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LastRequestSeq {
    get { if ((_hasBits0 & 2) != 0) { return lastRequestSeq_; } else { return LastRequestSeqDefaultValue; } }
    set {
      _hasBits0 |= 2;
      lastRequestSeq_ = value;
    }
  }
  /// <summary>Gets whether the "last_request_seq" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastRequestSeq {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "last_request_seq" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastRequestSeq() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "last_request_seq_from_server" field.</summary>
  public const int LastRequestSeqFromServerFieldNumber = 3;
  private readonly static uint LastRequestSeqFromServerDefaultValue = 0;

  private uint lastRequestSeqFromServer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LastRequestSeqFromServer {
    get { if ((_hasBits0 & 4) != 0) { return lastRequestSeqFromServer_; } else { return LastRequestSeqFromServerDefaultValue; } }
    set {
      _hasBits0 |= 4;
      lastRequestSeqFromServer_ = value;
    }
  }
  /// <summary>Gets whether the "last_request_seq_from_server" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastRequestSeqFromServer {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "last_request_seq_from_server" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastRequestSeqFromServer() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "tickets" field.</summary>
  public const int TicketsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CMsgAuthTicket> _repeated_tickets_codec
      = pb::FieldCodec.ForMessage(34, global::CMsgAuthTicket.Parser);
  private readonly pbc::RepeatedField<global::CMsgAuthTicket> tickets_ = new pbc::RepeatedField<global::CMsgAuthTicket>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgAuthTicket> Tickets {
    get { return tickets_; }
  }

  /// <summary>Field number for the "app_ids" field.</summary>
  public const int AppIdsFieldNumber = 5;
  private static readonly pb::FieldCodec<uint> _repeated_appIds_codec
      = pb::FieldCodec.ForUInt32(40);
  private readonly pbc::RepeatedField<uint> appIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AppIds {
    get { return appIds_; }
  }

  /// <summary>Field number for the "message_sequence" field.</summary>
  public const int MessageSequenceFieldNumber = 6;
  private readonly static uint MessageSequenceDefaultValue = 0;

  private uint messageSequence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MessageSequence {
    get { if ((_hasBits0 & 8) != 0) { return messageSequence_; } else { return MessageSequenceDefaultValue; } }
    set {
      _hasBits0 |= 8;
      messageSequence_ = value;
    }
  }
  /// <summary>Gets whether the "message_sequence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessageSequence {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "message_sequence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessageSequence() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "filtered" field.</summary>
  public const int FilteredFieldNumber = 7;
  private readonly static bool FilteredDefaultValue = false;

  private bool filtered_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Filtered {
    get { if ((_hasBits0 & 16) != 0) { return filtered_; } else { return FilteredDefaultValue; } }
    set {
      _hasBits0 |= 16;
      filtered_ = value;
    }
  }
  /// <summary>Gets whether the "filtered" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFiltered {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "filtered" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFiltered() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientAuthList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientAuthList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TokensLeft != other.TokensLeft) return false;
    if (LastRequestSeq != other.LastRequestSeq) return false;
    if (LastRequestSeqFromServer != other.LastRequestSeqFromServer) return false;
    if(!tickets_.Equals(other.tickets_)) return false;
    if(!appIds_.Equals(other.appIds_)) return false;
    if (MessageSequence != other.MessageSequence) return false;
    if (Filtered != other.Filtered) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTokensLeft) hash ^= TokensLeft.GetHashCode();
    if (HasLastRequestSeq) hash ^= LastRequestSeq.GetHashCode();
    if (HasLastRequestSeqFromServer) hash ^= LastRequestSeqFromServer.GetHashCode();
    hash ^= tickets_.GetHashCode();
    hash ^= appIds_.GetHashCode();
    if (HasMessageSequence) hash ^= MessageSequence.GetHashCode();
    if (HasFiltered) hash ^= Filtered.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTokensLeft) {
      output.WriteRawTag(8);
      output.WriteUInt32(TokensLeft);
    }
    if (HasLastRequestSeq) {
      output.WriteRawTag(16);
      output.WriteUInt32(LastRequestSeq);
    }
    if (HasLastRequestSeqFromServer) {
      output.WriteRawTag(24);
      output.WriteUInt32(LastRequestSeqFromServer);
    }
    tickets_.WriteTo(output, _repeated_tickets_codec);
    appIds_.WriteTo(output, _repeated_appIds_codec);
    if (HasMessageSequence) {
      output.WriteRawTag(48);
      output.WriteUInt32(MessageSequence);
    }
    if (HasFiltered) {
      output.WriteRawTag(56);
      output.WriteBool(Filtered);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTokensLeft) {
      output.WriteRawTag(8);
      output.WriteUInt32(TokensLeft);
    }
    if (HasLastRequestSeq) {
      output.WriteRawTag(16);
      output.WriteUInt32(LastRequestSeq);
    }
    if (HasLastRequestSeqFromServer) {
      output.WriteRawTag(24);
      output.WriteUInt32(LastRequestSeqFromServer);
    }
    tickets_.WriteTo(ref output, _repeated_tickets_codec);
    appIds_.WriteTo(ref output, _repeated_appIds_codec);
    if (HasMessageSequence) {
      output.WriteRawTag(48);
      output.WriteUInt32(MessageSequence);
    }
    if (HasFiltered) {
      output.WriteRawTag(56);
      output.WriteBool(Filtered);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTokensLeft) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TokensLeft);
    }
    if (HasLastRequestSeq) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastRequestSeq);
    }
    if (HasLastRequestSeqFromServer) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastRequestSeqFromServer);
    }
    size += tickets_.CalculateSize(_repeated_tickets_codec);
    size += appIds_.CalculateSize(_repeated_appIds_codec);
    if (HasMessageSequence) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessageSequence);
    }
    if (HasFiltered) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientAuthList other) {
    if (other == null) {
      return;
    }
    if (other.HasTokensLeft) {
      TokensLeft = other.TokensLeft;
    }
    if (other.HasLastRequestSeq) {
      LastRequestSeq = other.LastRequestSeq;
    }
    if (other.HasLastRequestSeqFromServer) {
      LastRequestSeqFromServer = other.LastRequestSeqFromServer;
    }
    tickets_.Add(other.tickets_);
    appIds_.Add(other.appIds_);
    if (other.HasMessageSequence) {
      MessageSequence = other.MessageSequence;
    }
    if (other.HasFiltered) {
      Filtered = other.Filtered;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TokensLeft = input.ReadUInt32();
          break;
        }
        case 16: {
          LastRequestSeq = input.ReadUInt32();
          break;
        }
        case 24: {
          LastRequestSeqFromServer = input.ReadUInt32();
          break;
        }
        case 34: {
          tickets_.AddEntriesFrom(input, _repeated_tickets_codec);
          break;
        }
        case 42:
        case 40: {
          appIds_.AddEntriesFrom(input, _repeated_appIds_codec);
          break;
        }
        case 48: {
          MessageSequence = input.ReadUInt32();
          break;
        }
        case 56: {
          Filtered = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TokensLeft = input.ReadUInt32();
          break;
        }
        case 16: {
          LastRequestSeq = input.ReadUInt32();
          break;
        }
        case 24: {
          LastRequestSeqFromServer = input.ReadUInt32();
          break;
        }
        case 34: {
          tickets_.AddEntriesFrom(ref input, _repeated_tickets_codec);
          break;
        }
        case 42:
        case 40: {
          appIds_.AddEntriesFrom(ref input, _repeated_appIds_codec);
          break;
        }
        case 48: {
          MessageSequence = input.ReadUInt32();
          break;
        }
        case 56: {
          Filtered = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientAuthListAck : pb::IMessage<CMsgClientAuthListAck>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientAuthListAck> _parser = new pb::MessageParser<CMsgClientAuthListAck>(() => new CMsgClientAuthListAck());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientAuthListAck> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAuthListAck() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAuthListAck(CMsgClientAuthListAck other) : this() {
    _hasBits0 = other._hasBits0;
    ticketCrc_ = other.ticketCrc_.Clone();
    appIds_ = other.appIds_.Clone();
    messageSequence_ = other.messageSequence_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAuthListAck Clone() {
    return new CMsgClientAuthListAck(this);
  }

  /// <summary>Field number for the "ticket_crc" field.</summary>
  public const int TicketCrcFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_ticketCrc_codec
      = pb::FieldCodec.ForUInt32(8);
  private readonly pbc::RepeatedField<uint> ticketCrc_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> TicketCrc {
    get { return ticketCrc_; }
  }

  /// <summary>Field number for the "app_ids" field.</summary>
  public const int AppIdsFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_appIds_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> appIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AppIds {
    get { return appIds_; }
  }

  /// <summary>Field number for the "message_sequence" field.</summary>
  public const int MessageSequenceFieldNumber = 3;
  private readonly static uint MessageSequenceDefaultValue = 0;

  private uint messageSequence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MessageSequence {
    get { if ((_hasBits0 & 1) != 0) { return messageSequence_; } else { return MessageSequenceDefaultValue; } }
    set {
      _hasBits0 |= 1;
      messageSequence_ = value;
    }
  }
  /// <summary>Gets whether the "message_sequence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessageSequence {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "message_sequence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessageSequence() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientAuthListAck);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientAuthListAck other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ticketCrc_.Equals(other.ticketCrc_)) return false;
    if(!appIds_.Equals(other.appIds_)) return false;
    if (MessageSequence != other.MessageSequence) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ticketCrc_.GetHashCode();
    hash ^= appIds_.GetHashCode();
    if (HasMessageSequence) hash ^= MessageSequence.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    ticketCrc_.WriteTo(output, _repeated_ticketCrc_codec);
    appIds_.WriteTo(output, _repeated_appIds_codec);
    if (HasMessageSequence) {
      output.WriteRawTag(24);
      output.WriteUInt32(MessageSequence);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    ticketCrc_.WriteTo(ref output, _repeated_ticketCrc_codec);
    appIds_.WriteTo(ref output, _repeated_appIds_codec);
    if (HasMessageSequence) {
      output.WriteRawTag(24);
      output.WriteUInt32(MessageSequence);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += ticketCrc_.CalculateSize(_repeated_ticketCrc_codec);
    size += appIds_.CalculateSize(_repeated_appIds_codec);
    if (HasMessageSequence) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessageSequence);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientAuthListAck other) {
    if (other == null) {
      return;
    }
    ticketCrc_.Add(other.ticketCrc_);
    appIds_.Add(other.appIds_);
    if (other.HasMessageSequence) {
      MessageSequence = other.MessageSequence;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          ticketCrc_.AddEntriesFrom(input, _repeated_ticketCrc_codec);
          break;
        }
        case 18:
        case 16: {
          appIds_.AddEntriesFrom(input, _repeated_appIds_codec);
          break;
        }
        case 24: {
          MessageSequence = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          ticketCrc_.AddEntriesFrom(ref input, _repeated_ticketCrc_codec);
          break;
        }
        case 18:
        case 16: {
          appIds_.AddEntriesFrom(ref input, _repeated_appIds_codec);
          break;
        }
        case 24: {
          MessageSequence = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientLicenseList : pb::IMessage<CMsgClientLicenseList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientLicenseList> _parser = new pb::MessageParser<CMsgClientLicenseList>(() => new CMsgClientLicenseList());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientLicenseList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLicenseList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLicenseList(CMsgClientLicenseList other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    licenses_ = other.licenses_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLicenseList Clone() {
    return new CMsgClientLicenseList(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "licenses" field.</summary>
  public const int LicensesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgClientLicenseList.Types.License> _repeated_licenses_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgClientLicenseList.Types.License.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientLicenseList.Types.License> licenses_ = new pbc::RepeatedField<global::CMsgClientLicenseList.Types.License>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientLicenseList.Types.License> Licenses {
    get { return licenses_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientLicenseList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientLicenseList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    if(!licenses_.Equals(other.licenses_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    hash ^= licenses_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    licenses_.WriteTo(output, _repeated_licenses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    licenses_.WriteTo(ref output, _repeated_licenses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    size += licenses_.CalculateSize(_repeated_licenses_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientLicenseList other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    licenses_.Add(other.licenses_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 18: {
          licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 18: {
          licenses_.AddEntriesFrom(ref input, _repeated_licenses_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientLicenseList message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class License : pb::IMessage<License>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<License> _parser = new pb::MessageParser<License>(() => new License());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<License> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientLicenseList.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public License() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public License(License other) : this() {
        _hasBits0 = other._hasBits0;
        packageId_ = other.packageId_;
        timeCreated_ = other.timeCreated_;
        timeNextProcess_ = other.timeNextProcess_;
        minuteLimit_ = other.minuteLimit_;
        minutesUsed_ = other.minutesUsed_;
        paymentMethod_ = other.paymentMethod_;
        flags_ = other.flags_;
        purchaseCountryCode_ = other.purchaseCountryCode_;
        licenseType_ = other.licenseType_;
        territoryCode_ = other.territoryCode_;
        changeNumber_ = other.changeNumber_;
        ownerId_ = other.ownerId_;
        initialPeriod_ = other.initialPeriod_;
        initialTimeUnit_ = other.initialTimeUnit_;
        renewalPeriod_ = other.renewalPeriod_;
        renewalTimeUnit_ = other.renewalTimeUnit_;
        accessToken_ = other.accessToken_;
        masterPackageId_ = other.masterPackageId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public License Clone() {
        return new License(this);
      }

      /// <summary>Field number for the "package_id" field.</summary>
      public const int PackageIdFieldNumber = 1;
      private readonly static uint PackageIdDefaultValue = 0;

      private uint packageId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PackageId {
        get { if ((_hasBits0 & 1) != 0) { return packageId_; } else { return PackageIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          packageId_ = value;
        }
      }
      /// <summary>Gets whether the "package_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPackageId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "package_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPackageId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "time_created" field.</summary>
      public const int TimeCreatedFieldNumber = 2;
      private readonly static uint TimeCreatedDefaultValue = 0;

      private uint timeCreated_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeCreated {
        get { if ((_hasBits0 & 2) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
        set {
          _hasBits0 |= 2;
          timeCreated_ = value;
        }
      }
      /// <summary>Gets whether the "time_created" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeCreated {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "time_created" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeCreated() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "time_next_process" field.</summary>
      public const int TimeNextProcessFieldNumber = 3;
      private readonly static uint TimeNextProcessDefaultValue = 0;

      private uint timeNextProcess_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeNextProcess {
        get { if ((_hasBits0 & 4) != 0) { return timeNextProcess_; } else { return TimeNextProcessDefaultValue; } }
        set {
          _hasBits0 |= 4;
          timeNextProcess_ = value;
        }
      }
      /// <summary>Gets whether the "time_next_process" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeNextProcess {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "time_next_process" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeNextProcess() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "minute_limit" field.</summary>
      public const int MinuteLimitFieldNumber = 4;
      private readonly static int MinuteLimitDefaultValue = 0;

      private int minuteLimit_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int MinuteLimit {
        get { if ((_hasBits0 & 8) != 0) { return minuteLimit_; } else { return MinuteLimitDefaultValue; } }
        set {
          _hasBits0 |= 8;
          minuteLimit_ = value;
        }
      }
      /// <summary>Gets whether the "minute_limit" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMinuteLimit {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "minute_limit" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMinuteLimit() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "minutes_used" field.</summary>
      public const int MinutesUsedFieldNumber = 5;
      private readonly static int MinutesUsedDefaultValue = 0;

      private int minutesUsed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int MinutesUsed {
        get { if ((_hasBits0 & 16) != 0) { return minutesUsed_; } else { return MinutesUsedDefaultValue; } }
        set {
          _hasBits0 |= 16;
          minutesUsed_ = value;
        }
      }
      /// <summary>Gets whether the "minutes_used" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMinutesUsed {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "minutes_used" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMinutesUsed() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "payment_method" field.</summary>
      public const int PaymentMethodFieldNumber = 6;
      private readonly static uint PaymentMethodDefaultValue = 0;

      private uint paymentMethod_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PaymentMethod {
        get { if ((_hasBits0 & 32) != 0) { return paymentMethod_; } else { return PaymentMethodDefaultValue; } }
        set {
          _hasBits0 |= 32;
          paymentMethod_ = value;
        }
      }
      /// <summary>Gets whether the "payment_method" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPaymentMethod {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "payment_method" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPaymentMethod() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "flags" field.</summary>
      public const int FlagsFieldNumber = 7;
      private readonly static uint FlagsDefaultValue = 0;

      private uint flags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Flags {
        get { if ((_hasBits0 & 64) != 0) { return flags_; } else { return FlagsDefaultValue; } }
        set {
          _hasBits0 |= 64;
          flags_ = value;
        }
      }
      /// <summary>Gets whether the "flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFlags {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFlags() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "purchase_country_code" field.</summary>
      public const int PurchaseCountryCodeFieldNumber = 8;
      private readonly static string PurchaseCountryCodeDefaultValue = "";

      private string purchaseCountryCode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string PurchaseCountryCode {
        get { return purchaseCountryCode_ ?? PurchaseCountryCodeDefaultValue; }
        set {
          purchaseCountryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "purchase_country_code" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPurchaseCountryCode {
        get { return purchaseCountryCode_ != null; }
      }
      /// <summary>Clears the value of the "purchase_country_code" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPurchaseCountryCode() {
        purchaseCountryCode_ = null;
      }

      /// <summary>Field number for the "license_type" field.</summary>
      public const int LicenseTypeFieldNumber = 9;
      private readonly static uint LicenseTypeDefaultValue = 0;

      private uint licenseType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LicenseType {
        get { if ((_hasBits0 & 128) != 0) { return licenseType_; } else { return LicenseTypeDefaultValue; } }
        set {
          _hasBits0 |= 128;
          licenseType_ = value;
        }
      }
      /// <summary>Gets whether the "license_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLicenseType {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "license_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLicenseType() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "territory_code" field.</summary>
      public const int TerritoryCodeFieldNumber = 10;
      private readonly static int TerritoryCodeDefaultValue = 0;

      private int territoryCode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int TerritoryCode {
        get { if ((_hasBits0 & 256) != 0) { return territoryCode_; } else { return TerritoryCodeDefaultValue; } }
        set {
          _hasBits0 |= 256;
          territoryCode_ = value;
        }
      }
      /// <summary>Gets whether the "territory_code" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTerritoryCode {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "territory_code" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTerritoryCode() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "change_number" field.</summary>
      public const int ChangeNumberFieldNumber = 11;
      private readonly static int ChangeNumberDefaultValue = 0;

      private int changeNumber_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ChangeNumber {
        get { if ((_hasBits0 & 512) != 0) { return changeNumber_; } else { return ChangeNumberDefaultValue; } }
        set {
          _hasBits0 |= 512;
          changeNumber_ = value;
        }
      }
      /// <summary>Gets whether the "change_number" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasChangeNumber {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "change_number" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearChangeNumber() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "owner_id" field.</summary>
      public const int OwnerIdFieldNumber = 12;
      private readonly static uint OwnerIdDefaultValue = 0;

      private uint ownerId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint OwnerId {
        get { if ((_hasBits0 & 1024) != 0) { return ownerId_; } else { return OwnerIdDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          ownerId_ = value;
        }
      }
      /// <summary>Gets whether the "owner_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOwnerId {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "owner_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOwnerId() {
        _hasBits0 &= ~1024;
      }

      /// <summary>Field number for the "initial_period" field.</summary>
      public const int InitialPeriodFieldNumber = 13;
      private readonly static uint InitialPeriodDefaultValue = 0;

      private uint initialPeriod_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint InitialPeriod {
        get { if ((_hasBits0 & 2048) != 0) { return initialPeriod_; } else { return InitialPeriodDefaultValue; } }
        set {
          _hasBits0 |= 2048;
          initialPeriod_ = value;
        }
      }
      /// <summary>Gets whether the "initial_period" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInitialPeriod {
        get { return (_hasBits0 & 2048) != 0; }
      }
      /// <summary>Clears the value of the "initial_period" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInitialPeriod() {
        _hasBits0 &= ~2048;
      }

      /// <summary>Field number for the "initial_time_unit" field.</summary>
      public const int InitialTimeUnitFieldNumber = 14;
      private readonly static uint InitialTimeUnitDefaultValue = 0;

      private uint initialTimeUnit_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint InitialTimeUnit {
        get { if ((_hasBits0 & 4096) != 0) { return initialTimeUnit_; } else { return InitialTimeUnitDefaultValue; } }
        set {
          _hasBits0 |= 4096;
          initialTimeUnit_ = value;
        }
      }
      /// <summary>Gets whether the "initial_time_unit" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInitialTimeUnit {
        get { return (_hasBits0 & 4096) != 0; }
      }
      /// <summary>Clears the value of the "initial_time_unit" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInitialTimeUnit() {
        _hasBits0 &= ~4096;
      }

      /// <summary>Field number for the "renewal_period" field.</summary>
      public const int RenewalPeriodFieldNumber = 15;
      private readonly static uint RenewalPeriodDefaultValue = 0;

      private uint renewalPeriod_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint RenewalPeriod {
        get { if ((_hasBits0 & 8192) != 0) { return renewalPeriod_; } else { return RenewalPeriodDefaultValue; } }
        set {
          _hasBits0 |= 8192;
          renewalPeriod_ = value;
        }
      }
      /// <summary>Gets whether the "renewal_period" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRenewalPeriod {
        get { return (_hasBits0 & 8192) != 0; }
      }
      /// <summary>Clears the value of the "renewal_period" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRenewalPeriod() {
        _hasBits0 &= ~8192;
      }

      /// <summary>Field number for the "renewal_time_unit" field.</summary>
      public const int RenewalTimeUnitFieldNumber = 16;
      private readonly static uint RenewalTimeUnitDefaultValue = 0;

      private uint renewalTimeUnit_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint RenewalTimeUnit {
        get { if ((_hasBits0 & 16384) != 0) { return renewalTimeUnit_; } else { return RenewalTimeUnitDefaultValue; } }
        set {
          _hasBits0 |= 16384;
          renewalTimeUnit_ = value;
        }
      }
      /// <summary>Gets whether the "renewal_time_unit" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRenewalTimeUnit {
        get { return (_hasBits0 & 16384) != 0; }
      }
      /// <summary>Clears the value of the "renewal_time_unit" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRenewalTimeUnit() {
        _hasBits0 &= ~16384;
      }

      /// <summary>Field number for the "access_token" field.</summary>
      public const int AccessTokenFieldNumber = 17;
      private readonly static ulong AccessTokenDefaultValue = 0UL;

      private ulong accessToken_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong AccessToken {
        get { if ((_hasBits0 & 32768) != 0) { return accessToken_; } else { return AccessTokenDefaultValue; } }
        set {
          _hasBits0 |= 32768;
          accessToken_ = value;
        }
      }
      /// <summary>Gets whether the "access_token" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccessToken {
        get { return (_hasBits0 & 32768) != 0; }
      }
      /// <summary>Clears the value of the "access_token" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccessToken() {
        _hasBits0 &= ~32768;
      }

      /// <summary>Field number for the "master_package_id" field.</summary>
      public const int MasterPackageIdFieldNumber = 18;
      private readonly static uint MasterPackageIdDefaultValue = 0;

      private uint masterPackageId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MasterPackageId {
        get { if ((_hasBits0 & 65536) != 0) { return masterPackageId_; } else { return MasterPackageIdDefaultValue; } }
        set {
          _hasBits0 |= 65536;
          masterPackageId_ = value;
        }
      }
      /// <summary>Gets whether the "master_package_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMasterPackageId {
        get { return (_hasBits0 & 65536) != 0; }
      }
      /// <summary>Clears the value of the "master_package_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMasterPackageId() {
        _hasBits0 &= ~65536;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as License);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(License other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (PackageId != other.PackageId) return false;
        if (TimeCreated != other.TimeCreated) return false;
        if (TimeNextProcess != other.TimeNextProcess) return false;
        if (MinuteLimit != other.MinuteLimit) return false;
        if (MinutesUsed != other.MinutesUsed) return false;
        if (PaymentMethod != other.PaymentMethod) return false;
        if (Flags != other.Flags) return false;
        if (PurchaseCountryCode != other.PurchaseCountryCode) return false;
        if (LicenseType != other.LicenseType) return false;
        if (TerritoryCode != other.TerritoryCode) return false;
        if (ChangeNumber != other.ChangeNumber) return false;
        if (OwnerId != other.OwnerId) return false;
        if (InitialPeriod != other.InitialPeriod) return false;
        if (InitialTimeUnit != other.InitialTimeUnit) return false;
        if (RenewalPeriod != other.RenewalPeriod) return false;
        if (RenewalTimeUnit != other.RenewalTimeUnit) return false;
        if (AccessToken != other.AccessToken) return false;
        if (MasterPackageId != other.MasterPackageId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPackageId) hash ^= PackageId.GetHashCode();
        if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
        if (HasTimeNextProcess) hash ^= TimeNextProcess.GetHashCode();
        if (HasMinuteLimit) hash ^= MinuteLimit.GetHashCode();
        if (HasMinutesUsed) hash ^= MinutesUsed.GetHashCode();
        if (HasPaymentMethod) hash ^= PaymentMethod.GetHashCode();
        if (HasFlags) hash ^= Flags.GetHashCode();
        if (HasPurchaseCountryCode) hash ^= PurchaseCountryCode.GetHashCode();
        if (HasLicenseType) hash ^= LicenseType.GetHashCode();
        if (HasTerritoryCode) hash ^= TerritoryCode.GetHashCode();
        if (HasChangeNumber) hash ^= ChangeNumber.GetHashCode();
        if (HasOwnerId) hash ^= OwnerId.GetHashCode();
        if (HasInitialPeriod) hash ^= InitialPeriod.GetHashCode();
        if (HasInitialTimeUnit) hash ^= InitialTimeUnit.GetHashCode();
        if (HasRenewalPeriod) hash ^= RenewalPeriod.GetHashCode();
        if (HasRenewalTimeUnit) hash ^= RenewalTimeUnit.GetHashCode();
        if (HasAccessToken) hash ^= AccessToken.GetHashCode();
        if (HasMasterPackageId) hash ^= MasterPackageId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPackageId) {
          output.WriteRawTag(8);
          output.WriteUInt32(PackageId);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(21);
          output.WriteFixed32(TimeCreated);
        }
        if (HasTimeNextProcess) {
          output.WriteRawTag(29);
          output.WriteFixed32(TimeNextProcess);
        }
        if (HasMinuteLimit) {
          output.WriteRawTag(32);
          output.WriteInt32(MinuteLimit);
        }
        if (HasMinutesUsed) {
          output.WriteRawTag(40);
          output.WriteInt32(MinutesUsed);
        }
        if (HasPaymentMethod) {
          output.WriteRawTag(48);
          output.WriteUInt32(PaymentMethod);
        }
        if (HasFlags) {
          output.WriteRawTag(56);
          output.WriteUInt32(Flags);
        }
        if (HasPurchaseCountryCode) {
          output.WriteRawTag(66);
          output.WriteString(PurchaseCountryCode);
        }
        if (HasLicenseType) {
          output.WriteRawTag(72);
          output.WriteUInt32(LicenseType);
        }
        if (HasTerritoryCode) {
          output.WriteRawTag(80);
          output.WriteInt32(TerritoryCode);
        }
        if (HasChangeNumber) {
          output.WriteRawTag(88);
          output.WriteInt32(ChangeNumber);
        }
        if (HasOwnerId) {
          output.WriteRawTag(96);
          output.WriteUInt32(OwnerId);
        }
        if (HasInitialPeriod) {
          output.WriteRawTag(104);
          output.WriteUInt32(InitialPeriod);
        }
        if (HasInitialTimeUnit) {
          output.WriteRawTag(112);
          output.WriteUInt32(InitialTimeUnit);
        }
        if (HasRenewalPeriod) {
          output.WriteRawTag(120);
          output.WriteUInt32(RenewalPeriod);
        }
        if (HasRenewalTimeUnit) {
          output.WriteRawTag(128, 1);
          output.WriteUInt32(RenewalTimeUnit);
        }
        if (HasAccessToken) {
          output.WriteRawTag(136, 1);
          output.WriteUInt64(AccessToken);
        }
        if (HasMasterPackageId) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(MasterPackageId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPackageId) {
          output.WriteRawTag(8);
          output.WriteUInt32(PackageId);
        }
        if (HasTimeCreated) {
          output.WriteRawTag(21);
          output.WriteFixed32(TimeCreated);
        }
        if (HasTimeNextProcess) {
          output.WriteRawTag(29);
          output.WriteFixed32(TimeNextProcess);
        }
        if (HasMinuteLimit) {
          output.WriteRawTag(32);
          output.WriteInt32(MinuteLimit);
        }
        if (HasMinutesUsed) {
          output.WriteRawTag(40);
          output.WriteInt32(MinutesUsed);
        }
        if (HasPaymentMethod) {
          output.WriteRawTag(48);
          output.WriteUInt32(PaymentMethod);
        }
        if (HasFlags) {
          output.WriteRawTag(56);
          output.WriteUInt32(Flags);
        }
        if (HasPurchaseCountryCode) {
          output.WriteRawTag(66);
          output.WriteString(PurchaseCountryCode);
        }
        if (HasLicenseType) {
          output.WriteRawTag(72);
          output.WriteUInt32(LicenseType);
        }
        if (HasTerritoryCode) {
          output.WriteRawTag(80);
          output.WriteInt32(TerritoryCode);
        }
        if (HasChangeNumber) {
          output.WriteRawTag(88);
          output.WriteInt32(ChangeNumber);
        }
        if (HasOwnerId) {
          output.WriteRawTag(96);
          output.WriteUInt32(OwnerId);
        }
        if (HasInitialPeriod) {
          output.WriteRawTag(104);
          output.WriteUInt32(InitialPeriod);
        }
        if (HasInitialTimeUnit) {
          output.WriteRawTag(112);
          output.WriteUInt32(InitialTimeUnit);
        }
        if (HasRenewalPeriod) {
          output.WriteRawTag(120);
          output.WriteUInt32(RenewalPeriod);
        }
        if (HasRenewalTimeUnit) {
          output.WriteRawTag(128, 1);
          output.WriteUInt32(RenewalTimeUnit);
        }
        if (HasAccessToken) {
          output.WriteRawTag(136, 1);
          output.WriteUInt64(AccessToken);
        }
        if (HasMasterPackageId) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(MasterPackageId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPackageId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PackageId);
        }
        if (HasTimeCreated) {
          size += 1 + 4;
        }
        if (HasTimeNextProcess) {
          size += 1 + 4;
        }
        if (HasMinuteLimit) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinuteLimit);
        }
        if (HasMinutesUsed) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinutesUsed);
        }
        if (HasPaymentMethod) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PaymentMethod);
        }
        if (HasFlags) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
        }
        if (HasPurchaseCountryCode) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(PurchaseCountryCode);
        }
        if (HasLicenseType) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LicenseType);
        }
        if (HasTerritoryCode) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(TerritoryCode);
        }
        if (HasChangeNumber) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChangeNumber);
        }
        if (HasOwnerId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwnerId);
        }
        if (HasInitialPeriod) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialPeriod);
        }
        if (HasInitialTimeUnit) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitialTimeUnit);
        }
        if (HasRenewalPeriod) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RenewalPeriod);
        }
        if (HasRenewalTimeUnit) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RenewalTimeUnit);
        }
        if (HasAccessToken) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(AccessToken);
        }
        if (HasMasterPackageId) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MasterPackageId);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(License other) {
        if (other == null) {
          return;
        }
        if (other.HasPackageId) {
          PackageId = other.PackageId;
        }
        if (other.HasTimeCreated) {
          TimeCreated = other.TimeCreated;
        }
        if (other.HasTimeNextProcess) {
          TimeNextProcess = other.TimeNextProcess;
        }
        if (other.HasMinuteLimit) {
          MinuteLimit = other.MinuteLimit;
        }
        if (other.HasMinutesUsed) {
          MinutesUsed = other.MinutesUsed;
        }
        if (other.HasPaymentMethod) {
          PaymentMethod = other.PaymentMethod;
        }
        if (other.HasFlags) {
          Flags = other.Flags;
        }
        if (other.HasPurchaseCountryCode) {
          PurchaseCountryCode = other.PurchaseCountryCode;
        }
        if (other.HasLicenseType) {
          LicenseType = other.LicenseType;
        }
        if (other.HasTerritoryCode) {
          TerritoryCode = other.TerritoryCode;
        }
        if (other.HasChangeNumber) {
          ChangeNumber = other.ChangeNumber;
        }
        if (other.HasOwnerId) {
          OwnerId = other.OwnerId;
        }
        if (other.HasInitialPeriod) {
          InitialPeriod = other.InitialPeriod;
        }
        if (other.HasInitialTimeUnit) {
          InitialTimeUnit = other.InitialTimeUnit;
        }
        if (other.HasRenewalPeriod) {
          RenewalPeriod = other.RenewalPeriod;
        }
        if (other.HasRenewalTimeUnit) {
          RenewalTimeUnit = other.RenewalTimeUnit;
        }
        if (other.HasAccessToken) {
          AccessToken = other.AccessToken;
        }
        if (other.HasMasterPackageId) {
          MasterPackageId = other.MasterPackageId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              PackageId = input.ReadUInt32();
              break;
            }
            case 21: {
              TimeCreated = input.ReadFixed32();
              break;
            }
            case 29: {
              TimeNextProcess = input.ReadFixed32();
              break;
            }
            case 32: {
              MinuteLimit = input.ReadInt32();
              break;
            }
            case 40: {
              MinutesUsed = input.ReadInt32();
              break;
            }
            case 48: {
              PaymentMethod = input.ReadUInt32();
              break;
            }
            case 56: {
              Flags = input.ReadUInt32();
              break;
            }
            case 66: {
              PurchaseCountryCode = input.ReadString();
              break;
            }
            case 72: {
              LicenseType = input.ReadUInt32();
              break;
            }
            case 80: {
              TerritoryCode = input.ReadInt32();
              break;
            }
            case 88: {
              ChangeNumber = input.ReadInt32();
              break;
            }
            case 96: {
              OwnerId = input.ReadUInt32();
              break;
            }
            case 104: {
              InitialPeriod = input.ReadUInt32();
              break;
            }
            case 112: {
              InitialTimeUnit = input.ReadUInt32();
              break;
            }
            case 120: {
              RenewalPeriod = input.ReadUInt32();
              break;
            }
            case 128: {
              RenewalTimeUnit = input.ReadUInt32();
              break;
            }
            case 136: {
              AccessToken = input.ReadUInt64();
              break;
            }
            case 144: {
              MasterPackageId = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              PackageId = input.ReadUInt32();
              break;
            }
            case 21: {
              TimeCreated = input.ReadFixed32();
              break;
            }
            case 29: {
              TimeNextProcess = input.ReadFixed32();
              break;
            }
            case 32: {
              MinuteLimit = input.ReadInt32();
              break;
            }
            case 40: {
              MinutesUsed = input.ReadInt32();
              break;
            }
            case 48: {
              PaymentMethod = input.ReadUInt32();
              break;
            }
            case 56: {
              Flags = input.ReadUInt32();
              break;
            }
            case 66: {
              PurchaseCountryCode = input.ReadString();
              break;
            }
            case 72: {
              LicenseType = input.ReadUInt32();
              break;
            }
            case 80: {
              TerritoryCode = input.ReadInt32();
              break;
            }
            case 88: {
              ChangeNumber = input.ReadInt32();
              break;
            }
            case 96: {
              OwnerId = input.ReadUInt32();
              break;
            }
            case 104: {
              InitialPeriod = input.ReadUInt32();
              break;
            }
            case 112: {
              InitialTimeUnit = input.ReadUInt32();
              break;
            }
            case 120: {
              RenewalPeriod = input.ReadUInt32();
              break;
            }
            case 128: {
              RenewalTimeUnit = input.ReadUInt32();
              break;
            }
            case 136: {
              AccessToken = input.ReadUInt64();
              break;
            }
            case 144: {
              MasterPackageId = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgClientIsLimitedAccount : pb::IMessage<CMsgClientIsLimitedAccount>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientIsLimitedAccount> _parser = new pb::MessageParser<CMsgClientIsLimitedAccount>(() => new CMsgClientIsLimitedAccount());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientIsLimitedAccount> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientIsLimitedAccount() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientIsLimitedAccount(CMsgClientIsLimitedAccount other) : this() {
    _hasBits0 = other._hasBits0;
    bisLimitedAccount_ = other.bisLimitedAccount_;
    bisCommunityBanned_ = other.bisCommunityBanned_;
    bisLockedAccount_ = other.bisLockedAccount_;
    bisLimitedAccountAllowedToInviteFriends_ = other.bisLimitedAccountAllowedToInviteFriends_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientIsLimitedAccount Clone() {
    return new CMsgClientIsLimitedAccount(this);
  }

  /// <summary>Field number for the "bis_limited_account" field.</summary>
  public const int BisLimitedAccountFieldNumber = 1;
  private readonly static bool BisLimitedAccountDefaultValue = false;

  private bool bisLimitedAccount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BisLimitedAccount {
    get { if ((_hasBits0 & 1) != 0) { return bisLimitedAccount_; } else { return BisLimitedAccountDefaultValue; } }
    set {
      _hasBits0 |= 1;
      bisLimitedAccount_ = value;
    }
  }
  /// <summary>Gets whether the "bis_limited_account" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBisLimitedAccount {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "bis_limited_account" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBisLimitedAccount() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "bis_community_banned" field.</summary>
  public const int BisCommunityBannedFieldNumber = 2;
  private readonly static bool BisCommunityBannedDefaultValue = false;

  private bool bisCommunityBanned_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BisCommunityBanned {
    get { if ((_hasBits0 & 2) != 0) { return bisCommunityBanned_; } else { return BisCommunityBannedDefaultValue; } }
    set {
      _hasBits0 |= 2;
      bisCommunityBanned_ = value;
    }
  }
  /// <summary>Gets whether the "bis_community_banned" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBisCommunityBanned {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "bis_community_banned" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBisCommunityBanned() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "bis_locked_account" field.</summary>
  public const int BisLockedAccountFieldNumber = 3;
  private readonly static bool BisLockedAccountDefaultValue = false;

  private bool bisLockedAccount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BisLockedAccount {
    get { if ((_hasBits0 & 4) != 0) { return bisLockedAccount_; } else { return BisLockedAccountDefaultValue; } }
    set {
      _hasBits0 |= 4;
      bisLockedAccount_ = value;
    }
  }
  /// <summary>Gets whether the "bis_locked_account" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBisLockedAccount {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "bis_locked_account" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBisLockedAccount() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "bis_limited_account_allowed_to_invite_friends" field.</summary>
  public const int BisLimitedAccountAllowedToInviteFriendsFieldNumber = 4;
  private readonly static bool BisLimitedAccountAllowedToInviteFriendsDefaultValue = false;

  private bool bisLimitedAccountAllowedToInviteFriends_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BisLimitedAccountAllowedToInviteFriends {
    get { if ((_hasBits0 & 8) != 0) { return bisLimitedAccountAllowedToInviteFriends_; } else { return BisLimitedAccountAllowedToInviteFriendsDefaultValue; } }
    set {
      _hasBits0 |= 8;
      bisLimitedAccountAllowedToInviteFriends_ = value;
    }
  }
  /// <summary>Gets whether the "bis_limited_account_allowed_to_invite_friends" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBisLimitedAccountAllowedToInviteFriends {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "bis_limited_account_allowed_to_invite_friends" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBisLimitedAccountAllowedToInviteFriends() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientIsLimitedAccount);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientIsLimitedAccount other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BisLimitedAccount != other.BisLimitedAccount) return false;
    if (BisCommunityBanned != other.BisCommunityBanned) return false;
    if (BisLockedAccount != other.BisLockedAccount) return false;
    if (BisLimitedAccountAllowedToInviteFriends != other.BisLimitedAccountAllowedToInviteFriends) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasBisLimitedAccount) hash ^= BisLimitedAccount.GetHashCode();
    if (HasBisCommunityBanned) hash ^= BisCommunityBanned.GetHashCode();
    if (HasBisLockedAccount) hash ^= BisLockedAccount.GetHashCode();
    if (HasBisLimitedAccountAllowedToInviteFriends) hash ^= BisLimitedAccountAllowedToInviteFriends.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasBisLimitedAccount) {
      output.WriteRawTag(8);
      output.WriteBool(BisLimitedAccount);
    }
    if (HasBisCommunityBanned) {
      output.WriteRawTag(16);
      output.WriteBool(BisCommunityBanned);
    }
    if (HasBisLockedAccount) {
      output.WriteRawTag(24);
      output.WriteBool(BisLockedAccount);
    }
    if (HasBisLimitedAccountAllowedToInviteFriends) {
      output.WriteRawTag(32);
      output.WriteBool(BisLimitedAccountAllowedToInviteFriends);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasBisLimitedAccount) {
      output.WriteRawTag(8);
      output.WriteBool(BisLimitedAccount);
    }
    if (HasBisCommunityBanned) {
      output.WriteRawTag(16);
      output.WriteBool(BisCommunityBanned);
    }
    if (HasBisLockedAccount) {
      output.WriteRawTag(24);
      output.WriteBool(BisLockedAccount);
    }
    if (HasBisLimitedAccountAllowedToInviteFriends) {
      output.WriteRawTag(32);
      output.WriteBool(BisLimitedAccountAllowedToInviteFriends);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasBisLimitedAccount) {
      size += 1 + 1;
    }
    if (HasBisCommunityBanned) {
      size += 1 + 1;
    }
    if (HasBisLockedAccount) {
      size += 1 + 1;
    }
    if (HasBisLimitedAccountAllowedToInviteFriends) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientIsLimitedAccount other) {
    if (other == null) {
      return;
    }
    if (other.HasBisLimitedAccount) {
      BisLimitedAccount = other.BisLimitedAccount;
    }
    if (other.HasBisCommunityBanned) {
      BisCommunityBanned = other.BisCommunityBanned;
    }
    if (other.HasBisLockedAccount) {
      BisLockedAccount = other.BisLockedAccount;
    }
    if (other.HasBisLimitedAccountAllowedToInviteFriends) {
      BisLimitedAccountAllowedToInviteFriends = other.BisLimitedAccountAllowedToInviteFriends;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          BisLimitedAccount = input.ReadBool();
          break;
        }
        case 16: {
          BisCommunityBanned = input.ReadBool();
          break;
        }
        case 24: {
          BisLockedAccount = input.ReadBool();
          break;
        }
        case 32: {
          BisLimitedAccountAllowedToInviteFriends = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          BisLimitedAccount = input.ReadBool();
          break;
        }
        case 16: {
          BisCommunityBanned = input.ReadBool();
          break;
        }
        case 24: {
          BisLockedAccount = input.ReadBool();
          break;
        }
        case 32: {
          BisLimitedAccountAllowedToInviteFriends = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientRequestedClientStats : pb::IMessage<CMsgClientRequestedClientStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientRequestedClientStats> _parser = new pb::MessageParser<CMsgClientRequestedClientStats>(() => new CMsgClientRequestedClientStats());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientRequestedClientStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestedClientStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestedClientStats(CMsgClientRequestedClientStats other) : this() {
    statsToSend_ = other.statsToSend_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestedClientStats Clone() {
    return new CMsgClientRequestedClientStats(this);
  }

  /// <summary>Field number for the "stats_to_send" field.</summary>
  public const int StatsToSendFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgClientRequestedClientStats.Types.StatsToSend> _repeated_statsToSend_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgClientRequestedClientStats.Types.StatsToSend.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientRequestedClientStats.Types.StatsToSend> statsToSend_ = new pbc::RepeatedField<global::CMsgClientRequestedClientStats.Types.StatsToSend>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientRequestedClientStats.Types.StatsToSend> StatsToSend {
    get { return statsToSend_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientRequestedClientStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientRequestedClientStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!statsToSend_.Equals(other.statsToSend_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= statsToSend_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    statsToSend_.WriteTo(output, _repeated_statsToSend_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    statsToSend_.WriteTo(ref output, _repeated_statsToSend_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += statsToSend_.CalculateSize(_repeated_statsToSend_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientRequestedClientStats other) {
    if (other == null) {
      return;
    }
    statsToSend_.Add(other.statsToSend_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          statsToSend_.AddEntriesFrom(input, _repeated_statsToSend_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          statsToSend_.AddEntriesFrom(ref input, _repeated_statsToSend_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientRequestedClientStats message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class StatsToSend : pb::IMessage<StatsToSend>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<StatsToSend> _parser = new pb::MessageParser<StatsToSend>(() => new StatsToSend());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<StatsToSend> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientRequestedClientStats.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public StatsToSend() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public StatsToSend(StatsToSend other) : this() {
        _hasBits0 = other._hasBits0;
        clientStat_ = other.clientStat_;
        statAggregateMethod_ = other.statAggregateMethod_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public StatsToSend Clone() {
        return new StatsToSend(this);
      }

      /// <summary>Field number for the "client_stat" field.</summary>
      public const int ClientStatFieldNumber = 1;
      private readonly static uint ClientStatDefaultValue = 0;

      private uint clientStat_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ClientStat {
        get { if ((_hasBits0 & 1) != 0) { return clientStat_; } else { return ClientStatDefaultValue; } }
        set {
          _hasBits0 |= 1;
          clientStat_ = value;
        }
      }
      /// <summary>Gets whether the "client_stat" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasClientStat {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "client_stat" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearClientStat() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "stat_aggregate_method" field.</summary>
      public const int StatAggregateMethodFieldNumber = 2;
      private readonly static uint StatAggregateMethodDefaultValue = 0;

      private uint statAggregateMethod_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint StatAggregateMethod {
        get { if ((_hasBits0 & 2) != 0) { return statAggregateMethod_; } else { return StatAggregateMethodDefaultValue; } }
        set {
          _hasBits0 |= 2;
          statAggregateMethod_ = value;
        }
      }
      /// <summary>Gets whether the "stat_aggregate_method" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasStatAggregateMethod {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "stat_aggregate_method" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearStatAggregateMethod() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as StatsToSend);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(StatsToSend other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ClientStat != other.ClientStat) return false;
        if (StatAggregateMethod != other.StatAggregateMethod) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasClientStat) hash ^= ClientStat.GetHashCode();
        if (HasStatAggregateMethod) hash ^= StatAggregateMethod.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasClientStat) {
          output.WriteRawTag(8);
          output.WriteUInt32(ClientStat);
        }
        if (HasStatAggregateMethod) {
          output.WriteRawTag(16);
          output.WriteUInt32(StatAggregateMethod);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasClientStat) {
          output.WriteRawTag(8);
          output.WriteUInt32(ClientStat);
        }
        if (HasStatAggregateMethod) {
          output.WriteRawTag(16);
          output.WriteUInt32(StatAggregateMethod);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasClientStat) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientStat);
        }
        if (HasStatAggregateMethod) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatAggregateMethod);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(StatsToSend other) {
        if (other == null) {
          return;
        }
        if (other.HasClientStat) {
          ClientStat = other.ClientStat;
        }
        if (other.HasStatAggregateMethod) {
          StatAggregateMethod = other.StatAggregateMethod;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ClientStat = input.ReadUInt32();
              break;
            }
            case 16: {
              StatAggregateMethod = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ClientStat = input.ReadUInt32();
              break;
            }
            case 16: {
              StatAggregateMethod = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgClientStat2 : pb::IMessage<CMsgClientStat2>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientStat2> _parser = new pb::MessageParser<CMsgClientStat2>(() => new CMsgClientStat2());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientStat2> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientStat2() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientStat2(CMsgClientStat2 other) : this() {
    statDetail_ = other.statDetail_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientStat2 Clone() {
    return new CMsgClientStat2(this);
  }

  /// <summary>Field number for the "stat_detail" field.</summary>
  public const int StatDetailFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgClientStat2.Types.StatDetail> _repeated_statDetail_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgClientStat2.Types.StatDetail.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientStat2.Types.StatDetail> statDetail_ = new pbc::RepeatedField<global::CMsgClientStat2.Types.StatDetail>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientStat2.Types.StatDetail> StatDetail {
    get { return statDetail_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientStat2);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientStat2 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!statDetail_.Equals(other.statDetail_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= statDetail_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    statDetail_.WriteTo(output, _repeated_statDetail_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    statDetail_.WriteTo(ref output, _repeated_statDetail_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += statDetail_.CalculateSize(_repeated_statDetail_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientStat2 other) {
    if (other == null) {
      return;
    }
    statDetail_.Add(other.statDetail_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          statDetail_.AddEntriesFrom(input, _repeated_statDetail_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          statDetail_.AddEntriesFrom(ref input, _repeated_statDetail_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientStat2 message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class StatDetail : pb::IMessage<StatDetail>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<StatDetail> _parser = new pb::MessageParser<StatDetail>(() => new StatDetail());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<StatDetail> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientStat2.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public StatDetail() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public StatDetail(StatDetail other) : this() {
        _hasBits0 = other._hasBits0;
        clientStat_ = other.clientStat_;
        llValue_ = other.llValue_;
        timeOfDay_ = other.timeOfDay_;
        cellId_ = other.cellId_;
        depotId_ = other.depotId_;
        appId_ = other.appId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public StatDetail Clone() {
        return new StatDetail(this);
      }

      /// <summary>Field number for the "client_stat" field.</summary>
      public const int ClientStatFieldNumber = 1;
      private readonly static uint ClientStatDefaultValue = 0;

      private uint clientStat_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ClientStat {
        get { if ((_hasBits0 & 1) != 0) { return clientStat_; } else { return ClientStatDefaultValue; } }
        set {
          _hasBits0 |= 1;
          clientStat_ = value;
        }
      }
      /// <summary>Gets whether the "client_stat" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasClientStat {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "client_stat" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearClientStat() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "ll_value" field.</summary>
      public const int LlValueFieldNumber = 2;
      private readonly static long LlValueDefaultValue = 0L;

      private long llValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public long LlValue {
        get { if ((_hasBits0 & 2) != 0) { return llValue_; } else { return LlValueDefaultValue; } }
        set {
          _hasBits0 |= 2;
          llValue_ = value;
        }
      }
      /// <summary>Gets whether the "ll_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLlValue {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "ll_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLlValue() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "time_of_day" field.</summary>
      public const int TimeOfDayFieldNumber = 3;
      private readonly static uint TimeOfDayDefaultValue = 0;

      private uint timeOfDay_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeOfDay {
        get { if ((_hasBits0 & 4) != 0) { return timeOfDay_; } else { return TimeOfDayDefaultValue; } }
        set {
          _hasBits0 |= 4;
          timeOfDay_ = value;
        }
      }
      /// <summary>Gets whether the "time_of_day" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeOfDay {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "time_of_day" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeOfDay() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "cell_id" field.</summary>
      public const int CellIdFieldNumber = 4;
      private readonly static uint CellIdDefaultValue = 0;

      private uint cellId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CellId {
        get { if ((_hasBits0 & 8) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
        set {
          _hasBits0 |= 8;
          cellId_ = value;
        }
      }
      /// <summary>Gets whether the "cell_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCellId {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "cell_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCellId() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "depot_id" field.</summary>
      public const int DepotIdFieldNumber = 5;
      private readonly static uint DepotIdDefaultValue = 0;

      private uint depotId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DepotId {
        get { if ((_hasBits0 & 16) != 0) { return depotId_; } else { return DepotIdDefaultValue; } }
        set {
          _hasBits0 |= 16;
          depotId_ = value;
        }
      }
      /// <summary>Gets whether the "depot_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDepotId {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "depot_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDepotId() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "app_id" field.</summary>
      public const int AppIdFieldNumber = 6;
      private readonly static uint AppIdDefaultValue = 0;

      private uint appId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AppId {
        get { if ((_hasBits0 & 32) != 0) { return appId_; } else { return AppIdDefaultValue; } }
        set {
          _hasBits0 |= 32;
          appId_ = value;
        }
      }
      /// <summary>Gets whether the "app_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAppId {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "app_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAppId() {
        _hasBits0 &= ~32;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as StatDetail);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(StatDetail other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ClientStat != other.ClientStat) return false;
        if (LlValue != other.LlValue) return false;
        if (TimeOfDay != other.TimeOfDay) return false;
        if (CellId != other.CellId) return false;
        if (DepotId != other.DepotId) return false;
        if (AppId != other.AppId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasClientStat) hash ^= ClientStat.GetHashCode();
        if (HasLlValue) hash ^= LlValue.GetHashCode();
        if (HasTimeOfDay) hash ^= TimeOfDay.GetHashCode();
        if (HasCellId) hash ^= CellId.GetHashCode();
        if (HasDepotId) hash ^= DepotId.GetHashCode();
        if (HasAppId) hash ^= AppId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasClientStat) {
          output.WriteRawTag(8);
          output.WriteUInt32(ClientStat);
        }
        if (HasLlValue) {
          output.WriteRawTag(16);
          output.WriteInt64(LlValue);
        }
        if (HasTimeOfDay) {
          output.WriteRawTag(24);
          output.WriteUInt32(TimeOfDay);
        }
        if (HasCellId) {
          output.WriteRawTag(32);
          output.WriteUInt32(CellId);
        }
        if (HasDepotId) {
          output.WriteRawTag(40);
          output.WriteUInt32(DepotId);
        }
        if (HasAppId) {
          output.WriteRawTag(48);
          output.WriteUInt32(AppId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasClientStat) {
          output.WriteRawTag(8);
          output.WriteUInt32(ClientStat);
        }
        if (HasLlValue) {
          output.WriteRawTag(16);
          output.WriteInt64(LlValue);
        }
        if (HasTimeOfDay) {
          output.WriteRawTag(24);
          output.WriteUInt32(TimeOfDay);
        }
        if (HasCellId) {
          output.WriteRawTag(32);
          output.WriteUInt32(CellId);
        }
        if (HasDepotId) {
          output.WriteRawTag(40);
          output.WriteUInt32(DepotId);
        }
        if (HasAppId) {
          output.WriteRawTag(48);
          output.WriteUInt32(AppId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasClientStat) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientStat);
        }
        if (HasLlValue) {
          size += 1 + pb::CodedOutputStream.ComputeInt64Size(LlValue);
        }
        if (HasTimeOfDay) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeOfDay);
        }
        if (HasCellId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
        }
        if (HasDepotId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DepotId);
        }
        if (HasAppId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(StatDetail other) {
        if (other == null) {
          return;
        }
        if (other.HasClientStat) {
          ClientStat = other.ClientStat;
        }
        if (other.HasLlValue) {
          LlValue = other.LlValue;
        }
        if (other.HasTimeOfDay) {
          TimeOfDay = other.TimeOfDay;
        }
        if (other.HasCellId) {
          CellId = other.CellId;
        }
        if (other.HasDepotId) {
          DepotId = other.DepotId;
        }
        if (other.HasAppId) {
          AppId = other.AppId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ClientStat = input.ReadUInt32();
              break;
            }
            case 16: {
              LlValue = input.ReadInt64();
              break;
            }
            case 24: {
              TimeOfDay = input.ReadUInt32();
              break;
            }
            case 32: {
              CellId = input.ReadUInt32();
              break;
            }
            case 40: {
              DepotId = input.ReadUInt32();
              break;
            }
            case 48: {
              AppId = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ClientStat = input.ReadUInt32();
              break;
            }
            case 16: {
              LlValue = input.ReadInt64();
              break;
            }
            case 24: {
              TimeOfDay = input.ReadUInt32();
              break;
            }
            case 32: {
              CellId = input.ReadUInt32();
              break;
            }
            case 40: {
              DepotId = input.ReadUInt32();
              break;
            }
            case 48: {
              AppId = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgClientInviteToGame : pb::IMessage<CMsgClientInviteToGame>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientInviteToGame> _parser = new pb::MessageParser<CMsgClientInviteToGame>(() => new CMsgClientInviteToGame());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientInviteToGame> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientInviteToGame() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientInviteToGame(CMsgClientInviteToGame other) : this() {
    _hasBits0 = other._hasBits0;
    steamIdDest_ = other.steamIdDest_;
    steamIdSrc_ = other.steamIdSrc_;
    connectString_ = other.connectString_;
    remotePlay_ = other.remotePlay_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientInviteToGame Clone() {
    return new CMsgClientInviteToGame(this);
  }

  /// <summary>Field number for the "steam_id_dest" field.</summary>
  public const int SteamIdDestFieldNumber = 1;
  private readonly static ulong SteamIdDestDefaultValue = 0UL;

  private ulong steamIdDest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdDest {
    get { if ((_hasBits0 & 1) != 0) { return steamIdDest_; } else { return SteamIdDestDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamIdDest_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_dest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdDest {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_dest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdDest() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steam_id_src" field.</summary>
  public const int SteamIdSrcFieldNumber = 2;
  private readonly static ulong SteamIdSrcDefaultValue = 0UL;

  private ulong steamIdSrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdSrc {
    get { if ((_hasBits0 & 2) != 0) { return steamIdSrc_; } else { return SteamIdSrcDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamIdSrc_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_src" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdSrc {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_src" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdSrc() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "connect_string" field.</summary>
  public const int ConnectStringFieldNumber = 3;
  private readonly static string ConnectStringDefaultValue = "";

  private string connectString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ConnectString {
    get { return connectString_ ?? ConnectStringDefaultValue; }
    set {
      connectString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "connect_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasConnectString {
    get { return connectString_ != null; }
  }
  /// <summary>Clears the value of the "connect_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearConnectString() {
    connectString_ = null;
  }

  /// <summary>Field number for the "remote_play" field.</summary>
  public const int RemotePlayFieldNumber = 4;
  private readonly static string RemotePlayDefaultValue = "";

  private string remotePlay_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string RemotePlay {
    get { return remotePlay_ ?? RemotePlayDefaultValue; }
    set {
      remotePlay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "remote_play" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRemotePlay {
    get { return remotePlay_ != null; }
  }
  /// <summary>Clears the value of the "remote_play" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRemotePlay() {
    remotePlay_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientInviteToGame);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientInviteToGame other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamIdDest != other.SteamIdDest) return false;
    if (SteamIdSrc != other.SteamIdSrc) return false;
    if (ConnectString != other.ConnectString) return false;
    if (RemotePlay != other.RemotePlay) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamIdDest) hash ^= SteamIdDest.GetHashCode();
    if (HasSteamIdSrc) hash ^= SteamIdSrc.GetHashCode();
    if (HasConnectString) hash ^= ConnectString.GetHashCode();
    if (HasRemotePlay) hash ^= RemotePlay.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamIdDest) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdDest);
    }
    if (HasSteamIdSrc) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdSrc);
    }
    if (HasConnectString) {
      output.WriteRawTag(26);
      output.WriteString(ConnectString);
    }
    if (HasRemotePlay) {
      output.WriteRawTag(34);
      output.WriteString(RemotePlay);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamIdDest) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdDest);
    }
    if (HasSteamIdSrc) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdSrc);
    }
    if (HasConnectString) {
      output.WriteRawTag(26);
      output.WriteString(ConnectString);
    }
    if (HasRemotePlay) {
      output.WriteRawTag(34);
      output.WriteString(RemotePlay);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamIdDest) {
      size += 1 + 8;
    }
    if (HasSteamIdSrc) {
      size += 1 + 8;
    }
    if (HasConnectString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectString);
    }
    if (HasRemotePlay) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RemotePlay);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientInviteToGame other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamIdDest) {
      SteamIdDest = other.SteamIdDest;
    }
    if (other.HasSteamIdSrc) {
      SteamIdSrc = other.SteamIdSrc;
    }
    if (other.HasConnectString) {
      ConnectString = other.ConnectString;
    }
    if (other.HasRemotePlay) {
      RemotePlay = other.RemotePlay;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamIdDest = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdSrc = input.ReadFixed64();
          break;
        }
        case 26: {
          ConnectString = input.ReadString();
          break;
        }
        case 34: {
          RemotePlay = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamIdDest = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdSrc = input.ReadFixed64();
          break;
        }
        case 26: {
          ConnectString = input.ReadString();
          break;
        }
        case 34: {
          RemotePlay = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientChatInvite : pb::IMessage<CMsgClientChatInvite>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientChatInvite> _parser = new pb::MessageParser<CMsgClientChatInvite>(() => new CMsgClientChatInvite());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientChatInvite> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChatInvite() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChatInvite(CMsgClientChatInvite other) : this() {
    _hasBits0 = other._hasBits0;
    steamIdInvited_ = other.steamIdInvited_;
    steamIdChat_ = other.steamIdChat_;
    steamIdPatron_ = other.steamIdPatron_;
    chatroomType_ = other.chatroomType_;
    steamIdFriendChat_ = other.steamIdFriendChat_;
    chatName_ = other.chatName_;
    gameId_ = other.gameId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChatInvite Clone() {
    return new CMsgClientChatInvite(this);
  }

  /// <summary>Field number for the "steam_id_invited" field.</summary>
  public const int SteamIdInvitedFieldNumber = 1;
  private readonly static ulong SteamIdInvitedDefaultValue = 0UL;

  private ulong steamIdInvited_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdInvited {
    get { if ((_hasBits0 & 1) != 0) { return steamIdInvited_; } else { return SteamIdInvitedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamIdInvited_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_invited" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdInvited {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_invited" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdInvited() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steam_id_chat" field.</summary>
  public const int SteamIdChatFieldNumber = 2;
  private readonly static ulong SteamIdChatDefaultValue = 0UL;

  private ulong steamIdChat_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdChat {
    get { if ((_hasBits0 & 2) != 0) { return steamIdChat_; } else { return SteamIdChatDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamIdChat_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_chat" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdChat {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_chat" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdChat() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "steam_id_patron" field.</summary>
  public const int SteamIdPatronFieldNumber = 3;
  private readonly static ulong SteamIdPatronDefaultValue = 0UL;

  private ulong steamIdPatron_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdPatron {
    get { if ((_hasBits0 & 4) != 0) { return steamIdPatron_; } else { return SteamIdPatronDefaultValue; } }
    set {
      _hasBits0 |= 4;
      steamIdPatron_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_patron" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdPatron {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_patron" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdPatron() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "chatroom_type" field.</summary>
  public const int ChatroomTypeFieldNumber = 4;
  private readonly static int ChatroomTypeDefaultValue = 0;

  private int chatroomType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ChatroomType {
    get { if ((_hasBits0 & 8) != 0) { return chatroomType_; } else { return ChatroomTypeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      chatroomType_ = value;
    }
  }
  /// <summary>Gets whether the "chatroom_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChatroomType {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "chatroom_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChatroomType() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "steam_id_friend_chat" field.</summary>
  public const int SteamIdFriendChatFieldNumber = 5;
  private readonly static ulong SteamIdFriendChatDefaultValue = 0UL;

  private ulong steamIdFriendChat_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamIdFriendChat {
    get { if ((_hasBits0 & 16) != 0) { return steamIdFriendChat_; } else { return SteamIdFriendChatDefaultValue; } }
    set {
      _hasBits0 |= 16;
      steamIdFriendChat_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id_friend_chat" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamIdFriendChat {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "steam_id_friend_chat" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamIdFriendChat() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "chat_name" field.</summary>
  public const int ChatNameFieldNumber = 6;
  private readonly static string ChatNameDefaultValue = "";

  private string chatName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ChatName {
    get { return chatName_ ?? ChatNameDefaultValue; }
    set {
      chatName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "chat_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChatName {
    get { return chatName_ != null; }
  }
  /// <summary>Clears the value of the "chat_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChatName() {
    chatName_ = null;
  }

  /// <summary>Field number for the "game_id" field.</summary>
  public const int GameIdFieldNumber = 7;
  private readonly static ulong GameIdDefaultValue = 0UL;

  private ulong gameId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong GameId {
    get { if ((_hasBits0 & 32) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
    set {
      _hasBits0 |= 32;
      gameId_ = value;
    }
  }
  /// <summary>Gets whether the "game_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameId {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "game_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameId() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientChatInvite);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientChatInvite other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamIdInvited != other.SteamIdInvited) return false;
    if (SteamIdChat != other.SteamIdChat) return false;
    if (SteamIdPatron != other.SteamIdPatron) return false;
    if (ChatroomType != other.ChatroomType) return false;
    if (SteamIdFriendChat != other.SteamIdFriendChat) return false;
    if (ChatName != other.ChatName) return false;
    if (GameId != other.GameId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamIdInvited) hash ^= SteamIdInvited.GetHashCode();
    if (HasSteamIdChat) hash ^= SteamIdChat.GetHashCode();
    if (HasSteamIdPatron) hash ^= SteamIdPatron.GetHashCode();
    if (HasChatroomType) hash ^= ChatroomType.GetHashCode();
    if (HasSteamIdFriendChat) hash ^= SteamIdFriendChat.GetHashCode();
    if (HasChatName) hash ^= ChatName.GetHashCode();
    if (HasGameId) hash ^= GameId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamIdInvited) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdInvited);
    }
    if (HasSteamIdChat) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdChat);
    }
    if (HasSteamIdPatron) {
      output.WriteRawTag(25);
      output.WriteFixed64(SteamIdPatron);
    }
    if (HasChatroomType) {
      output.WriteRawTag(32);
      output.WriteInt32(ChatroomType);
    }
    if (HasSteamIdFriendChat) {
      output.WriteRawTag(41);
      output.WriteFixed64(SteamIdFriendChat);
    }
    if (HasChatName) {
      output.WriteRawTag(50);
      output.WriteString(ChatName);
    }
    if (HasGameId) {
      output.WriteRawTag(57);
      output.WriteFixed64(GameId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamIdInvited) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamIdInvited);
    }
    if (HasSteamIdChat) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamIdChat);
    }
    if (HasSteamIdPatron) {
      output.WriteRawTag(25);
      output.WriteFixed64(SteamIdPatron);
    }
    if (HasChatroomType) {
      output.WriteRawTag(32);
      output.WriteInt32(ChatroomType);
    }
    if (HasSteamIdFriendChat) {
      output.WriteRawTag(41);
      output.WriteFixed64(SteamIdFriendChat);
    }
    if (HasChatName) {
      output.WriteRawTag(50);
      output.WriteString(ChatName);
    }
    if (HasGameId) {
      output.WriteRawTag(57);
      output.WriteFixed64(GameId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamIdInvited) {
      size += 1 + 8;
    }
    if (HasSteamIdChat) {
      size += 1 + 8;
    }
    if (HasSteamIdPatron) {
      size += 1 + 8;
    }
    if (HasChatroomType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChatroomType);
    }
    if (HasSteamIdFriendChat) {
      size += 1 + 8;
    }
    if (HasChatName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ChatName);
    }
    if (HasGameId) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientChatInvite other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamIdInvited) {
      SteamIdInvited = other.SteamIdInvited;
    }
    if (other.HasSteamIdChat) {
      SteamIdChat = other.SteamIdChat;
    }
    if (other.HasSteamIdPatron) {
      SteamIdPatron = other.SteamIdPatron;
    }
    if (other.HasChatroomType) {
      ChatroomType = other.ChatroomType;
    }
    if (other.HasSteamIdFriendChat) {
      SteamIdFriendChat = other.SteamIdFriendChat;
    }
    if (other.HasChatName) {
      ChatName = other.ChatName;
    }
    if (other.HasGameId) {
      GameId = other.GameId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamIdInvited = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdChat = input.ReadFixed64();
          break;
        }
        case 25: {
          SteamIdPatron = input.ReadFixed64();
          break;
        }
        case 32: {
          ChatroomType = input.ReadInt32();
          break;
        }
        case 41: {
          SteamIdFriendChat = input.ReadFixed64();
          break;
        }
        case 50: {
          ChatName = input.ReadString();
          break;
        }
        case 57: {
          GameId = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamIdInvited = input.ReadFixed64();
          break;
        }
        case 17: {
          SteamIdChat = input.ReadFixed64();
          break;
        }
        case 25: {
          SteamIdPatron = input.ReadFixed64();
          break;
        }
        case 32: {
          ChatroomType = input.ReadInt32();
          break;
        }
        case 41: {
          SteamIdFriendChat = input.ReadFixed64();
          break;
        }
        case 50: {
          ChatName = input.ReadString();
          break;
        }
        case 57: {
          GameId = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientConnectionStats : pb::IMessage<CMsgClientConnectionStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientConnectionStats> _parser = new pb::MessageParser<CMsgClientConnectionStats>(() => new CMsgClientConnectionStats());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientConnectionStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientConnectionStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientConnectionStats(CMsgClientConnectionStats other) : this() {
    statsLogon_ = other.statsLogon_ != null ? other.statsLogon_.Clone() : null;
    statsVconn_ = other.statsVconn_ != null ? other.statsVconn_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientConnectionStats Clone() {
    return new CMsgClientConnectionStats(this);
  }

  /// <summary>Field number for the "stats_logon" field.</summary>
  public const int StatsLogonFieldNumber = 1;
  private global::CMsgClientConnectionStats.Types.Stats_Logon statsLogon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgClientConnectionStats.Types.Stats_Logon StatsLogon {
    get { return statsLogon_; }
    set {
      statsLogon_ = value;
    }
  }

  /// <summary>Field number for the "stats_vconn" field.</summary>
  public const int StatsVconnFieldNumber = 2;
  private global::CMsgClientConnectionStats.Types.Stats_VConn statsVconn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgClientConnectionStats.Types.Stats_VConn StatsVconn {
    get { return statsVconn_; }
    set {
      statsVconn_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientConnectionStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientConnectionStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(StatsLogon, other.StatsLogon)) return false;
    if (!object.Equals(StatsVconn, other.StatsVconn)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (statsLogon_ != null) hash ^= StatsLogon.GetHashCode();
    if (statsVconn_ != null) hash ^= StatsVconn.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (statsLogon_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StatsLogon);
    }
    if (statsVconn_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(StatsVconn);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (statsLogon_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(StatsLogon);
    }
    if (statsVconn_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(StatsVconn);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (statsLogon_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatsLogon);
    }
    if (statsVconn_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatsVconn);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientConnectionStats other) {
    if (other == null) {
      return;
    }
    if (other.statsLogon_ != null) {
      if (statsLogon_ == null) {
        StatsLogon = new global::CMsgClientConnectionStats.Types.Stats_Logon();
      }
      StatsLogon.MergeFrom(other.StatsLogon);
    }
    if (other.statsVconn_ != null) {
      if (statsVconn_ == null) {
        StatsVconn = new global::CMsgClientConnectionStats.Types.Stats_VConn();
      }
      StatsVconn.MergeFrom(other.StatsVconn);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (statsLogon_ == null) {
            StatsLogon = new global::CMsgClientConnectionStats.Types.Stats_Logon();
          }
          input.ReadMessage(StatsLogon);
          break;
        }
        case 18: {
          if (statsVconn_ == null) {
            StatsVconn = new global::CMsgClientConnectionStats.Types.Stats_VConn();
          }
          input.ReadMessage(StatsVconn);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (statsLogon_ == null) {
            StatsLogon = new global::CMsgClientConnectionStats.Types.Stats_Logon();
          }
          input.ReadMessage(StatsLogon);
          break;
        }
        case 18: {
          if (statsVconn_ == null) {
            StatsVconn = new global::CMsgClientConnectionStats.Types.Stats_VConn();
          }
          input.ReadMessage(StatsVconn);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientConnectionStats message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Stats_Logon : pb::IMessage<Stats_Logon>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Stats_Logon> _parser = new pb::MessageParser<Stats_Logon>(() => new Stats_Logon());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Stats_Logon> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientConnectionStats.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_Logon() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_Logon(Stats_Logon other) : this() {
        _hasBits0 = other._hasBits0;
        connectAttempts_ = other.connectAttempts_;
        connectSuccesses_ = other.connectSuccesses_;
        connectFailures_ = other.connectFailures_;
        connectionsDropped_ = other.connectionsDropped_;
        secondsRunning_ = other.secondsRunning_;
        msecTologonthistime_ = other.msecTologonthistime_;
        countBadCms_ = other.countBadCms_;
        noUdpConnectivity_ = other.noUdpConnectivity_;
        noTcpConnectivity_ = other.noTcpConnectivity_;
        noWebsocket443Connectivity_ = other.noWebsocket443Connectivity_;
        noWebsocketNon443Connectivity_ = other.noWebsocketNon443Connectivity_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_Logon Clone() {
        return new Stats_Logon(this);
      }

      /// <summary>Field number for the "connect_attempts" field.</summary>
      public const int ConnectAttemptsFieldNumber = 1;
      private readonly static int ConnectAttemptsDefaultValue = 0;

      private int connectAttempts_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ConnectAttempts {
        get { if ((_hasBits0 & 1) != 0) { return connectAttempts_; } else { return ConnectAttemptsDefaultValue; } }
        set {
          _hasBits0 |= 1;
          connectAttempts_ = value;
        }
      }
      /// <summary>Gets whether the "connect_attempts" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasConnectAttempts {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "connect_attempts" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearConnectAttempts() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "connect_successes" field.</summary>
      public const int ConnectSuccessesFieldNumber = 2;
      private readonly static int ConnectSuccessesDefaultValue = 0;

      private int connectSuccesses_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ConnectSuccesses {
        get { if ((_hasBits0 & 2) != 0) { return connectSuccesses_; } else { return ConnectSuccessesDefaultValue; } }
        set {
          _hasBits0 |= 2;
          connectSuccesses_ = value;
        }
      }
      /// <summary>Gets whether the "connect_successes" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasConnectSuccesses {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "connect_successes" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearConnectSuccesses() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "connect_failures" field.</summary>
      public const int ConnectFailuresFieldNumber = 3;
      private readonly static int ConnectFailuresDefaultValue = 0;

      private int connectFailures_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ConnectFailures {
        get { if ((_hasBits0 & 4) != 0) { return connectFailures_; } else { return ConnectFailuresDefaultValue; } }
        set {
          _hasBits0 |= 4;
          connectFailures_ = value;
        }
      }
      /// <summary>Gets whether the "connect_failures" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasConnectFailures {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "connect_failures" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearConnectFailures() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "connections_dropped" field.</summary>
      public const int ConnectionsDroppedFieldNumber = 4;
      private readonly static int ConnectionsDroppedDefaultValue = 0;

      private int connectionsDropped_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ConnectionsDropped {
        get { if ((_hasBits0 & 8) != 0) { return connectionsDropped_; } else { return ConnectionsDroppedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          connectionsDropped_ = value;
        }
      }
      /// <summary>Gets whether the "connections_dropped" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasConnectionsDropped {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "connections_dropped" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearConnectionsDropped() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "seconds_running" field.</summary>
      public const int SecondsRunningFieldNumber = 5;
      private readonly static uint SecondsRunningDefaultValue = 0;

      private uint secondsRunning_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SecondsRunning {
        get { if ((_hasBits0 & 16) != 0) { return secondsRunning_; } else { return SecondsRunningDefaultValue; } }
        set {
          _hasBits0 |= 16;
          secondsRunning_ = value;
        }
      }
      /// <summary>Gets whether the "seconds_running" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSecondsRunning {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "seconds_running" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSecondsRunning() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "msec_tologonthistime" field.</summary>
      public const int MsecTologonthistimeFieldNumber = 6;
      private readonly static uint MsecTologonthistimeDefaultValue = 0;

      private uint msecTologonthistime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MsecTologonthistime {
        get { if ((_hasBits0 & 32) != 0) { return msecTologonthistime_; } else { return MsecTologonthistimeDefaultValue; } }
        set {
          _hasBits0 |= 32;
          msecTologonthistime_ = value;
        }
      }
      /// <summary>Gets whether the "msec_tologonthistime" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMsecTologonthistime {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "msec_tologonthistime" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMsecTologonthistime() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "count_bad_cms" field.</summary>
      public const int CountBadCmsFieldNumber = 7;
      private readonly static uint CountBadCmsDefaultValue = 0;

      private uint countBadCms_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CountBadCms {
        get { if ((_hasBits0 & 64) != 0) { return countBadCms_; } else { return CountBadCmsDefaultValue; } }
        set {
          _hasBits0 |= 64;
          countBadCms_ = value;
        }
      }
      /// <summary>Gets whether the "count_bad_cms" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCountBadCms {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "count_bad_cms" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCountBadCms() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "no_udp_connectivity" field.</summary>
      public const int NoUdpConnectivityFieldNumber = 8;
      private readonly static bool NoUdpConnectivityDefaultValue = false;

      private bool noUdpConnectivity_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool NoUdpConnectivity {
        get { if ((_hasBits0 & 128) != 0) { return noUdpConnectivity_; } else { return NoUdpConnectivityDefaultValue; } }
        set {
          _hasBits0 |= 128;
          noUdpConnectivity_ = value;
        }
      }
      /// <summary>Gets whether the "no_udp_connectivity" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNoUdpConnectivity {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "no_udp_connectivity" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNoUdpConnectivity() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "no_tcp_connectivity" field.</summary>
      public const int NoTcpConnectivityFieldNumber = 9;
      private readonly static bool NoTcpConnectivityDefaultValue = false;

      private bool noTcpConnectivity_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool NoTcpConnectivity {
        get { if ((_hasBits0 & 256) != 0) { return noTcpConnectivity_; } else { return NoTcpConnectivityDefaultValue; } }
        set {
          _hasBits0 |= 256;
          noTcpConnectivity_ = value;
        }
      }
      /// <summary>Gets whether the "no_tcp_connectivity" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNoTcpConnectivity {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "no_tcp_connectivity" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNoTcpConnectivity() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "no_websocket_443_connectivity" field.</summary>
      public const int NoWebsocket443ConnectivityFieldNumber = 10;
      private readonly static bool NoWebsocket443ConnectivityDefaultValue = false;

      private bool noWebsocket443Connectivity_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool NoWebsocket443Connectivity {
        get { if ((_hasBits0 & 512) != 0) { return noWebsocket443Connectivity_; } else { return NoWebsocket443ConnectivityDefaultValue; } }
        set {
          _hasBits0 |= 512;
          noWebsocket443Connectivity_ = value;
        }
      }
      /// <summary>Gets whether the "no_websocket_443_connectivity" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNoWebsocket443Connectivity {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "no_websocket_443_connectivity" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNoWebsocket443Connectivity() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "no_websocket_non_443_connectivity" field.</summary>
      public const int NoWebsocketNon443ConnectivityFieldNumber = 11;
      private readonly static bool NoWebsocketNon443ConnectivityDefaultValue = false;

      private bool noWebsocketNon443Connectivity_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool NoWebsocketNon443Connectivity {
        get { if ((_hasBits0 & 1024) != 0) { return noWebsocketNon443Connectivity_; } else { return NoWebsocketNon443ConnectivityDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          noWebsocketNon443Connectivity_ = value;
        }
      }
      /// <summary>Gets whether the "no_websocket_non_443_connectivity" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNoWebsocketNon443Connectivity {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "no_websocket_non_443_connectivity" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNoWebsocketNon443Connectivity() {
        _hasBits0 &= ~1024;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Stats_Logon);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Stats_Logon other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ConnectAttempts != other.ConnectAttempts) return false;
        if (ConnectSuccesses != other.ConnectSuccesses) return false;
        if (ConnectFailures != other.ConnectFailures) return false;
        if (ConnectionsDropped != other.ConnectionsDropped) return false;
        if (SecondsRunning != other.SecondsRunning) return false;
        if (MsecTologonthistime != other.MsecTologonthistime) return false;
        if (CountBadCms != other.CountBadCms) return false;
        if (NoUdpConnectivity != other.NoUdpConnectivity) return false;
        if (NoTcpConnectivity != other.NoTcpConnectivity) return false;
        if (NoWebsocket443Connectivity != other.NoWebsocket443Connectivity) return false;
        if (NoWebsocketNon443Connectivity != other.NoWebsocketNon443Connectivity) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasConnectAttempts) hash ^= ConnectAttempts.GetHashCode();
        if (HasConnectSuccesses) hash ^= ConnectSuccesses.GetHashCode();
        if (HasConnectFailures) hash ^= ConnectFailures.GetHashCode();
        if (HasConnectionsDropped) hash ^= ConnectionsDropped.GetHashCode();
        if (HasSecondsRunning) hash ^= SecondsRunning.GetHashCode();
        if (HasMsecTologonthistime) hash ^= MsecTologonthistime.GetHashCode();
        if (HasCountBadCms) hash ^= CountBadCms.GetHashCode();
        if (HasNoUdpConnectivity) hash ^= NoUdpConnectivity.GetHashCode();
        if (HasNoTcpConnectivity) hash ^= NoTcpConnectivity.GetHashCode();
        if (HasNoWebsocket443Connectivity) hash ^= NoWebsocket443Connectivity.GetHashCode();
        if (HasNoWebsocketNon443Connectivity) hash ^= NoWebsocketNon443Connectivity.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasConnectAttempts) {
          output.WriteRawTag(8);
          output.WriteInt32(ConnectAttempts);
        }
        if (HasConnectSuccesses) {
          output.WriteRawTag(16);
          output.WriteInt32(ConnectSuccesses);
        }
        if (HasConnectFailures) {
          output.WriteRawTag(24);
          output.WriteInt32(ConnectFailures);
        }
        if (HasConnectionsDropped) {
          output.WriteRawTag(32);
          output.WriteInt32(ConnectionsDropped);
        }
        if (HasSecondsRunning) {
          output.WriteRawTag(40);
          output.WriteUInt32(SecondsRunning);
        }
        if (HasMsecTologonthistime) {
          output.WriteRawTag(48);
          output.WriteUInt32(MsecTologonthistime);
        }
        if (HasCountBadCms) {
          output.WriteRawTag(56);
          output.WriteUInt32(CountBadCms);
        }
        if (HasNoUdpConnectivity) {
          output.WriteRawTag(64);
          output.WriteBool(NoUdpConnectivity);
        }
        if (HasNoTcpConnectivity) {
          output.WriteRawTag(72);
          output.WriteBool(NoTcpConnectivity);
        }
        if (HasNoWebsocket443Connectivity) {
          output.WriteRawTag(80);
          output.WriteBool(NoWebsocket443Connectivity);
        }
        if (HasNoWebsocketNon443Connectivity) {
          output.WriteRawTag(88);
          output.WriteBool(NoWebsocketNon443Connectivity);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasConnectAttempts) {
          output.WriteRawTag(8);
          output.WriteInt32(ConnectAttempts);
        }
        if (HasConnectSuccesses) {
          output.WriteRawTag(16);
          output.WriteInt32(ConnectSuccesses);
        }
        if (HasConnectFailures) {
          output.WriteRawTag(24);
          output.WriteInt32(ConnectFailures);
        }
        if (HasConnectionsDropped) {
          output.WriteRawTag(32);
          output.WriteInt32(ConnectionsDropped);
        }
        if (HasSecondsRunning) {
          output.WriteRawTag(40);
          output.WriteUInt32(SecondsRunning);
        }
        if (HasMsecTologonthistime) {
          output.WriteRawTag(48);
          output.WriteUInt32(MsecTologonthistime);
        }
        if (HasCountBadCms) {
          output.WriteRawTag(56);
          output.WriteUInt32(CountBadCms);
        }
        if (HasNoUdpConnectivity) {
          output.WriteRawTag(64);
          output.WriteBool(NoUdpConnectivity);
        }
        if (HasNoTcpConnectivity) {
          output.WriteRawTag(72);
          output.WriteBool(NoTcpConnectivity);
        }
        if (HasNoWebsocket443Connectivity) {
          output.WriteRawTag(80);
          output.WriteBool(NoWebsocket443Connectivity);
        }
        if (HasNoWebsocketNon443Connectivity) {
          output.WriteRawTag(88);
          output.WriteBool(NoWebsocketNon443Connectivity);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasConnectAttempts) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectAttempts);
        }
        if (HasConnectSuccesses) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectSuccesses);
        }
        if (HasConnectFailures) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectFailures);
        }
        if (HasConnectionsDropped) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectionsDropped);
        }
        if (HasSecondsRunning) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SecondsRunning);
        }
        if (HasMsecTologonthistime) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MsecTologonthistime);
        }
        if (HasCountBadCms) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CountBadCms);
        }
        if (HasNoUdpConnectivity) {
          size += 1 + 1;
        }
        if (HasNoTcpConnectivity) {
          size += 1 + 1;
        }
        if (HasNoWebsocket443Connectivity) {
          size += 1 + 1;
        }
        if (HasNoWebsocketNon443Connectivity) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Stats_Logon other) {
        if (other == null) {
          return;
        }
        if (other.HasConnectAttempts) {
          ConnectAttempts = other.ConnectAttempts;
        }
        if (other.HasConnectSuccesses) {
          ConnectSuccesses = other.ConnectSuccesses;
        }
        if (other.HasConnectFailures) {
          ConnectFailures = other.ConnectFailures;
        }
        if (other.HasConnectionsDropped) {
          ConnectionsDropped = other.ConnectionsDropped;
        }
        if (other.HasSecondsRunning) {
          SecondsRunning = other.SecondsRunning;
        }
        if (other.HasMsecTologonthistime) {
          MsecTologonthistime = other.MsecTologonthistime;
        }
        if (other.HasCountBadCms) {
          CountBadCms = other.CountBadCms;
        }
        if (other.HasNoUdpConnectivity) {
          NoUdpConnectivity = other.NoUdpConnectivity;
        }
        if (other.HasNoTcpConnectivity) {
          NoTcpConnectivity = other.NoTcpConnectivity;
        }
        if (other.HasNoWebsocket443Connectivity) {
          NoWebsocket443Connectivity = other.NoWebsocket443Connectivity;
        }
        if (other.HasNoWebsocketNon443Connectivity) {
          NoWebsocketNon443Connectivity = other.NoWebsocketNon443Connectivity;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ConnectAttempts = input.ReadInt32();
              break;
            }
            case 16: {
              ConnectSuccesses = input.ReadInt32();
              break;
            }
            case 24: {
              ConnectFailures = input.ReadInt32();
              break;
            }
            case 32: {
              ConnectionsDropped = input.ReadInt32();
              break;
            }
            case 40: {
              SecondsRunning = input.ReadUInt32();
              break;
            }
            case 48: {
              MsecTologonthistime = input.ReadUInt32();
              break;
            }
            case 56: {
              CountBadCms = input.ReadUInt32();
              break;
            }
            case 64: {
              NoUdpConnectivity = input.ReadBool();
              break;
            }
            case 72: {
              NoTcpConnectivity = input.ReadBool();
              break;
            }
            case 80: {
              NoWebsocket443Connectivity = input.ReadBool();
              break;
            }
            case 88: {
              NoWebsocketNon443Connectivity = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ConnectAttempts = input.ReadInt32();
              break;
            }
            case 16: {
              ConnectSuccesses = input.ReadInt32();
              break;
            }
            case 24: {
              ConnectFailures = input.ReadInt32();
              break;
            }
            case 32: {
              ConnectionsDropped = input.ReadInt32();
              break;
            }
            case 40: {
              SecondsRunning = input.ReadUInt32();
              break;
            }
            case 48: {
              MsecTologonthistime = input.ReadUInt32();
              break;
            }
            case 56: {
              CountBadCms = input.ReadUInt32();
              break;
            }
            case 64: {
              NoUdpConnectivity = input.ReadBool();
              break;
            }
            case 72: {
              NoTcpConnectivity = input.ReadBool();
              break;
            }
            case 80: {
              NoWebsocket443Connectivity = input.ReadBool();
              break;
            }
            case 88: {
              NoWebsocketNon443Connectivity = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Stats_UDP : pb::IMessage<Stats_UDP>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Stats_UDP> _parser = new pb::MessageParser<Stats_UDP>(() => new Stats_UDP());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Stats_UDP> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientConnectionStats.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_UDP() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_UDP(Stats_UDP other) : this() {
        _hasBits0 = other._hasBits0;
        pktsSent_ = other.pktsSent_;
        bytesSent_ = other.bytesSent_;
        pktsRecv_ = other.pktsRecv_;
        pktsProcessed_ = other.pktsProcessed_;
        bytesRecv_ = other.bytesRecv_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_UDP Clone() {
        return new Stats_UDP(this);
      }

      /// <summary>Field number for the "pkts_sent" field.</summary>
      public const int PktsSentFieldNumber = 1;
      private readonly static ulong PktsSentDefaultValue = 0UL;

      private ulong pktsSent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong PktsSent {
        get { if ((_hasBits0 & 1) != 0) { return pktsSent_; } else { return PktsSentDefaultValue; } }
        set {
          _hasBits0 |= 1;
          pktsSent_ = value;
        }
      }
      /// <summary>Gets whether the "pkts_sent" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPktsSent {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "pkts_sent" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPktsSent() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "bytes_sent" field.</summary>
      public const int BytesSentFieldNumber = 2;
      private readonly static ulong BytesSentDefaultValue = 0UL;

      private ulong bytesSent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong BytesSent {
        get { if ((_hasBits0 & 2) != 0) { return bytesSent_; } else { return BytesSentDefaultValue; } }
        set {
          _hasBits0 |= 2;
          bytesSent_ = value;
        }
      }
      /// <summary>Gets whether the "bytes_sent" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBytesSent {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "bytes_sent" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBytesSent() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "pkts_recv" field.</summary>
      public const int PktsRecvFieldNumber = 3;
      private readonly static ulong PktsRecvDefaultValue = 0UL;

      private ulong pktsRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong PktsRecv {
        get { if ((_hasBits0 & 4) != 0) { return pktsRecv_; } else { return PktsRecvDefaultValue; } }
        set {
          _hasBits0 |= 4;
          pktsRecv_ = value;
        }
      }
      /// <summary>Gets whether the "pkts_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPktsRecv {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "pkts_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPktsRecv() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "pkts_processed" field.</summary>
      public const int PktsProcessedFieldNumber = 4;
      private readonly static ulong PktsProcessedDefaultValue = 0UL;

      private ulong pktsProcessed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong PktsProcessed {
        get { if ((_hasBits0 & 8) != 0) { return pktsProcessed_; } else { return PktsProcessedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          pktsProcessed_ = value;
        }
      }
      /// <summary>Gets whether the "pkts_processed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPktsProcessed {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "pkts_processed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPktsProcessed() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "bytes_recv" field.</summary>
      public const int BytesRecvFieldNumber = 5;
      private readonly static ulong BytesRecvDefaultValue = 0UL;

      private ulong bytesRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong BytesRecv {
        get { if ((_hasBits0 & 16) != 0) { return bytesRecv_; } else { return BytesRecvDefaultValue; } }
        set {
          _hasBits0 |= 16;
          bytesRecv_ = value;
        }
      }
      /// <summary>Gets whether the "bytes_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBytesRecv {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "bytes_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBytesRecv() {
        _hasBits0 &= ~16;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Stats_UDP);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Stats_UDP other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (PktsSent != other.PktsSent) return false;
        if (BytesSent != other.BytesSent) return false;
        if (PktsRecv != other.PktsRecv) return false;
        if (PktsProcessed != other.PktsProcessed) return false;
        if (BytesRecv != other.BytesRecv) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPktsSent) hash ^= PktsSent.GetHashCode();
        if (HasBytesSent) hash ^= BytesSent.GetHashCode();
        if (HasPktsRecv) hash ^= PktsRecv.GetHashCode();
        if (HasPktsProcessed) hash ^= PktsProcessed.GetHashCode();
        if (HasBytesRecv) hash ^= BytesRecv.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPktsSent) {
          output.WriteRawTag(8);
          output.WriteUInt64(PktsSent);
        }
        if (HasBytesSent) {
          output.WriteRawTag(16);
          output.WriteUInt64(BytesSent);
        }
        if (HasPktsRecv) {
          output.WriteRawTag(24);
          output.WriteUInt64(PktsRecv);
        }
        if (HasPktsProcessed) {
          output.WriteRawTag(32);
          output.WriteUInt64(PktsProcessed);
        }
        if (HasBytesRecv) {
          output.WriteRawTag(40);
          output.WriteUInt64(BytesRecv);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPktsSent) {
          output.WriteRawTag(8);
          output.WriteUInt64(PktsSent);
        }
        if (HasBytesSent) {
          output.WriteRawTag(16);
          output.WriteUInt64(BytesSent);
        }
        if (HasPktsRecv) {
          output.WriteRawTag(24);
          output.WriteUInt64(PktsRecv);
        }
        if (HasPktsProcessed) {
          output.WriteRawTag(32);
          output.WriteUInt64(PktsProcessed);
        }
        if (HasBytesRecv) {
          output.WriteRawTag(40);
          output.WriteUInt64(BytesRecv);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPktsSent) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PktsSent);
        }
        if (HasBytesSent) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BytesSent);
        }
        if (HasPktsRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PktsRecv);
        }
        if (HasPktsProcessed) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PktsProcessed);
        }
        if (HasBytesRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BytesRecv);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Stats_UDP other) {
        if (other == null) {
          return;
        }
        if (other.HasPktsSent) {
          PktsSent = other.PktsSent;
        }
        if (other.HasBytesSent) {
          BytesSent = other.BytesSent;
        }
        if (other.HasPktsRecv) {
          PktsRecv = other.PktsRecv;
        }
        if (other.HasPktsProcessed) {
          PktsProcessed = other.PktsProcessed;
        }
        if (other.HasBytesRecv) {
          BytesRecv = other.BytesRecv;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              PktsSent = input.ReadUInt64();
              break;
            }
            case 16: {
              BytesSent = input.ReadUInt64();
              break;
            }
            case 24: {
              PktsRecv = input.ReadUInt64();
              break;
            }
            case 32: {
              PktsProcessed = input.ReadUInt64();
              break;
            }
            case 40: {
              BytesRecv = input.ReadUInt64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              PktsSent = input.ReadUInt64();
              break;
            }
            case 16: {
              BytesSent = input.ReadUInt64();
              break;
            }
            case 24: {
              PktsRecv = input.ReadUInt64();
              break;
            }
            case 32: {
              PktsProcessed = input.ReadUInt64();
              break;
            }
            case 40: {
              BytesRecv = input.ReadUInt64();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Stats_VConn : pb::IMessage<Stats_VConn>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Stats_VConn> _parser = new pb::MessageParser<Stats_VConn>(() => new Stats_VConn());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Stats_VConn> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientConnectionStats.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_VConn() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_VConn(Stats_VConn other) : this() {
        _hasBits0 = other._hasBits0;
        connectionsUdp_ = other.connectionsUdp_;
        connectionsTcp_ = other.connectionsTcp_;
        statsUdp_ = other.statsUdp_ != null ? other.statsUdp_.Clone() : null;
        pktsAbandoned_ = other.pktsAbandoned_;
        connReqReceived_ = other.connReqReceived_;
        pktsResent_ = other.pktsResent_;
        msgsSent_ = other.msgsSent_;
        msgsSentFailed_ = other.msgsSentFailed_;
        msgsRecv_ = other.msgsRecv_;
        datagramsSent_ = other.datagramsSent_;
        datagramsRecv_ = other.datagramsRecv_;
        badPktsRecv_ = other.badPktsRecv_;
        unknownConnPktsRecv_ = other.unknownConnPktsRecv_;
        missedPktsRecv_ = other.missedPktsRecv_;
        dupPktsRecv_ = other.dupPktsRecv_;
        failedConnectChallenges_ = other.failedConnectChallenges_;
        microSecAvgLatency_ = other.microSecAvgLatency_;
        microSecMinLatency_ = other.microSecMinLatency_;
        microSecMaxLatency_ = other.microSecMaxLatency_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Stats_VConn Clone() {
        return new Stats_VConn(this);
      }

      /// <summary>Field number for the "connections_udp" field.</summary>
      public const int ConnectionsUdpFieldNumber = 1;
      private readonly static uint ConnectionsUdpDefaultValue = 0;

      private uint connectionsUdp_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ConnectionsUdp {
        get { if ((_hasBits0 & 1) != 0) { return connectionsUdp_; } else { return ConnectionsUdpDefaultValue; } }
        set {
          _hasBits0 |= 1;
          connectionsUdp_ = value;
        }
      }
      /// <summary>Gets whether the "connections_udp" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasConnectionsUdp {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "connections_udp" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearConnectionsUdp() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "connections_tcp" field.</summary>
      public const int ConnectionsTcpFieldNumber = 2;
      private readonly static uint ConnectionsTcpDefaultValue = 0;

      private uint connectionsTcp_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ConnectionsTcp {
        get { if ((_hasBits0 & 2) != 0) { return connectionsTcp_; } else { return ConnectionsTcpDefaultValue; } }
        set {
          _hasBits0 |= 2;
          connectionsTcp_ = value;
        }
      }
      /// <summary>Gets whether the "connections_tcp" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasConnectionsTcp {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "connections_tcp" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearConnectionsTcp() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "stats_udp" field.</summary>
      public const int StatsUdpFieldNumber = 3;
      private global::CMsgClientConnectionStats.Types.Stats_UDP statsUdp_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgClientConnectionStats.Types.Stats_UDP StatsUdp {
        get { return statsUdp_; }
        set {
          statsUdp_ = value;
        }
      }

      /// <summary>Field number for the "pkts_abandoned" field.</summary>
      public const int PktsAbandonedFieldNumber = 4;
      private readonly static ulong PktsAbandonedDefaultValue = 0UL;

      private ulong pktsAbandoned_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong PktsAbandoned {
        get { if ((_hasBits0 & 4) != 0) { return pktsAbandoned_; } else { return PktsAbandonedDefaultValue; } }
        set {
          _hasBits0 |= 4;
          pktsAbandoned_ = value;
        }
      }
      /// <summary>Gets whether the "pkts_abandoned" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPktsAbandoned {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "pkts_abandoned" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPktsAbandoned() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "conn_req_received" field.</summary>
      public const int ConnReqReceivedFieldNumber = 5;
      private readonly static ulong ConnReqReceivedDefaultValue = 0UL;

      private ulong connReqReceived_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong ConnReqReceived {
        get { if ((_hasBits0 & 8) != 0) { return connReqReceived_; } else { return ConnReqReceivedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          connReqReceived_ = value;
        }
      }
      /// <summary>Gets whether the "conn_req_received" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasConnReqReceived {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "conn_req_received" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearConnReqReceived() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "pkts_resent" field.</summary>
      public const int PktsResentFieldNumber = 6;
      private readonly static ulong PktsResentDefaultValue = 0UL;

      private ulong pktsResent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong PktsResent {
        get { if ((_hasBits0 & 16) != 0) { return pktsResent_; } else { return PktsResentDefaultValue; } }
        set {
          _hasBits0 |= 16;
          pktsResent_ = value;
        }
      }
      /// <summary>Gets whether the "pkts_resent" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPktsResent {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "pkts_resent" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPktsResent() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "msgs_sent" field.</summary>
      public const int MsgsSentFieldNumber = 7;
      private readonly static ulong MsgsSentDefaultValue = 0UL;

      private ulong msgsSent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong MsgsSent {
        get { if ((_hasBits0 & 32) != 0) { return msgsSent_; } else { return MsgsSentDefaultValue; } }
        set {
          _hasBits0 |= 32;
          msgsSent_ = value;
        }
      }
      /// <summary>Gets whether the "msgs_sent" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMsgsSent {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "msgs_sent" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMsgsSent() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "msgs_sent_failed" field.</summary>
      public const int MsgsSentFailedFieldNumber = 8;
      private readonly static ulong MsgsSentFailedDefaultValue = 0UL;

      private ulong msgsSentFailed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong MsgsSentFailed {
        get { if ((_hasBits0 & 64) != 0) { return msgsSentFailed_; } else { return MsgsSentFailedDefaultValue; } }
        set {
          _hasBits0 |= 64;
          msgsSentFailed_ = value;
        }
      }
      /// <summary>Gets whether the "msgs_sent_failed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMsgsSentFailed {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "msgs_sent_failed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMsgsSentFailed() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "msgs_recv" field.</summary>
      public const int MsgsRecvFieldNumber = 9;
      private readonly static ulong MsgsRecvDefaultValue = 0UL;

      private ulong msgsRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong MsgsRecv {
        get { if ((_hasBits0 & 128) != 0) { return msgsRecv_; } else { return MsgsRecvDefaultValue; } }
        set {
          _hasBits0 |= 128;
          msgsRecv_ = value;
        }
      }
      /// <summary>Gets whether the "msgs_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMsgsRecv {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "msgs_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMsgsRecv() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "datagrams_sent" field.</summary>
      public const int DatagramsSentFieldNumber = 10;
      private readonly static ulong DatagramsSentDefaultValue = 0UL;

      private ulong datagramsSent_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong DatagramsSent {
        get { if ((_hasBits0 & 256) != 0) { return datagramsSent_; } else { return DatagramsSentDefaultValue; } }
        set {
          _hasBits0 |= 256;
          datagramsSent_ = value;
        }
      }
      /// <summary>Gets whether the "datagrams_sent" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDatagramsSent {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "datagrams_sent" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDatagramsSent() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "datagrams_recv" field.</summary>
      public const int DatagramsRecvFieldNumber = 11;
      private readonly static ulong DatagramsRecvDefaultValue = 0UL;

      private ulong datagramsRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong DatagramsRecv {
        get { if ((_hasBits0 & 512) != 0) { return datagramsRecv_; } else { return DatagramsRecvDefaultValue; } }
        set {
          _hasBits0 |= 512;
          datagramsRecv_ = value;
        }
      }
      /// <summary>Gets whether the "datagrams_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDatagramsRecv {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "datagrams_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDatagramsRecv() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "bad_pkts_recv" field.</summary>
      public const int BadPktsRecvFieldNumber = 12;
      private readonly static ulong BadPktsRecvDefaultValue = 0UL;

      private ulong badPktsRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong BadPktsRecv {
        get { if ((_hasBits0 & 1024) != 0) { return badPktsRecv_; } else { return BadPktsRecvDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          badPktsRecv_ = value;
        }
      }
      /// <summary>Gets whether the "bad_pkts_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBadPktsRecv {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "bad_pkts_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBadPktsRecv() {
        _hasBits0 &= ~1024;
      }

      /// <summary>Field number for the "unknown_conn_pkts_recv" field.</summary>
      public const int UnknownConnPktsRecvFieldNumber = 13;
      private readonly static ulong UnknownConnPktsRecvDefaultValue = 0UL;

      private ulong unknownConnPktsRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong UnknownConnPktsRecv {
        get { if ((_hasBits0 & 2048) != 0) { return unknownConnPktsRecv_; } else { return UnknownConnPktsRecvDefaultValue; } }
        set {
          _hasBits0 |= 2048;
          unknownConnPktsRecv_ = value;
        }
      }
      /// <summary>Gets whether the "unknown_conn_pkts_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasUnknownConnPktsRecv {
        get { return (_hasBits0 & 2048) != 0; }
      }
      /// <summary>Clears the value of the "unknown_conn_pkts_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearUnknownConnPktsRecv() {
        _hasBits0 &= ~2048;
      }

      /// <summary>Field number for the "missed_pkts_recv" field.</summary>
      public const int MissedPktsRecvFieldNumber = 14;
      private readonly static ulong MissedPktsRecvDefaultValue = 0UL;

      private ulong missedPktsRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong MissedPktsRecv {
        get { if ((_hasBits0 & 4096) != 0) { return missedPktsRecv_; } else { return MissedPktsRecvDefaultValue; } }
        set {
          _hasBits0 |= 4096;
          missedPktsRecv_ = value;
        }
      }
      /// <summary>Gets whether the "missed_pkts_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMissedPktsRecv {
        get { return (_hasBits0 & 4096) != 0; }
      }
      /// <summary>Clears the value of the "missed_pkts_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMissedPktsRecv() {
        _hasBits0 &= ~4096;
      }

      /// <summary>Field number for the "dup_pkts_recv" field.</summary>
      public const int DupPktsRecvFieldNumber = 15;
      private readonly static ulong DupPktsRecvDefaultValue = 0UL;

      private ulong dupPktsRecv_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong DupPktsRecv {
        get { if ((_hasBits0 & 8192) != 0) { return dupPktsRecv_; } else { return DupPktsRecvDefaultValue; } }
        set {
          _hasBits0 |= 8192;
          dupPktsRecv_ = value;
        }
      }
      /// <summary>Gets whether the "dup_pkts_recv" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDupPktsRecv {
        get { return (_hasBits0 & 8192) != 0; }
      }
      /// <summary>Clears the value of the "dup_pkts_recv" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDupPktsRecv() {
        _hasBits0 &= ~8192;
      }

      /// <summary>Field number for the "failed_connect_challenges" field.</summary>
      public const int FailedConnectChallengesFieldNumber = 16;
      private readonly static ulong FailedConnectChallengesDefaultValue = 0UL;

      private ulong failedConnectChallenges_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong FailedConnectChallenges {
        get { if ((_hasBits0 & 16384) != 0) { return failedConnectChallenges_; } else { return FailedConnectChallengesDefaultValue; } }
        set {
          _hasBits0 |= 16384;
          failedConnectChallenges_ = value;
        }
      }
      /// <summary>Gets whether the "failed_connect_challenges" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFailedConnectChallenges {
        get { return (_hasBits0 & 16384) != 0; }
      }
      /// <summary>Clears the value of the "failed_connect_challenges" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFailedConnectChallenges() {
        _hasBits0 &= ~16384;
      }

      /// <summary>Field number for the "micro_sec_avg_latency" field.</summary>
      public const int MicroSecAvgLatencyFieldNumber = 17;
      private readonly static uint MicroSecAvgLatencyDefaultValue = 0;

      private uint microSecAvgLatency_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MicroSecAvgLatency {
        get { if ((_hasBits0 & 32768) != 0) { return microSecAvgLatency_; } else { return MicroSecAvgLatencyDefaultValue; } }
        set {
          _hasBits0 |= 32768;
          microSecAvgLatency_ = value;
        }
      }
      /// <summary>Gets whether the "micro_sec_avg_latency" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMicroSecAvgLatency {
        get { return (_hasBits0 & 32768) != 0; }
      }
      /// <summary>Clears the value of the "micro_sec_avg_latency" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMicroSecAvgLatency() {
        _hasBits0 &= ~32768;
      }

      /// <summary>Field number for the "micro_sec_min_latency" field.</summary>
      public const int MicroSecMinLatencyFieldNumber = 18;
      private readonly static uint MicroSecMinLatencyDefaultValue = 0;

      private uint microSecMinLatency_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MicroSecMinLatency {
        get { if ((_hasBits0 & 65536) != 0) { return microSecMinLatency_; } else { return MicroSecMinLatencyDefaultValue; } }
        set {
          _hasBits0 |= 65536;
          microSecMinLatency_ = value;
        }
      }
      /// <summary>Gets whether the "micro_sec_min_latency" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMicroSecMinLatency {
        get { return (_hasBits0 & 65536) != 0; }
      }
      /// <summary>Clears the value of the "micro_sec_min_latency" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMicroSecMinLatency() {
        _hasBits0 &= ~65536;
      }

      /// <summary>Field number for the "micro_sec_max_latency" field.</summary>
      public const int MicroSecMaxLatencyFieldNumber = 19;
      private readonly static uint MicroSecMaxLatencyDefaultValue = 0;

      private uint microSecMaxLatency_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MicroSecMaxLatency {
        get { if ((_hasBits0 & 131072) != 0) { return microSecMaxLatency_; } else { return MicroSecMaxLatencyDefaultValue; } }
        set {
          _hasBits0 |= 131072;
          microSecMaxLatency_ = value;
        }
      }
      /// <summary>Gets whether the "micro_sec_max_latency" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMicroSecMaxLatency {
        get { return (_hasBits0 & 131072) != 0; }
      }
      /// <summary>Clears the value of the "micro_sec_max_latency" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMicroSecMaxLatency() {
        _hasBits0 &= ~131072;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Stats_VConn);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Stats_VConn other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ConnectionsUdp != other.ConnectionsUdp) return false;
        if (ConnectionsTcp != other.ConnectionsTcp) return false;
        if (!object.Equals(StatsUdp, other.StatsUdp)) return false;
        if (PktsAbandoned != other.PktsAbandoned) return false;
        if (ConnReqReceived != other.ConnReqReceived) return false;
        if (PktsResent != other.PktsResent) return false;
        if (MsgsSent != other.MsgsSent) return false;
        if (MsgsSentFailed != other.MsgsSentFailed) return false;
        if (MsgsRecv != other.MsgsRecv) return false;
        if (DatagramsSent != other.DatagramsSent) return false;
        if (DatagramsRecv != other.DatagramsRecv) return false;
        if (BadPktsRecv != other.BadPktsRecv) return false;
        if (UnknownConnPktsRecv != other.UnknownConnPktsRecv) return false;
        if (MissedPktsRecv != other.MissedPktsRecv) return false;
        if (DupPktsRecv != other.DupPktsRecv) return false;
        if (FailedConnectChallenges != other.FailedConnectChallenges) return false;
        if (MicroSecAvgLatency != other.MicroSecAvgLatency) return false;
        if (MicroSecMinLatency != other.MicroSecMinLatency) return false;
        if (MicroSecMaxLatency != other.MicroSecMaxLatency) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasConnectionsUdp) hash ^= ConnectionsUdp.GetHashCode();
        if (HasConnectionsTcp) hash ^= ConnectionsTcp.GetHashCode();
        if (statsUdp_ != null) hash ^= StatsUdp.GetHashCode();
        if (HasPktsAbandoned) hash ^= PktsAbandoned.GetHashCode();
        if (HasConnReqReceived) hash ^= ConnReqReceived.GetHashCode();
        if (HasPktsResent) hash ^= PktsResent.GetHashCode();
        if (HasMsgsSent) hash ^= MsgsSent.GetHashCode();
        if (HasMsgsSentFailed) hash ^= MsgsSentFailed.GetHashCode();
        if (HasMsgsRecv) hash ^= MsgsRecv.GetHashCode();
        if (HasDatagramsSent) hash ^= DatagramsSent.GetHashCode();
        if (HasDatagramsRecv) hash ^= DatagramsRecv.GetHashCode();
        if (HasBadPktsRecv) hash ^= BadPktsRecv.GetHashCode();
        if (HasUnknownConnPktsRecv) hash ^= UnknownConnPktsRecv.GetHashCode();
        if (HasMissedPktsRecv) hash ^= MissedPktsRecv.GetHashCode();
        if (HasDupPktsRecv) hash ^= DupPktsRecv.GetHashCode();
        if (HasFailedConnectChallenges) hash ^= FailedConnectChallenges.GetHashCode();
        if (HasMicroSecAvgLatency) hash ^= MicroSecAvgLatency.GetHashCode();
        if (HasMicroSecMinLatency) hash ^= MicroSecMinLatency.GetHashCode();
        if (HasMicroSecMaxLatency) hash ^= MicroSecMaxLatency.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasConnectionsUdp) {
          output.WriteRawTag(8);
          output.WriteUInt32(ConnectionsUdp);
        }
        if (HasConnectionsTcp) {
          output.WriteRawTag(16);
          output.WriteUInt32(ConnectionsTcp);
        }
        if (statsUdp_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(StatsUdp);
        }
        if (HasPktsAbandoned) {
          output.WriteRawTag(32);
          output.WriteUInt64(PktsAbandoned);
        }
        if (HasConnReqReceived) {
          output.WriteRawTag(40);
          output.WriteUInt64(ConnReqReceived);
        }
        if (HasPktsResent) {
          output.WriteRawTag(48);
          output.WriteUInt64(PktsResent);
        }
        if (HasMsgsSent) {
          output.WriteRawTag(56);
          output.WriteUInt64(MsgsSent);
        }
        if (HasMsgsSentFailed) {
          output.WriteRawTag(64);
          output.WriteUInt64(MsgsSentFailed);
        }
        if (HasMsgsRecv) {
          output.WriteRawTag(72);
          output.WriteUInt64(MsgsRecv);
        }
        if (HasDatagramsSent) {
          output.WriteRawTag(80);
          output.WriteUInt64(DatagramsSent);
        }
        if (HasDatagramsRecv) {
          output.WriteRawTag(88);
          output.WriteUInt64(DatagramsRecv);
        }
        if (HasBadPktsRecv) {
          output.WriteRawTag(96);
          output.WriteUInt64(BadPktsRecv);
        }
        if (HasUnknownConnPktsRecv) {
          output.WriteRawTag(104);
          output.WriteUInt64(UnknownConnPktsRecv);
        }
        if (HasMissedPktsRecv) {
          output.WriteRawTag(112);
          output.WriteUInt64(MissedPktsRecv);
        }
        if (HasDupPktsRecv) {
          output.WriteRawTag(120);
          output.WriteUInt64(DupPktsRecv);
        }
        if (HasFailedConnectChallenges) {
          output.WriteRawTag(128, 1);
          output.WriteUInt64(FailedConnectChallenges);
        }
        if (HasMicroSecAvgLatency) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(MicroSecAvgLatency);
        }
        if (HasMicroSecMinLatency) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(MicroSecMinLatency);
        }
        if (HasMicroSecMaxLatency) {
          output.WriteRawTag(152, 1);
          output.WriteUInt32(MicroSecMaxLatency);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasConnectionsUdp) {
          output.WriteRawTag(8);
          output.WriteUInt32(ConnectionsUdp);
        }
        if (HasConnectionsTcp) {
          output.WriteRawTag(16);
          output.WriteUInt32(ConnectionsTcp);
        }
        if (statsUdp_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(StatsUdp);
        }
        if (HasPktsAbandoned) {
          output.WriteRawTag(32);
          output.WriteUInt64(PktsAbandoned);
        }
        if (HasConnReqReceived) {
          output.WriteRawTag(40);
          output.WriteUInt64(ConnReqReceived);
        }
        if (HasPktsResent) {
          output.WriteRawTag(48);
          output.WriteUInt64(PktsResent);
        }
        if (HasMsgsSent) {
          output.WriteRawTag(56);
          output.WriteUInt64(MsgsSent);
        }
        if (HasMsgsSentFailed) {
          output.WriteRawTag(64);
          output.WriteUInt64(MsgsSentFailed);
        }
        if (HasMsgsRecv) {
          output.WriteRawTag(72);
          output.WriteUInt64(MsgsRecv);
        }
        if (HasDatagramsSent) {
          output.WriteRawTag(80);
          output.WriteUInt64(DatagramsSent);
        }
        if (HasDatagramsRecv) {
          output.WriteRawTag(88);
          output.WriteUInt64(DatagramsRecv);
        }
        if (HasBadPktsRecv) {
          output.WriteRawTag(96);
          output.WriteUInt64(BadPktsRecv);
        }
        if (HasUnknownConnPktsRecv) {
          output.WriteRawTag(104);
          output.WriteUInt64(UnknownConnPktsRecv);
        }
        if (HasMissedPktsRecv) {
          output.WriteRawTag(112);
          output.WriteUInt64(MissedPktsRecv);
        }
        if (HasDupPktsRecv) {
          output.WriteRawTag(120);
          output.WriteUInt64(DupPktsRecv);
        }
        if (HasFailedConnectChallenges) {
          output.WriteRawTag(128, 1);
          output.WriteUInt64(FailedConnectChallenges);
        }
        if (HasMicroSecAvgLatency) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(MicroSecAvgLatency);
        }
        if (HasMicroSecMinLatency) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(MicroSecMinLatency);
        }
        if (HasMicroSecMaxLatency) {
          output.WriteRawTag(152, 1);
          output.WriteUInt32(MicroSecMaxLatency);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasConnectionsUdp) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectionsUdp);
        }
        if (HasConnectionsTcp) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ConnectionsTcp);
        }
        if (statsUdp_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatsUdp);
        }
        if (HasPktsAbandoned) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PktsAbandoned);
        }
        if (HasConnReqReceived) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConnReqReceived);
        }
        if (HasPktsResent) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PktsResent);
        }
        if (HasMsgsSent) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MsgsSent);
        }
        if (HasMsgsSentFailed) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MsgsSentFailed);
        }
        if (HasMsgsRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MsgsRecv);
        }
        if (HasDatagramsSent) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DatagramsSent);
        }
        if (HasDatagramsRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DatagramsRecv);
        }
        if (HasBadPktsRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BadPktsRecv);
        }
        if (HasUnknownConnPktsRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnknownConnPktsRecv);
        }
        if (HasMissedPktsRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MissedPktsRecv);
        }
        if (HasDupPktsRecv) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DupPktsRecv);
        }
        if (HasFailedConnectChallenges) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(FailedConnectChallenges);
        }
        if (HasMicroSecAvgLatency) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MicroSecAvgLatency);
        }
        if (HasMicroSecMinLatency) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MicroSecMinLatency);
        }
        if (HasMicroSecMaxLatency) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MicroSecMaxLatency);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Stats_VConn other) {
        if (other == null) {
          return;
        }
        if (other.HasConnectionsUdp) {
          ConnectionsUdp = other.ConnectionsUdp;
        }
        if (other.HasConnectionsTcp) {
          ConnectionsTcp = other.ConnectionsTcp;
        }
        if (other.statsUdp_ != null) {
          if (statsUdp_ == null) {
            StatsUdp = new global::CMsgClientConnectionStats.Types.Stats_UDP();
          }
          StatsUdp.MergeFrom(other.StatsUdp);
        }
        if (other.HasPktsAbandoned) {
          PktsAbandoned = other.PktsAbandoned;
        }
        if (other.HasConnReqReceived) {
          ConnReqReceived = other.ConnReqReceived;
        }
        if (other.HasPktsResent) {
          PktsResent = other.PktsResent;
        }
        if (other.HasMsgsSent) {
          MsgsSent = other.MsgsSent;
        }
        if (other.HasMsgsSentFailed) {
          MsgsSentFailed = other.MsgsSentFailed;
        }
        if (other.HasMsgsRecv) {
          MsgsRecv = other.MsgsRecv;
        }
        if (other.HasDatagramsSent) {
          DatagramsSent = other.DatagramsSent;
        }
        if (other.HasDatagramsRecv) {
          DatagramsRecv = other.DatagramsRecv;
        }
        if (other.HasBadPktsRecv) {
          BadPktsRecv = other.BadPktsRecv;
        }
        if (other.HasUnknownConnPktsRecv) {
          UnknownConnPktsRecv = other.UnknownConnPktsRecv;
        }
        if (other.HasMissedPktsRecv) {
          MissedPktsRecv = other.MissedPktsRecv;
        }
        if (other.HasDupPktsRecv) {
          DupPktsRecv = other.DupPktsRecv;
        }
        if (other.HasFailedConnectChallenges) {
          FailedConnectChallenges = other.FailedConnectChallenges;
        }
        if (other.HasMicroSecAvgLatency) {
          MicroSecAvgLatency = other.MicroSecAvgLatency;
        }
        if (other.HasMicroSecMinLatency) {
          MicroSecMinLatency = other.MicroSecMinLatency;
        }
        if (other.HasMicroSecMaxLatency) {
          MicroSecMaxLatency = other.MicroSecMaxLatency;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ConnectionsUdp = input.ReadUInt32();
              break;
            }
            case 16: {
              ConnectionsTcp = input.ReadUInt32();
              break;
            }
            case 26: {
              if (statsUdp_ == null) {
                StatsUdp = new global::CMsgClientConnectionStats.Types.Stats_UDP();
              }
              input.ReadMessage(StatsUdp);
              break;
            }
            case 32: {
              PktsAbandoned = input.ReadUInt64();
              break;
            }
            case 40: {
              ConnReqReceived = input.ReadUInt64();
              break;
            }
            case 48: {
              PktsResent = input.ReadUInt64();
              break;
            }
            case 56: {
              MsgsSent = input.ReadUInt64();
              break;
            }
            case 64: {
              MsgsSentFailed = input.ReadUInt64();
              break;
            }
            case 72: {
              MsgsRecv = input.ReadUInt64();
              break;
            }
            case 80: {
              DatagramsSent = input.ReadUInt64();
              break;
            }
            case 88: {
              DatagramsRecv = input.ReadUInt64();
              break;
            }
            case 96: {
              BadPktsRecv = input.ReadUInt64();
              break;
            }
            case 104: {
              UnknownConnPktsRecv = input.ReadUInt64();
              break;
            }
            case 112: {
              MissedPktsRecv = input.ReadUInt64();
              break;
            }
            case 120: {
              DupPktsRecv = input.ReadUInt64();
              break;
            }
            case 128: {
              FailedConnectChallenges = input.ReadUInt64();
              break;
            }
            case 136: {
              MicroSecAvgLatency = input.ReadUInt32();
              break;
            }
            case 144: {
              MicroSecMinLatency = input.ReadUInt32();
              break;
            }
            case 152: {
              MicroSecMaxLatency = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ConnectionsUdp = input.ReadUInt32();
              break;
            }
            case 16: {
              ConnectionsTcp = input.ReadUInt32();
              break;
            }
            case 26: {
              if (statsUdp_ == null) {
                StatsUdp = new global::CMsgClientConnectionStats.Types.Stats_UDP();
              }
              input.ReadMessage(StatsUdp);
              break;
            }
            case 32: {
              PktsAbandoned = input.ReadUInt64();
              break;
            }
            case 40: {
              ConnReqReceived = input.ReadUInt64();
              break;
            }
            case 48: {
              PktsResent = input.ReadUInt64();
              break;
            }
            case 56: {
              MsgsSent = input.ReadUInt64();
              break;
            }
            case 64: {
              MsgsSentFailed = input.ReadUInt64();
              break;
            }
            case 72: {
              MsgsRecv = input.ReadUInt64();
              break;
            }
            case 80: {
              DatagramsSent = input.ReadUInt64();
              break;
            }
            case 88: {
              DatagramsRecv = input.ReadUInt64();
              break;
            }
            case 96: {
              BadPktsRecv = input.ReadUInt64();
              break;
            }
            case 104: {
              UnknownConnPktsRecv = input.ReadUInt64();
              break;
            }
            case 112: {
              MissedPktsRecv = input.ReadUInt64();
              break;
            }
            case 120: {
              DupPktsRecv = input.ReadUInt64();
              break;
            }
            case 128: {
              FailedConnectChallenges = input.ReadUInt64();
              break;
            }
            case 136: {
              MicroSecAvgLatency = input.ReadUInt32();
              break;
            }
            case 144: {
              MicroSecMinLatency = input.ReadUInt32();
              break;
            }
            case 152: {
              MicroSecMaxLatency = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgClientServersAvailable : pb::IMessage<CMsgClientServersAvailable>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientServersAvailable> _parser = new pb::MessageParser<CMsgClientServersAvailable>(() => new CMsgClientServersAvailable());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientServersAvailable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServersAvailable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServersAvailable(CMsgClientServersAvailable other) : this() {
    _hasBits0 = other._hasBits0;
    serverTypesAvailable_ = other.serverTypesAvailable_.Clone();
    serverTypeForAuthServices_ = other.serverTypeForAuthServices_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServersAvailable Clone() {
    return new CMsgClientServersAvailable(this);
  }

  /// <summary>Field number for the "server_types_available" field.</summary>
  public const int ServerTypesAvailableFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgClientServersAvailable.Types.Server_Types_Available> _repeated_serverTypesAvailable_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgClientServersAvailable.Types.Server_Types_Available.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientServersAvailable.Types.Server_Types_Available> serverTypesAvailable_ = new pbc::RepeatedField<global::CMsgClientServersAvailable.Types.Server_Types_Available>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientServersAvailable.Types.Server_Types_Available> ServerTypesAvailable {
    get { return serverTypesAvailable_; }
  }

  /// <summary>Field number for the "server_type_for_auth_services" field.</summary>
  public const int ServerTypeForAuthServicesFieldNumber = 2;
  private readonly static uint ServerTypeForAuthServicesDefaultValue = 0;

  private uint serverTypeForAuthServices_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerTypeForAuthServices {
    get { if ((_hasBits0 & 1) != 0) { return serverTypeForAuthServices_; } else { return ServerTypeForAuthServicesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      serverTypeForAuthServices_ = value;
    }
  }
  /// <summary>Gets whether the "server_type_for_auth_services" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerTypeForAuthServices {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "server_type_for_auth_services" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerTypeForAuthServices() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientServersAvailable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientServersAvailable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!serverTypesAvailable_.Equals(other.serverTypesAvailable_)) return false;
    if (ServerTypeForAuthServices != other.ServerTypeForAuthServices) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= serverTypesAvailable_.GetHashCode();
    if (HasServerTypeForAuthServices) hash ^= ServerTypeForAuthServices.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    serverTypesAvailable_.WriteTo(output, _repeated_serverTypesAvailable_codec);
    if (HasServerTypeForAuthServices) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServerTypeForAuthServices);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    serverTypesAvailable_.WriteTo(ref output, _repeated_serverTypesAvailable_codec);
    if (HasServerTypeForAuthServices) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServerTypeForAuthServices);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += serverTypesAvailable_.CalculateSize(_repeated_serverTypesAvailable_codec);
    if (HasServerTypeForAuthServices) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerTypeForAuthServices);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientServersAvailable other) {
    if (other == null) {
      return;
    }
    serverTypesAvailable_.Add(other.serverTypesAvailable_);
    if (other.HasServerTypeForAuthServices) {
      ServerTypeForAuthServices = other.ServerTypeForAuthServices;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          serverTypesAvailable_.AddEntriesFrom(input, _repeated_serverTypesAvailable_codec);
          break;
        }
        case 16: {
          ServerTypeForAuthServices = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          serverTypesAvailable_.AddEntriesFrom(ref input, _repeated_serverTypesAvailable_codec);
          break;
        }
        case 16: {
          ServerTypeForAuthServices = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientServersAvailable message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Server_Types_Available : pb::IMessage<Server_Types_Available>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Server_Types_Available> _parser = new pb::MessageParser<Server_Types_Available>(() => new Server_Types_Available());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Server_Types_Available> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientServersAvailable.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Server_Types_Available() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Server_Types_Available(Server_Types_Available other) : this() {
        _hasBits0 = other._hasBits0;
        server_ = other.server_;
        changed_ = other.changed_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Server_Types_Available Clone() {
        return new Server_Types_Available(this);
      }

      /// <summary>Field number for the "server" field.</summary>
      public const int ServerFieldNumber = 1;
      private readonly static uint ServerDefaultValue = 0;

      private uint server_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Server {
        get { if ((_hasBits0 & 1) != 0) { return server_; } else { return ServerDefaultValue; } }
        set {
          _hasBits0 |= 1;
          server_ = value;
        }
      }
      /// <summary>Gets whether the "server" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasServer {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "server" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearServer() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "changed" field.</summary>
      public const int ChangedFieldNumber = 2;
      private readonly static bool ChangedDefaultValue = false;

      private bool changed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Changed {
        get { if ((_hasBits0 & 2) != 0) { return changed_; } else { return ChangedDefaultValue; } }
        set {
          _hasBits0 |= 2;
          changed_ = value;
        }
      }
      /// <summary>Gets whether the "changed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasChanged {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "changed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearChanged() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Server_Types_Available);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Server_Types_Available other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Server != other.Server) return false;
        if (Changed != other.Changed) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasServer) hash ^= Server.GetHashCode();
        if (HasChanged) hash ^= Changed.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasServer) {
          output.WriteRawTag(8);
          output.WriteUInt32(Server);
        }
        if (HasChanged) {
          output.WriteRawTag(16);
          output.WriteBool(Changed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasServer) {
          output.WriteRawTag(8);
          output.WriteUInt32(Server);
        }
        if (HasChanged) {
          output.WriteRawTag(16);
          output.WriteBool(Changed);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasServer) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Server);
        }
        if (HasChanged) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Server_Types_Available other) {
        if (other == null) {
          return;
        }
        if (other.HasServer) {
          Server = other.Server;
        }
        if (other.HasChanged) {
          Changed = other.Changed;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Server = input.ReadUInt32();
              break;
            }
            case 16: {
              Changed = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Server = input.ReadUInt32();
              break;
            }
            case 16: {
              Changed = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgClientReportOverlayDetourFailure : pb::IMessage<CMsgClientReportOverlayDetourFailure>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientReportOverlayDetourFailure> _parser = new pb::MessageParser<CMsgClientReportOverlayDetourFailure>(() => new CMsgClientReportOverlayDetourFailure());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientReportOverlayDetourFailure> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientReportOverlayDetourFailure() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientReportOverlayDetourFailure(CMsgClientReportOverlayDetourFailure other) : this() {
    failureStrings_ = other.failureStrings_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientReportOverlayDetourFailure Clone() {
    return new CMsgClientReportOverlayDetourFailure(this);
  }

  /// <summary>Field number for the "failure_strings" field.</summary>
  public const int FailureStringsFieldNumber = 1;
  private static readonly pb::FieldCodec<string> _repeated_failureStrings_codec
      = pb::FieldCodec.ForString(10);
  private readonly pbc::RepeatedField<string> failureStrings_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> FailureStrings {
    get { return failureStrings_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientReportOverlayDetourFailure);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientReportOverlayDetourFailure other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!failureStrings_.Equals(other.failureStrings_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= failureStrings_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    failureStrings_.WriteTo(output, _repeated_failureStrings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    failureStrings_.WriteTo(ref output, _repeated_failureStrings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += failureStrings_.CalculateSize(_repeated_failureStrings_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientReportOverlayDetourFailure other) {
    if (other == null) {
      return;
    }
    failureStrings_.Add(other.failureStrings_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          failureStrings_.AddEntriesFrom(input, _repeated_failureStrings_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          failureStrings_.AddEntriesFrom(ref input, _repeated_failureStrings_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientRequestEncryptedAppTicket : pb::IMessage<CMsgClientRequestEncryptedAppTicket>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientRequestEncryptedAppTicket> _parser = new pb::MessageParser<CMsgClientRequestEncryptedAppTicket>(() => new CMsgClientRequestEncryptedAppTicket());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientRequestEncryptedAppTicket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestEncryptedAppTicket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestEncryptedAppTicket(CMsgClientRequestEncryptedAppTicket other) : this() {
    _hasBits0 = other._hasBits0;
    appId_ = other.appId_;
    userdata_ = other.userdata_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestEncryptedAppTicket Clone() {
    return new CMsgClientRequestEncryptedAppTicket(this);
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 1;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 1) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "userdata" field.</summary>
  public const int UserdataFieldNumber = 2;
  private readonly static pb::ByteString UserdataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString userdata_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Userdata {
    get { return userdata_ ?? UserdataDefaultValue; }
    set {
      userdata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "userdata" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserdata {
    get { return userdata_ != null; }
  }
  /// <summary>Clears the value of the "userdata" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserdata() {
    userdata_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientRequestEncryptedAppTicket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientRequestEncryptedAppTicket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppId != other.AppId) return false;
    if (Userdata != other.Userdata) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasUserdata) hash ^= Userdata.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (HasUserdata) {
      output.WriteRawTag(18);
      output.WriteBytes(Userdata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (HasUserdata) {
      output.WriteRawTag(18);
      output.WriteBytes(Userdata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasUserdata) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Userdata);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientRequestEncryptedAppTicket other) {
    if (other == null) {
      return;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasUserdata) {
      Userdata = other.Userdata;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
        case 18: {
          Userdata = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
        case 18: {
          Userdata = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientRequestEncryptedAppTicketResponse : pb::IMessage<CMsgClientRequestEncryptedAppTicketResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientRequestEncryptedAppTicketResponse> _parser = new pb::MessageParser<CMsgClientRequestEncryptedAppTicketResponse>(() => new CMsgClientRequestEncryptedAppTicketResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientRequestEncryptedAppTicketResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestEncryptedAppTicketResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestEncryptedAppTicketResponse(CMsgClientRequestEncryptedAppTicketResponse other) : this() {
    _hasBits0 = other._hasBits0;
    appId_ = other.appId_;
    eresult_ = other.eresult_;
    encryptedAppTicket_ = other.encryptedAppTicket_ != null ? other.encryptedAppTicket_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestEncryptedAppTicketResponse Clone() {
    return new CMsgClientRequestEncryptedAppTicketResponse(this);
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 1;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 1) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 2;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 2) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 2;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "encrypted_app_ticket" field.</summary>
  public const int EncryptedAppTicketFieldNumber = 3;
  private global::EncryptedAppTicket encryptedAppTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::EncryptedAppTicket EncryptedAppTicket {
    get { return encryptedAppTicket_; }
    set {
      encryptedAppTicket_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientRequestEncryptedAppTicketResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientRequestEncryptedAppTicketResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AppId != other.AppId) return false;
    if (Eresult != other.Eresult) return false;
    if (!object.Equals(EncryptedAppTicket, other.EncryptedAppTicket)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (encryptedAppTicket_ != null) hash ^= EncryptedAppTicket.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (HasEresult) {
      output.WriteRawTag(16);
      output.WriteInt32(Eresult);
    }
    if (encryptedAppTicket_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(EncryptedAppTicket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AppId);
    }
    if (HasEresult) {
      output.WriteRawTag(16);
      output.WriteInt32(Eresult);
    }
    if (encryptedAppTicket_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(EncryptedAppTicket);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (encryptedAppTicket_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptedAppTicket);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientRequestEncryptedAppTicketResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.encryptedAppTicket_ != null) {
      if (encryptedAppTicket_ == null) {
        EncryptedAppTicket = new global::EncryptedAppTicket();
      }
      EncryptedAppTicket.MergeFrom(other.EncryptedAppTicket);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
        case 16: {
          Eresult = input.ReadInt32();
          break;
        }
        case 26: {
          if (encryptedAppTicket_ == null) {
            EncryptedAppTicket = new global::EncryptedAppTicket();
          }
          input.ReadMessage(EncryptedAppTicket);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AppId = input.ReadUInt32();
          break;
        }
        case 16: {
          Eresult = input.ReadInt32();
          break;
        }
        case 26: {
          if (encryptedAppTicket_ == null) {
            EncryptedAppTicket = new global::EncryptedAppTicket();
          }
          input.ReadMessage(EncryptedAppTicket);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientWalletInfoUpdate : pb::IMessage<CMsgClientWalletInfoUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientWalletInfoUpdate> _parser = new pb::MessageParser<CMsgClientWalletInfoUpdate>(() => new CMsgClientWalletInfoUpdate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientWalletInfoUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientWalletInfoUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientWalletInfoUpdate(CMsgClientWalletInfoUpdate other) : this() {
    _hasBits0 = other._hasBits0;
    hasWallet_ = other.hasWallet_;
    balance_ = other.balance_;
    currency_ = other.currency_;
    balanceDelayed_ = other.balanceDelayed_;
    balance64_ = other.balance64_;
    balance64Delayed_ = other.balance64Delayed_;
    realm_ = other.realm_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientWalletInfoUpdate Clone() {
    return new CMsgClientWalletInfoUpdate(this);
  }

  /// <summary>Field number for the "has_wallet" field.</summary>
  public const int HasWalletFieldNumber = 1;
  private readonly static bool HasWalletDefaultValue = false;

  private bool hasWallet_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWallet {
    get { if ((_hasBits0 & 1) != 0) { return hasWallet_; } else { return HasWalletDefaultValue; } }
    set {
      _hasBits0 |= 1;
      hasWallet_ = value;
    }
  }
  /// <summary>Gets whether the "has_wallet" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHasWallet {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "has_wallet" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHasWallet() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "balance" field.</summary>
  public const int BalanceFieldNumber = 2;
  private readonly static int BalanceDefaultValue = 0;

  private int balance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Balance {
    get { if ((_hasBits0 & 2) != 0) { return balance_; } else { return BalanceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      balance_ = value;
    }
  }
  /// <summary>Gets whether the "balance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBalance {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "balance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBalance() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "currency" field.</summary>
  public const int CurrencyFieldNumber = 3;
  private readonly static int CurrencyDefaultValue = 0;

  private int currency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Currency {
    get { if ((_hasBits0 & 4) != 0) { return currency_; } else { return CurrencyDefaultValue; } }
    set {
      _hasBits0 |= 4;
      currency_ = value;
    }
  }
  /// <summary>Gets whether the "currency" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrency {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "currency" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrency() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "balance_delayed" field.</summary>
  public const int BalanceDelayedFieldNumber = 4;
  private readonly static int BalanceDelayedDefaultValue = 0;

  private int balanceDelayed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int BalanceDelayed {
    get { if ((_hasBits0 & 8) != 0) { return balanceDelayed_; } else { return BalanceDelayedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      balanceDelayed_ = value;
    }
  }
  /// <summary>Gets whether the "balance_delayed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBalanceDelayed {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "balance_delayed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBalanceDelayed() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "balance64" field.</summary>
  public const int Balance64FieldNumber = 5;
  private readonly static long Balance64DefaultValue = 0L;

  private long balance64_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Balance64 {
    get { if ((_hasBits0 & 16) != 0) { return balance64_; } else { return Balance64DefaultValue; } }
    set {
      _hasBits0 |= 16;
      balance64_ = value;
    }
  }
  /// <summary>Gets whether the "balance64" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBalance64 {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "balance64" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBalance64() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "balance64_delayed" field.</summary>
  public const int Balance64DelayedFieldNumber = 6;
  private readonly static long Balance64DelayedDefaultValue = 0L;

  private long balance64Delayed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Balance64Delayed {
    get { if ((_hasBits0 & 32) != 0) { return balance64Delayed_; } else { return Balance64DelayedDefaultValue; } }
    set {
      _hasBits0 |= 32;
      balance64Delayed_ = value;
    }
  }
  /// <summary>Gets whether the "balance64_delayed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBalance64Delayed {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "balance64_delayed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBalance64Delayed() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "realm" field.</summary>
  public const int RealmFieldNumber = 7;
  private readonly static int RealmDefaultValue = 0;

  private int realm_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Realm {
    get { if ((_hasBits0 & 64) != 0) { return realm_; } else { return RealmDefaultValue; } }
    set {
      _hasBits0 |= 64;
      realm_ = value;
    }
  }
  /// <summary>Gets whether the "realm" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRealm {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "realm" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRealm() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientWalletInfoUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientWalletInfoUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HasWallet != other.HasWallet) return false;
    if (Balance != other.Balance) return false;
    if (Currency != other.Currency) return false;
    if (BalanceDelayed != other.BalanceDelayed) return false;
    if (Balance64 != other.Balance64) return false;
    if (Balance64Delayed != other.Balance64Delayed) return false;
    if (Realm != other.Realm) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasHasWallet) hash ^= HasWallet.GetHashCode();
    if (HasBalance) hash ^= Balance.GetHashCode();
    if (HasCurrency) hash ^= Currency.GetHashCode();
    if (HasBalanceDelayed) hash ^= BalanceDelayed.GetHashCode();
    if (HasBalance64) hash ^= Balance64.GetHashCode();
    if (HasBalance64Delayed) hash ^= Balance64Delayed.GetHashCode();
    if (HasRealm) hash ^= Realm.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasHasWallet) {
      output.WriteRawTag(8);
      output.WriteBool(HasWallet);
    }
    if (HasBalance) {
      output.WriteRawTag(16);
      output.WriteInt32(Balance);
    }
    if (HasCurrency) {
      output.WriteRawTag(24);
      output.WriteInt32(Currency);
    }
    if (HasBalanceDelayed) {
      output.WriteRawTag(32);
      output.WriteInt32(BalanceDelayed);
    }
    if (HasBalance64) {
      output.WriteRawTag(40);
      output.WriteInt64(Balance64);
    }
    if (HasBalance64Delayed) {
      output.WriteRawTag(48);
      output.WriteInt64(Balance64Delayed);
    }
    if (HasRealm) {
      output.WriteRawTag(56);
      output.WriteInt32(Realm);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasHasWallet) {
      output.WriteRawTag(8);
      output.WriteBool(HasWallet);
    }
    if (HasBalance) {
      output.WriteRawTag(16);
      output.WriteInt32(Balance);
    }
    if (HasCurrency) {
      output.WriteRawTag(24);
      output.WriteInt32(Currency);
    }
    if (HasBalanceDelayed) {
      output.WriteRawTag(32);
      output.WriteInt32(BalanceDelayed);
    }
    if (HasBalance64) {
      output.WriteRawTag(40);
      output.WriteInt64(Balance64);
    }
    if (HasBalance64Delayed) {
      output.WriteRawTag(48);
      output.WriteInt64(Balance64Delayed);
    }
    if (HasRealm) {
      output.WriteRawTag(56);
      output.WriteInt32(Realm);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasHasWallet) {
      size += 1 + 1;
    }
    if (HasBalance) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Balance);
    }
    if (HasCurrency) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Currency);
    }
    if (HasBalanceDelayed) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BalanceDelayed);
    }
    if (HasBalance64) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance64);
    }
    if (HasBalance64Delayed) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance64Delayed);
    }
    if (HasRealm) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Realm);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientWalletInfoUpdate other) {
    if (other == null) {
      return;
    }
    if (other.HasHasWallet) {
      HasWallet = other.HasWallet;
    }
    if (other.HasBalance) {
      Balance = other.Balance;
    }
    if (other.HasCurrency) {
      Currency = other.Currency;
    }
    if (other.HasBalanceDelayed) {
      BalanceDelayed = other.BalanceDelayed;
    }
    if (other.HasBalance64) {
      Balance64 = other.Balance64;
    }
    if (other.HasBalance64Delayed) {
      Balance64Delayed = other.Balance64Delayed;
    }
    if (other.HasRealm) {
      Realm = other.Realm;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HasWallet = input.ReadBool();
          break;
        }
        case 16: {
          Balance = input.ReadInt32();
          break;
        }
        case 24: {
          Currency = input.ReadInt32();
          break;
        }
        case 32: {
          BalanceDelayed = input.ReadInt32();
          break;
        }
        case 40: {
          Balance64 = input.ReadInt64();
          break;
        }
        case 48: {
          Balance64Delayed = input.ReadInt64();
          break;
        }
        case 56: {
          Realm = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          HasWallet = input.ReadBool();
          break;
        }
        case 16: {
          Balance = input.ReadInt32();
          break;
        }
        case 24: {
          Currency = input.ReadInt32();
          break;
        }
        case 32: {
          BalanceDelayed = input.ReadInt32();
          break;
        }
        case 40: {
          Balance64 = input.ReadInt64();
          break;
        }
        case 48: {
          Balance64Delayed = input.ReadInt64();
          break;
        }
        case 56: {
          Realm = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientAMGetClanOfficers : pb::IMessage<CMsgClientAMGetClanOfficers>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientAMGetClanOfficers> _parser = new pb::MessageParser<CMsgClientAMGetClanOfficers>(() => new CMsgClientAMGetClanOfficers());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientAMGetClanOfficers> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetClanOfficers() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetClanOfficers(CMsgClientAMGetClanOfficers other) : this() {
    _hasBits0 = other._hasBits0;
    steamidClan_ = other.steamidClan_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetClanOfficers Clone() {
    return new CMsgClientAMGetClanOfficers(this);
  }

  /// <summary>Field number for the "steamid_clan" field.</summary>
  public const int SteamidClanFieldNumber = 1;
  private readonly static ulong SteamidClanDefaultValue = 0UL;

  private ulong steamidClan_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamidClan {
    get { if ((_hasBits0 & 1) != 0) { return steamidClan_; } else { return SteamidClanDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamidClan_ = value;
    }
  }
  /// <summary>Gets whether the "steamid_clan" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamidClan {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid_clan" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamidClan() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientAMGetClanOfficers);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientAMGetClanOfficers other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamidClan != other.SteamidClan) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamidClan) hash ^= SteamidClan.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamidClan) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamidClan);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamidClan) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamidClan);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamidClan) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientAMGetClanOfficers other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamidClan) {
      SteamidClan = other.SteamidClan;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamidClan = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamidClan = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientAMGetClanOfficersResponse : pb::IMessage<CMsgClientAMGetClanOfficersResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientAMGetClanOfficersResponse> _parser = new pb::MessageParser<CMsgClientAMGetClanOfficersResponse>(() => new CMsgClientAMGetClanOfficersResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientAMGetClanOfficersResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetClanOfficersResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetClanOfficersResponse(CMsgClientAMGetClanOfficersResponse other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    steamidClan_ = other.steamidClan_;
    officerCount_ = other.officerCount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetClanOfficersResponse Clone() {
    return new CMsgClientAMGetClanOfficersResponse(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steamid_clan" field.</summary>
  public const int SteamidClanFieldNumber = 2;
  private readonly static ulong SteamidClanDefaultValue = 0UL;

  private ulong steamidClan_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamidClan {
    get { if ((_hasBits0 & 2) != 0) { return steamidClan_; } else { return SteamidClanDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamidClan_ = value;
    }
  }
  /// <summary>Gets whether the "steamid_clan" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamidClan {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steamid_clan" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamidClan() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "officer_count" field.</summary>
  public const int OfficerCountFieldNumber = 3;
  private readonly static int OfficerCountDefaultValue = 0;

  private int officerCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int OfficerCount {
    get { if ((_hasBits0 & 4) != 0) { return officerCount_; } else { return OfficerCountDefaultValue; } }
    set {
      _hasBits0 |= 4;
      officerCount_ = value;
    }
  }
  /// <summary>Gets whether the "officer_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOfficerCount {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "officer_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOfficerCount() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientAMGetClanOfficersResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientAMGetClanOfficersResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    if (SteamidClan != other.SteamidClan) return false;
    if (OfficerCount != other.OfficerCount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasSteamidClan) hash ^= SteamidClan.GetHashCode();
    if (HasOfficerCount) hash ^= OfficerCount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasSteamidClan) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamidClan);
    }
    if (HasOfficerCount) {
      output.WriteRawTag(24);
      output.WriteInt32(OfficerCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasSteamidClan) {
      output.WriteRawTag(17);
      output.WriteFixed64(SteamidClan);
    }
    if (HasOfficerCount) {
      output.WriteRawTag(24);
      output.WriteInt32(OfficerCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (HasSteamidClan) {
      size += 1 + 8;
    }
    if (HasOfficerCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OfficerCount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientAMGetClanOfficersResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasSteamidClan) {
      SteamidClan = other.SteamidClan;
    }
    if (other.HasOfficerCount) {
      OfficerCount = other.OfficerCount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 17: {
          SteamidClan = input.ReadFixed64();
          break;
        }
        case 24: {
          OfficerCount = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 17: {
          SteamidClan = input.ReadFixed64();
          break;
        }
        case 24: {
          OfficerCount = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientAMGetPersonaNameHistory : pb::IMessage<CMsgClientAMGetPersonaNameHistory>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientAMGetPersonaNameHistory> _parser = new pb::MessageParser<CMsgClientAMGetPersonaNameHistory>(() => new CMsgClientAMGetPersonaNameHistory());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientAMGetPersonaNameHistory> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetPersonaNameHistory() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetPersonaNameHistory(CMsgClientAMGetPersonaNameHistory other) : this() {
    _hasBits0 = other._hasBits0;
    idCount_ = other.idCount_;
    ids_ = other.ids_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetPersonaNameHistory Clone() {
    return new CMsgClientAMGetPersonaNameHistory(this);
  }

  /// <summary>Field number for the "id_count" field.</summary>
  public const int IdCountFieldNumber = 1;
  private readonly static int IdCountDefaultValue = 0;

  private int idCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int IdCount {
    get { if ((_hasBits0 & 1) != 0) { return idCount_; } else { return IdCountDefaultValue; } }
    set {
      _hasBits0 |= 1;
      idCount_ = value;
    }
  }
  /// <summary>Gets whether the "id_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdCount {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdCount() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "Ids" field.</summary>
  public const int IdsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgClientAMGetPersonaNameHistory.Types.IdInstance> _repeated_ids_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgClientAMGetPersonaNameHistory.Types.IdInstance.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistory.Types.IdInstance> ids_ = new pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistory.Types.IdInstance>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistory.Types.IdInstance> Ids {
    get { return ids_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientAMGetPersonaNameHistory);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientAMGetPersonaNameHistory other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IdCount != other.IdCount) return false;
    if(!ids_.Equals(other.ids_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasIdCount) hash ^= IdCount.GetHashCode();
    hash ^= ids_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasIdCount) {
      output.WriteRawTag(8);
      output.WriteInt32(IdCount);
    }
    ids_.WriteTo(output, _repeated_ids_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasIdCount) {
      output.WriteRawTag(8);
      output.WriteInt32(IdCount);
    }
    ids_.WriteTo(ref output, _repeated_ids_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasIdCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdCount);
    }
    size += ids_.CalculateSize(_repeated_ids_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientAMGetPersonaNameHistory other) {
    if (other == null) {
      return;
    }
    if (other.HasIdCount) {
      IdCount = other.IdCount;
    }
    ids_.Add(other.ids_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IdCount = input.ReadInt32();
          break;
        }
        case 18: {
          ids_.AddEntriesFrom(input, _repeated_ids_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          IdCount = input.ReadInt32();
          break;
        }
        case 18: {
          ids_.AddEntriesFrom(ref input, _repeated_ids_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientAMGetPersonaNameHistory message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class IdInstance : pb::IMessage<IdInstance>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<IdInstance> _parser = new pb::MessageParser<IdInstance>(() => new IdInstance());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<IdInstance> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientAMGetPersonaNameHistory.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public IdInstance() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public IdInstance(IdInstance other) : this() {
        _hasBits0 = other._hasBits0;
        steamid_ = other.steamid_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public IdInstance Clone() {
        return new IdInstance(this);
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 1;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as IdInstance);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(IdInstance other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Steamid != other.Steamid) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSteamid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Steamid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSteamid) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(IdInstance other) {
        if (other == null) {
          return;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              Steamid = input.ReadFixed64();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class CMsgClientAMGetPersonaNameHistoryResponse : pb::IMessage<CMsgClientAMGetPersonaNameHistoryResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientAMGetPersonaNameHistoryResponse> _parser = new pb::MessageParser<CMsgClientAMGetPersonaNameHistoryResponse>(() => new CMsgClientAMGetPersonaNameHistoryResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientAMGetPersonaNameHistoryResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetPersonaNameHistoryResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetPersonaNameHistoryResponse(CMsgClientAMGetPersonaNameHistoryResponse other) : this() {
    responses_ = other.responses_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAMGetPersonaNameHistoryResponse Clone() {
    return new CMsgClientAMGetPersonaNameHistoryResponse(this);
  }

  /// <summary>Field number for the "responses" field.</summary>
  public const int ResponsesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance> _repeated_responses_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance> responses_ = new pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance> Responses {
    get { return responses_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientAMGetPersonaNameHistoryResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientAMGetPersonaNameHistoryResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!responses_.Equals(other.responses_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= responses_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    responses_.WriteTo(output, _repeated_responses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    responses_.WriteTo(ref output, _repeated_responses_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += responses_.CalculateSize(_repeated_responses_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientAMGetPersonaNameHistoryResponse other) {
    if (other == null) {
      return;
    }
    responses_.Add(other.responses_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          responses_.AddEntriesFrom(input, _repeated_responses_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 18: {
          responses_.AddEntriesFrom(ref input, _repeated_responses_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientAMGetPersonaNameHistoryResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class NameTableInstance : pb::IMessage<NameTableInstance>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<NameTableInstance> _parser = new pb::MessageParser<NameTableInstance>(() => new NameTableInstance());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<NameTableInstance> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientAMGetPersonaNameHistoryResponse.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NameTableInstance() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NameTableInstance(NameTableInstance other) : this() {
        _hasBits0 = other._hasBits0;
        eresult_ = other.eresult_;
        steamid_ = other.steamid_;
        names_ = other.names_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NameTableInstance Clone() {
        return new NameTableInstance(this);
      }

      /// <summary>Field number for the "eresult" field.</summary>
      public const int EresultFieldNumber = 1;
      private readonly static int EresultDefaultValue = 2;

      private int eresult_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Eresult {
        get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
        set {
          _hasBits0 |= 1;
          eresult_ = value;
        }
      }
      /// <summary>Gets whether the "eresult" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEresult {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "eresult" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEresult() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 2;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 2;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "names" field.</summary>
      public const int NamesFieldNumber = 3;
      private static readonly pb::FieldCodec<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Types.NameInstance> _repeated_names_codec
          = pb::FieldCodec.ForMessage(26, global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Types.NameInstance.Parser);
      private readonly pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Types.NameInstance> names_ = new pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Types.NameInstance>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Types.NameInstance> Names {
        get { return names_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as NameTableInstance);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(NameTableInstance other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Eresult != other.Eresult) return false;
        if (Steamid != other.Steamid) return false;
        if(!names_.Equals(other.names_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasEresult) hash ^= Eresult.GetHashCode();
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        hash ^= names_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasEresult) {
          output.WriteRawTag(8);
          output.WriteInt32(Eresult);
        }
        if (HasSteamid) {
          output.WriteRawTag(17);
          output.WriteFixed64(Steamid);
        }
        names_.WriteTo(output, _repeated_names_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasEresult) {
          output.WriteRawTag(8);
          output.WriteInt32(Eresult);
        }
        if (HasSteamid) {
          output.WriteRawTag(17);
          output.WriteFixed64(Steamid);
        }
        names_.WriteTo(ref output, _repeated_names_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasEresult) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
        }
        if (HasSteamid) {
          size += 1 + 8;
        }
        size += names_.CalculateSize(_repeated_names_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(NameTableInstance other) {
        if (other == null) {
          return;
        }
        if (other.HasEresult) {
          Eresult = other.Eresult;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        names_.Add(other.names_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Eresult = input.ReadInt32();
              break;
            }
            case 17: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 26: {
              names_.AddEntriesFrom(input, _repeated_names_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Eresult = input.ReadInt32();
              break;
            }
            case 17: {
              Steamid = input.ReadFixed64();
              break;
            }
            case 26: {
              names_.AddEntriesFrom(ref input, _repeated_names_codec);
              break;
            }
          }
        }
      }
      #endif

      #region Nested types
      /// <summary>Container for nested types declared in the NameTableInstance message type.</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static partial class Types {
        public sealed partial class NameInstance : pb::IMessage<NameInstance>
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            , pb::IBufferMessage
        #endif
        {
          private static readonly pb::MessageParser<NameInstance> _parser = new pb::MessageParser<NameInstance>(() => new NameInstance());
          private pb::UnknownFieldSet _unknownFields;
          private int _hasBits0;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public static pb::MessageParser<NameInstance> Parser { get { return _parser; } }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public static pbr::MessageDescriptor Descriptor {
            get { return global::CMsgClientAMGetPersonaNameHistoryResponse.Types.NameTableInstance.Descriptor.NestedTypes[0]; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          pbr::MessageDescriptor pb::IMessage.Descriptor {
            get { return Descriptor; }
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public NameInstance() {
            OnConstruction();
          }

          partial void OnConstruction();

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public NameInstance(NameInstance other) : this() {
            _hasBits0 = other._hasBits0;
            nameSince_ = other.nameSince_;
            name_ = other.name_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public NameInstance Clone() {
            return new NameInstance(this);
          }

          /// <summary>Field number for the "name_since" field.</summary>
          public const int NameSinceFieldNumber = 1;
          private readonly static uint NameSinceDefaultValue = 0;

          private uint nameSince_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public uint NameSince {
            get { if ((_hasBits0 & 1) != 0) { return nameSince_; } else { return NameSinceDefaultValue; } }
            set {
              _hasBits0 |= 1;
              nameSince_ = value;
            }
          }
          /// <summary>Gets whether the "name_since" field is set</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool HasNameSince {
            get { return (_hasBits0 & 1) != 0; }
          }
          /// <summary>Clears the value of the "name_since" field</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void ClearNameSince() {
            _hasBits0 &= ~1;
          }

          /// <summary>Field number for the "name" field.</summary>
          public const int NameFieldNumber = 2;
          private readonly static string NameDefaultValue = "";

          private string name_;
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public string Name {
            get { return name_ ?? NameDefaultValue; }
            set {
              name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
          }
          /// <summary>Gets whether the "name" field is set</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool HasName {
            get { return name_ != null; }
          }
          /// <summary>Clears the value of the "name" field</summary>
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void ClearName() {
            name_ = null;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public override bool Equals(object other) {
            return Equals(other as NameInstance);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public bool Equals(NameInstance other) {
            if (ReferenceEquals(other, null)) {
              return false;
            }
            if (ReferenceEquals(other, this)) {
              return true;
            }
            if (NameSince != other.NameSince) return false;
            if (Name != other.Name) return false;
            return Equals(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public override int GetHashCode() {
            int hash = 1;
            if (HasNameSince) hash ^= NameSince.GetHashCode();
            if (HasName) hash ^= Name.GetHashCode();
            if (_unknownFields != null) {
              hash ^= _unknownFields.GetHashCode();
            }
            return hash;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public override string ToString() {
            return pb::JsonFormatter.ToDiagnosticString(this);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void WriteTo(pb::CodedOutputStream output) {
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            output.WriteRawMessage(this);
          #else
            if (HasNameSince) {
              output.WriteRawTag(13);
              output.WriteFixed32(NameSince);
            }
            if (HasName) {
              output.WriteRawTag(18);
              output.WriteString(Name);
            }
            if (_unknownFields != null) {
              _unknownFields.WriteTo(output);
            }
          #endif
          }

          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
            if (HasNameSince) {
              output.WriteRawTag(13);
              output.WriteFixed32(NameSince);
            }
            if (HasName) {
              output.WriteRawTag(18);
              output.WriteString(Name);
            }
            if (_unknownFields != null) {
              _unknownFields.WriteTo(ref output);
            }
          }
          #endif

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public int CalculateSize() {
            int size = 0;
            if (HasNameSince) {
              size += 1 + 4;
            }
            if (HasName) {
              size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (_unknownFields != null) {
              size += _unknownFields.CalculateSize();
            }
            return size;
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void MergeFrom(NameInstance other) {
            if (other == null) {
              return;
            }
            if (other.HasNameSince) {
              NameSince = other.NameSince;
            }
            if (other.HasName) {
              Name = other.Name;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
          }

          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          public void MergeFrom(pb::CodedInputStream input) {
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            input.ReadRawMessage(this);
          #else
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
              switch(tag) {
                default:
                  _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                  break;
                case 13: {
                  NameSince = input.ReadFixed32();
                  break;
                }
                case 18: {
                  Name = input.ReadString();
                  break;
                }
              }
            }
          #endif
          }

          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
          [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
          void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
            uint tag;
            while ((tag = input.ReadTag()) != 0) {
              switch(tag) {
                default:
                  _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                  break;
                case 13: {
                  NameSince = input.ReadFixed32();
                  break;
                }
                case 18: {
                  Name = input.ReadString();
                  break;
                }
              }
            }
          }
          #endif

        }

      }
      #endregion

    }

  }
  #endregion

}

public sealed partial class CMsgClientDeregisterWithServer : pb::IMessage<CMsgClientDeregisterWithServer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientDeregisterWithServer> _parser = new pb::MessageParser<CMsgClientDeregisterWithServer>(() => new CMsgClientDeregisterWithServer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientDeregisterWithServer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientDeregisterWithServer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientDeregisterWithServer(CMsgClientDeregisterWithServer other) : this() {
    _hasBits0 = other._hasBits0;
    eservertype_ = other.eservertype_;
    appId_ = other.appId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientDeregisterWithServer Clone() {
    return new CMsgClientDeregisterWithServer(this);
  }

  /// <summary>Field number for the "eservertype" field.</summary>
  public const int EservertypeFieldNumber = 1;
  private readonly static uint EservertypeDefaultValue = 0;

  private uint eservertype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Eservertype {
    get { if ((_hasBits0 & 1) != 0) { return eservertype_; } else { return EservertypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eservertype_ = value;
    }
  }
  /// <summary>Gets whether the "eservertype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEservertype {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eservertype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEservertype() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "app_id" field.</summary>
  public const int AppIdFieldNumber = 2;
  private readonly static uint AppIdDefaultValue = 0;

  private uint appId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AppId {
    get { if ((_hasBits0 & 2) != 0) { return appId_; } else { return AppIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appId_ = value;
    }
  }
  /// <summary>Gets whether the "app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppId() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientDeregisterWithServer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientDeregisterWithServer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eservertype != other.Eservertype) return false;
    if (AppId != other.AppId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEservertype) hash ^= Eservertype.GetHashCode();
    if (HasAppId) hash ^= AppId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEservertype) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eservertype);
    }
    if (HasAppId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEservertype) {
      output.WriteRawTag(8);
      output.WriteUInt32(Eservertype);
    }
    if (HasAppId) {
      output.WriteRawTag(16);
      output.WriteUInt32(AppId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEservertype) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Eservertype);
    }
    if (HasAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AppId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientDeregisterWithServer other) {
    if (other == null) {
      return;
    }
    if (other.HasEservertype) {
      Eservertype = other.Eservertype;
    }
    if (other.HasAppId) {
      AppId = other.AppId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eservertype = input.ReadUInt32();
          break;
        }
        case 16: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eservertype = input.ReadUInt32();
          break;
        }
        case 16: {
          AppId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientClanState : pb::IMessage<CMsgClientClanState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientClanState> _parser = new pb::MessageParser<CMsgClientClanState>(() => new CMsgClientClanState());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientClanState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientClanState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientClanState(CMsgClientClanState other) : this() {
    _hasBits0 = other._hasBits0;
    steamidClan_ = other.steamidClan_;
    clanAccountFlags_ = other.clanAccountFlags_;
    nameInfo_ = other.nameInfo_ != null ? other.nameInfo_.Clone() : null;
    userCounts_ = other.userCounts_ != null ? other.userCounts_.Clone() : null;
    events_ = other.events_.Clone();
    announcements_ = other.announcements_.Clone();
    chatRoomPrivate_ = other.chatRoomPrivate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientClanState Clone() {
    return new CMsgClientClanState(this);
  }

  /// <summary>Field number for the "steamid_clan" field.</summary>
  public const int SteamidClanFieldNumber = 1;
  private readonly static ulong SteamidClanDefaultValue = 0UL;

  private ulong steamidClan_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamidClan {
    get { if ((_hasBits0 & 1) != 0) { return steamidClan_; } else { return SteamidClanDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamidClan_ = value;
    }
  }
  /// <summary>Gets whether the "steamid_clan" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamidClan {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid_clan" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamidClan() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "clan_account_flags" field.</summary>
  public const int ClanAccountFlagsFieldNumber = 3;
  private readonly static uint ClanAccountFlagsDefaultValue = 0;

  private uint clanAccountFlags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClanAccountFlags {
    get { if ((_hasBits0 & 2) != 0) { return clanAccountFlags_; } else { return ClanAccountFlagsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clanAccountFlags_ = value;
    }
  }
  /// <summary>Gets whether the "clan_account_flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClanAccountFlags {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "clan_account_flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClanAccountFlags() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "name_info" field.</summary>
  public const int NameInfoFieldNumber = 4;
  private global::CMsgClientClanState.Types.NameInfo nameInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgClientClanState.Types.NameInfo NameInfo {
    get { return nameInfo_; }
    set {
      nameInfo_ = value;
    }
  }

  /// <summary>Field number for the "user_counts" field.</summary>
  public const int UserCountsFieldNumber = 5;
  private global::CMsgClientClanState.Types.UserCounts userCounts_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgClientClanState.Types.UserCounts UserCounts {
    get { return userCounts_; }
    set {
      userCounts_ = value;
    }
  }

  /// <summary>Field number for the "events" field.</summary>
  public const int EventsFieldNumber = 6;
  private static readonly pb::FieldCodec<global::CMsgClientClanState.Types.Event> _repeated_events_codec
      = pb::FieldCodec.ForMessage(50, global::CMsgClientClanState.Types.Event.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientClanState.Types.Event> events_ = new pbc::RepeatedField<global::CMsgClientClanState.Types.Event>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientClanState.Types.Event> Events {
    get { return events_; }
  }

  /// <summary>Field number for the "announcements" field.</summary>
  public const int AnnouncementsFieldNumber = 7;
  private static readonly pb::FieldCodec<global::CMsgClientClanState.Types.Event> _repeated_announcements_codec
      = pb::FieldCodec.ForMessage(58, global::CMsgClientClanState.Types.Event.Parser);
  private readonly pbc::RepeatedField<global::CMsgClientClanState.Types.Event> announcements_ = new pbc::RepeatedField<global::CMsgClientClanState.Types.Event>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgClientClanState.Types.Event> Announcements {
    get { return announcements_; }
  }

  /// <summary>Field number for the "chat_room_private" field.</summary>
  public const int ChatRoomPrivateFieldNumber = 8;
  private readonly static bool ChatRoomPrivateDefaultValue = false;

  private bool chatRoomPrivate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ChatRoomPrivate {
    get { if ((_hasBits0 & 4) != 0) { return chatRoomPrivate_; } else { return ChatRoomPrivateDefaultValue; } }
    set {
      _hasBits0 |= 4;
      chatRoomPrivate_ = value;
    }
  }
  /// <summary>Gets whether the "chat_room_private" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChatRoomPrivate {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "chat_room_private" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChatRoomPrivate() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientClanState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientClanState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamidClan != other.SteamidClan) return false;
    if (ClanAccountFlags != other.ClanAccountFlags) return false;
    if (!object.Equals(NameInfo, other.NameInfo)) return false;
    if (!object.Equals(UserCounts, other.UserCounts)) return false;
    if(!events_.Equals(other.events_)) return false;
    if(!announcements_.Equals(other.announcements_)) return false;
    if (ChatRoomPrivate != other.ChatRoomPrivate) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamidClan) hash ^= SteamidClan.GetHashCode();
    if (HasClanAccountFlags) hash ^= ClanAccountFlags.GetHashCode();
    if (nameInfo_ != null) hash ^= NameInfo.GetHashCode();
    if (userCounts_ != null) hash ^= UserCounts.GetHashCode();
    hash ^= events_.GetHashCode();
    hash ^= announcements_.GetHashCode();
    if (HasChatRoomPrivate) hash ^= ChatRoomPrivate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamidClan) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamidClan);
    }
    if (HasClanAccountFlags) {
      output.WriteRawTag(24);
      output.WriteUInt32(ClanAccountFlags);
    }
    if (nameInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(NameInfo);
    }
    if (userCounts_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(UserCounts);
    }
    events_.WriteTo(output, _repeated_events_codec);
    announcements_.WriteTo(output, _repeated_announcements_codec);
    if (HasChatRoomPrivate) {
      output.WriteRawTag(64);
      output.WriteBool(ChatRoomPrivate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamidClan) {
      output.WriteRawTag(9);
      output.WriteFixed64(SteamidClan);
    }
    if (HasClanAccountFlags) {
      output.WriteRawTag(24);
      output.WriteUInt32(ClanAccountFlags);
    }
    if (nameInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(NameInfo);
    }
    if (userCounts_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(UserCounts);
    }
    events_.WriteTo(ref output, _repeated_events_codec);
    announcements_.WriteTo(ref output, _repeated_announcements_codec);
    if (HasChatRoomPrivate) {
      output.WriteRawTag(64);
      output.WriteBool(ChatRoomPrivate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamidClan) {
      size += 1 + 8;
    }
    if (HasClanAccountFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClanAccountFlags);
    }
    if (nameInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(NameInfo);
    }
    if (userCounts_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserCounts);
    }
    size += events_.CalculateSize(_repeated_events_codec);
    size += announcements_.CalculateSize(_repeated_announcements_codec);
    if (HasChatRoomPrivate) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientClanState other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamidClan) {
      SteamidClan = other.SteamidClan;
    }
    if (other.HasClanAccountFlags) {
      ClanAccountFlags = other.ClanAccountFlags;
    }
    if (other.nameInfo_ != null) {
      if (nameInfo_ == null) {
        NameInfo = new global::CMsgClientClanState.Types.NameInfo();
      }
      NameInfo.MergeFrom(other.NameInfo);
    }
    if (other.userCounts_ != null) {
      if (userCounts_ == null) {
        UserCounts = new global::CMsgClientClanState.Types.UserCounts();
      }
      UserCounts.MergeFrom(other.UserCounts);
    }
    events_.Add(other.events_);
    announcements_.Add(other.announcements_);
    if (other.HasChatRoomPrivate) {
      ChatRoomPrivate = other.ChatRoomPrivate;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          SteamidClan = input.ReadFixed64();
          break;
        }
        case 24: {
          ClanAccountFlags = input.ReadUInt32();
          break;
        }
        case 34: {
          if (nameInfo_ == null) {
            NameInfo = new global::CMsgClientClanState.Types.NameInfo();
          }
          input.ReadMessage(NameInfo);
          break;
        }
        case 42: {
          if (userCounts_ == null) {
            UserCounts = new global::CMsgClientClanState.Types.UserCounts();
          }
          input.ReadMessage(UserCounts);
          break;
        }
        case 50: {
          events_.AddEntriesFrom(input, _repeated_events_codec);
          break;
        }
        case 58: {
          announcements_.AddEntriesFrom(input, _repeated_announcements_codec);
          break;
        }
        case 64: {
          ChatRoomPrivate = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          SteamidClan = input.ReadFixed64();
          break;
        }
        case 24: {
          ClanAccountFlags = input.ReadUInt32();
          break;
        }
        case 34: {
          if (nameInfo_ == null) {
            NameInfo = new global::CMsgClientClanState.Types.NameInfo();
          }
          input.ReadMessage(NameInfo);
          break;
        }
        case 42: {
          if (userCounts_ == null) {
            UserCounts = new global::CMsgClientClanState.Types.UserCounts();
          }
          input.ReadMessage(UserCounts);
          break;
        }
        case 50: {
          events_.AddEntriesFrom(ref input, _repeated_events_codec);
          break;
        }
        case 58: {
          announcements_.AddEntriesFrom(ref input, _repeated_announcements_codec);
          break;
        }
        case 64: {
          ChatRoomPrivate = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgClientClanState message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class NameInfo : pb::IMessage<NameInfo>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<NameInfo> _parser = new pb::MessageParser<NameInfo>(() => new NameInfo());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<NameInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientClanState.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NameInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NameInfo(NameInfo other) : this() {
        clanName_ = other.clanName_;
        shaAvatar_ = other.shaAvatar_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public NameInfo Clone() {
        return new NameInfo(this);
      }

      /// <summary>Field number for the "clan_name" field.</summary>
      public const int ClanNameFieldNumber = 1;
      private readonly static string ClanNameDefaultValue = "";

      private string clanName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string ClanName {
        get { return clanName_ ?? ClanNameDefaultValue; }
        set {
          clanName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "clan_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasClanName {
        get { return clanName_ != null; }
      }
      /// <summary>Clears the value of the "clan_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearClanName() {
        clanName_ = null;
      }

      /// <summary>Field number for the "sha_avatar" field.</summary>
      public const int ShaAvatarFieldNumber = 2;
      private readonly static pb::ByteString ShaAvatarDefaultValue = pb::ByteString.Empty;

      private pb::ByteString shaAvatar_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString ShaAvatar {
        get { return shaAvatar_ ?? ShaAvatarDefaultValue; }
        set {
          shaAvatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "sha_avatar" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShaAvatar {
        get { return shaAvatar_ != null; }
      }
      /// <summary>Clears the value of the "sha_avatar" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShaAvatar() {
        shaAvatar_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as NameInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(NameInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ClanName != other.ClanName) return false;
        if (ShaAvatar != other.ShaAvatar) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasClanName) hash ^= ClanName.GetHashCode();
        if (HasShaAvatar) hash ^= ShaAvatar.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasClanName) {
          output.WriteRawTag(10);
          output.WriteString(ClanName);
        }
        if (HasShaAvatar) {
          output.WriteRawTag(18);
          output.WriteBytes(ShaAvatar);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasClanName) {
          output.WriteRawTag(10);
          output.WriteString(ClanName);
        }
        if (HasShaAvatar) {
          output.WriteRawTag(18);
          output.WriteBytes(ShaAvatar);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasClanName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(ClanName);
        }
        if (HasShaAvatar) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShaAvatar);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(NameInfo other) {
        if (other == null) {
          return;
        }
        if (other.HasClanName) {
          ClanName = other.ClanName;
        }
        if (other.HasShaAvatar) {
          ShaAvatar = other.ShaAvatar;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              ClanName = input.ReadString();
              break;
            }
            case 18: {
              ShaAvatar = input.ReadBytes();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              ClanName = input.ReadString();
              break;
            }
            case 18: {
              ShaAvatar = input.ReadBytes();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class UserCounts : pb::IMessage<UserCounts>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UserCounts> _parser = new pb::MessageParser<UserCounts>(() => new UserCounts());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UserCounts> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientClanState.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UserCounts() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UserCounts(UserCounts other) : this() {
        _hasBits0 = other._hasBits0;
        members_ = other.members_;
        online_ = other.online_;
        chatting_ = other.chatting_;
        inGame_ = other.inGame_;
        chatRoomMembers_ = other.chatRoomMembers_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UserCounts Clone() {
        return new UserCounts(this);
      }

      /// <summary>Field number for the "members" field.</summary>
      public const int MembersFieldNumber = 1;
      private readonly static uint MembersDefaultValue = 0;

      private uint members_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Members {
        get { if ((_hasBits0 & 1) != 0) { return members_; } else { return MembersDefaultValue; } }
        set {
          _hasBits0 |= 1;
          members_ = value;
        }
      }
      /// <summary>Gets whether the "members" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMembers {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "members" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMembers() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "online" field.</summary>
      public const int OnlineFieldNumber = 2;
      private readonly static uint OnlineDefaultValue = 0;

      private uint online_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Online {
        get { if ((_hasBits0 & 2) != 0) { return online_; } else { return OnlineDefaultValue; } }
        set {
          _hasBits0 |= 2;
          online_ = value;
        }
      }
      /// <summary>Gets whether the "online" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOnline {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "online" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOnline() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "chatting" field.</summary>
      public const int ChattingFieldNumber = 3;
      private readonly static uint ChattingDefaultValue = 0;

      private uint chatting_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Chatting {
        get { if ((_hasBits0 & 4) != 0) { return chatting_; } else { return ChattingDefaultValue; } }
        set {
          _hasBits0 |= 4;
          chatting_ = value;
        }
      }
      /// <summary>Gets whether the "chatting" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasChatting {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "chatting" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearChatting() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "in_game" field.</summary>
      public const int InGameFieldNumber = 4;
      private readonly static uint InGameDefaultValue = 0;

      private uint inGame_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint InGame {
        get { if ((_hasBits0 & 8) != 0) { return inGame_; } else { return InGameDefaultValue; } }
        set {
          _hasBits0 |= 8;
          inGame_ = value;
        }
      }
      /// <summary>Gets whether the "in_game" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInGame {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "in_game" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInGame() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "chat_room_members" field.</summary>
      public const int ChatRoomMembersFieldNumber = 5;
      private readonly static uint ChatRoomMembersDefaultValue = 0;

      private uint chatRoomMembers_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ChatRoomMembers {
        get { if ((_hasBits0 & 16) != 0) { return chatRoomMembers_; } else { return ChatRoomMembersDefaultValue; } }
        set {
          _hasBits0 |= 16;
          chatRoomMembers_ = value;
        }
      }
      /// <summary>Gets whether the "chat_room_members" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasChatRoomMembers {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "chat_room_members" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearChatRoomMembers() {
        _hasBits0 &= ~16;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UserCounts);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UserCounts other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Members != other.Members) return false;
        if (Online != other.Online) return false;
        if (Chatting != other.Chatting) return false;
        if (InGame != other.InGame) return false;
        if (ChatRoomMembers != other.ChatRoomMembers) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasMembers) hash ^= Members.GetHashCode();
        if (HasOnline) hash ^= Online.GetHashCode();
        if (HasChatting) hash ^= Chatting.GetHashCode();
        if (HasInGame) hash ^= InGame.GetHashCode();
        if (HasChatRoomMembers) hash ^= ChatRoomMembers.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasMembers) {
          output.WriteRawTag(8);
          output.WriteUInt32(Members);
        }
        if (HasOnline) {
          output.WriteRawTag(16);
          output.WriteUInt32(Online);
        }
        if (HasChatting) {
          output.WriteRawTag(24);
          output.WriteUInt32(Chatting);
        }
        if (HasInGame) {
          output.WriteRawTag(32);
          output.WriteUInt32(InGame);
        }
        if (HasChatRoomMembers) {
          output.WriteRawTag(40);
          output.WriteUInt32(ChatRoomMembers);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasMembers) {
          output.WriteRawTag(8);
          output.WriteUInt32(Members);
        }
        if (HasOnline) {
          output.WriteRawTag(16);
          output.WriteUInt32(Online);
        }
        if (HasChatting) {
          output.WriteRawTag(24);
          output.WriteUInt32(Chatting);
        }
        if (HasInGame) {
          output.WriteRawTag(32);
          output.WriteUInt32(InGame);
        }
        if (HasChatRoomMembers) {
          output.WriteRawTag(40);
          output.WriteUInt32(ChatRoomMembers);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasMembers) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Members);
        }
        if (HasOnline) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Online);
        }
        if (HasChatting) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Chatting);
        }
        if (HasInGame) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InGame);
        }
        if (HasChatRoomMembers) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChatRoomMembers);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UserCounts other) {
        if (other == null) {
          return;
        }
        if (other.HasMembers) {
          Members = other.Members;
        }
        if (other.HasOnline) {
          Online = other.Online;
        }
        if (other.HasChatting) {
          Chatting = other.Chatting;
        }
        if (other.HasInGame) {
          InGame = other.InGame;
        }
        if (other.HasChatRoomMembers) {
          ChatRoomMembers = other.ChatRoomMembers;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Members = input.ReadUInt32();
              break;
            }
            case 16: {
              Online = input.ReadUInt32();
              break;
            }
            case 24: {
              Chatting = input.ReadUInt32();
              break;
            }
            case 32: {
              InGame = input.ReadUInt32();
              break;
            }
            case 40: {
              ChatRoomMembers = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Members = input.ReadUInt32();
              break;
            }
            case 16: {
              Online = input.ReadUInt32();
              break;
            }
            case 24: {
              Chatting = input.ReadUInt32();
              break;
            }
            case 32: {
              InGame = input.ReadUInt32();
              break;
            }
            case 40: {
              ChatRoomMembers = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    public sealed partial class Event : pb::IMessage<Event>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Event> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgClientClanState.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Event() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Event(Event other) : this() {
        _hasBits0 = other._hasBits0;
        gid_ = other.gid_;
        eventTime_ = other.eventTime_;
        headline_ = other.headline_;
        gameId_ = other.gameId_;
        justPosted_ = other.justPosted_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Event Clone() {
        return new Event(this);
      }

      /// <summary>Field number for the "gid" field.</summary>
      public const int GidFieldNumber = 1;
      private readonly static ulong GidDefaultValue = 0UL;

      private ulong gid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Gid {
        get { if ((_hasBits0 & 1) != 0) { return gid_; } else { return GidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          gid_ = value;
        }
      }
      /// <summary>Gets whether the "gid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "gid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "event_time" field.</summary>
      public const int EventTimeFieldNumber = 2;
      private readonly static uint EventTimeDefaultValue = 0;

      private uint eventTime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint EventTime {
        get { if ((_hasBits0 & 2) != 0) { return eventTime_; } else { return EventTimeDefaultValue; } }
        set {
          _hasBits0 |= 2;
          eventTime_ = value;
        }
      }
      /// <summary>Gets whether the "event_time" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEventTime {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "event_time" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEventTime() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "headline" field.</summary>
      public const int HeadlineFieldNumber = 3;
      private readonly static string HeadlineDefaultValue = "";

      private string headline_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Headline {
        get { return headline_ ?? HeadlineDefaultValue; }
        set {
          headline_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "headline" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHeadline {
        get { return headline_ != null; }
      }
      /// <summary>Clears the value of the "headline" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHeadline() {
        headline_ = null;
      }

      /// <summary>Field number for the "game_id" field.</summary>
      public const int GameIdFieldNumber = 4;
      private readonly static ulong GameIdDefaultValue = 0UL;

      private ulong gameId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong GameId {
        get { if ((_hasBits0 & 4) != 0) { return gameId_; } else { return GameIdDefaultValue; } }
        set {
          _hasBits0 |= 4;
          gameId_ = value;
        }
      }
      /// <summary>Gets whether the "game_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameId {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "game_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameId() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "just_posted" field.</summary>
      public const int JustPostedFieldNumber = 5;
      private readonly static bool JustPostedDefaultValue = false;

      private bool justPosted_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool JustPosted {
        get { if ((_hasBits0 & 8) != 0) { return justPosted_; } else { return JustPostedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          justPosted_ = value;
        }
      }
      /// <summary>Gets whether the "just_posted" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasJustPosted {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "just_posted" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearJustPosted() {
        _hasBits0 &= ~8;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Event);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Event other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Gid != other.Gid) return false;
        if (EventTime != other.EventTime) return false;
        if (Headline != other.Headline) return false;
        if (GameId != other.GameId) return false;
        if (JustPosted != other.JustPosted) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasGid) hash ^= Gid.GetHashCode();
        if (HasEventTime) hash ^= EventTime.GetHashCode();
        if (HasHeadline) hash ^= Headline.GetHashCode();
        if (HasGameId) hash ^= GameId.GetHashCode();
        if (HasJustPosted) hash ^= JustPosted.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasGid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Gid);
        }
        if (HasEventTime) {
          output.WriteRawTag(16);
          output.WriteUInt32(EventTime);
        }
        if (HasHeadline) {
          output.WriteRawTag(26);
          output.WriteString(Headline);
        }
        if (HasGameId) {
          output.WriteRawTag(33);
          output.WriteFixed64(GameId);
        }
        if (HasJustPosted) {
          output.WriteRawTag(40);
          output.WriteBool(JustPosted);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasGid) {
          output.WriteRawTag(9);
          output.WriteFixed64(Gid);
        }
        if (HasEventTime) {
          output.WriteRawTag(16);
          output.WriteUInt32(EventTime);
        }
        if (HasHeadline) {
          output.WriteRawTag(26);
          output.WriteString(Headline);
        }
        if (HasGameId) {
          output.WriteRawTag(33);
          output.WriteFixed64(GameId);
        }
        if (HasJustPosted) {
          output.WriteRawTag(40);
          output.WriteBool(JustPosted);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasGid) {
          size += 1 + 8;
        }
        if (HasEventTime) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventTime);
        }
        if (HasHeadline) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Headline);
        }
        if (HasGameId) {
          size += 1 + 8;
        }
        if (HasJustPosted) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Event other) {
        if (other == null) {
          return;
        }
        if (other.HasGid) {
          Gid = other.Gid;
        }
        if (other.HasEventTime) {
          EventTime = other.EventTime;
        }
        if (other.HasHeadline) {
          Headline = other.Headline;
        }
        if (other.HasGameId) {
          GameId = other.GameId;
        }
        if (other.HasJustPosted) {
          JustPosted = other.JustPosted;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              Gid = input.ReadFixed64();
              break;
            }
            case 16: {
              EventTime = input.ReadUInt32();
              break;
            }
            case 26: {
              Headline = input.ReadString();
              break;
            }
            case 33: {
              GameId = input.ReadFixed64();
              break;
            }
            case 40: {
              JustPosted = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              Gid = input.ReadFixed64();
              break;
            }
            case 16: {
              EventTime = input.ReadUInt32();
              break;
            }
            case 26: {
              Headline = input.ReadString();
              break;
            }
            case 33: {
              GameId = input.ReadFixed64();
              break;
            }
            case 40: {
              JustPosted = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_clientserver_login.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages_clientserver_login.proto</summary>
public static partial class SteammessagesClientserverLoginReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages_clientserver_login.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesClientserverLoginReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiZzdGVhbW1lc3NhZ2VzX2NsaWVudHNlcnZlcl9sb2dpbi5wcm90bxoYc3Rl",
          "YW1tZXNzYWdlc19iYXNlLnByb3RvIikKE0NNc2dDbGllbnRIZWFydEJlYXQS",
          "EgoKc2VuZF9yZXBseRgBIAEoCCJECiBDTXNnQ2xpZW50U2VydmVyVGltZXN0",
          "YW1wUmVxdWVzdBIgChhjbGllbnRfcmVxdWVzdF90aW1lc3RhbXAYASABKAQi",
          "YgohQ01zZ0NsaWVudFNlcnZlclRpbWVzdGFtcFJlc3BvbnNlEiAKGGNsaWVu",
          "dF9yZXF1ZXN0X3RpbWVzdGFtcBgBIAEoBBIbChNzZXJ2ZXJfdGltZXN0YW1w",
          "X21zGAIgASgEImEKEENNc2dDbGllbnRTZWNyZXQSDwoHdmVyc2lvbhgBIAEo",
          "DRINCgVhcHBpZBgCIAEoDRIQCghkZXZpY2VpZBgDIAEoDRINCgVub25jZRgE",
          "IAEoBhIMCgRobWFjGAUgASgMIisKD0NNc2dDbGllbnRIZWxsbxIYChBwcm90",
          "b2NvbF92ZXJzaW9uGAEgASgNItMMCg9DTXNnQ2xpZW50TG9nb24SGAoQcHJv",
          "dG9jb2xfdmVyc2lvbhgBIAEoDRIqCiJkZXByZWNhdGVkX29iZnVzdHVjYXRl",
          "ZF9wcml2YXRlX2lwGAIgASgNEg8KB2NlbGxfaWQYAyABKA0SFwoPbGFzdF9z",
          "ZXNzaW9uX2lkGAQgASgNEh4KFmNsaWVudF9wYWNrYWdlX3ZlcnNpb24YBSAB",
          "KA0SFwoPY2xpZW50X2xhbmd1YWdlGAYgASgJEhYKDmNsaWVudF9vc190eXBl",
          "GAcgASgNEicKGHNob3VsZF9yZW1lbWJlcl9wYXNzd29yZBgIIAEoCDoFZmFs",
          "c2USFAoMd2luZV92ZXJzaW9uGAkgASgJEhUKDWRlcHJlY2F0ZWRfMTAYCiAB",
          "KA0SLQoVb2JmdXNjYXRlZF9wcml2YXRlX2lwGAsgASgLMg4uQ01zZ0lQQWRk",
          "cmVzcxIcChRkZXByZWNhdGVkX3B1YmxpY19pcBgUIAEoDRIRCglxb3NfbGV2",
          "ZWwYFSABKA0SIAoYY2xpZW50X3N1cHBsaWVkX3N0ZWFtX2lkGBYgASgGEiEK",
          "CXB1YmxpY19pcBgXIAEoCzIOLkNNc2dJUEFkZHJlc3MSEgoKbWFjaGluZV9p",
          "ZBgeIAEoDBIYCg1sYXVuY2hlcl90eXBlGB8gASgNOgEwEhIKB3VpX21vZGUY",
          "ICABKA06ATASFAoJY2hhdF9tb2RlGCEgASgNOgEwEhoKEnN0ZWFtMl9hdXRo",
          "X3RpY2tldBgpIAEoDBIVCg1lbWFpbF9hZGRyZXNzGCogASgJEiAKGHJ0aW1l",
          "MzJfYWNjb3VudF9jcmVhdGlvbhgrIAEoBxIUCgxhY2NvdW50X25hbWUYMiAB",
          "KAkSEAoIcGFzc3dvcmQYMyABKAkSGQoRZ2FtZV9zZXJ2ZXJfdG9rZW4YNCAB",
          "KAkSEQoJbG9naW5fa2V5GDwgASgJEisKHHdhc19jb252ZXJ0ZWRfZGVwcmVj",
          "YXRlZF9tc2cYRiABKAg6BWZhbHNlEiUKHWFub25fdXNlcl90YXJnZXRfYWNj",
          "b3VudF9uYW1lGFAgASgJEh4KFnJlc29sdmVkX3VzZXJfc3RlYW1faWQYUSAB",
          "KAYSGgoSZXJlc3VsdF9zZW50cnlmaWxlGFIgASgFEhYKDnNoYV9zZW50cnlm",
          "aWxlGFMgASgMEhEKCWF1dGhfY29kZRhUIAEoCRIQCghvdHBfdHlwZRhVIAEo",
          "BRIRCglvdHBfdmFsdWUYViABKA0SFgoOb3RwX2lkZW50aWZpZXIYVyABKAkS",
          "HQoVc3RlYW0yX3RpY2tldF9yZXF1ZXN0GFggASgIEhcKD3NvbnlfcHNuX3Rp",
          "Y2tldBhaIAEoDBIbChNzb255X3Bzbl9zZXJ2aWNlX2lkGFsgASgJEjYKJ2Ny",
          "ZWF0ZV9uZXdfcHNuX2xpbmtlZF9hY2NvdW50X2lmX25lZWRlZBhcIAEoCDoF",
          "ZmFsc2USFQoNc29ueV9wc25fbmFtZRhdIAEoCRIaChJnYW1lX3NlcnZlcl9h",
          "cHBfaWQYXiABKAUSKQohc3RlYW1ndWFyZF9kb250X3JlbWVtYmVyX2NvbXB1",
          "dGVyGF8gASgIEhQKDG1hY2hpbmVfbmFtZRhgIAEoCRIfChdtYWNoaW5lX25h",
          "bWVfdXNlcmNob3NlbhhhIAEoCRIYChBjb3VudHJ5X292ZXJyaWRlGGIgASgJ",
          "EhQKDGlzX3N0ZWFtX2JveBhjIAEoCBIaChJjbGllbnRfaW5zdGFuY2VfaWQY",
          "ZCABKAQSFwoPdHdvX2ZhY3Rvcl9jb2RlGGUgASgJEiQKHHN1cHBvcnRzX3Jh",
          "dGVfbGltaXRfcmVzcG9uc2UYZiABKAgSFwoPd2ViX2xvZ29uX25vbmNlGGcg",
          "ASgJEhcKD3ByaW9yaXR5X3JlYXNvbhhoIAEoBRIxChZlbWJlZGRlZF9jbGll",
          "bnRfc2VjcmV0GGkgASgLMhEuQ01zZ0NsaWVudFNlY3JldBIiChpkaXNhYmxl",
          "X3BhcnRuZXJfYXV0b2dyYW50cxhqIAEoCBIVCg1pc19zdGVhbV9kZWNrGGsg",
          "ASgIEhQKDGFjY2Vzc190b2tlbhhsIAEoCRIUCgxpc19jaHJvbWVfb3MYbSAB",
          "KAgSEAoIaXNfdGVzbGEYbiABKAgirgYKF0NNc2dDbGllbnRMb2dvblJlc3Bv",
          "bnNlEhIKB2VyZXN1bHQYASABKAU6ATISLAokbGVnYWN5X291dF9vZl9nYW1l",
          "X2hlYXJ0YmVhdF9zZWNvbmRzGAIgASgFEhkKEWhlYXJ0YmVhdF9zZWNvbmRz",
          "GAMgASgFEhwKFGRlcHJlY2F0ZWRfcHVibGljX2lwGAQgASgNEhsKE3J0aW1l",
          "MzJfc2VydmVyX3RpbWUYBSABKAcSFQoNYWNjb3VudF9mbGFncxgGIAEoDRIP",
          "CgdjZWxsX2lkGAcgASgNEhQKDGVtYWlsX2RvbWFpbhgIIAEoCRIVCg1zdGVh",
          "bTJfdGlja2V0GAkgASgMEhgKEGVyZXN1bHRfZXh0ZW5kZWQYCiABKAUSJgoe",
          "d2ViYXBpX2F1dGhlbnRpY2F0ZV91c2VyX25vbmNlGAsgASgJEh4KFmNlbGxf",
          "aWRfcGluZ190aHJlc2hvbGQYDCABKA0SGwoTZGVwcmVjYXRlZF91c2VfcGlj",
          "cxgNIAEoCBISCgp2YW5pdHlfdXJsGA4gASgJEiEKCXB1YmxpY19pcBgPIAEo",
          "CzIOLkNNc2dJUEFkZHJlc3MSFAoMdXNlcl9jb3VudHJ5GBAgASgJEh8KF2Ns",
          "aWVudF9zdXBwbGllZF9zdGVhbWlkGBQgASgGEhcKD2lwX2NvdW50cnlfY29k",
          "ZRgVIAEoCRIZChFwYXJlbnRhbF9zZXR0aW5ncxgWIAEoDBIiChpwYXJlbnRh",
          "bF9zZXR0aW5nX3NpZ25hdHVyZRgXIAEoDBImCh5jb3VudF9sb2dpbmZhaWx1",
          "cmVzX3RvX21pZ3JhdGUYGCABKAUSJAocY291bnRfZGlzY29ubmVjdHNfdG9f",
          "bWlncmF0ZRgZIAEoBRIjChtvZ3NfZGF0YV9yZXBvcnRfdGltZV93aW5kb3cY",
          "GiABKAUSGgoSY2xpZW50X2luc3RhbmNlX2lkGBsgASgEEiEKGWZvcmNlX2Ns",
          "aWVudF91cGRhdGVfY2hlY2sYHCABKAgSHQoVYWdyZWVtZW50X3Nlc3Npb25f",
          "dXJsGB0gASgJEhAKCHRva2VuX2lkGB4gASgEIkYKLENNc2dDbGllbnRSZXF1",
          "ZXN0V2ViQVBJQXV0aGVudGljYXRlVXNlck5vbmNlEhYKCnRva2VuX3R5cGUY",
          "ASABKAU6Ai0xIooBCjRDTXNnQ2xpZW50UmVxdWVzdFdlYkFQSUF1dGhlbnRp",
          "Y2F0ZVVzZXJOb25jZVJlc3BvbnNlEhIKB2VyZXN1bHQYASABKAU6ATISJgoe",
          "d2ViYXBpX2F1dGhlbnRpY2F0ZV91c2VyX25vbmNlGAsgASgJEhYKCnRva2Vu",
          "X3R5cGUYAyABKAU6Ai0xIhIKEENNc2dDbGllbnRMb2dPZmYiKQoTQ01zZ0Ns",
          "aWVudExvZ2dlZE9mZhISCgdlcmVzdWx0GAEgASgFOgEyIj0KFUNNc2dDbGll",
          "bnROZXdMb2dpbktleRIRCgl1bmlxdWVfaWQYASABKA0SEQoJbG9naW5fa2V5",
          "GAIgASgJIjIKHUNNc2dDbGllbnROZXdMb2dpbktleUFjY2VwdGVkEhEKCXVu",
          "aXF1ZV9pZBgBIAEoDSLHAgoVQ01zZ0NsaWVudEFjY291bnRJbmZvEhQKDHBl",
          "cnNvbmFfbmFtZRgBIAEoCRISCgppcF9jb3VudHJ5GAIgASgJEh4KFmNvdW50",
          "X2F1dGhlZF9jb21wdXRlcnMYBSABKAUSFQoNYWNjb3VudF9mbGFncxgHIAEo",
          "DRITCgtmYWNlYm9va19pZBgIIAEoBBIVCg1mYWNlYm9va19uYW1lGAkgASgJ",
          "EisKI3N0ZWFtZ3VhcmRfbWFjaGluZV9uYW1lX3VzZXJfY2hvc2VuGA8gASgJ",
          "EhkKEWlzX3Bob25lX3ZlcmlmaWVkGBAgASgIEhgKEHR3b19mYWN0b3Jfc3Rh",
          "dGUYESABKA0SHAoUaXNfcGhvbmVfaWRlbnRpZnlpbmcYEiABKAgSIQoZaXNf",
          "cGhvbmVfbmVlZGluZ19yZXZlcmlmeRgTIAEoCCItChpDTXNnQ2xpZW50Q2hh",
          "bGxlbmdlUmVxdWVzdBIPCgdzdGVhbWlkGAEgASgGIjAKG0NNc2dDbGllbnRD",
          "aGFsbGVuZ2VSZXNwb25zZRIRCgljaGFsbGVuZ2UYASABKAZCBUgBgAEA"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesBaseReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientHeartBeat), global::CMsgClientHeartBeat.Parser, new[]{ "SendReply" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientServerTimestampRequest), global::CMsgClientServerTimestampRequest.Parser, new[]{ "ClientRequestTimestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientServerTimestampResponse), global::CMsgClientServerTimestampResponse.Parser, new[]{ "ClientRequestTimestamp", "ServerTimestampMs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientSecret), global::CMsgClientSecret.Parser, new[]{ "Version", "Appid", "Deviceid", "Nonce", "Hmac" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientHello), global::CMsgClientHello.Parser, new[]{ "ProtocolVersion" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientLogon), global::CMsgClientLogon.Parser, new[]{ "ProtocolVersion", "DeprecatedObfustucatedPrivateIp", "CellId", "LastSessionId", "ClientPackageVersion", "ClientLanguage", "ClientOsType", "ShouldRememberPassword", "WineVersion", "Deprecated10", "ObfuscatedPrivateIp", "DeprecatedPublicIp", "QosLevel", "ClientSuppliedSteamId", "PublicIp", "MachineId", "LauncherType", "UiMode", "ChatMode", "Steam2AuthTicket", "EmailAddress", "Rtime32AccountCreation", "AccountName", "Password", "GameServerToken", "LoginKey", "WasConvertedDeprecatedMsg", "AnonUserTargetAccountName", "ResolvedUserSteamId", "EresultSentryfile", "ShaSentryfile", "AuthCode", "OtpType", "OtpValue", "OtpIdentifier", "Steam2TicketRequest", "SonyPsnTicket", "SonyPsnServiceId", "CreateNewPsnLinkedAccountIfNeeded", "SonyPsnName", "GameServerAppId", "SteamguardDontRememberComputer", "MachineName", "MachineNameUserchosen", "CountryOverride", "IsSteamBox", "ClientInstanceId", "TwoFactorCode", "SupportsRateLimitResponse", "WebLogonNonce", "PriorityReason", "EmbeddedClientSecret", "DisablePartnerAutogrants", "IsSteamDeck", "AccessToken", "IsChromeOs", "IsTesla" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientLogonResponse), global::CMsgClientLogonResponse.Parser, new[]{ "Eresult", "LegacyOutOfGameHeartbeatSeconds", "HeartbeatSeconds", "DeprecatedPublicIp", "Rtime32ServerTime", "AccountFlags", "CellId", "EmailDomain", "Steam2Ticket", "EresultExtended", "WebapiAuthenticateUserNonce", "CellIdPingThreshold", "DeprecatedUsePics", "VanityUrl", "PublicIp", "UserCountry", "ClientSuppliedSteamid", "IpCountryCode", "ParentalSettings", "ParentalSettingSignature", "CountLoginfailuresToMigrate", "CountDisconnectsToMigrate", "OgsDataReportTimeWindow", "ClientInstanceId", "ForceClientUpdateCheck", "AgreementSessionUrl", "TokenId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientRequestWebAPIAuthenticateUserNonce), global::CMsgClientRequestWebAPIAuthenticateUserNonce.Parser, new[]{ "TokenType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientRequestWebAPIAuthenticateUserNonceResponse), global::CMsgClientRequestWebAPIAuthenticateUserNonceResponse.Parser, new[]{ "Eresult", "WebapiAuthenticateUserNonce", "TokenType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientLogOff), global::CMsgClientLogOff.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientLoggedOff), global::CMsgClientLoggedOff.Parser, new[]{ "Eresult" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientNewLoginKey), global::CMsgClientNewLoginKey.Parser, new[]{ "UniqueId", "LoginKey" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientNewLoginKeyAccepted), global::CMsgClientNewLoginKeyAccepted.Parser, new[]{ "UniqueId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientAccountInfo), global::CMsgClientAccountInfo.Parser, new[]{ "PersonaName", "IpCountry", "CountAuthedComputers", "AccountFlags", "FacebookId", "FacebookName", "SteamguardMachineNameUserChosen", "IsPhoneVerified", "TwoFactorState", "IsPhoneIdentifying", "IsPhoneNeedingReverify" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientChallengeRequest), global::CMsgClientChallengeRequest.Parser, new[]{ "Steamid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgClientChallengeResponse), global::CMsgClientChallengeResponse.Parser, new[]{ "Challenge" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CMsgClientHeartBeat : pb::IMessage<CMsgClientHeartBeat>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientHeartBeat> _parser = new pb::MessageParser<CMsgClientHeartBeat>(() => new CMsgClientHeartBeat());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientHeartBeat> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientHeartBeat() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientHeartBeat(CMsgClientHeartBeat other) : this() {
    _hasBits0 = other._hasBits0;
    sendReply_ = other.sendReply_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientHeartBeat Clone() {
    return new CMsgClientHeartBeat(this);
  }

  /// <summary>Field number for the "send_reply" field.</summary>
  public const int SendReplyFieldNumber = 1;
  private readonly static bool SendReplyDefaultValue = false;

  private bool sendReply_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool SendReply {
    get { if ((_hasBits0 & 1) != 0) { return sendReply_; } else { return SendReplyDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sendReply_ = value;
    }
  }
  /// <summary>Gets whether the "send_reply" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSendReply {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "send_reply" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSendReply() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientHeartBeat);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientHeartBeat other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SendReply != other.SendReply) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSendReply) hash ^= SendReply.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSendReply) {
      output.WriteRawTag(8);
      output.WriteBool(SendReply);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSendReply) {
      output.WriteRawTag(8);
      output.WriteBool(SendReply);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSendReply) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientHeartBeat other) {
    if (other == null) {
      return;
    }
    if (other.HasSendReply) {
      SendReply = other.SendReply;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SendReply = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SendReply = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientServerTimestampRequest : pb::IMessage<CMsgClientServerTimestampRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientServerTimestampRequest> _parser = new pb::MessageParser<CMsgClientServerTimestampRequest>(() => new CMsgClientServerTimestampRequest());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientServerTimestampRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServerTimestampRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServerTimestampRequest(CMsgClientServerTimestampRequest other) : this() {
    _hasBits0 = other._hasBits0;
    clientRequestTimestamp_ = other.clientRequestTimestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServerTimestampRequest Clone() {
    return new CMsgClientServerTimestampRequest(this);
  }

  /// <summary>Field number for the "client_request_timestamp" field.</summary>
  public const int ClientRequestTimestampFieldNumber = 1;
  private readonly static ulong ClientRequestTimestampDefaultValue = 0UL;

  private ulong clientRequestTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientRequestTimestamp {
    get { if ((_hasBits0 & 1) != 0) { return clientRequestTimestamp_; } else { return ClientRequestTimestampDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clientRequestTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "client_request_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientRequestTimestamp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "client_request_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientRequestTimestamp() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientServerTimestampRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientServerTimestampRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientRequestTimestamp != other.ClientRequestTimestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasClientRequestTimestamp) hash ^= ClientRequestTimestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasClientRequestTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt64(ClientRequestTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasClientRequestTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt64(ClientRequestTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasClientRequestTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientRequestTimestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientServerTimestampRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasClientRequestTimestamp) {
      ClientRequestTimestamp = other.ClientRequestTimestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClientRequestTimestamp = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ClientRequestTimestamp = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientServerTimestampResponse : pb::IMessage<CMsgClientServerTimestampResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientServerTimestampResponse> _parser = new pb::MessageParser<CMsgClientServerTimestampResponse>(() => new CMsgClientServerTimestampResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientServerTimestampResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServerTimestampResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServerTimestampResponse(CMsgClientServerTimestampResponse other) : this() {
    _hasBits0 = other._hasBits0;
    clientRequestTimestamp_ = other.clientRequestTimestamp_;
    serverTimestampMs_ = other.serverTimestampMs_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientServerTimestampResponse Clone() {
    return new CMsgClientServerTimestampResponse(this);
  }

  /// <summary>Field number for the "client_request_timestamp" field.</summary>
  public const int ClientRequestTimestampFieldNumber = 1;
  private readonly static ulong ClientRequestTimestampDefaultValue = 0UL;

  private ulong clientRequestTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientRequestTimestamp {
    get { if ((_hasBits0 & 1) != 0) { return clientRequestTimestamp_; } else { return ClientRequestTimestampDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clientRequestTimestamp_ = value;
    }
  }
  /// <summary>Gets whether the "client_request_timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientRequestTimestamp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "client_request_timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientRequestTimestamp() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "server_timestamp_ms" field.</summary>
  public const int ServerTimestampMsFieldNumber = 2;
  private readonly static ulong ServerTimestampMsDefaultValue = 0UL;

  private ulong serverTimestampMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ServerTimestampMs {
    get { if ((_hasBits0 & 2) != 0) { return serverTimestampMs_; } else { return ServerTimestampMsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serverTimestampMs_ = value;
    }
  }
  /// <summary>Gets whether the "server_timestamp_ms" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerTimestampMs {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "server_timestamp_ms" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerTimestampMs() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientServerTimestampResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientServerTimestampResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientRequestTimestamp != other.ClientRequestTimestamp) return false;
    if (ServerTimestampMs != other.ServerTimestampMs) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasClientRequestTimestamp) hash ^= ClientRequestTimestamp.GetHashCode();
    if (HasServerTimestampMs) hash ^= ServerTimestampMs.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasClientRequestTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt64(ClientRequestTimestamp);
    }
    if (HasServerTimestampMs) {
      output.WriteRawTag(16);
      output.WriteUInt64(ServerTimestampMs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasClientRequestTimestamp) {
      output.WriteRawTag(8);
      output.WriteUInt64(ClientRequestTimestamp);
    }
    if (HasServerTimestampMs) {
      output.WriteRawTag(16);
      output.WriteUInt64(ServerTimestampMs);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasClientRequestTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientRequestTimestamp);
    }
    if (HasServerTimestampMs) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ServerTimestampMs);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientServerTimestampResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasClientRequestTimestamp) {
      ClientRequestTimestamp = other.ClientRequestTimestamp;
    }
    if (other.HasServerTimestampMs) {
      ServerTimestampMs = other.ServerTimestampMs;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClientRequestTimestamp = input.ReadUInt64();
          break;
        }
        case 16: {
          ServerTimestampMs = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ClientRequestTimestamp = input.ReadUInt64();
          break;
        }
        case 16: {
          ServerTimestampMs = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientSecret : pb::IMessage<CMsgClientSecret>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientSecret> _parser = new pb::MessageParser<CMsgClientSecret>(() => new CMsgClientSecret());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientSecret> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSecret() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSecret(CMsgClientSecret other) : this() {
    _hasBits0 = other._hasBits0;
    version_ = other.version_;
    appid_ = other.appid_;
    deviceid_ = other.deviceid_;
    nonce_ = other.nonce_;
    hmac_ = other.hmac_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientSecret Clone() {
    return new CMsgClientSecret(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 1;
  private readonly static uint VersionDefaultValue = 0;

  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Version {
    get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "deviceid" field.</summary>
  public const int DeviceidFieldNumber = 3;
  private readonly static uint DeviceidDefaultValue = 0;

  private uint deviceid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Deviceid {
    get { if ((_hasBits0 & 4) != 0) { return deviceid_; } else { return DeviceidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      deviceid_ = value;
    }
  }
  /// <summary>Gets whether the "deviceid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeviceid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "deviceid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeviceid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "nonce" field.</summary>
  public const int NonceFieldNumber = 4;
  private readonly static ulong NonceDefaultValue = 0UL;

  private ulong nonce_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Nonce {
    get { if ((_hasBits0 & 8) != 0) { return nonce_; } else { return NonceDefaultValue; } }
    set {
      _hasBits0 |= 8;
      nonce_ = value;
    }
  }
  /// <summary>Gets whether the "nonce" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNonce {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "nonce" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNonce() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "hmac" field.</summary>
  public const int HmacFieldNumber = 5;
  private readonly static pb::ByteString HmacDefaultValue = pb::ByteString.Empty;

  private pb::ByteString hmac_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Hmac {
    get { return hmac_ ?? HmacDefaultValue; }
    set {
      hmac_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "hmac" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHmac {
    get { return hmac_ != null; }
  }
  /// <summary>Clears the value of the "hmac" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHmac() {
    hmac_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientSecret);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientSecret other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Version != other.Version) return false;
    if (Appid != other.Appid) return false;
    if (Deviceid != other.Deviceid) return false;
    if (Nonce != other.Nonce) return false;
    if (Hmac != other.Hmac) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVersion) hash ^= Version.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasDeviceid) hash ^= Deviceid.GetHashCode();
    if (HasNonce) hash ^= Nonce.GetHashCode();
    if (HasHmac) hash ^= Hmac.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasDeviceid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Deviceid);
    }
    if (HasNonce) {
      output.WriteRawTag(33);
      output.WriteFixed64(Nonce);
    }
    if (HasHmac) {
      output.WriteRawTag(42);
      output.WriteBytes(Hmac);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (HasDeviceid) {
      output.WriteRawTag(24);
      output.WriteUInt32(Deviceid);
    }
    if (HasNonce) {
      output.WriteRawTag(33);
      output.WriteFixed64(Nonce);
    }
    if (HasHmac) {
      output.WriteRawTag(42);
      output.WriteBytes(Hmac);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasDeviceid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deviceid);
    }
    if (HasNonce) {
      size += 1 + 8;
    }
    if (HasHmac) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hmac);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientSecret other) {
    if (other == null) {
      return;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasDeviceid) {
      Deviceid = other.Deviceid;
    }
    if (other.HasNonce) {
      Nonce = other.Nonce;
    }
    if (other.HasHmac) {
      Hmac = other.Hmac;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 24: {
          Deviceid = input.ReadUInt32();
          break;
        }
        case 33: {
          Nonce = input.ReadFixed64();
          break;
        }
        case 42: {
          Hmac = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
        case 24: {
          Deviceid = input.ReadUInt32();
          break;
        }
        case 33: {
          Nonce = input.ReadFixed64();
          break;
        }
        case 42: {
          Hmac = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientHello : pb::IMessage<CMsgClientHello>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientHello> _parser = new pb::MessageParser<CMsgClientHello>(() => new CMsgClientHello());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientHello> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientHello() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientHello(CMsgClientHello other) : this() {
    _hasBits0 = other._hasBits0;
    protocolVersion_ = other.protocolVersion_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientHello Clone() {
    return new CMsgClientHello(this);
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 1;
  private readonly static uint ProtocolVersionDefaultValue = 0;

  private uint protocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProtocolVersion {
    get { if ((_hasBits0 & 1) != 0) { return protocolVersion_; } else { return ProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      protocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocolVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocolVersion() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientHello);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientHello other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProtocolVersion != other.ProtocolVersion) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasProtocolVersion) hash ^= ProtocolVersion.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasProtocolVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasProtocolVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(ProtocolVersion);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientHello other) {
    if (other == null) {
      return;
    }
    if (other.HasProtocolVersion) {
      ProtocolVersion = other.ProtocolVersion;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientLogon : pb::IMessage<CMsgClientLogon>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientLogon> _parser = new pb::MessageParser<CMsgClientLogon>(() => new CMsgClientLogon());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  private int _hasBits1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientLogon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogon(CMsgClientLogon other) : this() {
    _hasBits0 = other._hasBits0;
    _hasBits1 = other._hasBits1;
    protocolVersion_ = other.protocolVersion_;
    deprecatedObfustucatedPrivateIp_ = other.deprecatedObfustucatedPrivateIp_;
    cellId_ = other.cellId_;
    lastSessionId_ = other.lastSessionId_;
    clientPackageVersion_ = other.clientPackageVersion_;
    clientLanguage_ = other.clientLanguage_;
    clientOsType_ = other.clientOsType_;
    shouldRememberPassword_ = other.shouldRememberPassword_;
    wineVersion_ = other.wineVersion_;
    deprecated10_ = other.deprecated10_;
    obfuscatedPrivateIp_ = other.obfuscatedPrivateIp_ != null ? other.obfuscatedPrivateIp_.Clone() : null;
    deprecatedPublicIp_ = other.deprecatedPublicIp_;
    qosLevel_ = other.qosLevel_;
    clientSuppliedSteamId_ = other.clientSuppliedSteamId_;
    publicIp_ = other.publicIp_ != null ? other.publicIp_.Clone() : null;
    machineId_ = other.machineId_;
    launcherType_ = other.launcherType_;
    uiMode_ = other.uiMode_;
    chatMode_ = other.chatMode_;
    steam2AuthTicket_ = other.steam2AuthTicket_;
    emailAddress_ = other.emailAddress_;
    rtime32AccountCreation_ = other.rtime32AccountCreation_;
    accountName_ = other.accountName_;
    password_ = other.password_;
    gameServerToken_ = other.gameServerToken_;
    loginKey_ = other.loginKey_;
    wasConvertedDeprecatedMsg_ = other.wasConvertedDeprecatedMsg_;
    anonUserTargetAccountName_ = other.anonUserTargetAccountName_;
    resolvedUserSteamId_ = other.resolvedUserSteamId_;
    eresultSentryfile_ = other.eresultSentryfile_;
    shaSentryfile_ = other.shaSentryfile_;
    authCode_ = other.authCode_;
    otpType_ = other.otpType_;
    otpValue_ = other.otpValue_;
    otpIdentifier_ = other.otpIdentifier_;
    steam2TicketRequest_ = other.steam2TicketRequest_;
    sonyPsnTicket_ = other.sonyPsnTicket_;
    sonyPsnServiceId_ = other.sonyPsnServiceId_;
    createNewPsnLinkedAccountIfNeeded_ = other.createNewPsnLinkedAccountIfNeeded_;
    sonyPsnName_ = other.sonyPsnName_;
    gameServerAppId_ = other.gameServerAppId_;
    steamguardDontRememberComputer_ = other.steamguardDontRememberComputer_;
    machineName_ = other.machineName_;
    machineNameUserchosen_ = other.machineNameUserchosen_;
    countryOverride_ = other.countryOverride_;
    isSteamBox_ = other.isSteamBox_;
    clientInstanceId_ = other.clientInstanceId_;
    twoFactorCode_ = other.twoFactorCode_;
    supportsRateLimitResponse_ = other.supportsRateLimitResponse_;
    webLogonNonce_ = other.webLogonNonce_;
    priorityReason_ = other.priorityReason_;
    embeddedClientSecret_ = other.embeddedClientSecret_ != null ? other.embeddedClientSecret_.Clone() : null;
    disablePartnerAutogrants_ = other.disablePartnerAutogrants_;
    isSteamDeck_ = other.isSteamDeck_;
    accessToken_ = other.accessToken_;
    isChromeOs_ = other.isChromeOs_;
    isTesla_ = other.isTesla_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogon Clone() {
    return new CMsgClientLogon(this);
  }

  /// <summary>Field number for the "protocol_version" field.</summary>
  public const int ProtocolVersionFieldNumber = 1;
  private readonly static uint ProtocolVersionDefaultValue = 0;

  private uint protocolVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProtocolVersion {
    get { if ((_hasBits0 & 1) != 0) { return protocolVersion_; } else { return ProtocolVersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      protocolVersion_ = value;
    }
  }
  /// <summary>Gets whether the "protocol_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocolVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "protocol_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocolVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "deprecated_obfustucated_private_ip" field.</summary>
  public const int DeprecatedObfustucatedPrivateIpFieldNumber = 2;
  private readonly static uint DeprecatedObfustucatedPrivateIpDefaultValue = 0;

  private uint deprecatedObfustucatedPrivateIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DeprecatedObfustucatedPrivateIp {
    get { if ((_hasBits0 & 2) != 0) { return deprecatedObfustucatedPrivateIp_; } else { return DeprecatedObfustucatedPrivateIpDefaultValue; } }
    set {
      _hasBits0 |= 2;
      deprecatedObfustucatedPrivateIp_ = value;
    }
  }
  /// <summary>Gets whether the "deprecated_obfustucated_private_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeprecatedObfustucatedPrivateIp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "deprecated_obfustucated_private_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeprecatedObfustucatedPrivateIp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "cell_id" field.</summary>
  public const int CellIdFieldNumber = 3;
  private readonly static uint CellIdDefaultValue = 0;

  private uint cellId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CellId {
    get { if ((_hasBits0 & 4) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      cellId_ = value;
    }
  }
  /// <summary>Gets whether the "cell_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCellId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "cell_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCellId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "last_session_id" field.</summary>
  public const int LastSessionIdFieldNumber = 4;
  private readonly static uint LastSessionIdDefaultValue = 0;

  private uint lastSessionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LastSessionId {
    get { if ((_hasBits0 & 8) != 0) { return lastSessionId_; } else { return LastSessionIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      lastSessionId_ = value;
    }
  }
  /// <summary>Gets whether the "last_session_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastSessionId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "last_session_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastSessionId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "client_package_version" field.</summary>
  public const int ClientPackageVersionFieldNumber = 5;
  private readonly static uint ClientPackageVersionDefaultValue = 0;

  private uint clientPackageVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientPackageVersion {
    get { if ((_hasBits0 & 16) != 0) { return clientPackageVersion_; } else { return ClientPackageVersionDefaultValue; } }
    set {
      _hasBits0 |= 16;
      clientPackageVersion_ = value;
    }
  }
  /// <summary>Gets whether the "client_package_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientPackageVersion {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "client_package_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientPackageVersion() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "client_language" field.</summary>
  public const int ClientLanguageFieldNumber = 6;
  private readonly static string ClientLanguageDefaultValue = "";

  private string clientLanguage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ClientLanguage {
    get { return clientLanguage_ ?? ClientLanguageDefaultValue; }
    set {
      clientLanguage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "client_language" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientLanguage {
    get { return clientLanguage_ != null; }
  }
  /// <summary>Clears the value of the "client_language" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientLanguage() {
    clientLanguage_ = null;
  }

  /// <summary>Field number for the "client_os_type" field.</summary>
  public const int ClientOsTypeFieldNumber = 7;
  private readonly static uint ClientOsTypeDefaultValue = 0;

  private uint clientOsType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ClientOsType {
    get { if ((_hasBits0 & 32) != 0) { return clientOsType_; } else { return ClientOsTypeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      clientOsType_ = value;
    }
  }
  /// <summary>Gets whether the "client_os_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientOsType {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "client_os_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientOsType() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "should_remember_password" field.</summary>
  public const int ShouldRememberPasswordFieldNumber = 8;
  private readonly static bool ShouldRememberPasswordDefaultValue = false;

  private bool shouldRememberPassword_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ShouldRememberPassword {
    get { if ((_hasBits0 & 64) != 0) { return shouldRememberPassword_; } else { return ShouldRememberPasswordDefaultValue; } }
    set {
      _hasBits0 |= 64;
      shouldRememberPassword_ = value;
    }
  }
  /// <summary>Gets whether the "should_remember_password" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShouldRememberPassword {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "should_remember_password" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShouldRememberPassword() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "wine_version" field.</summary>
  public const int WineVersionFieldNumber = 9;
  private readonly static string WineVersionDefaultValue = "";

  private string wineVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WineVersion {
    get { return wineVersion_ ?? WineVersionDefaultValue; }
    set {
      wineVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "wine_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWineVersion {
    get { return wineVersion_ != null; }
  }
  /// <summary>Clears the value of the "wine_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWineVersion() {
    wineVersion_ = null;
  }

  /// <summary>Field number for the "deprecated_10" field.</summary>
  public const int Deprecated10FieldNumber = 10;
  private readonly static uint Deprecated10DefaultValue = 0;

  private uint deprecated10_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Deprecated10 {
    get { if ((_hasBits0 & 128) != 0) { return deprecated10_; } else { return Deprecated10DefaultValue; } }
    set {
      _hasBits0 |= 128;
      deprecated10_ = value;
    }
  }
  /// <summary>Gets whether the "deprecated_10" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeprecated10 {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "deprecated_10" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeprecated10() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "obfuscated_private_ip" field.</summary>
  public const int ObfuscatedPrivateIpFieldNumber = 11;
  private global::CMsgIPAddress obfuscatedPrivateIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgIPAddress ObfuscatedPrivateIp {
    get { return obfuscatedPrivateIp_; }
    set {
      obfuscatedPrivateIp_ = value;
    }
  }

  /// <summary>Field number for the "deprecated_public_ip" field.</summary>
  public const int DeprecatedPublicIpFieldNumber = 20;
  private readonly static uint DeprecatedPublicIpDefaultValue = 0;

  private uint deprecatedPublicIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DeprecatedPublicIp {
    get { if ((_hasBits0 & 256) != 0) { return deprecatedPublicIp_; } else { return DeprecatedPublicIpDefaultValue; } }
    set {
      _hasBits0 |= 256;
      deprecatedPublicIp_ = value;
    }
  }
  /// <summary>Gets whether the "deprecated_public_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeprecatedPublicIp {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "deprecated_public_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeprecatedPublicIp() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "qos_level" field.</summary>
  public const int QosLevelFieldNumber = 21;
  private readonly static uint QosLevelDefaultValue = 0;

  private uint qosLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint QosLevel {
    get { if ((_hasBits0 & 512) != 0) { return qosLevel_; } else { return QosLevelDefaultValue; } }
    set {
      _hasBits0 |= 512;
      qosLevel_ = value;
    }
  }
  /// <summary>Gets whether the "qos_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQosLevel {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "qos_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQosLevel() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "client_supplied_steam_id" field.</summary>
  public const int ClientSuppliedSteamIdFieldNumber = 22;
  private readonly static ulong ClientSuppliedSteamIdDefaultValue = 0UL;

  private ulong clientSuppliedSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientSuppliedSteamId {
    get { if ((_hasBits0 & 1024) != 0) { return clientSuppliedSteamId_; } else { return ClientSuppliedSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      clientSuppliedSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "client_supplied_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientSuppliedSteamId {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "client_supplied_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientSuppliedSteamId() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "public_ip" field.</summary>
  public const int PublicIpFieldNumber = 23;
  private global::CMsgIPAddress publicIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgIPAddress PublicIp {
    get { return publicIp_; }
    set {
      publicIp_ = value;
    }
  }

  /// <summary>Field number for the "machine_id" field.</summary>
  public const int MachineIdFieldNumber = 30;
  private readonly static pb::ByteString MachineIdDefaultValue = pb::ByteString.Empty;

  private pb::ByteString machineId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString MachineId {
    get { return machineId_ ?? MachineIdDefaultValue; }
    set {
      machineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "machine_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMachineId {
    get { return machineId_ != null; }
  }
  /// <summary>Clears the value of the "machine_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMachineId() {
    machineId_ = null;
  }

  /// <summary>Field number for the "launcher_type" field.</summary>
  public const int LauncherTypeFieldNumber = 31;
  private readonly static uint LauncherTypeDefaultValue = 0;

  private uint launcherType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LauncherType {
    get { if ((_hasBits0 & 2048) != 0) { return launcherType_; } else { return LauncherTypeDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      launcherType_ = value;
    }
  }
  /// <summary>Gets whether the "launcher_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLauncherType {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "launcher_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLauncherType() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "ui_mode" field.</summary>
  public const int UiModeFieldNumber = 32;
  private readonly static uint UiModeDefaultValue = 0;

  private uint uiMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UiMode {
    get { if ((_hasBits0 & 4096) != 0) { return uiMode_; } else { return UiModeDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      uiMode_ = value;
    }
  }
  /// <summary>Gets whether the "ui_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUiMode {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "ui_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUiMode() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "chat_mode" field.</summary>
  public const int ChatModeFieldNumber = 33;
  private readonly static uint ChatModeDefaultValue = 0;

  private uint chatMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ChatMode {
    get { if ((_hasBits0 & 8192) != 0) { return chatMode_; } else { return ChatModeDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      chatMode_ = value;
    }
  }
  /// <summary>Gets whether the "chat_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChatMode {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "chat_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChatMode() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "steam2_auth_ticket" field.</summary>
  public const int Steam2AuthTicketFieldNumber = 41;
  private readonly static pb::ByteString Steam2AuthTicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString steam2AuthTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Steam2AuthTicket {
    get { return steam2AuthTicket_ ?? Steam2AuthTicketDefaultValue; }
    set {
      steam2AuthTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "steam2_auth_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteam2AuthTicket {
    get { return steam2AuthTicket_ != null; }
  }
  /// <summary>Clears the value of the "steam2_auth_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteam2AuthTicket() {
    steam2AuthTicket_ = null;
  }

  /// <summary>Field number for the "email_address" field.</summary>
  public const int EmailAddressFieldNumber = 42;
  private readonly static string EmailAddressDefaultValue = "";

  private string emailAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EmailAddress {
    get { return emailAddress_ ?? EmailAddressDefaultValue; }
    set {
      emailAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "email_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEmailAddress {
    get { return emailAddress_ != null; }
  }
  /// <summary>Clears the value of the "email_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEmailAddress() {
    emailAddress_ = null;
  }

  /// <summary>Field number for the "rtime32_account_creation" field.</summary>
  public const int Rtime32AccountCreationFieldNumber = 43;
  private readonly static uint Rtime32AccountCreationDefaultValue = 0;

  private uint rtime32AccountCreation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32AccountCreation {
    get { if ((_hasBits0 & 16384) != 0) { return rtime32AccountCreation_; } else { return Rtime32AccountCreationDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      rtime32AccountCreation_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_account_creation" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32AccountCreation {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_account_creation" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32AccountCreation() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "account_name" field.</summary>
  public const int AccountNameFieldNumber = 50;
  private readonly static string AccountNameDefaultValue = "";

  private string accountName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AccountName {
    get { return accountName_ ?? AccountNameDefaultValue; }
    set {
      accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "account_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountName {
    get { return accountName_ != null; }
  }
  /// <summary>Clears the value of the "account_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountName() {
    accountName_ = null;
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 51;
  private readonly static string PasswordDefaultValue = "";

  private string password_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Password {
    get { return password_ ?? PasswordDefaultValue; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "password" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPassword {
    get { return password_ != null; }
  }
  /// <summary>Clears the value of the "password" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPassword() {
    password_ = null;
  }

  /// <summary>Field number for the "game_server_token" field.</summary>
  public const int GameServerTokenFieldNumber = 52;
  private readonly static string GameServerTokenDefaultValue = "";

  private string gameServerToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameServerToken {
    get { return gameServerToken_ ?? GameServerTokenDefaultValue; }
    set {
      gameServerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_server_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameServerToken {
    get { return gameServerToken_ != null; }
  }
  /// <summary>Clears the value of the "game_server_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameServerToken() {
    gameServerToken_ = null;
  }

  /// <summary>Field number for the "login_key" field.</summary>
  public const int LoginKeyFieldNumber = 60;
  private readonly static string LoginKeyDefaultValue = "";

  private string loginKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LoginKey {
    get { return loginKey_ ?? LoginKeyDefaultValue; }
    set {
      loginKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "login_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLoginKey {
    get { return loginKey_ != null; }
  }
  /// <summary>Clears the value of the "login_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLoginKey() {
    loginKey_ = null;
  }

  /// <summary>Field number for the "was_converted_deprecated_msg" field.</summary>
  public const int WasConvertedDeprecatedMsgFieldNumber = 70;
  private readonly static bool WasConvertedDeprecatedMsgDefaultValue = false;

  private bool wasConvertedDeprecatedMsg_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool WasConvertedDeprecatedMsg {
    get { if ((_hasBits0 & 32768) != 0) { return wasConvertedDeprecatedMsg_; } else { return WasConvertedDeprecatedMsgDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      wasConvertedDeprecatedMsg_ = value;
    }
  }
  /// <summary>Gets whether the "was_converted_deprecated_msg" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWasConvertedDeprecatedMsg {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "was_converted_deprecated_msg" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWasConvertedDeprecatedMsg() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "anon_user_target_account_name" field.</summary>
  public const int AnonUserTargetAccountNameFieldNumber = 80;
  private readonly static string AnonUserTargetAccountNameDefaultValue = "";

  private string anonUserTargetAccountName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AnonUserTargetAccountName {
    get { return anonUserTargetAccountName_ ?? AnonUserTargetAccountNameDefaultValue; }
    set {
      anonUserTargetAccountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "anon_user_target_account_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAnonUserTargetAccountName {
    get { return anonUserTargetAccountName_ != null; }
  }
  /// <summary>Clears the value of the "anon_user_target_account_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAnonUserTargetAccountName() {
    anonUserTargetAccountName_ = null;
  }

  /// <summary>Field number for the "resolved_user_steam_id" field.</summary>
  public const int ResolvedUserSteamIdFieldNumber = 81;
  private readonly static ulong ResolvedUserSteamIdDefaultValue = 0UL;

  private ulong resolvedUserSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ResolvedUserSteamId {
    get { if ((_hasBits0 & 65536) != 0) { return resolvedUserSteamId_; } else { return ResolvedUserSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      resolvedUserSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "resolved_user_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasResolvedUserSteamId {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "resolved_user_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearResolvedUserSteamId() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "eresult_sentryfile" field.</summary>
  public const int EresultSentryfileFieldNumber = 82;
  private readonly static int EresultSentryfileDefaultValue = 0;

  private int eresultSentryfile_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EresultSentryfile {
    get { if ((_hasBits0 & 131072) != 0) { return eresultSentryfile_; } else { return EresultSentryfileDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      eresultSentryfile_ = value;
    }
  }
  /// <summary>Gets whether the "eresult_sentryfile" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresultSentryfile {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "eresult_sentryfile" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresultSentryfile() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "sha_sentryfile" field.</summary>
  public const int ShaSentryfileFieldNumber = 83;
  private readonly static pb::ByteString ShaSentryfileDefaultValue = pb::ByteString.Empty;

  private pb::ByteString shaSentryfile_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ShaSentryfile {
    get { return shaSentryfile_ ?? ShaSentryfileDefaultValue; }
    set {
      shaSentryfile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sha_sentryfile" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShaSentryfile {
    get { return shaSentryfile_ != null; }
  }
  /// <summary>Clears the value of the "sha_sentryfile" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShaSentryfile() {
    shaSentryfile_ = null;
  }

  /// <summary>Field number for the "auth_code" field.</summary>
  public const int AuthCodeFieldNumber = 84;
  private readonly static string AuthCodeDefaultValue = "";

  private string authCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AuthCode {
    get { return authCode_ ?? AuthCodeDefaultValue; }
    set {
      authCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "auth_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuthCode {
    get { return authCode_ != null; }
  }
  /// <summary>Clears the value of the "auth_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuthCode() {
    authCode_ = null;
  }

  /// <summary>Field number for the "otp_type" field.</summary>
  public const int OtpTypeFieldNumber = 85;
  private readonly static int OtpTypeDefaultValue = 0;

  private int otpType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int OtpType {
    get { if ((_hasBits0 & 262144) != 0) { return otpType_; } else { return OtpTypeDefaultValue; } }
    set {
      _hasBits0 |= 262144;
      otpType_ = value;
    }
  }
  /// <summary>Gets whether the "otp_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtpType {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "otp_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtpType() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "otp_value" field.</summary>
  public const int OtpValueFieldNumber = 86;
  private readonly static uint OtpValueDefaultValue = 0;

  private uint otpValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OtpValue {
    get { if ((_hasBits0 & 524288) != 0) { return otpValue_; } else { return OtpValueDefaultValue; } }
    set {
      _hasBits0 |= 524288;
      otpValue_ = value;
    }
  }
  /// <summary>Gets whether the "otp_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtpValue {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "otp_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtpValue() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "otp_identifier" field.</summary>
  public const int OtpIdentifierFieldNumber = 87;
  private readonly static string OtpIdentifierDefaultValue = "";

  private string otpIdentifier_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string OtpIdentifier {
    get { return otpIdentifier_ ?? OtpIdentifierDefaultValue; }
    set {
      otpIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "otp_identifier" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtpIdentifier {
    get { return otpIdentifier_ != null; }
  }
  /// <summary>Clears the value of the "otp_identifier" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtpIdentifier() {
    otpIdentifier_ = null;
  }

  /// <summary>Field number for the "steam2_ticket_request" field.</summary>
  public const int Steam2TicketRequestFieldNumber = 88;
  private readonly static bool Steam2TicketRequestDefaultValue = false;

  private bool steam2TicketRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Steam2TicketRequest {
    get { if ((_hasBits0 & 1048576) != 0) { return steam2TicketRequest_; } else { return Steam2TicketRequestDefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      steam2TicketRequest_ = value;
    }
  }
  /// <summary>Gets whether the "steam2_ticket_request" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteam2TicketRequest {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "steam2_ticket_request" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteam2TicketRequest() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "sony_psn_ticket" field.</summary>
  public const int SonyPsnTicketFieldNumber = 90;
  private readonly static pb::ByteString SonyPsnTicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString sonyPsnTicket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SonyPsnTicket {
    get { return sonyPsnTicket_ ?? SonyPsnTicketDefaultValue; }
    set {
      sonyPsnTicket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sony_psn_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSonyPsnTicket {
    get { return sonyPsnTicket_ != null; }
  }
  /// <summary>Clears the value of the "sony_psn_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSonyPsnTicket() {
    sonyPsnTicket_ = null;
  }

  /// <summary>Field number for the "sony_psn_service_id" field.</summary>
  public const int SonyPsnServiceIdFieldNumber = 91;
  private readonly static string SonyPsnServiceIdDefaultValue = "";

  private string sonyPsnServiceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SonyPsnServiceId {
    get { return sonyPsnServiceId_ ?? SonyPsnServiceIdDefaultValue; }
    set {
      sonyPsnServiceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sony_psn_service_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSonyPsnServiceId {
    get { return sonyPsnServiceId_ != null; }
  }
  /// <summary>Clears the value of the "sony_psn_service_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSonyPsnServiceId() {
    sonyPsnServiceId_ = null;
  }

  /// <summary>Field number for the "create_new_psn_linked_account_if_needed" field.</summary>
  public const int CreateNewPsnLinkedAccountIfNeededFieldNumber = 92;
  private readonly static bool CreateNewPsnLinkedAccountIfNeededDefaultValue = false;

  private bool createNewPsnLinkedAccountIfNeeded_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CreateNewPsnLinkedAccountIfNeeded {
    get { if ((_hasBits0 & 2097152) != 0) { return createNewPsnLinkedAccountIfNeeded_; } else { return CreateNewPsnLinkedAccountIfNeededDefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      createNewPsnLinkedAccountIfNeeded_ = value;
    }
  }
  /// <summary>Gets whether the "create_new_psn_linked_account_if_needed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreateNewPsnLinkedAccountIfNeeded {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "create_new_psn_linked_account_if_needed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreateNewPsnLinkedAccountIfNeeded() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "sony_psn_name" field.</summary>
  public const int SonyPsnNameFieldNumber = 93;
  private readonly static string SonyPsnNameDefaultValue = "";

  private string sonyPsnName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SonyPsnName {
    get { return sonyPsnName_ ?? SonyPsnNameDefaultValue; }
    set {
      sonyPsnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sony_psn_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSonyPsnName {
    get { return sonyPsnName_ != null; }
  }
  /// <summary>Clears the value of the "sony_psn_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSonyPsnName() {
    sonyPsnName_ = null;
  }

  /// <summary>Field number for the "game_server_app_id" field.</summary>
  public const int GameServerAppIdFieldNumber = 94;
  private readonly static int GameServerAppIdDefaultValue = 0;

  private int gameServerAppId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int GameServerAppId {
    get { if ((_hasBits0 & 4194304) != 0) { return gameServerAppId_; } else { return GameServerAppIdDefaultValue; } }
    set {
      _hasBits0 |= 4194304;
      gameServerAppId_ = value;
    }
  }
  /// <summary>Gets whether the "game_server_app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameServerAppId {
    get { return (_hasBits0 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "game_server_app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameServerAppId() {
    _hasBits0 &= ~4194304;
  }

  /// <summary>Field number for the "steamguard_dont_remember_computer" field.</summary>
  public const int SteamguardDontRememberComputerFieldNumber = 95;
  private readonly static bool SteamguardDontRememberComputerDefaultValue = false;

  private bool steamguardDontRememberComputer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool SteamguardDontRememberComputer {
    get { if ((_hasBits0 & 8388608) != 0) { return steamguardDontRememberComputer_; } else { return SteamguardDontRememberComputerDefaultValue; } }
    set {
      _hasBits0 |= 8388608;
      steamguardDontRememberComputer_ = value;
    }
  }
  /// <summary>Gets whether the "steamguard_dont_remember_computer" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamguardDontRememberComputer {
    get { return (_hasBits0 & 8388608) != 0; }
  }
  /// <summary>Clears the value of the "steamguard_dont_remember_computer" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamguardDontRememberComputer() {
    _hasBits0 &= ~8388608;
  }

  /// <summary>Field number for the "machine_name" field.</summary>
  public const int MachineNameFieldNumber = 96;
  private readonly static string MachineNameDefaultValue = "";

  private string machineName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MachineName {
    get { return machineName_ ?? MachineNameDefaultValue; }
    set {
      machineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "machine_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMachineName {
    get { return machineName_ != null; }
  }
  /// <summary>Clears the value of the "machine_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMachineName() {
    machineName_ = null;
  }

  /// <summary>Field number for the "machine_name_userchosen" field.</summary>
  public const int MachineNameUserchosenFieldNumber = 97;
  private readonly static string MachineNameUserchosenDefaultValue = "";

  private string machineNameUserchosen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MachineNameUserchosen {
    get { return machineNameUserchosen_ ?? MachineNameUserchosenDefaultValue; }
    set {
      machineNameUserchosen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "machine_name_userchosen" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMachineNameUserchosen {
    get { return machineNameUserchosen_ != null; }
  }
  /// <summary>Clears the value of the "machine_name_userchosen" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMachineNameUserchosen() {
    machineNameUserchosen_ = null;
  }

  /// <summary>Field number for the "country_override" field.</summary>
  public const int CountryOverrideFieldNumber = 98;
  private readonly static string CountryOverrideDefaultValue = "";

  private string countryOverride_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CountryOverride {
    get { return countryOverride_ ?? CountryOverrideDefaultValue; }
    set {
      countryOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "country_override" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountryOverride {
    get { return countryOverride_ != null; }
  }
  /// <summary>Clears the value of the "country_override" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountryOverride() {
    countryOverride_ = null;
  }

  /// <summary>Field number for the "is_steam_box" field.</summary>
  public const int IsSteamBoxFieldNumber = 99;
  private readonly static bool IsSteamBoxDefaultValue = false;

  private bool isSteamBox_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsSteamBox {
    get { if ((_hasBits0 & 16777216) != 0) { return isSteamBox_; } else { return IsSteamBoxDefaultValue; } }
    set {
      _hasBits0 |= 16777216;
      isSteamBox_ = value;
    }
  }
  /// <summary>Gets whether the "is_steam_box" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsSteamBox {
    get { return (_hasBits0 & 16777216) != 0; }
  }
  /// <summary>Clears the value of the "is_steam_box" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsSteamBox() {
    _hasBits0 &= ~16777216;
  }

  /// <summary>Field number for the "client_instance_id" field.</summary>
  public const int ClientInstanceIdFieldNumber = 100;
  private readonly static ulong ClientInstanceIdDefaultValue = 0UL;

  private ulong clientInstanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientInstanceId {
    get { if ((_hasBits0 & 33554432) != 0) { return clientInstanceId_; } else { return ClientInstanceIdDefaultValue; } }
    set {
      _hasBits0 |= 33554432;
      clientInstanceId_ = value;
    }
  }
  /// <summary>Gets whether the "client_instance_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientInstanceId {
    get { return (_hasBits0 & 33554432) != 0; }
  }
  /// <summary>Clears the value of the "client_instance_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientInstanceId() {
    _hasBits0 &= ~33554432;
  }

  /// <summary>Field number for the "two_factor_code" field.</summary>
  public const int TwoFactorCodeFieldNumber = 101;
  private readonly static string TwoFactorCodeDefaultValue = "";

  private string twoFactorCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TwoFactorCode {
    get { return twoFactorCode_ ?? TwoFactorCodeDefaultValue; }
    set {
      twoFactorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "two_factor_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTwoFactorCode {
    get { return twoFactorCode_ != null; }
  }
  /// <summary>Clears the value of the "two_factor_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTwoFactorCode() {
    twoFactorCode_ = null;
  }

  /// <summary>Field number for the "supports_rate_limit_response" field.</summary>
  public const int SupportsRateLimitResponseFieldNumber = 102;
  private readonly static bool SupportsRateLimitResponseDefaultValue = false;

  private bool supportsRateLimitResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool SupportsRateLimitResponse {
    get { if ((_hasBits0 & 67108864) != 0) { return supportsRateLimitResponse_; } else { return SupportsRateLimitResponseDefaultValue; } }
    set {
      _hasBits0 |= 67108864;
      supportsRateLimitResponse_ = value;
    }
  }
  /// <summary>Gets whether the "supports_rate_limit_response" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSupportsRateLimitResponse {
    get { return (_hasBits0 & 67108864) != 0; }
  }
  /// <summary>Clears the value of the "supports_rate_limit_response" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSupportsRateLimitResponse() {
    _hasBits0 &= ~67108864;
  }

  /// <summary>Field number for the "web_logon_nonce" field.</summary>
  public const int WebLogonNonceFieldNumber = 103;
  private readonly static string WebLogonNonceDefaultValue = "";

  private string webLogonNonce_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WebLogonNonce {
    get { return webLogonNonce_ ?? WebLogonNonceDefaultValue; }
    set {
      webLogonNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "web_logon_nonce" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWebLogonNonce {
    get { return webLogonNonce_ != null; }
  }
  /// <summary>Clears the value of the "web_logon_nonce" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWebLogonNonce() {
    webLogonNonce_ = null;
  }

  /// <summary>Field number for the "priority_reason" field.</summary>
  public const int PriorityReasonFieldNumber = 104;
  private readonly static int PriorityReasonDefaultValue = 0;

  private int priorityReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PriorityReason {
    get { if ((_hasBits0 & 134217728) != 0) { return priorityReason_; } else { return PriorityReasonDefaultValue; } }
    set {
      _hasBits0 |= 134217728;
      priorityReason_ = value;
    }
  }
  /// <summary>Gets whether the "priority_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPriorityReason {
    get { return (_hasBits0 & 134217728) != 0; }
  }
  /// <summary>Clears the value of the "priority_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPriorityReason() {
    _hasBits0 &= ~134217728;
  }

  /// <summary>Field number for the "embedded_client_secret" field.</summary>
  public const int EmbeddedClientSecretFieldNumber = 105;
  private global::CMsgClientSecret embeddedClientSecret_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgClientSecret EmbeddedClientSecret {
    get { return embeddedClientSecret_; }
    set {
      embeddedClientSecret_ = value;
    }
  }

  /// <summary>Field number for the "disable_partner_autogrants" field.</summary>
  public const int DisablePartnerAutograntsFieldNumber = 106;
  private readonly static bool DisablePartnerAutograntsDefaultValue = false;

  private bool disablePartnerAutogrants_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool DisablePartnerAutogrants {
    get { if ((_hasBits0 & 268435456) != 0) { return disablePartnerAutogrants_; } else { return DisablePartnerAutograntsDefaultValue; } }
    set {
      _hasBits0 |= 268435456;
      disablePartnerAutogrants_ = value;
    }
  }
  /// <summary>Gets whether the "disable_partner_autogrants" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDisablePartnerAutogrants {
    get { return (_hasBits0 & 268435456) != 0; }
  }
  /// <summary>Clears the value of the "disable_partner_autogrants" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDisablePartnerAutogrants() {
    _hasBits0 &= ~268435456;
  }

  /// <summary>Field number for the "is_steam_deck" field.</summary>
  public const int IsSteamDeckFieldNumber = 107;
  private readonly static bool IsSteamDeckDefaultValue = false;

  private bool isSteamDeck_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsSteamDeck {
    get { if ((_hasBits0 & 536870912) != 0) { return isSteamDeck_; } else { return IsSteamDeckDefaultValue; } }
    set {
      _hasBits0 |= 536870912;
      isSteamDeck_ = value;
    }
  }
  /// <summary>Gets whether the "is_steam_deck" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsSteamDeck {
    get { return (_hasBits0 & 536870912) != 0; }
  }
  /// <summary>Clears the value of the "is_steam_deck" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsSteamDeck() {
    _hasBits0 &= ~536870912;
  }

  /// <summary>Field number for the "access_token" field.</summary>
  public const int AccessTokenFieldNumber = 108;
  private readonly static string AccessTokenDefaultValue = "";

  private string accessToken_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AccessToken {
    get { return accessToken_ ?? AccessTokenDefaultValue; }
    set {
      accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "access_token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccessToken {
    get { return accessToken_ != null; }
  }
  /// <summary>Clears the value of the "access_token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccessToken() {
    accessToken_ = null;
  }

  /// <summary>Field number for the "is_chrome_os" field.</summary>
  public const int IsChromeOsFieldNumber = 109;
  private readonly static bool IsChromeOsDefaultValue = false;

  private bool isChromeOs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsChromeOs {
    get { if ((_hasBits0 & 1073741824) != 0) { return isChromeOs_; } else { return IsChromeOsDefaultValue; } }
    set {
      _hasBits0 |= 1073741824;
      isChromeOs_ = value;
    }
  }
  /// <summary>Gets whether the "is_chrome_os" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsChromeOs {
    get { return (_hasBits0 & 1073741824) != 0; }
  }
  /// <summary>Clears the value of the "is_chrome_os" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsChromeOs() {
    _hasBits0 &= ~1073741824;
  }

  /// <summary>Field number for the "is_tesla" field.</summary>
  public const int IsTeslaFieldNumber = 110;
  private readonly static bool IsTeslaDefaultValue = false;

  private bool isTesla_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsTesla {
    get { if ((_hasBits0 & -2147483648) != 0) { return isTesla_; } else { return IsTeslaDefaultValue; } }
    set {
      _hasBits0 |= -2147483648;
      isTesla_ = value;
    }
  }
  /// <summary>Gets whether the "is_tesla" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsTesla {
    get { return (_hasBits0 & -2147483648) != 0; }
  }
  /// <summary>Clears the value of the "is_tesla" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsTesla() {
    _hasBits0 &= ~-2147483648;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientLogon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientLogon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProtocolVersion != other.ProtocolVersion) return false;
    if (DeprecatedObfustucatedPrivateIp != other.DeprecatedObfustucatedPrivateIp) return false;
    if (CellId != other.CellId) return false;
    if (LastSessionId != other.LastSessionId) return false;
    if (ClientPackageVersion != other.ClientPackageVersion) return false;
    if (ClientLanguage != other.ClientLanguage) return false;
    if (ClientOsType != other.ClientOsType) return false;
    if (ShouldRememberPassword != other.ShouldRememberPassword) return false;
    if (WineVersion != other.WineVersion) return false;
    if (Deprecated10 != other.Deprecated10) return false;
    if (!object.Equals(ObfuscatedPrivateIp, other.ObfuscatedPrivateIp)) return false;
    if (DeprecatedPublicIp != other.DeprecatedPublicIp) return false;
    if (QosLevel != other.QosLevel) return false;
    if (ClientSuppliedSteamId != other.ClientSuppliedSteamId) return false;
    if (!object.Equals(PublicIp, other.PublicIp)) return false;
    if (MachineId != other.MachineId) return false;
    if (LauncherType != other.LauncherType) return false;
    if (UiMode != other.UiMode) return false;
    if (ChatMode != other.ChatMode) return false;
    if (Steam2AuthTicket != other.Steam2AuthTicket) return false;
    if (EmailAddress != other.EmailAddress) return false;
    if (Rtime32AccountCreation != other.Rtime32AccountCreation) return false;
    if (AccountName != other.AccountName) return false;
    if (Password != other.Password) return false;
    if (GameServerToken != other.GameServerToken) return false;
    if (LoginKey != other.LoginKey) return false;
    if (WasConvertedDeprecatedMsg != other.WasConvertedDeprecatedMsg) return false;
    if (AnonUserTargetAccountName != other.AnonUserTargetAccountName) return false;
    if (ResolvedUserSteamId != other.ResolvedUserSteamId) return false;
    if (EresultSentryfile != other.EresultSentryfile) return false;
    if (ShaSentryfile != other.ShaSentryfile) return false;
    if (AuthCode != other.AuthCode) return false;
    if (OtpType != other.OtpType) return false;
    if (OtpValue != other.OtpValue) return false;
    if (OtpIdentifier != other.OtpIdentifier) return false;
    if (Steam2TicketRequest != other.Steam2TicketRequest) return false;
    if (SonyPsnTicket != other.SonyPsnTicket) return false;
    if (SonyPsnServiceId != other.SonyPsnServiceId) return false;
    if (CreateNewPsnLinkedAccountIfNeeded != other.CreateNewPsnLinkedAccountIfNeeded) return false;
    if (SonyPsnName != other.SonyPsnName) return false;
    if (GameServerAppId != other.GameServerAppId) return false;
    if (SteamguardDontRememberComputer != other.SteamguardDontRememberComputer) return false;
    if (MachineName != other.MachineName) return false;
    if (MachineNameUserchosen != other.MachineNameUserchosen) return false;
    if (CountryOverride != other.CountryOverride) return false;
    if (IsSteamBox != other.IsSteamBox) return false;
    if (ClientInstanceId != other.ClientInstanceId) return false;
    if (TwoFactorCode != other.TwoFactorCode) return false;
    if (SupportsRateLimitResponse != other.SupportsRateLimitResponse) return false;
    if (WebLogonNonce != other.WebLogonNonce) return false;
    if (PriorityReason != other.PriorityReason) return false;
    if (!object.Equals(EmbeddedClientSecret, other.EmbeddedClientSecret)) return false;
    if (DisablePartnerAutogrants != other.DisablePartnerAutogrants) return false;
    if (IsSteamDeck != other.IsSteamDeck) return false;
    if (AccessToken != other.AccessToken) return false;
    if (IsChromeOs != other.IsChromeOs) return false;
    if (IsTesla != other.IsTesla) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasProtocolVersion) hash ^= ProtocolVersion.GetHashCode();
    if (HasDeprecatedObfustucatedPrivateIp) hash ^= DeprecatedObfustucatedPrivateIp.GetHashCode();
    if (HasCellId) hash ^= CellId.GetHashCode();
    if (HasLastSessionId) hash ^= LastSessionId.GetHashCode();
    if (HasClientPackageVersion) hash ^= ClientPackageVersion.GetHashCode();
    if (HasClientLanguage) hash ^= ClientLanguage.GetHashCode();
    if (HasClientOsType) hash ^= ClientOsType.GetHashCode();
    if (HasShouldRememberPassword) hash ^= ShouldRememberPassword.GetHashCode();
    if (HasWineVersion) hash ^= WineVersion.GetHashCode();
    if (HasDeprecated10) hash ^= Deprecated10.GetHashCode();
    if (obfuscatedPrivateIp_ != null) hash ^= ObfuscatedPrivateIp.GetHashCode();
    if (HasDeprecatedPublicIp) hash ^= DeprecatedPublicIp.GetHashCode();
    if (HasQosLevel) hash ^= QosLevel.GetHashCode();
    if (HasClientSuppliedSteamId) hash ^= ClientSuppliedSteamId.GetHashCode();
    if (publicIp_ != null) hash ^= PublicIp.GetHashCode();
    if (HasMachineId) hash ^= MachineId.GetHashCode();
    if (HasLauncherType) hash ^= LauncherType.GetHashCode();
    if (HasUiMode) hash ^= UiMode.GetHashCode();
    if (HasChatMode) hash ^= ChatMode.GetHashCode();
    if (HasSteam2AuthTicket) hash ^= Steam2AuthTicket.GetHashCode();
    if (HasEmailAddress) hash ^= EmailAddress.GetHashCode();
    if (HasRtime32AccountCreation) hash ^= Rtime32AccountCreation.GetHashCode();
    if (HasAccountName) hash ^= AccountName.GetHashCode();
    if (HasPassword) hash ^= Password.GetHashCode();
    if (HasGameServerToken) hash ^= GameServerToken.GetHashCode();
    if (HasLoginKey) hash ^= LoginKey.GetHashCode();
    if (HasWasConvertedDeprecatedMsg) hash ^= WasConvertedDeprecatedMsg.GetHashCode();
    if (HasAnonUserTargetAccountName) hash ^= AnonUserTargetAccountName.GetHashCode();
    if (HasResolvedUserSteamId) hash ^= ResolvedUserSteamId.GetHashCode();
    if (HasEresultSentryfile) hash ^= EresultSentryfile.GetHashCode();
    if (HasShaSentryfile) hash ^= ShaSentryfile.GetHashCode();
    if (HasAuthCode) hash ^= AuthCode.GetHashCode();
    if (HasOtpType) hash ^= OtpType.GetHashCode();
    if (HasOtpValue) hash ^= OtpValue.GetHashCode();
    if (HasOtpIdentifier) hash ^= OtpIdentifier.GetHashCode();
    if (HasSteam2TicketRequest) hash ^= Steam2TicketRequest.GetHashCode();
    if (HasSonyPsnTicket) hash ^= SonyPsnTicket.GetHashCode();
    if (HasSonyPsnServiceId) hash ^= SonyPsnServiceId.GetHashCode();
    if (HasCreateNewPsnLinkedAccountIfNeeded) hash ^= CreateNewPsnLinkedAccountIfNeeded.GetHashCode();
    if (HasSonyPsnName) hash ^= SonyPsnName.GetHashCode();
    if (HasGameServerAppId) hash ^= GameServerAppId.GetHashCode();
    if (HasSteamguardDontRememberComputer) hash ^= SteamguardDontRememberComputer.GetHashCode();
    if (HasMachineName) hash ^= MachineName.GetHashCode();
    if (HasMachineNameUserchosen) hash ^= MachineNameUserchosen.GetHashCode();
    if (HasCountryOverride) hash ^= CountryOverride.GetHashCode();
    if (HasIsSteamBox) hash ^= IsSteamBox.GetHashCode();
    if (HasClientInstanceId) hash ^= ClientInstanceId.GetHashCode();
    if (HasTwoFactorCode) hash ^= TwoFactorCode.GetHashCode();
    if (HasSupportsRateLimitResponse) hash ^= SupportsRateLimitResponse.GetHashCode();
    if (HasWebLogonNonce) hash ^= WebLogonNonce.GetHashCode();
    if (HasPriorityReason) hash ^= PriorityReason.GetHashCode();
    if (embeddedClientSecret_ != null) hash ^= EmbeddedClientSecret.GetHashCode();
    if (HasDisablePartnerAutogrants) hash ^= DisablePartnerAutogrants.GetHashCode();
    if (HasIsSteamDeck) hash ^= IsSteamDeck.GetHashCode();
    if (HasAccessToken) hash ^= AccessToken.GetHashCode();
    if (HasIsChromeOs) hash ^= IsChromeOs.GetHashCode();
    if (HasIsTesla) hash ^= IsTesla.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasProtocolVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(ProtocolVersion);
    }
    if (HasDeprecatedObfustucatedPrivateIp) {
      output.WriteRawTag(16);
      output.WriteUInt32(DeprecatedObfustucatedPrivateIp);
    }
    if (HasCellId) {
      output.WriteRawTag(24);
      output.WriteUInt32(CellId);
    }
    if (HasLastSessionId) {
      output.WriteRawTag(32);
      output.WriteUInt32(LastSessionId);
    }
    if (HasClientPackageVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(ClientPackageVersion);
    }
    if (HasClientLanguage) {
      output.WriteRawTag(50);
      output.WriteString(ClientLanguage);
    }
    if (HasClientOsType) {
      output.WriteRawTag(56);
      output.WriteUInt32(ClientOsType);
    }
    if (HasShouldRememberPassword) {
      output.WriteRawTag(64);
      output.WriteBool(ShouldRememberPassword);
    }
    if (HasWineVersion) {
      output.WriteRawTag(74);
      output.WriteString(WineVersion);
    }
    if (HasDeprecated10) {
      output.WriteRawTag(80);
      output.WriteUInt32(Deprecated10);
    }
    if (obfuscatedPrivateIp_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(ObfuscatedPrivateIp);
    }
    if (HasDeprecatedPublicIp) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(DeprecatedPublicIp);
    }
    if (HasQosLevel) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(QosLevel);
    }
    if (HasClientSuppliedSteamId) {
      output.WriteRawTag(177, 1);
      output.WriteFixed64(ClientSuppliedSteamId);
    }
    if (publicIp_ != null) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(PublicIp);
    }
    if (HasMachineId) {
      output.WriteRawTag(242, 1);
      output.WriteBytes(MachineId);
    }
    if (HasLauncherType) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(LauncherType);
    }
    if (HasUiMode) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(UiMode);
    }
    if (HasChatMode) {
      output.WriteRawTag(136, 2);
      output.WriteUInt32(ChatMode);
    }
    if (HasSteam2AuthTicket) {
      output.WriteRawTag(202, 2);
      output.WriteBytes(Steam2AuthTicket);
    }
    if (HasEmailAddress) {
      output.WriteRawTag(210, 2);
      output.WriteString(EmailAddress);
    }
    if (HasRtime32AccountCreation) {
      output.WriteRawTag(221, 2);
      output.WriteFixed32(Rtime32AccountCreation);
    }
    if (HasAccountName) {
      output.WriteRawTag(146, 3);
      output.WriteString(AccountName);
    }
    if (HasPassword) {
      output.WriteRawTag(154, 3);
      output.WriteString(Password);
    }
    if (HasGameServerToken) {
      output.WriteRawTag(162, 3);
      output.WriteString(GameServerToken);
    }
    if (HasLoginKey) {
      output.WriteRawTag(226, 3);
      output.WriteString(LoginKey);
    }
    if (HasWasConvertedDeprecatedMsg) {
      output.WriteRawTag(176, 4);
      output.WriteBool(WasConvertedDeprecatedMsg);
    }
    if (HasAnonUserTargetAccountName) {
      output.WriteRawTag(130, 5);
      output.WriteString(AnonUserTargetAccountName);
    }
    if (HasResolvedUserSteamId) {
      output.WriteRawTag(137, 5);
      output.WriteFixed64(ResolvedUserSteamId);
    }
    if (HasEresultSentryfile) {
      output.WriteRawTag(144, 5);
      output.WriteInt32(EresultSentryfile);
    }
    if (HasShaSentryfile) {
      output.WriteRawTag(154, 5);
      output.WriteBytes(ShaSentryfile);
    }
    if (HasAuthCode) {
      output.WriteRawTag(162, 5);
      output.WriteString(AuthCode);
    }
    if (HasOtpType) {
      output.WriteRawTag(168, 5);
      output.WriteInt32(OtpType);
    }
    if (HasOtpValue) {
      output.WriteRawTag(176, 5);
      output.WriteUInt32(OtpValue);
    }
    if (HasOtpIdentifier) {
      output.WriteRawTag(186, 5);
      output.WriteString(OtpIdentifier);
    }
    if (HasSteam2TicketRequest) {
      output.WriteRawTag(192, 5);
      output.WriteBool(Steam2TicketRequest);
    }
    if (HasSonyPsnTicket) {
      output.WriteRawTag(210, 5);
      output.WriteBytes(SonyPsnTicket);
    }
    if (HasSonyPsnServiceId) {
      output.WriteRawTag(218, 5);
      output.WriteString(SonyPsnServiceId);
    }
    if (HasCreateNewPsnLinkedAccountIfNeeded) {
      output.WriteRawTag(224, 5);
      output.WriteBool(CreateNewPsnLinkedAccountIfNeeded);
    }
    if (HasSonyPsnName) {
      output.WriteRawTag(234, 5);
      output.WriteString(SonyPsnName);
    }
    if (HasGameServerAppId) {
      output.WriteRawTag(240, 5);
      output.WriteInt32(GameServerAppId);
    }
    if (HasSteamguardDontRememberComputer) {
      output.WriteRawTag(248, 5);
      output.WriteBool(SteamguardDontRememberComputer);
    }
    if (HasMachineName) {
      output.WriteRawTag(130, 6);
      output.WriteString(MachineName);
    }
    if (HasMachineNameUserchosen) {
      output.WriteRawTag(138, 6);
      output.WriteString(MachineNameUserchosen);
    }
    if (HasCountryOverride) {
      output.WriteRawTag(146, 6);
      output.WriteString(CountryOverride);
    }
    if (HasIsSteamBox) {
      output.WriteRawTag(152, 6);
      output.WriteBool(IsSteamBox);
    }
    if (HasClientInstanceId) {
      output.WriteRawTag(160, 6);
      output.WriteUInt64(ClientInstanceId);
    }
    if (HasTwoFactorCode) {
      output.WriteRawTag(170, 6);
      output.WriteString(TwoFactorCode);
    }
    if (HasSupportsRateLimitResponse) {
      output.WriteRawTag(176, 6);
      output.WriteBool(SupportsRateLimitResponse);
    }
    if (HasWebLogonNonce) {
      output.WriteRawTag(186, 6);
      output.WriteString(WebLogonNonce);
    }
    if (HasPriorityReason) {
      output.WriteRawTag(192, 6);
      output.WriteInt32(PriorityReason);
    }
    if (embeddedClientSecret_ != null) {
      output.WriteRawTag(202, 6);
      output.WriteMessage(EmbeddedClientSecret);
    }
    if (HasDisablePartnerAutogrants) {
      output.WriteRawTag(208, 6);
      output.WriteBool(DisablePartnerAutogrants);
    }
    if (HasIsSteamDeck) {
      output.WriteRawTag(216, 6);
      output.WriteBool(IsSteamDeck);
    }
    if (HasAccessToken) {
      output.WriteRawTag(226, 6);
      output.WriteString(AccessToken);
    }
    if (HasIsChromeOs) {
      output.WriteRawTag(232, 6);
      output.WriteBool(IsChromeOs);
    }
    if (HasIsTesla) {
      output.WriteRawTag(240, 6);
      output.WriteBool(IsTesla);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasProtocolVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(ProtocolVersion);
    }
    if (HasDeprecatedObfustucatedPrivateIp) {
      output.WriteRawTag(16);
      output.WriteUInt32(DeprecatedObfustucatedPrivateIp);
    }
    if (HasCellId) {
      output.WriteRawTag(24);
      output.WriteUInt32(CellId);
    }
    if (HasLastSessionId) {
      output.WriteRawTag(32);
      output.WriteUInt32(LastSessionId);
    }
    if (HasClientPackageVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(ClientPackageVersion);
    }
    if (HasClientLanguage) {
      output.WriteRawTag(50);
      output.WriteString(ClientLanguage);
    }
    if (HasClientOsType) {
      output.WriteRawTag(56);
      output.WriteUInt32(ClientOsType);
    }
    if (HasShouldRememberPassword) {
      output.WriteRawTag(64);
      output.WriteBool(ShouldRememberPassword);
    }
    if (HasWineVersion) {
      output.WriteRawTag(74);
      output.WriteString(WineVersion);
    }
    if (HasDeprecated10) {
      output.WriteRawTag(80);
      output.WriteUInt32(Deprecated10);
    }
    if (obfuscatedPrivateIp_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(ObfuscatedPrivateIp);
    }
    if (HasDeprecatedPublicIp) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(DeprecatedPublicIp);
    }
    if (HasQosLevel) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(QosLevel);
    }
    if (HasClientSuppliedSteamId) {
      output.WriteRawTag(177, 1);
      output.WriteFixed64(ClientSuppliedSteamId);
    }
    if (publicIp_ != null) {
      output.WriteRawTag(186, 1);
      output.WriteMessage(PublicIp);
    }
    if (HasMachineId) {
      output.WriteRawTag(242, 1);
      output.WriteBytes(MachineId);
    }
    if (HasLauncherType) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(LauncherType);
    }
    if (HasUiMode) {
      output.WriteRawTag(128, 2);
      output.WriteUInt32(UiMode);
    }
    if (HasChatMode) {
      output.WriteRawTag(136, 2);
      output.WriteUInt32(ChatMode);
    }
    if (HasSteam2AuthTicket) {
      output.WriteRawTag(202, 2);
      output.WriteBytes(Steam2AuthTicket);
    }
    if (HasEmailAddress) {
      output.WriteRawTag(210, 2);
      output.WriteString(EmailAddress);
    }
    if (HasRtime32AccountCreation) {
      output.WriteRawTag(221, 2);
      output.WriteFixed32(Rtime32AccountCreation);
    }
    if (HasAccountName) {
      output.WriteRawTag(146, 3);
      output.WriteString(AccountName);
    }
    if (HasPassword) {
      output.WriteRawTag(154, 3);
      output.WriteString(Password);
    }
    if (HasGameServerToken) {
      output.WriteRawTag(162, 3);
      output.WriteString(GameServerToken);
    }
    if (HasLoginKey) {
      output.WriteRawTag(226, 3);
      output.WriteString(LoginKey);
    }
    if (HasWasConvertedDeprecatedMsg) {
      output.WriteRawTag(176, 4);
      output.WriteBool(WasConvertedDeprecatedMsg);
    }
    if (HasAnonUserTargetAccountName) {
      output.WriteRawTag(130, 5);
      output.WriteString(AnonUserTargetAccountName);
    }
    if (HasResolvedUserSteamId) {
      output.WriteRawTag(137, 5);
      output.WriteFixed64(ResolvedUserSteamId);
    }
    if (HasEresultSentryfile) {
      output.WriteRawTag(144, 5);
      output.WriteInt32(EresultSentryfile);
    }
    if (HasShaSentryfile) {
      output.WriteRawTag(154, 5);
      output.WriteBytes(ShaSentryfile);
    }
    if (HasAuthCode) {
      output.WriteRawTag(162, 5);
      output.WriteString(AuthCode);
    }
    if (HasOtpType) {
      output.WriteRawTag(168, 5);
      output.WriteInt32(OtpType);
    }
    if (HasOtpValue) {
      output.WriteRawTag(176, 5);
      output.WriteUInt32(OtpValue);
    }
    if (HasOtpIdentifier) {
      output.WriteRawTag(186, 5);
      output.WriteString(OtpIdentifier);
    }
    if (HasSteam2TicketRequest) {
      output.WriteRawTag(192, 5);
      output.WriteBool(Steam2TicketRequest);
    }
    if (HasSonyPsnTicket) {
      output.WriteRawTag(210, 5);
      output.WriteBytes(SonyPsnTicket);
    }
    if (HasSonyPsnServiceId) {
      output.WriteRawTag(218, 5);
      output.WriteString(SonyPsnServiceId);
    }
    if (HasCreateNewPsnLinkedAccountIfNeeded) {
      output.WriteRawTag(224, 5);
      output.WriteBool(CreateNewPsnLinkedAccountIfNeeded);
    }
    if (HasSonyPsnName) {
      output.WriteRawTag(234, 5);
      output.WriteString(SonyPsnName);
    }
    if (HasGameServerAppId) {
      output.WriteRawTag(240, 5);
      output.WriteInt32(GameServerAppId);
    }
    if (HasSteamguardDontRememberComputer) {
      output.WriteRawTag(248, 5);
      output.WriteBool(SteamguardDontRememberComputer);
    }
    if (HasMachineName) {
      output.WriteRawTag(130, 6);
      output.WriteString(MachineName);
    }
    if (HasMachineNameUserchosen) {
      output.WriteRawTag(138, 6);
      output.WriteString(MachineNameUserchosen);
    }
    if (HasCountryOverride) {
      output.WriteRawTag(146, 6);
      output.WriteString(CountryOverride);
    }
    if (HasIsSteamBox) {
      output.WriteRawTag(152, 6);
      output.WriteBool(IsSteamBox);
    }
    if (HasClientInstanceId) {
      output.WriteRawTag(160, 6);
      output.WriteUInt64(ClientInstanceId);
    }
    if (HasTwoFactorCode) {
      output.WriteRawTag(170, 6);
      output.WriteString(TwoFactorCode);
    }
    if (HasSupportsRateLimitResponse) {
      output.WriteRawTag(176, 6);
      output.WriteBool(SupportsRateLimitResponse);
    }
    if (HasWebLogonNonce) {
      output.WriteRawTag(186, 6);
      output.WriteString(WebLogonNonce);
    }
    if (HasPriorityReason) {
      output.WriteRawTag(192, 6);
      output.WriteInt32(PriorityReason);
    }
    if (embeddedClientSecret_ != null) {
      output.WriteRawTag(202, 6);
      output.WriteMessage(EmbeddedClientSecret);
    }
    if (HasDisablePartnerAutogrants) {
      output.WriteRawTag(208, 6);
      output.WriteBool(DisablePartnerAutogrants);
    }
    if (HasIsSteamDeck) {
      output.WriteRawTag(216, 6);
      output.WriteBool(IsSteamDeck);
    }
    if (HasAccessToken) {
      output.WriteRawTag(226, 6);
      output.WriteString(AccessToken);
    }
    if (HasIsChromeOs) {
      output.WriteRawTag(232, 6);
      output.WriteBool(IsChromeOs);
    }
    if (HasIsTesla) {
      output.WriteRawTag(240, 6);
      output.WriteBool(IsTesla);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasProtocolVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
    }
    if (HasDeprecatedObfustucatedPrivateIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeprecatedObfustucatedPrivateIp);
    }
    if (HasCellId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
    }
    if (HasLastSessionId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastSessionId);
    }
    if (HasClientPackageVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientPackageVersion);
    }
    if (HasClientLanguage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientLanguage);
    }
    if (HasClientOsType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientOsType);
    }
    if (HasShouldRememberPassword) {
      size += 1 + 1;
    }
    if (HasWineVersion) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WineVersion);
    }
    if (HasDeprecated10) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deprecated10);
    }
    if (obfuscatedPrivateIp_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObfuscatedPrivateIp);
    }
    if (HasDeprecatedPublicIp) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DeprecatedPublicIp);
    }
    if (HasQosLevel) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(QosLevel);
    }
    if (HasClientSuppliedSteamId) {
      size += 2 + 8;
    }
    if (publicIp_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicIp);
    }
    if (HasMachineId) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(MachineId);
    }
    if (HasLauncherType) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(LauncherType);
    }
    if (HasUiMode) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UiMode);
    }
    if (HasChatMode) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ChatMode);
    }
    if (HasSteam2AuthTicket) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(Steam2AuthTicket);
    }
    if (HasEmailAddress) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(EmailAddress);
    }
    if (HasRtime32AccountCreation) {
      size += 2 + 4;
    }
    if (HasAccountName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AccountName);
    }
    if (HasPassword) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (HasGameServerToken) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GameServerToken);
    }
    if (HasLoginKey) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(LoginKey);
    }
    if (HasWasConvertedDeprecatedMsg) {
      size += 2 + 1;
    }
    if (HasAnonUserTargetAccountName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AnonUserTargetAccountName);
    }
    if (HasResolvedUserSteamId) {
      size += 2 + 8;
    }
    if (HasEresultSentryfile) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(EresultSentryfile);
    }
    if (HasShaSentryfile) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(ShaSentryfile);
    }
    if (HasAuthCode) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AuthCode);
    }
    if (HasOtpType) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(OtpType);
    }
    if (HasOtpValue) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(OtpValue);
    }
    if (HasOtpIdentifier) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(OtpIdentifier);
    }
    if (HasSteam2TicketRequest) {
      size += 2 + 1;
    }
    if (HasSonyPsnTicket) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(SonyPsnTicket);
    }
    if (HasSonyPsnServiceId) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SonyPsnServiceId);
    }
    if (HasCreateNewPsnLinkedAccountIfNeeded) {
      size += 2 + 1;
    }
    if (HasSonyPsnName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SonyPsnName);
    }
    if (HasGameServerAppId) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(GameServerAppId);
    }
    if (HasSteamguardDontRememberComputer) {
      size += 2 + 1;
    }
    if (HasMachineName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MachineName);
    }
    if (HasMachineNameUserchosen) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MachineNameUserchosen);
    }
    if (HasCountryOverride) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(CountryOverride);
    }
    if (HasIsSteamBox) {
      size += 2 + 1;
    }
    if (HasClientInstanceId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ClientInstanceId);
    }
    if (HasTwoFactorCode) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(TwoFactorCode);
    }
    if (HasSupportsRateLimitResponse) {
      size += 2 + 1;
    }
    if (HasWebLogonNonce) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(WebLogonNonce);
    }
    if (HasPriorityReason) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(PriorityReason);
    }
    if (embeddedClientSecret_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(EmbeddedClientSecret);
    }
    if (HasDisablePartnerAutogrants) {
      size += 2 + 1;
    }
    if (HasIsSteamDeck) {
      size += 2 + 1;
    }
    if (HasAccessToken) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
    }
    if (HasIsChromeOs) {
      size += 2 + 1;
    }
    if (HasIsTesla) {
      size += 2 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientLogon other) {
    if (other == null) {
      return;
    }
    if (other.HasProtocolVersion) {
      ProtocolVersion = other.ProtocolVersion;
    }
    if (other.HasDeprecatedObfustucatedPrivateIp) {
      DeprecatedObfustucatedPrivateIp = other.DeprecatedObfustucatedPrivateIp;
    }
    if (other.HasCellId) {
      CellId = other.CellId;
    }
    if (other.HasLastSessionId) {
      LastSessionId = other.LastSessionId;
    }
    if (other.HasClientPackageVersion) {
      ClientPackageVersion = other.ClientPackageVersion;
    }
    if (other.HasClientLanguage) {
      ClientLanguage = other.ClientLanguage;
    }
    if (other.HasClientOsType) {
      ClientOsType = other.ClientOsType;
    }
    if (other.HasShouldRememberPassword) {
      ShouldRememberPassword = other.ShouldRememberPassword;
    }
    if (other.HasWineVersion) {
      WineVersion = other.WineVersion;
    }
    if (other.HasDeprecated10) {
      Deprecated10 = other.Deprecated10;
    }
    if (other.obfuscatedPrivateIp_ != null) {
      if (obfuscatedPrivateIp_ == null) {
        ObfuscatedPrivateIp = new global::CMsgIPAddress();
      }
      ObfuscatedPrivateIp.MergeFrom(other.ObfuscatedPrivateIp);
    }
    if (other.HasDeprecatedPublicIp) {
      DeprecatedPublicIp = other.DeprecatedPublicIp;
    }
    if (other.HasQosLevel) {
      QosLevel = other.QosLevel;
    }
    if (other.HasClientSuppliedSteamId) {
      ClientSuppliedSteamId = other.ClientSuppliedSteamId;
    }
    if (other.publicIp_ != null) {
      if (publicIp_ == null) {
        PublicIp = new global::CMsgIPAddress();
      }
      PublicIp.MergeFrom(other.PublicIp);
    }
    if (other.HasMachineId) {
      MachineId = other.MachineId;
    }
    if (other.HasLauncherType) {
      LauncherType = other.LauncherType;
    }
    if (other.HasUiMode) {
      UiMode = other.UiMode;
    }
    if (other.HasChatMode) {
      ChatMode = other.ChatMode;
    }
    if (other.HasSteam2AuthTicket) {
      Steam2AuthTicket = other.Steam2AuthTicket;
    }
    if (other.HasEmailAddress) {
      EmailAddress = other.EmailAddress;
    }
    if (other.HasRtime32AccountCreation) {
      Rtime32AccountCreation = other.Rtime32AccountCreation;
    }
    if (other.HasAccountName) {
      AccountName = other.AccountName;
    }
    if (other.HasPassword) {
      Password = other.Password;
    }
    if (other.HasGameServerToken) {
      GameServerToken = other.GameServerToken;
    }
    if (other.HasLoginKey) {
      LoginKey = other.LoginKey;
    }
    if (other.HasWasConvertedDeprecatedMsg) {
      WasConvertedDeprecatedMsg = other.WasConvertedDeprecatedMsg;
    }
    if (other.HasAnonUserTargetAccountName) {
      AnonUserTargetAccountName = other.AnonUserTargetAccountName;
    }
    if (other.HasResolvedUserSteamId) {
      ResolvedUserSteamId = other.ResolvedUserSteamId;
    }
    if (other.HasEresultSentryfile) {
      EresultSentryfile = other.EresultSentryfile;
    }
    if (other.HasShaSentryfile) {
      ShaSentryfile = other.ShaSentryfile;
    }
    if (other.HasAuthCode) {
      AuthCode = other.AuthCode;
    }
    if (other.HasOtpType) {
      OtpType = other.OtpType;
    }
    if (other.HasOtpValue) {
      OtpValue = other.OtpValue;
    }
    if (other.HasOtpIdentifier) {
      OtpIdentifier = other.OtpIdentifier;
    }
    if (other.HasSteam2TicketRequest) {
      Steam2TicketRequest = other.Steam2TicketRequest;
    }
    if (other.HasSonyPsnTicket) {
      SonyPsnTicket = other.SonyPsnTicket;
    }
    if (other.HasSonyPsnServiceId) {
      SonyPsnServiceId = other.SonyPsnServiceId;
    }
    if (other.HasCreateNewPsnLinkedAccountIfNeeded) {
      CreateNewPsnLinkedAccountIfNeeded = other.CreateNewPsnLinkedAccountIfNeeded;
    }
    if (other.HasSonyPsnName) {
      SonyPsnName = other.SonyPsnName;
    }
    if (other.HasGameServerAppId) {
      GameServerAppId = other.GameServerAppId;
    }
    if (other.HasSteamguardDontRememberComputer) {
      SteamguardDontRememberComputer = other.SteamguardDontRememberComputer;
    }
    if (other.HasMachineName) {
      MachineName = other.MachineName;
    }
    if (other.HasMachineNameUserchosen) {
      MachineNameUserchosen = other.MachineNameUserchosen;
    }
    if (other.HasCountryOverride) {
      CountryOverride = other.CountryOverride;
    }
    if (other.HasIsSteamBox) {
      IsSteamBox = other.IsSteamBox;
    }
    if (other.HasClientInstanceId) {
      ClientInstanceId = other.ClientInstanceId;
    }
    if (other.HasTwoFactorCode) {
      TwoFactorCode = other.TwoFactorCode;
    }
    if (other.HasSupportsRateLimitResponse) {
      SupportsRateLimitResponse = other.SupportsRateLimitResponse;
    }
    if (other.HasWebLogonNonce) {
      WebLogonNonce = other.WebLogonNonce;
    }
    if (other.HasPriorityReason) {
      PriorityReason = other.PriorityReason;
    }
    if (other.embeddedClientSecret_ != null) {
      if (embeddedClientSecret_ == null) {
        EmbeddedClientSecret = new global::CMsgClientSecret();
      }
      EmbeddedClientSecret.MergeFrom(other.EmbeddedClientSecret);
    }
    if (other.HasDisablePartnerAutogrants) {
      DisablePartnerAutogrants = other.DisablePartnerAutogrants;
    }
    if (other.HasIsSteamDeck) {
      IsSteamDeck = other.IsSteamDeck;
    }
    if (other.HasAccessToken) {
      AccessToken = other.AccessToken;
    }
    if (other.HasIsChromeOs) {
      IsChromeOs = other.IsChromeOs;
    }
    if (other.HasIsTesla) {
      IsTesla = other.IsTesla;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
        case 16: {
          DeprecatedObfustucatedPrivateIp = input.ReadUInt32();
          break;
        }
        case 24: {
          CellId = input.ReadUInt32();
          break;
        }
        case 32: {
          LastSessionId = input.ReadUInt32();
          break;
        }
        case 40: {
          ClientPackageVersion = input.ReadUInt32();
          break;
        }
        case 50: {
          ClientLanguage = input.ReadString();
          break;
        }
        case 56: {
          ClientOsType = input.ReadUInt32();
          break;
        }
        case 64: {
          ShouldRememberPassword = input.ReadBool();
          break;
        }
        case 74: {
          WineVersion = input.ReadString();
          break;
        }
        case 80: {
          Deprecated10 = input.ReadUInt32();
          break;
        }
        case 90: {
          if (obfuscatedPrivateIp_ == null) {
            ObfuscatedPrivateIp = new global::CMsgIPAddress();
          }
          input.ReadMessage(ObfuscatedPrivateIp);
          break;
        }
        case 160: {
          DeprecatedPublicIp = input.ReadUInt32();
          break;
        }
        case 168: {
          QosLevel = input.ReadUInt32();
          break;
        }
        case 177: {
          ClientSuppliedSteamId = input.ReadFixed64();
          break;
        }
        case 186: {
          if (publicIp_ == null) {
            PublicIp = new global::CMsgIPAddress();
          }
          input.ReadMessage(PublicIp);
          break;
        }
        case 242: {
          MachineId = input.ReadBytes();
          break;
        }
        case 248: {
          LauncherType = input.ReadUInt32();
          break;
        }
        case 256: {
          UiMode = input.ReadUInt32();
          break;
        }
        case 264: {
          ChatMode = input.ReadUInt32();
          break;
        }
        case 330: {
          Steam2AuthTicket = input.ReadBytes();
          break;
        }
        case 338: {
          EmailAddress = input.ReadString();
          break;
        }
        case 349: {
          Rtime32AccountCreation = input.ReadFixed32();
          break;
        }
        case 402: {
          AccountName = input.ReadString();
          break;
        }
        case 410: {
          Password = input.ReadString();
          break;
        }
        case 418: {
          GameServerToken = input.ReadString();
          break;
        }
        case 482: {
          LoginKey = input.ReadString();
          break;
        }
        case 560: {
          WasConvertedDeprecatedMsg = input.ReadBool();
          break;
        }
        case 642: {
          AnonUserTargetAccountName = input.ReadString();
          break;
        }
        case 649: {
          ResolvedUserSteamId = input.ReadFixed64();
          break;
        }
        case 656: {
          EresultSentryfile = input.ReadInt32();
          break;
        }
        case 666: {
          ShaSentryfile = input.ReadBytes();
          break;
        }
        case 674: {
          AuthCode = input.ReadString();
          break;
        }
        case 680: {
          OtpType = input.ReadInt32();
          break;
        }
        case 688: {
          OtpValue = input.ReadUInt32();
          break;
        }
        case 698: {
          OtpIdentifier = input.ReadString();
          break;
        }
        case 704: {
          Steam2TicketRequest = input.ReadBool();
          break;
        }
        case 722: {
          SonyPsnTicket = input.ReadBytes();
          break;
        }
        case 730: {
          SonyPsnServiceId = input.ReadString();
          break;
        }
        case 736: {
          CreateNewPsnLinkedAccountIfNeeded = input.ReadBool();
          break;
        }
        case 746: {
          SonyPsnName = input.ReadString();
          break;
        }
        case 752: {
          GameServerAppId = input.ReadInt32();
          break;
        }
        case 760: {
          SteamguardDontRememberComputer = input.ReadBool();
          break;
        }
        case 770: {
          MachineName = input.ReadString();
          break;
        }
        case 778: {
          MachineNameUserchosen = input.ReadString();
          break;
        }
        case 786: {
          CountryOverride = input.ReadString();
          break;
        }
        case 792: {
          IsSteamBox = input.ReadBool();
          break;
        }
        case 800: {
          ClientInstanceId = input.ReadUInt64();
          break;
        }
        case 810: {
          TwoFactorCode = input.ReadString();
          break;
        }
        case 816: {
          SupportsRateLimitResponse = input.ReadBool();
          break;
        }
        case 826: {
          WebLogonNonce = input.ReadString();
          break;
        }
        case 832: {
          PriorityReason = input.ReadInt32();
          break;
        }
        case 842: {
          if (embeddedClientSecret_ == null) {
            EmbeddedClientSecret = new global::CMsgClientSecret();
          }
          input.ReadMessage(EmbeddedClientSecret);
          break;
        }
        case 848: {
          DisablePartnerAutogrants = input.ReadBool();
          break;
        }
        case 856: {
          IsSteamDeck = input.ReadBool();
          break;
        }
        case 866: {
          AccessToken = input.ReadString();
          break;
        }
        case 872: {
          IsChromeOs = input.ReadBool();
          break;
        }
        case 880: {
          IsTesla = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ProtocolVersion = input.ReadUInt32();
          break;
        }
        case 16: {
          DeprecatedObfustucatedPrivateIp = input.ReadUInt32();
          break;
        }
        case 24: {
          CellId = input.ReadUInt32();
          break;
        }
        case 32: {
          LastSessionId = input.ReadUInt32();
          break;
        }
        case 40: {
          ClientPackageVersion = input.ReadUInt32();
          break;
        }
        case 50: {
          ClientLanguage = input.ReadString();
          break;
        }
        case 56: {
          ClientOsType = input.ReadUInt32();
          break;
        }
        case 64: {
          ShouldRememberPassword = input.ReadBool();
          break;
        }
        case 74: {
          WineVersion = input.ReadString();
          break;
        }
        case 80: {
          Deprecated10 = input.ReadUInt32();
          break;
        }
        case 90: {
          if (obfuscatedPrivateIp_ == null) {
            ObfuscatedPrivateIp = new global::CMsgIPAddress();
          }
          input.ReadMessage(ObfuscatedPrivateIp);
          break;
        }
        case 160: {
          DeprecatedPublicIp = input.ReadUInt32();
          break;
        }
        case 168: {
          QosLevel = input.ReadUInt32();
          break;
        }
        case 177: {
          ClientSuppliedSteamId = input.ReadFixed64();
          break;
        }
        case 186: {
          if (publicIp_ == null) {
            PublicIp = new global::CMsgIPAddress();
          }
          input.ReadMessage(PublicIp);
          break;
        }
        case 242: {
          MachineId = input.ReadBytes();
          break;
        }
        case 248: {
          LauncherType = input.ReadUInt32();
          break;
        }
        case 256: {
          UiMode = input.ReadUInt32();
          break;
        }
        case 264: {
          ChatMode = input.ReadUInt32();
          break;
        }
        case 330: {
          Steam2AuthTicket = input.ReadBytes();
          break;
        }
        case 338: {
          EmailAddress = input.ReadString();
          break;
        }
        case 349: {
          Rtime32AccountCreation = input.ReadFixed32();
          break;
        }
        case 402: {
          AccountName = input.ReadString();
          break;
        }
        case 410: {
          Password = input.ReadString();
          break;
        }
        case 418: {
          GameServerToken = input.ReadString();
          break;
        }
        case 482: {
          LoginKey = input.ReadString();
          break;
        }
        case 560: {
          WasConvertedDeprecatedMsg = input.ReadBool();
          break;
        }
        case 642: {
          AnonUserTargetAccountName = input.ReadString();
          break;
        }
        case 649: {
          ResolvedUserSteamId = input.ReadFixed64();
          break;
        }
        case 656: {
          EresultSentryfile = input.ReadInt32();
          break;
        }
        case 666: {
          ShaSentryfile = input.ReadBytes();
          break;
        }
        case 674: {
          AuthCode = input.ReadString();
          break;
        }
        case 680: {
          OtpType = input.ReadInt32();
          break;
        }
        case 688: {
          OtpValue = input.ReadUInt32();
          break;
        }
        case 698: {
          OtpIdentifier = input.ReadString();
          break;
        }
        case 704: {
          Steam2TicketRequest = input.ReadBool();
          break;
        }
        case 722: {
          SonyPsnTicket = input.ReadBytes();
          break;
        }
        case 730: {
          SonyPsnServiceId = input.ReadString();
          break;
        }
        case 736: {
          CreateNewPsnLinkedAccountIfNeeded = input.ReadBool();
          break;
        }
        case 746: {
          SonyPsnName = input.ReadString();
          break;
        }
        case 752: {
          GameServerAppId = input.ReadInt32();
          break;
        }
        case 760: {
          SteamguardDontRememberComputer = input.ReadBool();
          break;
        }
        case 770: {
          MachineName = input.ReadString();
          break;
        }
        case 778: {
          MachineNameUserchosen = input.ReadString();
          break;
        }
        case 786: {
          CountryOverride = input.ReadString();
          break;
        }
        case 792: {
          IsSteamBox = input.ReadBool();
          break;
        }
        case 800: {
          ClientInstanceId = input.ReadUInt64();
          break;
        }
        case 810: {
          TwoFactorCode = input.ReadString();
          break;
        }
        case 816: {
          SupportsRateLimitResponse = input.ReadBool();
          break;
        }
        case 826: {
          WebLogonNonce = input.ReadString();
          break;
        }
        case 832: {
          PriorityReason = input.ReadInt32();
          break;
        }
        case 842: {
          if (embeddedClientSecret_ == null) {
            EmbeddedClientSecret = new global::CMsgClientSecret();
          }
          input.ReadMessage(EmbeddedClientSecret);
          break;
        }
        case 848: {
          DisablePartnerAutogrants = input.ReadBool();
          break;
        }
        case 856: {
          IsSteamDeck = input.ReadBool();
          break;
        }
        case 866: {
          AccessToken = input.ReadString();
          break;
        }
        case 872: {
          IsChromeOs = input.ReadBool();
          break;
        }
        case 880: {
          IsTesla = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientLogonResponse : pb::IMessage<CMsgClientLogonResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientLogonResponse> _parser = new pb::MessageParser<CMsgClientLogonResponse>(() => new CMsgClientLogonResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientLogonResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogonResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogonResponse(CMsgClientLogonResponse other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    legacyOutOfGameHeartbeatSeconds_ = other.legacyOutOfGameHeartbeatSeconds_;
    heartbeatSeconds_ = other.heartbeatSeconds_;
    deprecatedPublicIp_ = other.deprecatedPublicIp_;
    rtime32ServerTime_ = other.rtime32ServerTime_;
    accountFlags_ = other.accountFlags_;
    cellId_ = other.cellId_;
    emailDomain_ = other.emailDomain_;
    steam2Ticket_ = other.steam2Ticket_;
    eresultExtended_ = other.eresultExtended_;
    webapiAuthenticateUserNonce_ = other.webapiAuthenticateUserNonce_;
    cellIdPingThreshold_ = other.cellIdPingThreshold_;
    deprecatedUsePics_ = other.deprecatedUsePics_;
    vanityUrl_ = other.vanityUrl_;
    publicIp_ = other.publicIp_ != null ? other.publicIp_.Clone() : null;
    userCountry_ = other.userCountry_;
    clientSuppliedSteamid_ = other.clientSuppliedSteamid_;
    ipCountryCode_ = other.ipCountryCode_;
    parentalSettings_ = other.parentalSettings_;
    parentalSettingSignature_ = other.parentalSettingSignature_;
    countLoginfailuresToMigrate_ = other.countLoginfailuresToMigrate_;
    countDisconnectsToMigrate_ = other.countDisconnectsToMigrate_;
    ogsDataReportTimeWindow_ = other.ogsDataReportTimeWindow_;
    clientInstanceId_ = other.clientInstanceId_;
    forceClientUpdateCheck_ = other.forceClientUpdateCheck_;
    agreementSessionUrl_ = other.agreementSessionUrl_;
    tokenId_ = other.tokenId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogonResponse Clone() {
    return new CMsgClientLogonResponse(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "legacy_out_of_game_heartbeat_seconds" field.</summary>
  public const int LegacyOutOfGameHeartbeatSecondsFieldNumber = 2;
  private readonly static int LegacyOutOfGameHeartbeatSecondsDefaultValue = 0;

  private int legacyOutOfGameHeartbeatSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int LegacyOutOfGameHeartbeatSeconds {
    get { if ((_hasBits0 & 2) != 0) { return legacyOutOfGameHeartbeatSeconds_; } else { return LegacyOutOfGameHeartbeatSecondsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      legacyOutOfGameHeartbeatSeconds_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_out_of_game_heartbeat_seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyOutOfGameHeartbeatSeconds {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "legacy_out_of_game_heartbeat_seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyOutOfGameHeartbeatSeconds() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "heartbeat_seconds" field.</summary>
  public const int HeartbeatSecondsFieldNumber = 3;
  private readonly static int HeartbeatSecondsDefaultValue = 0;

  private int heartbeatSeconds_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int HeartbeatSeconds {
    get { if ((_hasBits0 & 4) != 0) { return heartbeatSeconds_; } else { return HeartbeatSecondsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      heartbeatSeconds_ = value;
    }
  }
  /// <summary>Gets whether the "heartbeat_seconds" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHeartbeatSeconds {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "heartbeat_seconds" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHeartbeatSeconds() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "deprecated_public_ip" field.</summary>
  public const int DeprecatedPublicIpFieldNumber = 4;
  private readonly static uint DeprecatedPublicIpDefaultValue = 0;

  private uint deprecatedPublicIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DeprecatedPublicIp {
    get { if ((_hasBits0 & 8) != 0) { return deprecatedPublicIp_; } else { return DeprecatedPublicIpDefaultValue; } }
    set {
      _hasBits0 |= 8;
      deprecatedPublicIp_ = value;
    }
  }
  /// <summary>Gets whether the "deprecated_public_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeprecatedPublicIp {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "deprecated_public_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeprecatedPublicIp() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "rtime32_server_time" field.</summary>
  public const int Rtime32ServerTimeFieldNumber = 5;
  private readonly static uint Rtime32ServerTimeDefaultValue = 0;

  private uint rtime32ServerTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Rtime32ServerTime {
    get { if ((_hasBits0 & 16) != 0) { return rtime32ServerTime_; } else { return Rtime32ServerTimeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      rtime32ServerTime_ = value;
    }
  }
  /// <summary>Gets whether the "rtime32_server_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtime32ServerTime {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "rtime32_server_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtime32ServerTime() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "account_flags" field.</summary>
  public const int AccountFlagsFieldNumber = 6;
  private readonly static uint AccountFlagsDefaultValue = 0;

  private uint accountFlags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountFlags {
    get { if ((_hasBits0 & 32) != 0) { return accountFlags_; } else { return AccountFlagsDefaultValue; } }
    set {
      _hasBits0 |= 32;
      accountFlags_ = value;
    }
  }
  /// <summary>Gets whether the "account_flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountFlags {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "account_flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountFlags() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "cell_id" field.</summary>
  public const int CellIdFieldNumber = 7;
  private readonly static uint CellIdDefaultValue = 0;

  private uint cellId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CellId {
    get { if ((_hasBits0 & 64) != 0) { return cellId_; } else { return CellIdDefaultValue; } }
    set {
      _hasBits0 |= 64;
      cellId_ = value;
    }
  }
  /// <summary>Gets whether the "cell_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCellId {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "cell_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCellId() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "email_domain" field.</summary>
  public const int EmailDomainFieldNumber = 8;
  private readonly static string EmailDomainDefaultValue = "";

  private string emailDomain_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EmailDomain {
    get { return emailDomain_ ?? EmailDomainDefaultValue; }
    set {
      emailDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "email_domain" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEmailDomain {
    get { return emailDomain_ != null; }
  }
  /// <summary>Clears the value of the "email_domain" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEmailDomain() {
    emailDomain_ = null;
  }

  /// <summary>Field number for the "steam2_ticket" field.</summary>
  public const int Steam2TicketFieldNumber = 9;
  private readonly static pb::ByteString Steam2TicketDefaultValue = pb::ByteString.Empty;

  private pb::ByteString steam2Ticket_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Steam2Ticket {
    get { return steam2Ticket_ ?? Steam2TicketDefaultValue; }
    set {
      steam2Ticket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "steam2_ticket" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteam2Ticket {
    get { return steam2Ticket_ != null; }
  }
  /// <summary>Clears the value of the "steam2_ticket" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteam2Ticket() {
    steam2Ticket_ = null;
  }

  /// <summary>Field number for the "eresult_extended" field.</summary>
  public const int EresultExtendedFieldNumber = 10;
  private readonly static int EresultExtendedDefaultValue = 0;

  private int eresultExtended_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EresultExtended {
    get { if ((_hasBits0 & 128) != 0) { return eresultExtended_; } else { return EresultExtendedDefaultValue; } }
    set {
      _hasBits0 |= 128;
      eresultExtended_ = value;
    }
  }
  /// <summary>Gets whether the "eresult_extended" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresultExtended {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "eresult_extended" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresultExtended() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "webapi_authenticate_user_nonce" field.</summary>
  public const int WebapiAuthenticateUserNonceFieldNumber = 11;
  private readonly static string WebapiAuthenticateUserNonceDefaultValue = "";

  private string webapiAuthenticateUserNonce_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WebapiAuthenticateUserNonce {
    get { return webapiAuthenticateUserNonce_ ?? WebapiAuthenticateUserNonceDefaultValue; }
    set {
      webapiAuthenticateUserNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "webapi_authenticate_user_nonce" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWebapiAuthenticateUserNonce {
    get { return webapiAuthenticateUserNonce_ != null; }
  }
  /// <summary>Clears the value of the "webapi_authenticate_user_nonce" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWebapiAuthenticateUserNonce() {
    webapiAuthenticateUserNonce_ = null;
  }

  /// <summary>Field number for the "cell_id_ping_threshold" field.</summary>
  public const int CellIdPingThresholdFieldNumber = 12;
  private readonly static uint CellIdPingThresholdDefaultValue = 0;

  private uint cellIdPingThreshold_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CellIdPingThreshold {
    get { if ((_hasBits0 & 256) != 0) { return cellIdPingThreshold_; } else { return CellIdPingThresholdDefaultValue; } }
    set {
      _hasBits0 |= 256;
      cellIdPingThreshold_ = value;
    }
  }
  /// <summary>Gets whether the "cell_id_ping_threshold" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCellIdPingThreshold {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "cell_id_ping_threshold" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCellIdPingThreshold() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "deprecated_use_pics" field.</summary>
  public const int DeprecatedUsePicsFieldNumber = 13;
  private readonly static bool DeprecatedUsePicsDefaultValue = false;

  private bool deprecatedUsePics_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool DeprecatedUsePics {
    get { if ((_hasBits0 & 512) != 0) { return deprecatedUsePics_; } else { return DeprecatedUsePicsDefaultValue; } }
    set {
      _hasBits0 |= 512;
      deprecatedUsePics_ = value;
    }
  }
  /// <summary>Gets whether the "deprecated_use_pics" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeprecatedUsePics {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "deprecated_use_pics" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeprecatedUsePics() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "vanity_url" field.</summary>
  public const int VanityUrlFieldNumber = 14;
  private readonly static string VanityUrlDefaultValue = "";

  private string vanityUrl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string VanityUrl {
    get { return vanityUrl_ ?? VanityUrlDefaultValue; }
    set {
      vanityUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "vanity_url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVanityUrl {
    get { return vanityUrl_ != null; }
  }
  /// <summary>Clears the value of the "vanity_url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVanityUrl() {
    vanityUrl_ = null;
  }

  /// <summary>Field number for the "public_ip" field.</summary>
  public const int PublicIpFieldNumber = 15;
  private global::CMsgIPAddress publicIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgIPAddress PublicIp {
    get { return publicIp_; }
    set {
      publicIp_ = value;
    }
  }

  /// <summary>Field number for the "user_country" field.</summary>
  public const int UserCountryFieldNumber = 16;
  private readonly static string UserCountryDefaultValue = "";

  private string userCountry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string UserCountry {
    get { return userCountry_ ?? UserCountryDefaultValue; }
    set {
      userCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "user_country" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserCountry {
    get { return userCountry_ != null; }
  }
  /// <summary>Clears the value of the "user_country" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserCountry() {
    userCountry_ = null;
  }

  /// <summary>Field number for the "client_supplied_steamid" field.</summary>
  public const int ClientSuppliedSteamidFieldNumber = 20;
  private readonly static ulong ClientSuppliedSteamidDefaultValue = 0UL;

  private ulong clientSuppliedSteamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientSuppliedSteamid {
    get { if ((_hasBits0 & 1024) != 0) { return clientSuppliedSteamid_; } else { return ClientSuppliedSteamidDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      clientSuppliedSteamid_ = value;
    }
  }
  /// <summary>Gets whether the "client_supplied_steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientSuppliedSteamid {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "client_supplied_steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientSuppliedSteamid() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "ip_country_code" field.</summary>
  public const int IpCountryCodeFieldNumber = 21;
  private readonly static string IpCountryCodeDefaultValue = "";

  private string ipCountryCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IpCountryCode {
    get { return ipCountryCode_ ?? IpCountryCodeDefaultValue; }
    set {
      ipCountryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ip_country_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpCountryCode {
    get { return ipCountryCode_ != null; }
  }
  /// <summary>Clears the value of the "ip_country_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpCountryCode() {
    ipCountryCode_ = null;
  }

  /// <summary>Field number for the "parental_settings" field.</summary>
  public const int ParentalSettingsFieldNumber = 22;
  private readonly static pb::ByteString ParentalSettingsDefaultValue = pb::ByteString.Empty;

  private pb::ByteString parentalSettings_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ParentalSettings {
    get { return parentalSettings_ ?? ParentalSettingsDefaultValue; }
    set {
      parentalSettings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "parental_settings" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParentalSettings {
    get { return parentalSettings_ != null; }
  }
  /// <summary>Clears the value of the "parental_settings" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParentalSettings() {
    parentalSettings_ = null;
  }

  /// <summary>Field number for the "parental_setting_signature" field.</summary>
  public const int ParentalSettingSignatureFieldNumber = 23;
  private readonly static pb::ByteString ParentalSettingSignatureDefaultValue = pb::ByteString.Empty;

  private pb::ByteString parentalSettingSignature_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString ParentalSettingSignature {
    get { return parentalSettingSignature_ ?? ParentalSettingSignatureDefaultValue; }
    set {
      parentalSettingSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "parental_setting_signature" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParentalSettingSignature {
    get { return parentalSettingSignature_ != null; }
  }
  /// <summary>Clears the value of the "parental_setting_signature" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParentalSettingSignature() {
    parentalSettingSignature_ = null;
  }

  /// <summary>Field number for the "count_loginfailures_to_migrate" field.</summary>
  public const int CountLoginfailuresToMigrateFieldNumber = 24;
  private readonly static int CountLoginfailuresToMigrateDefaultValue = 0;

  private int countLoginfailuresToMigrate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CountLoginfailuresToMigrate {
    get { if ((_hasBits0 & 2048) != 0) { return countLoginfailuresToMigrate_; } else { return CountLoginfailuresToMigrateDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      countLoginfailuresToMigrate_ = value;
    }
  }
  /// <summary>Gets whether the "count_loginfailures_to_migrate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountLoginfailuresToMigrate {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "count_loginfailures_to_migrate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountLoginfailuresToMigrate() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "count_disconnects_to_migrate" field.</summary>
  public const int CountDisconnectsToMigrateFieldNumber = 25;
  private readonly static int CountDisconnectsToMigrateDefaultValue = 0;

  private int countDisconnectsToMigrate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CountDisconnectsToMigrate {
    get { if ((_hasBits0 & 4096) != 0) { return countDisconnectsToMigrate_; } else { return CountDisconnectsToMigrateDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      countDisconnectsToMigrate_ = value;
    }
  }
  /// <summary>Gets whether the "count_disconnects_to_migrate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountDisconnectsToMigrate {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "count_disconnects_to_migrate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountDisconnectsToMigrate() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "ogs_data_report_time_window" field.</summary>
  public const int OgsDataReportTimeWindowFieldNumber = 26;
  private readonly static int OgsDataReportTimeWindowDefaultValue = 0;

  private int ogsDataReportTimeWindow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int OgsDataReportTimeWindow {
    get { if ((_hasBits0 & 8192) != 0) { return ogsDataReportTimeWindow_; } else { return OgsDataReportTimeWindowDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      ogsDataReportTimeWindow_ = value;
    }
  }
  /// <summary>Gets whether the "ogs_data_report_time_window" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOgsDataReportTimeWindow {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "ogs_data_report_time_window" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOgsDataReportTimeWindow() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "client_instance_id" field.</summary>
  public const int ClientInstanceIdFieldNumber = 27;
  private readonly static ulong ClientInstanceIdDefaultValue = 0UL;

  private ulong clientInstanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientInstanceId {
    get { if ((_hasBits0 & 16384) != 0) { return clientInstanceId_; } else { return ClientInstanceIdDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      clientInstanceId_ = value;
    }
  }
  /// <summary>Gets whether the "client_instance_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientInstanceId {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "client_instance_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientInstanceId() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "force_client_update_check" field.</summary>
  public const int ForceClientUpdateCheckFieldNumber = 28;
  private readonly static bool ForceClientUpdateCheckDefaultValue = false;

  private bool forceClientUpdateCheck_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ForceClientUpdateCheck {
    get { if ((_hasBits0 & 32768) != 0) { return forceClientUpdateCheck_; } else { return ForceClientUpdateCheckDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      forceClientUpdateCheck_ = value;
    }
  }
  /// <summary>Gets whether the "force_client_update_check" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasForceClientUpdateCheck {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "force_client_update_check" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearForceClientUpdateCheck() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "agreement_session_url" field.</summary>
  public const int AgreementSessionUrlFieldNumber = 29;
  private readonly static string AgreementSessionUrlDefaultValue = "";

  private string agreementSessionUrl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AgreementSessionUrl {
    get { return agreementSessionUrl_ ?? AgreementSessionUrlDefaultValue; }
    set {
      agreementSessionUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "agreement_session_url" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAgreementSessionUrl {
    get { return agreementSessionUrl_ != null; }
  }
  /// <summary>Clears the value of the "agreement_session_url" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAgreementSessionUrl() {
    agreementSessionUrl_ = null;
  }

  /// <summary>Field number for the "token_id" field.</summary>
  public const int TokenIdFieldNumber = 30;
  private readonly static ulong TokenIdDefaultValue = 0UL;

  private ulong tokenId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TokenId {
    get { if ((_hasBits0 & 65536) != 0) { return tokenId_; } else { return TokenIdDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      tokenId_ = value;
    }
  }
  /// <summary>Gets whether the "token_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokenId {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "token_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokenId() {
    _hasBits0 &= ~65536;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientLogonResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientLogonResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    if (LegacyOutOfGameHeartbeatSeconds != other.LegacyOutOfGameHeartbeatSeconds) return false;
    if (HeartbeatSeconds != other.HeartbeatSeconds) return false;
    if (DeprecatedPublicIp != other.DeprecatedPublicIp) return false;
    if (Rtime32ServerTime != other.Rtime32ServerTime) return false;
    if (AccountFlags != other.AccountFlags) return false;
    if (CellId != other.CellId) return false;
    if (EmailDomain != other.EmailDomain) return false;
    if (Steam2Ticket != other.Steam2Ticket) return false;
    if (EresultExtended != other.EresultExtended) return false;
    if (WebapiAuthenticateUserNonce != other.WebapiAuthenticateUserNonce) return false;
    if (CellIdPingThreshold != other.CellIdPingThreshold) return false;
    if (DeprecatedUsePics != other.DeprecatedUsePics) return false;
    if (VanityUrl != other.VanityUrl) return false;
    if (!object.Equals(PublicIp, other.PublicIp)) return false;
    if (UserCountry != other.UserCountry) return false;
    if (ClientSuppliedSteamid != other.ClientSuppliedSteamid) return false;
    if (IpCountryCode != other.IpCountryCode) return false;
    if (ParentalSettings != other.ParentalSettings) return false;
    if (ParentalSettingSignature != other.ParentalSettingSignature) return false;
    if (CountLoginfailuresToMigrate != other.CountLoginfailuresToMigrate) return false;
    if (CountDisconnectsToMigrate != other.CountDisconnectsToMigrate) return false;
    if (OgsDataReportTimeWindow != other.OgsDataReportTimeWindow) return false;
    if (ClientInstanceId != other.ClientInstanceId) return false;
    if (ForceClientUpdateCheck != other.ForceClientUpdateCheck) return false;
    if (AgreementSessionUrl != other.AgreementSessionUrl) return false;
    if (TokenId != other.TokenId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasLegacyOutOfGameHeartbeatSeconds) hash ^= LegacyOutOfGameHeartbeatSeconds.GetHashCode();
    if (HasHeartbeatSeconds) hash ^= HeartbeatSeconds.GetHashCode();
    if (HasDeprecatedPublicIp) hash ^= DeprecatedPublicIp.GetHashCode();
    if (HasRtime32ServerTime) hash ^= Rtime32ServerTime.GetHashCode();
    if (HasAccountFlags) hash ^= AccountFlags.GetHashCode();
    if (HasCellId) hash ^= CellId.GetHashCode();
    if (HasEmailDomain) hash ^= EmailDomain.GetHashCode();
    if (HasSteam2Ticket) hash ^= Steam2Ticket.GetHashCode();
    if (HasEresultExtended) hash ^= EresultExtended.GetHashCode();
    if (HasWebapiAuthenticateUserNonce) hash ^= WebapiAuthenticateUserNonce.GetHashCode();
    if (HasCellIdPingThreshold) hash ^= CellIdPingThreshold.GetHashCode();
    if (HasDeprecatedUsePics) hash ^= DeprecatedUsePics.GetHashCode();
    if (HasVanityUrl) hash ^= VanityUrl.GetHashCode();
    if (publicIp_ != null) hash ^= PublicIp.GetHashCode();
    if (HasUserCountry) hash ^= UserCountry.GetHashCode();
    if (HasClientSuppliedSteamid) hash ^= ClientSuppliedSteamid.GetHashCode();
    if (HasIpCountryCode) hash ^= IpCountryCode.GetHashCode();
    if (HasParentalSettings) hash ^= ParentalSettings.GetHashCode();
    if (HasParentalSettingSignature) hash ^= ParentalSettingSignature.GetHashCode();
    if (HasCountLoginfailuresToMigrate) hash ^= CountLoginfailuresToMigrate.GetHashCode();
    if (HasCountDisconnectsToMigrate) hash ^= CountDisconnectsToMigrate.GetHashCode();
    if (HasOgsDataReportTimeWindow) hash ^= OgsDataReportTimeWindow.GetHashCode();
    if (HasClientInstanceId) hash ^= ClientInstanceId.GetHashCode();
    if (HasForceClientUpdateCheck) hash ^= ForceClientUpdateCheck.GetHashCode();
    if (HasAgreementSessionUrl) hash ^= AgreementSessionUrl.GetHashCode();
    if (HasTokenId) hash ^= TokenId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasLegacyOutOfGameHeartbeatSeconds) {
      output.WriteRawTag(16);
      output.WriteInt32(LegacyOutOfGameHeartbeatSeconds);
    }
    if (HasHeartbeatSeconds) {
      output.WriteRawTag(24);
      output.WriteInt32(HeartbeatSeconds);
    }
    if (HasDeprecatedPublicIp) {
      output.WriteRawTag(32);
      output.WriteUInt32(DeprecatedPublicIp);
    }
    if (HasRtime32ServerTime) {
      output.WriteRawTag(45);
      output.WriteFixed32(Rtime32ServerTime);
    }
    if (HasAccountFlags) {
      output.WriteRawTag(48);
      output.WriteUInt32(AccountFlags);
    }
    if (HasCellId) {
      output.WriteRawTag(56);
      output.WriteUInt32(CellId);
    }
    if (HasEmailDomain) {
      output.WriteRawTag(66);
      output.WriteString(EmailDomain);
    }
    if (HasSteam2Ticket) {
      output.WriteRawTag(74);
      output.WriteBytes(Steam2Ticket);
    }
    if (HasEresultExtended) {
      output.WriteRawTag(80);
      output.WriteInt32(EresultExtended);
    }
    if (HasWebapiAuthenticateUserNonce) {
      output.WriteRawTag(90);
      output.WriteString(WebapiAuthenticateUserNonce);
    }
    if (HasCellIdPingThreshold) {
      output.WriteRawTag(96);
      output.WriteUInt32(CellIdPingThreshold);
    }
    if (HasDeprecatedUsePics) {
      output.WriteRawTag(104);
      output.WriteBool(DeprecatedUsePics);
    }
    if (HasVanityUrl) {
      output.WriteRawTag(114);
      output.WriteString(VanityUrl);
    }
    if (publicIp_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(PublicIp);
    }
    if (HasUserCountry) {
      output.WriteRawTag(130, 1);
      output.WriteString(UserCountry);
    }
    if (HasClientSuppliedSteamid) {
      output.WriteRawTag(161, 1);
      output.WriteFixed64(ClientSuppliedSteamid);
    }
    if (HasIpCountryCode) {
      output.WriteRawTag(170, 1);
      output.WriteString(IpCountryCode);
    }
    if (HasParentalSettings) {
      output.WriteRawTag(178, 1);
      output.WriteBytes(ParentalSettings);
    }
    if (HasParentalSettingSignature) {
      output.WriteRawTag(186, 1);
      output.WriteBytes(ParentalSettingSignature);
    }
    if (HasCountLoginfailuresToMigrate) {
      output.WriteRawTag(192, 1);
      output.WriteInt32(CountLoginfailuresToMigrate);
    }
    if (HasCountDisconnectsToMigrate) {
      output.WriteRawTag(200, 1);
      output.WriteInt32(CountDisconnectsToMigrate);
    }
    if (HasOgsDataReportTimeWindow) {
      output.WriteRawTag(208, 1);
      output.WriteInt32(OgsDataReportTimeWindow);
    }
    if (HasClientInstanceId) {
      output.WriteRawTag(216, 1);
      output.WriteUInt64(ClientInstanceId);
    }
    if (HasForceClientUpdateCheck) {
      output.WriteRawTag(224, 1);
      output.WriteBool(ForceClientUpdateCheck);
    }
    if (HasAgreementSessionUrl) {
      output.WriteRawTag(234, 1);
      output.WriteString(AgreementSessionUrl);
    }
    if (HasTokenId) {
      output.WriteRawTag(240, 1);
      output.WriteUInt64(TokenId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasLegacyOutOfGameHeartbeatSeconds) {
      output.WriteRawTag(16);
      output.WriteInt32(LegacyOutOfGameHeartbeatSeconds);
    }
    if (HasHeartbeatSeconds) {
      output.WriteRawTag(24);
      output.WriteInt32(HeartbeatSeconds);
    }
    if (HasDeprecatedPublicIp) {
      output.WriteRawTag(32);
      output.WriteUInt32(DeprecatedPublicIp);
    }
    if (HasRtime32ServerTime) {
      output.WriteRawTag(45);
      output.WriteFixed32(Rtime32ServerTime);
    }
    if (HasAccountFlags) {
      output.WriteRawTag(48);
      output.WriteUInt32(AccountFlags);
    }
    if (HasCellId) {
      output.WriteRawTag(56);
      output.WriteUInt32(CellId);
    }
    if (HasEmailDomain) {
      output.WriteRawTag(66);
      output.WriteString(EmailDomain);
    }
    if (HasSteam2Ticket) {
      output.WriteRawTag(74);
      output.WriteBytes(Steam2Ticket);
    }
    if (HasEresultExtended) {
      output.WriteRawTag(80);
      output.WriteInt32(EresultExtended);
    }
    if (HasWebapiAuthenticateUserNonce) {
      output.WriteRawTag(90);
      output.WriteString(WebapiAuthenticateUserNonce);
    }
    if (HasCellIdPingThreshold) {
      output.WriteRawTag(96);
      output.WriteUInt32(CellIdPingThreshold);
    }
    if (HasDeprecatedUsePics) {
      output.WriteRawTag(104);
      output.WriteBool(DeprecatedUsePics);
    }
    if (HasVanityUrl) {
      output.WriteRawTag(114);
      output.WriteString(VanityUrl);
    }
    if (publicIp_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(PublicIp);
    }
    if (HasUserCountry) {
      output.WriteRawTag(130, 1);
      output.WriteString(UserCountry);
    }
    if (HasClientSuppliedSteamid) {
      output.WriteRawTag(161, 1);
      output.WriteFixed64(ClientSuppliedSteamid);
    }
    if (HasIpCountryCode) {
      output.WriteRawTag(170, 1);
      output.WriteString(IpCountryCode);
    }
    if (HasParentalSettings) {
      output.WriteRawTag(178, 1);
      output.WriteBytes(ParentalSettings);
    }
    if (HasParentalSettingSignature) {
      output.WriteRawTag(186, 1);
      output.WriteBytes(ParentalSettingSignature);
    }
    if (HasCountLoginfailuresToMigrate) {
      output.WriteRawTag(192, 1);
      output.WriteInt32(CountLoginfailuresToMigrate);
    }
    if (HasCountDisconnectsToMigrate) {
      output.WriteRawTag(200, 1);
      output.WriteInt32(CountDisconnectsToMigrate);
    }
    if (HasOgsDataReportTimeWindow) {
      output.WriteRawTag(208, 1);
      output.WriteInt32(OgsDataReportTimeWindow);
    }
    if (HasClientInstanceId) {
      output.WriteRawTag(216, 1);
      output.WriteUInt64(ClientInstanceId);
    }
    if (HasForceClientUpdateCheck) {
      output.WriteRawTag(224, 1);
      output.WriteBool(ForceClientUpdateCheck);
    }
    if (HasAgreementSessionUrl) {
      output.WriteRawTag(234, 1);
      output.WriteString(AgreementSessionUrl);
    }
    if (HasTokenId) {
      output.WriteRawTag(240, 1);
      output.WriteUInt64(TokenId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (HasLegacyOutOfGameHeartbeatSeconds) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LegacyOutOfGameHeartbeatSeconds);
    }
    if (HasHeartbeatSeconds) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeartbeatSeconds);
    }
    if (HasDeprecatedPublicIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeprecatedPublicIp);
    }
    if (HasRtime32ServerTime) {
      size += 1 + 4;
    }
    if (HasAccountFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountFlags);
    }
    if (HasCellId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellId);
    }
    if (HasEmailDomain) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EmailDomain);
    }
    if (HasSteam2Ticket) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Steam2Ticket);
    }
    if (HasEresultExtended) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EresultExtended);
    }
    if (HasWebapiAuthenticateUserNonce) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WebapiAuthenticateUserNonce);
    }
    if (HasCellIdPingThreshold) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CellIdPingThreshold);
    }
    if (HasDeprecatedUsePics) {
      size += 1 + 1;
    }
    if (HasVanityUrl) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(VanityUrl);
    }
    if (publicIp_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicIp);
    }
    if (HasUserCountry) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(UserCountry);
    }
    if (HasClientSuppliedSteamid) {
      size += 2 + 8;
    }
    if (HasIpCountryCode) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(IpCountryCode);
    }
    if (HasParentalSettings) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(ParentalSettings);
    }
    if (HasParentalSettingSignature) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(ParentalSettingSignature);
    }
    if (HasCountLoginfailuresToMigrate) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(CountLoginfailuresToMigrate);
    }
    if (HasCountDisconnectsToMigrate) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(CountDisconnectsToMigrate);
    }
    if (HasOgsDataReportTimeWindow) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(OgsDataReportTimeWindow);
    }
    if (HasClientInstanceId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ClientInstanceId);
    }
    if (HasForceClientUpdateCheck) {
      size += 2 + 1;
    }
    if (HasAgreementSessionUrl) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AgreementSessionUrl);
    }
    if (HasTokenId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TokenId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientLogonResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasLegacyOutOfGameHeartbeatSeconds) {
      LegacyOutOfGameHeartbeatSeconds = other.LegacyOutOfGameHeartbeatSeconds;
    }
    if (other.HasHeartbeatSeconds) {
      HeartbeatSeconds = other.HeartbeatSeconds;
    }
    if (other.HasDeprecatedPublicIp) {
      DeprecatedPublicIp = other.DeprecatedPublicIp;
    }
    if (other.HasRtime32ServerTime) {
      Rtime32ServerTime = other.Rtime32ServerTime;
    }
    if (other.HasAccountFlags) {
      AccountFlags = other.AccountFlags;
    }
    if (other.HasCellId) {
      CellId = other.CellId;
    }
    if (other.HasEmailDomain) {
      EmailDomain = other.EmailDomain;
    }
    if (other.HasSteam2Ticket) {
      Steam2Ticket = other.Steam2Ticket;
    }
    if (other.HasEresultExtended) {
      EresultExtended = other.EresultExtended;
    }
    if (other.HasWebapiAuthenticateUserNonce) {
      WebapiAuthenticateUserNonce = other.WebapiAuthenticateUserNonce;
    }
    if (other.HasCellIdPingThreshold) {
      CellIdPingThreshold = other.CellIdPingThreshold;
    }
    if (other.HasDeprecatedUsePics) {
      DeprecatedUsePics = other.DeprecatedUsePics;
    }
    if (other.HasVanityUrl) {
      VanityUrl = other.VanityUrl;
    }
    if (other.publicIp_ != null) {
      if (publicIp_ == null) {
        PublicIp = new global::CMsgIPAddress();
      }
      PublicIp.MergeFrom(other.PublicIp);
    }
    if (other.HasUserCountry) {
      UserCountry = other.UserCountry;
    }
    if (other.HasClientSuppliedSteamid) {
      ClientSuppliedSteamid = other.ClientSuppliedSteamid;
    }
    if (other.HasIpCountryCode) {
      IpCountryCode = other.IpCountryCode;
    }
    if (other.HasParentalSettings) {
      ParentalSettings = other.ParentalSettings;
    }
    if (other.HasParentalSettingSignature) {
      ParentalSettingSignature = other.ParentalSettingSignature;
    }
    if (other.HasCountLoginfailuresToMigrate) {
      CountLoginfailuresToMigrate = other.CountLoginfailuresToMigrate;
    }
    if (other.HasCountDisconnectsToMigrate) {
      CountDisconnectsToMigrate = other.CountDisconnectsToMigrate;
    }
    if (other.HasOgsDataReportTimeWindow) {
      OgsDataReportTimeWindow = other.OgsDataReportTimeWindow;
    }
    if (other.HasClientInstanceId) {
      ClientInstanceId = other.ClientInstanceId;
    }
    if (other.HasForceClientUpdateCheck) {
      ForceClientUpdateCheck = other.ForceClientUpdateCheck;
    }
    if (other.HasAgreementSessionUrl) {
      AgreementSessionUrl = other.AgreementSessionUrl;
    }
    if (other.HasTokenId) {
      TokenId = other.TokenId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 16: {
          LegacyOutOfGameHeartbeatSeconds = input.ReadInt32();
          break;
        }
        case 24: {
          HeartbeatSeconds = input.ReadInt32();
          break;
        }
        case 32: {
          DeprecatedPublicIp = input.ReadUInt32();
          break;
        }
        case 45: {
          Rtime32ServerTime = input.ReadFixed32();
          break;
        }
        case 48: {
          AccountFlags = input.ReadUInt32();
          break;
        }
        case 56: {
          CellId = input.ReadUInt32();
          break;
        }
        case 66: {
          EmailDomain = input.ReadString();
          break;
        }
        case 74: {
          Steam2Ticket = input.ReadBytes();
          break;
        }
        case 80: {
          EresultExtended = input.ReadInt32();
          break;
        }
        case 90: {
          WebapiAuthenticateUserNonce = input.ReadString();
          break;
        }
        case 96: {
          CellIdPingThreshold = input.ReadUInt32();
          break;
        }
        case 104: {
          DeprecatedUsePics = input.ReadBool();
          break;
        }
        case 114: {
          VanityUrl = input.ReadString();
          break;
        }
        case 122: {
          if (publicIp_ == null) {
            PublicIp = new global::CMsgIPAddress();
          }
          input.ReadMessage(PublicIp);
          break;
        }
        case 130: {
          UserCountry = input.ReadString();
          break;
        }
        case 161: {
          ClientSuppliedSteamid = input.ReadFixed64();
          break;
        }
        case 170: {
          IpCountryCode = input.ReadString();
          break;
        }
        case 178: {
          ParentalSettings = input.ReadBytes();
          break;
        }
        case 186: {
          ParentalSettingSignature = input.ReadBytes();
          break;
        }
        case 192: {
          CountLoginfailuresToMigrate = input.ReadInt32();
          break;
        }
        case 200: {
          CountDisconnectsToMigrate = input.ReadInt32();
          break;
        }
        case 208: {
          OgsDataReportTimeWindow = input.ReadInt32();
          break;
        }
        case 216: {
          ClientInstanceId = input.ReadUInt64();
          break;
        }
        case 224: {
          ForceClientUpdateCheck = input.ReadBool();
          break;
        }
        case 234: {
          AgreementSessionUrl = input.ReadString();
          break;
        }
        case 240: {
          TokenId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 16: {
          LegacyOutOfGameHeartbeatSeconds = input.ReadInt32();
          break;
        }
        case 24: {
          HeartbeatSeconds = input.ReadInt32();
          break;
        }
        case 32: {
          DeprecatedPublicIp = input.ReadUInt32();
          break;
        }
        case 45: {
          Rtime32ServerTime = input.ReadFixed32();
          break;
        }
        case 48: {
          AccountFlags = input.ReadUInt32();
          break;
        }
        case 56: {
          CellId = input.ReadUInt32();
          break;
        }
        case 66: {
          EmailDomain = input.ReadString();
          break;
        }
        case 74: {
          Steam2Ticket = input.ReadBytes();
          break;
        }
        case 80: {
          EresultExtended = input.ReadInt32();
          break;
        }
        case 90: {
          WebapiAuthenticateUserNonce = input.ReadString();
          break;
        }
        case 96: {
          CellIdPingThreshold = input.ReadUInt32();
          break;
        }
        case 104: {
          DeprecatedUsePics = input.ReadBool();
          break;
        }
        case 114: {
          VanityUrl = input.ReadString();
          break;
        }
        case 122: {
          if (publicIp_ == null) {
            PublicIp = new global::CMsgIPAddress();
          }
          input.ReadMessage(PublicIp);
          break;
        }
        case 130: {
          UserCountry = input.ReadString();
          break;
        }
        case 161: {
          ClientSuppliedSteamid = input.ReadFixed64();
          break;
        }
        case 170: {
          IpCountryCode = input.ReadString();
          break;
        }
        case 178: {
          ParentalSettings = input.ReadBytes();
          break;
        }
        case 186: {
          ParentalSettingSignature = input.ReadBytes();
          break;
        }
        case 192: {
          CountLoginfailuresToMigrate = input.ReadInt32();
          break;
        }
        case 200: {
          CountDisconnectsToMigrate = input.ReadInt32();
          break;
        }
        case 208: {
          OgsDataReportTimeWindow = input.ReadInt32();
          break;
        }
        case 216: {
          ClientInstanceId = input.ReadUInt64();
          break;
        }
        case 224: {
          ForceClientUpdateCheck = input.ReadBool();
          break;
        }
        case 234: {
          AgreementSessionUrl = input.ReadString();
          break;
        }
        case 240: {
          TokenId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientRequestWebAPIAuthenticateUserNonce : pb::IMessage<CMsgClientRequestWebAPIAuthenticateUserNonce>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientRequestWebAPIAuthenticateUserNonce> _parser = new pb::MessageParser<CMsgClientRequestWebAPIAuthenticateUserNonce>(() => new CMsgClientRequestWebAPIAuthenticateUserNonce());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientRequestWebAPIAuthenticateUserNonce> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestWebAPIAuthenticateUserNonce() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestWebAPIAuthenticateUserNonce(CMsgClientRequestWebAPIAuthenticateUserNonce other) : this() {
    _hasBits0 = other._hasBits0;
    tokenType_ = other.tokenType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestWebAPIAuthenticateUserNonce Clone() {
    return new CMsgClientRequestWebAPIAuthenticateUserNonce(this);
  }

  /// <summary>Field number for the "token_type" field.</summary>
  public const int TokenTypeFieldNumber = 1;
  private readonly static int TokenTypeDefaultValue = -1;

  private int tokenType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TokenType {
    get { if ((_hasBits0 & 1) != 0) { return tokenType_; } else { return TokenTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tokenType_ = value;
    }
  }
  /// <summary>Gets whether the "token_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokenType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "token_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokenType() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientRequestWebAPIAuthenticateUserNonce);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientRequestWebAPIAuthenticateUserNonce other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TokenType != other.TokenType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTokenType) hash ^= TokenType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTokenType) {
      output.WriteRawTag(8);
      output.WriteInt32(TokenType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTokenType) {
      output.WriteRawTag(8);
      output.WriteInt32(TokenType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTokenType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientRequestWebAPIAuthenticateUserNonce other) {
    if (other == null) {
      return;
    }
    if (other.HasTokenType) {
      TokenType = other.TokenType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TokenType = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TokenType = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientRequestWebAPIAuthenticateUserNonceResponse : pb::IMessage<CMsgClientRequestWebAPIAuthenticateUserNonceResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientRequestWebAPIAuthenticateUserNonceResponse> _parser = new pb::MessageParser<CMsgClientRequestWebAPIAuthenticateUserNonceResponse>(() => new CMsgClientRequestWebAPIAuthenticateUserNonceResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientRequestWebAPIAuthenticateUserNonceResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestWebAPIAuthenticateUserNonceResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestWebAPIAuthenticateUserNonceResponse(CMsgClientRequestWebAPIAuthenticateUserNonceResponse other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    webapiAuthenticateUserNonce_ = other.webapiAuthenticateUserNonce_;
    tokenType_ = other.tokenType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientRequestWebAPIAuthenticateUserNonceResponse Clone() {
    return new CMsgClientRequestWebAPIAuthenticateUserNonceResponse(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "webapi_authenticate_user_nonce" field.</summary>
  public const int WebapiAuthenticateUserNonceFieldNumber = 11;
  private readonly static string WebapiAuthenticateUserNonceDefaultValue = "";

  private string webapiAuthenticateUserNonce_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string WebapiAuthenticateUserNonce {
    get { return webapiAuthenticateUserNonce_ ?? WebapiAuthenticateUserNonceDefaultValue; }
    set {
      webapiAuthenticateUserNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "webapi_authenticate_user_nonce" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWebapiAuthenticateUserNonce {
    get { return webapiAuthenticateUserNonce_ != null; }
  }
  /// <summary>Clears the value of the "webapi_authenticate_user_nonce" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWebapiAuthenticateUserNonce() {
    webapiAuthenticateUserNonce_ = null;
  }

  /// <summary>Field number for the "token_type" field.</summary>
  public const int TokenTypeFieldNumber = 3;
  private readonly static int TokenTypeDefaultValue = -1;

  private int tokenType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TokenType {
    get { if ((_hasBits0 & 2) != 0) { return tokenType_; } else { return TokenTypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tokenType_ = value;
    }
  }
  /// <summary>Gets whether the "token_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTokenType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "token_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTokenType() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientRequestWebAPIAuthenticateUserNonceResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientRequestWebAPIAuthenticateUserNonceResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    if (WebapiAuthenticateUserNonce != other.WebapiAuthenticateUserNonce) return false;
    if (TokenType != other.TokenType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasWebapiAuthenticateUserNonce) hash ^= WebapiAuthenticateUserNonce.GetHashCode();
    if (HasTokenType) hash ^= TokenType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasTokenType) {
      output.WriteRawTag(24);
      output.WriteInt32(TokenType);
    }
    if (HasWebapiAuthenticateUserNonce) {
      output.WriteRawTag(90);
      output.WriteString(WebapiAuthenticateUserNonce);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (HasTokenType) {
      output.WriteRawTag(24);
      output.WriteInt32(TokenType);
    }
    if (HasWebapiAuthenticateUserNonce) {
      output.WriteRawTag(90);
      output.WriteString(WebapiAuthenticateUserNonce);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (HasWebapiAuthenticateUserNonce) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(WebapiAuthenticateUserNonce);
    }
    if (HasTokenType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientRequestWebAPIAuthenticateUserNonceResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasWebapiAuthenticateUserNonce) {
      WebapiAuthenticateUserNonce = other.WebapiAuthenticateUserNonce;
    }
    if (other.HasTokenType) {
      TokenType = other.TokenType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 24: {
          TokenType = input.ReadInt32();
          break;
        }
        case 90: {
          WebapiAuthenticateUserNonce = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
        case 24: {
          TokenType = input.ReadInt32();
          break;
        }
        case 90: {
          WebapiAuthenticateUserNonce = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientLogOff : pb::IMessage<CMsgClientLogOff>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientLogOff> _parser = new pb::MessageParser<CMsgClientLogOff>(() => new CMsgClientLogOff());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientLogOff> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogOff() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogOff(CMsgClientLogOff other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLogOff Clone() {
    return new CMsgClientLogOff(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientLogOff);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientLogOff other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientLogOff other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientLoggedOff : pb::IMessage<CMsgClientLoggedOff>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientLoggedOff> _parser = new pb::MessageParser<CMsgClientLoggedOff>(() => new CMsgClientLoggedOff());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientLoggedOff> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLoggedOff() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLoggedOff(CMsgClientLoggedOff other) : this() {
    _hasBits0 = other._hasBits0;
    eresult_ = other.eresult_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientLoggedOff Clone() {
    return new CMsgClientLoggedOff(this);
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 1;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 1) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientLoggedOff);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientLoggedOff other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eresult != other.Eresult) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresult) {
      output.WriteRawTag(8);
      output.WriteInt32(Eresult);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientLoggedOff other) {
    if (other == null) {
      return;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eresult = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientNewLoginKey : pb::IMessage<CMsgClientNewLoginKey>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientNewLoginKey> _parser = new pb::MessageParser<CMsgClientNewLoginKey>(() => new CMsgClientNewLoginKey());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientNewLoginKey> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNewLoginKey() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNewLoginKey(CMsgClientNewLoginKey other) : this() {
    _hasBits0 = other._hasBits0;
    uniqueId_ = other.uniqueId_;
    loginKey_ = other.loginKey_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNewLoginKey Clone() {
    return new CMsgClientNewLoginKey(this);
  }

  /// <summary>Field number for the "unique_id" field.</summary>
  public const int UniqueIdFieldNumber = 1;
  private readonly static uint UniqueIdDefaultValue = 0;

  private uint uniqueId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UniqueId {
    get { if ((_hasBits0 & 1) != 0) { return uniqueId_; } else { return UniqueIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      uniqueId_ = value;
    }
  }
  /// <summary>Gets whether the "unique_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUniqueId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "unique_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUniqueId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "login_key" field.</summary>
  public const int LoginKeyFieldNumber = 2;
  private readonly static string LoginKeyDefaultValue = "";

  private string loginKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LoginKey {
    get { return loginKey_ ?? LoginKeyDefaultValue; }
    set {
      loginKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "login_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLoginKey {
    get { return loginKey_ != null; }
  }
  /// <summary>Clears the value of the "login_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLoginKey() {
    loginKey_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientNewLoginKey);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientNewLoginKey other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UniqueId != other.UniqueId) return false;
    if (LoginKey != other.LoginKey) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasUniqueId) hash ^= UniqueId.GetHashCode();
    if (HasLoginKey) hash ^= LoginKey.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasUniqueId) {
      output.WriteRawTag(8);
      output.WriteUInt32(UniqueId);
    }
    if (HasLoginKey) {
      output.WriteRawTag(18);
      output.WriteString(LoginKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasUniqueId) {
      output.WriteRawTag(8);
      output.WriteUInt32(UniqueId);
    }
    if (HasLoginKey) {
      output.WriteRawTag(18);
      output.WriteString(LoginKey);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasUniqueId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UniqueId);
    }
    if (HasLoginKey) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginKey);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientNewLoginKey other) {
    if (other == null) {
      return;
    }
    if (other.HasUniqueId) {
      UniqueId = other.UniqueId;
    }
    if (other.HasLoginKey) {
      LoginKey = other.LoginKey;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UniqueId = input.ReadUInt32();
          break;
        }
        case 18: {
          LoginKey = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UniqueId = input.ReadUInt32();
          break;
        }
        case 18: {
          LoginKey = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientNewLoginKeyAccepted : pb::IMessage<CMsgClientNewLoginKeyAccepted>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientNewLoginKeyAccepted> _parser = new pb::MessageParser<CMsgClientNewLoginKeyAccepted>(() => new CMsgClientNewLoginKeyAccepted());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientNewLoginKeyAccepted> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNewLoginKeyAccepted() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNewLoginKeyAccepted(CMsgClientNewLoginKeyAccepted other) : this() {
    _hasBits0 = other._hasBits0;
    uniqueId_ = other.uniqueId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientNewLoginKeyAccepted Clone() {
    return new CMsgClientNewLoginKeyAccepted(this);
  }

  /// <summary>Field number for the "unique_id" field.</summary>
  public const int UniqueIdFieldNumber = 1;
  private readonly static uint UniqueIdDefaultValue = 0;

  private uint uniqueId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UniqueId {
    get { if ((_hasBits0 & 1) != 0) { return uniqueId_; } else { return UniqueIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      uniqueId_ = value;
    }
  }
  /// <summary>Gets whether the "unique_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUniqueId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "unique_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUniqueId() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientNewLoginKeyAccepted);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientNewLoginKeyAccepted other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UniqueId != other.UniqueId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasUniqueId) hash ^= UniqueId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasUniqueId) {
      output.WriteRawTag(8);
      output.WriteUInt32(UniqueId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasUniqueId) {
      output.WriteRawTag(8);
      output.WriteUInt32(UniqueId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasUniqueId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UniqueId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientNewLoginKeyAccepted other) {
    if (other == null) {
      return;
    }
    if (other.HasUniqueId) {
      UniqueId = other.UniqueId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UniqueId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UniqueId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientAccountInfo : pb::IMessage<CMsgClientAccountInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientAccountInfo> _parser = new pb::MessageParser<CMsgClientAccountInfo>(() => new CMsgClientAccountInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientAccountInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAccountInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAccountInfo(CMsgClientAccountInfo other) : this() {
    _hasBits0 = other._hasBits0;
    personaName_ = other.personaName_;
    ipCountry_ = other.ipCountry_;
    countAuthedComputers_ = other.countAuthedComputers_;
    accountFlags_ = other.accountFlags_;
    facebookId_ = other.facebookId_;
    facebookName_ = other.facebookName_;
    steamguardMachineNameUserChosen_ = other.steamguardMachineNameUserChosen_;
    isPhoneVerified_ = other.isPhoneVerified_;
    twoFactorState_ = other.twoFactorState_;
    isPhoneIdentifying_ = other.isPhoneIdentifying_;
    isPhoneNeedingReverify_ = other.isPhoneNeedingReverify_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientAccountInfo Clone() {
    return new CMsgClientAccountInfo(this);
  }

  /// <summary>Field number for the "persona_name" field.</summary>
  public const int PersonaNameFieldNumber = 1;
  private readonly static string PersonaNameDefaultValue = "";

  private string personaName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PersonaName {
    get { return personaName_ ?? PersonaNameDefaultValue; }
    set {
      personaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "persona_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPersonaName {
    get { return personaName_ != null; }
  }
  /// <summary>Clears the value of the "persona_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPersonaName() {
    personaName_ = null;
  }

  /// <summary>Field number for the "ip_country" field.</summary>
  public const int IpCountryFieldNumber = 2;
  private readonly static string IpCountryDefaultValue = "";

  private string ipCountry_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string IpCountry {
    get { return ipCountry_ ?? IpCountryDefaultValue; }
    set {
      ipCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "ip_country" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIpCountry {
    get { return ipCountry_ != null; }
  }
  /// <summary>Clears the value of the "ip_country" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIpCountry() {
    ipCountry_ = null;
  }

  /// <summary>Field number for the "count_authed_computers" field.</summary>
  public const int CountAuthedComputersFieldNumber = 5;
  private readonly static int CountAuthedComputersDefaultValue = 0;

  private int countAuthedComputers_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CountAuthedComputers {
    get { if ((_hasBits0 & 1) != 0) { return countAuthedComputers_; } else { return CountAuthedComputersDefaultValue; } }
    set {
      _hasBits0 |= 1;
      countAuthedComputers_ = value;
    }
  }
  /// <summary>Gets whether the "count_authed_computers" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountAuthedComputers {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "count_authed_computers" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountAuthedComputers() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_flags" field.</summary>
  public const int AccountFlagsFieldNumber = 7;
  private readonly static uint AccountFlagsDefaultValue = 0;

  private uint accountFlags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountFlags {
    get { if ((_hasBits0 & 2) != 0) { return accountFlags_; } else { return AccountFlagsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      accountFlags_ = value;
    }
  }
  /// <summary>Gets whether the "account_flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountFlags {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "account_flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountFlags() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "facebook_id" field.</summary>
  public const int FacebookIdFieldNumber = 8;
  private readonly static ulong FacebookIdDefaultValue = 0UL;

  private ulong facebookId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong FacebookId {
    get { if ((_hasBits0 & 4) != 0) { return facebookId_; } else { return FacebookIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      facebookId_ = value;
    }
  }
  /// <summary>Gets whether the "facebook_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFacebookId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "facebook_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFacebookId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "facebook_name" field.</summary>
  public const int FacebookNameFieldNumber = 9;
  private readonly static string FacebookNameDefaultValue = "";

  private string facebookName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FacebookName {
    get { return facebookName_ ?? FacebookNameDefaultValue; }
    set {
      facebookName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "facebook_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFacebookName {
    get { return facebookName_ != null; }
  }
  /// <summary>Clears the value of the "facebook_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFacebookName() {
    facebookName_ = null;
  }

  /// <summary>Field number for the "steamguard_machine_name_user_chosen" field.</summary>
  public const int SteamguardMachineNameUserChosenFieldNumber = 15;
  private readonly static string SteamguardMachineNameUserChosenDefaultValue = "";

  private string steamguardMachineNameUserChosen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SteamguardMachineNameUserChosen {
    get { return steamguardMachineNameUserChosen_ ?? SteamguardMachineNameUserChosenDefaultValue; }
    set {
      steamguardMachineNameUserChosen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "steamguard_machine_name_user_chosen" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamguardMachineNameUserChosen {
    get { return steamguardMachineNameUserChosen_ != null; }
  }
  /// <summary>Clears the value of the "steamguard_machine_name_user_chosen" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamguardMachineNameUserChosen() {
    steamguardMachineNameUserChosen_ = null;
  }

  /// <summary>Field number for the "is_phone_verified" field.</summary>
  public const int IsPhoneVerifiedFieldNumber = 16;
  private readonly static bool IsPhoneVerifiedDefaultValue = false;

  private bool isPhoneVerified_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPhoneVerified {
    get { if ((_hasBits0 & 8) != 0) { return isPhoneVerified_; } else { return IsPhoneVerifiedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      isPhoneVerified_ = value;
    }
  }
  /// <summary>Gets whether the "is_phone_verified" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsPhoneVerified {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "is_phone_verified" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsPhoneVerified() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "two_factor_state" field.</summary>
  public const int TwoFactorStateFieldNumber = 17;
  private readonly static uint TwoFactorStateDefaultValue = 0;

  private uint twoFactorState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TwoFactorState {
    get { if ((_hasBits0 & 16) != 0) { return twoFactorState_; } else { return TwoFactorStateDefaultValue; } }
    set {
      _hasBits0 |= 16;
      twoFactorState_ = value;
    }
  }
  /// <summary>Gets whether the "two_factor_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTwoFactorState {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "two_factor_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTwoFactorState() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "is_phone_identifying" field.</summary>
  public const int IsPhoneIdentifyingFieldNumber = 18;
  private readonly static bool IsPhoneIdentifyingDefaultValue = false;

  private bool isPhoneIdentifying_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPhoneIdentifying {
    get { if ((_hasBits0 & 32) != 0) { return isPhoneIdentifying_; } else { return IsPhoneIdentifyingDefaultValue; } }
    set {
      _hasBits0 |= 32;
      isPhoneIdentifying_ = value;
    }
  }
  /// <summary>Gets whether the "is_phone_identifying" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsPhoneIdentifying {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "is_phone_identifying" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsPhoneIdentifying() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "is_phone_needing_reverify" field.</summary>
  public const int IsPhoneNeedingReverifyFieldNumber = 19;
  private readonly static bool IsPhoneNeedingReverifyDefaultValue = false;

  private bool isPhoneNeedingReverify_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPhoneNeedingReverify {
    get { if ((_hasBits0 & 64) != 0) { return isPhoneNeedingReverify_; } else { return IsPhoneNeedingReverifyDefaultValue; } }
    set {
      _hasBits0 |= 64;
      isPhoneNeedingReverify_ = value;
    }
  }
  /// <summary>Gets whether the "is_phone_needing_reverify" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsPhoneNeedingReverify {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "is_phone_needing_reverify" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsPhoneNeedingReverify() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientAccountInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientAccountInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PersonaName != other.PersonaName) return false;
    if (IpCountry != other.IpCountry) return false;
    if (CountAuthedComputers != other.CountAuthedComputers) return false;
    if (AccountFlags != other.AccountFlags) return false;
    if (FacebookId != other.FacebookId) return false;
    if (FacebookName != other.FacebookName) return false;
    if (SteamguardMachineNameUserChosen != other.SteamguardMachineNameUserChosen) return false;
    if (IsPhoneVerified != other.IsPhoneVerified) return false;
    if (TwoFactorState != other.TwoFactorState) return false;
    if (IsPhoneIdentifying != other.IsPhoneIdentifying) return false;
    if (IsPhoneNeedingReverify != other.IsPhoneNeedingReverify) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPersonaName) hash ^= PersonaName.GetHashCode();
    if (HasIpCountry) hash ^= IpCountry.GetHashCode();
    if (HasCountAuthedComputers) hash ^= CountAuthedComputers.GetHashCode();
    if (HasAccountFlags) hash ^= AccountFlags.GetHashCode();
    if (HasFacebookId) hash ^= FacebookId.GetHashCode();
    if (HasFacebookName) hash ^= FacebookName.GetHashCode();
    if (HasSteamguardMachineNameUserChosen) hash ^= SteamguardMachineNameUserChosen.GetHashCode();
    if (HasIsPhoneVerified) hash ^= IsPhoneVerified.GetHashCode();
    if (HasTwoFactorState) hash ^= TwoFactorState.GetHashCode();
    if (HasIsPhoneIdentifying) hash ^= IsPhoneIdentifying.GetHashCode();
    if (HasIsPhoneNeedingReverify) hash ^= IsPhoneNeedingReverify.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPersonaName) {
      output.WriteRawTag(10);
      output.WriteString(PersonaName);
    }
    if (HasIpCountry) {
      output.WriteRawTag(18);
      output.WriteString(IpCountry);
    }
    if (HasCountAuthedComputers) {
      output.WriteRawTag(40);
      output.WriteInt32(CountAuthedComputers);
    }
    if (HasAccountFlags) {
      output.WriteRawTag(56);
      output.WriteUInt32(AccountFlags);
    }
    if (HasFacebookId) {
      output.WriteRawTag(64);
      output.WriteUInt64(FacebookId);
    }
    if (HasFacebookName) {
      output.WriteRawTag(74);
      output.WriteString(FacebookName);
    }
    if (HasSteamguardMachineNameUserChosen) {
      output.WriteRawTag(122);
      output.WriteString(SteamguardMachineNameUserChosen);
    }
    if (HasIsPhoneVerified) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsPhoneVerified);
    }
    if (HasTwoFactorState) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(TwoFactorState);
    }
    if (HasIsPhoneIdentifying) {
      output.WriteRawTag(144, 1);
      output.WriteBool(IsPhoneIdentifying);
    }
    if (HasIsPhoneNeedingReverify) {
      output.WriteRawTag(152, 1);
      output.WriteBool(IsPhoneNeedingReverify);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPersonaName) {
      output.WriteRawTag(10);
      output.WriteString(PersonaName);
    }
    if (HasIpCountry) {
      output.WriteRawTag(18);
      output.WriteString(IpCountry);
    }
    if (HasCountAuthedComputers) {
      output.WriteRawTag(40);
      output.WriteInt32(CountAuthedComputers);
    }
    if (HasAccountFlags) {
      output.WriteRawTag(56);
      output.WriteUInt32(AccountFlags);
    }
    if (HasFacebookId) {
      output.WriteRawTag(64);
      output.WriteUInt64(FacebookId);
    }
    if (HasFacebookName) {
      output.WriteRawTag(74);
      output.WriteString(FacebookName);
    }
    if (HasSteamguardMachineNameUserChosen) {
      output.WriteRawTag(122);
      output.WriteString(SteamguardMachineNameUserChosen);
    }
    if (HasIsPhoneVerified) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsPhoneVerified);
    }
    if (HasTwoFactorState) {
      output.WriteRawTag(136, 1);
      output.WriteUInt32(TwoFactorState);
    }
    if (HasIsPhoneIdentifying) {
      output.WriteRawTag(144, 1);
      output.WriteBool(IsPhoneIdentifying);
    }
    if (HasIsPhoneNeedingReverify) {
      output.WriteRawTag(152, 1);
      output.WriteBool(IsPhoneNeedingReverify);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPersonaName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonaName);
    }
    if (HasIpCountry) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(IpCountry);
    }
    if (HasCountAuthedComputers) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountAuthedComputers);
    }
    if (HasAccountFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountFlags);
    }
    if (HasFacebookId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FacebookId);
    }
    if (HasFacebookName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FacebookName);
    }
    if (HasSteamguardMachineNameUserChosen) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamguardMachineNameUserChosen);
    }
    if (HasIsPhoneVerified) {
      size += 2 + 1;
    }
    if (HasTwoFactorState) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TwoFactorState);
    }
    if (HasIsPhoneIdentifying) {
      size += 2 + 1;
    }
    if (HasIsPhoneNeedingReverify) {
      size += 2 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientAccountInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasPersonaName) {
      PersonaName = other.PersonaName;
    }
    if (other.HasIpCountry) {
      IpCountry = other.IpCountry;
    }
    if (other.HasCountAuthedComputers) {
      CountAuthedComputers = other.CountAuthedComputers;
    }
    if (other.HasAccountFlags) {
      AccountFlags = other.AccountFlags;
    }
    if (other.HasFacebookId) {
      FacebookId = other.FacebookId;
    }
    if (other.HasFacebookName) {
      FacebookName = other.FacebookName;
    }
    if (other.HasSteamguardMachineNameUserChosen) {
      SteamguardMachineNameUserChosen = other.SteamguardMachineNameUserChosen;
    }
    if (other.HasIsPhoneVerified) {
      IsPhoneVerified = other.IsPhoneVerified;
    }
    if (other.HasTwoFactorState) {
      TwoFactorState = other.TwoFactorState;
    }
    if (other.HasIsPhoneIdentifying) {
      IsPhoneIdentifying = other.IsPhoneIdentifying;
    }
    if (other.HasIsPhoneNeedingReverify) {
      IsPhoneNeedingReverify = other.IsPhoneNeedingReverify;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PersonaName = input.ReadString();
          break;
        }
        case 18: {
          IpCountry = input.ReadString();
          break;
        }
        case 40: {
          CountAuthedComputers = input.ReadInt32();
          break;
        }
        case 56: {
          AccountFlags = input.ReadUInt32();
          break;
        }
        case 64: {
          FacebookId = input.ReadUInt64();
          break;
        }
        case 74: {
          FacebookName = input.ReadString();
          break;
        }
        case 122: {
          SteamguardMachineNameUserChosen = input.ReadString();
          break;
        }
        case 128: {
          IsPhoneVerified = input.ReadBool();
          break;
        }
        case 136: {
          TwoFactorState = input.ReadUInt32();
          break;
        }
        case 144: {
          IsPhoneIdentifying = input.ReadBool();
          break;
        }
        case 152: {
          IsPhoneNeedingReverify = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          PersonaName = input.ReadString();
          break;
        }
        case 18: {
          IpCountry = input.ReadString();
          break;
        }
        case 40: {
          CountAuthedComputers = input.ReadInt32();
          break;
        }
        case 56: {
          AccountFlags = input.ReadUInt32();
          break;
        }
        case 64: {
          FacebookId = input.ReadUInt64();
          break;
        }
        case 74: {
          FacebookName = input.ReadString();
          break;
        }
        case 122: {
          SteamguardMachineNameUserChosen = input.ReadString();
          break;
        }
        case 128: {
          IsPhoneVerified = input.ReadBool();
          break;
        }
        case 136: {
          TwoFactorState = input.ReadUInt32();
          break;
        }
        case 144: {
          IsPhoneIdentifying = input.ReadBool();
          break;
        }
        case 152: {
          IsPhoneNeedingReverify = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientChallengeRequest : pb::IMessage<CMsgClientChallengeRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientChallengeRequest> _parser = new pb::MessageParser<CMsgClientChallengeRequest>(() => new CMsgClientChallengeRequest());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientChallengeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChallengeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChallengeRequest(CMsgClientChallengeRequest other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChallengeRequest Clone() {
    return new CMsgClientChallengeRequest(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientChallengeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientChallengeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientChallengeRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMsgClientChallengeResponse : pb::IMessage<CMsgClientChallengeResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgClientChallengeResponse> _parser = new pb::MessageParser<CMsgClientChallengeResponse>(() => new CMsgClientChallengeResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgClientChallengeResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesClientserverLoginReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChallengeResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChallengeResponse(CMsgClientChallengeResponse other) : this() {
    _hasBits0 = other._hasBits0;
    challenge_ = other.challenge_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgClientChallengeResponse Clone() {
    return new CMsgClientChallengeResponse(this);
  }

  /// <summary>Field number for the "challenge" field.</summary>
  public const int ChallengeFieldNumber = 1;
  private readonly static ulong ChallengeDefaultValue = 0UL;

  private ulong challenge_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Challenge {
    get { if ((_hasBits0 & 1) != 0) { return challenge_; } else { return ChallengeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      challenge_ = value;
    }
  }
  /// <summary>Gets whether the "challenge" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChallenge {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "challenge" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChallenge() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgClientChallengeResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgClientChallengeResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Challenge != other.Challenge) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasChallenge) hash ^= Challenge.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasChallenge) {
      output.WriteRawTag(9);
      output.WriteFixed64(Challenge);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasChallenge) {
      output.WriteRawTag(9);
      output.WriteFixed64(Challenge);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasChallenge) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgClientChallengeResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasChallenge) {
      Challenge = other.Challenge;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Challenge = input.ReadFixed64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Challenge = input.ReadFixed64();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
